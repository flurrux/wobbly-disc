// modules are defined as an array
// [ module function, map of requires ]
//
// map of requires is short require name -> numeric require
//
// anything defined in a previous bundle is accessed via the
// orig method which is the require for previous bundles
parcelRequire = (function (modules, cache, entry, globalName) {
  // Save the require from previous bundle to this closure if any
  var previousRequire = typeof parcelRequire === 'function' && parcelRequire;
  var nodeRequire = typeof require === 'function' && require;

  function newRequire(name, jumped) {
    if (!cache[name]) {
      if (!modules[name]) {
        // if we cannot find the module within our internal map or
        // cache jump to the current global require ie. the last bundle
        // that was added to the page.
        var currentRequire = typeof parcelRequire === 'function' && parcelRequire;
        if (!jumped && currentRequire) {
          return currentRequire(name, true);
        }

        // If there are other bundles on this page the require from the
        // previous one is saved to 'previousRequire'. Repeat this as
        // many times as there are bundles until the module is found or
        // we exhaust the require chain.
        if (previousRequire) {
          return previousRequire(name, true);
        }

        // Try the node require function if it exists.
        if (nodeRequire && typeof name === 'string') {
          return nodeRequire(name);
        }

        var err = new Error('Cannot find module \'' + name + '\'');
        err.code = 'MODULE_NOT_FOUND';
        throw err;
      }

      localRequire.resolve = resolve;
      localRequire.cache = {};

      var module = cache[name] = new newRequire.Module(name);

      modules[name][0].call(module.exports, localRequire, module, module.exports, this);
    }

    return cache[name].exports;

    function localRequire(x){
      return newRequire(localRequire.resolve(x));
    }

    function resolve(x){
      return modules[name][1][x] || x;
    }
  }

  function Module(moduleName) {
    this.id = moduleName;
    this.bundle = newRequire;
    this.exports = {};
  }

  newRequire.isParcelRequire = true;
  newRequire.Module = Module;
  newRequire.modules = modules;
  newRequire.cache = cache;
  newRequire.parent = previousRequire;
  newRequire.register = function (id, exports) {
    modules[id] = [function (require, module) {
      module.exports = exports;
    }, {}];
  };

  var error;
  for (var i = 0; i < entry.length; i++) {
    try {
      newRequire(entry[i]);
    } catch (e) {
      // Save first error but execute all entries
      if (!error) {
        error = e;
      }
    }
  }

  if (entry.length) {
    // Expose entry point to Node, AMD or browser globals
    // Based on https://github.com/ForbesLindesay/umd/blob/master/template.js
    var mainExports = newRequire(entry[entry.length - 1]);

    // CommonJS
    if (typeof exports === "object" && typeof module !== "undefined") {
      module.exports = mainExports;

    // RequireJS
    } else if (typeof define === "function" && define.amd) {
     define(function () {
       return mainExports;
     });

    // <script>
    } else if (globalName) {
      this[globalName] = mainExports;
    }
  }

  // Override the current require with this new one
  parcelRequire = newRequire;

  if (error) {
    // throw error from earlier, _after updating parcelRequire_
    throw error;
  }

  return newRequire;
})({"../node_modules/fp-ts/lib/function.js":[function(require,module,exports) {
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.hole = exports.pipe = exports.untupled = exports.tupled = exports.absurd = exports.decrement = exports.increment = exports.tuple = exports.flow = exports.flip = exports.constVoid = exports.constUndefined = exports.constNull = exports.constFalse = exports.constTrue = exports.constant = exports.not = exports.unsafeCoerce = exports.identity = exports.getEndomorphismMonoid = exports.getRing = exports.getSemiring = exports.getMonoid = exports.getSemigroup = exports.getBooleanAlgebra = void 0;
// -------------------------------------------------------------------------------------
// instances
// -------------------------------------------------------------------------------------
/**
 * @category instances
 * @since 2.10.0
 */
var getBooleanAlgebra = function (B) { return function () { return ({
    meet: function (x, y) { return function (a) { return B.meet(x(a), y(a)); }; },
    join: function (x, y) { return function (a) { return B.join(x(a), y(a)); }; },
    zero: function () { return B.zero; },
    one: function () { return B.one; },
    implies: function (x, y) { return function (a) { return B.implies(x(a), y(a)); }; },
    not: function (x) { return function (a) { return B.not(x(a)); }; }
}); }; };
exports.getBooleanAlgebra = getBooleanAlgebra;
/**
 * Unary functions form a semigroup as long as you can provide a semigroup for the codomain.
 *
 * @example
 * import { Predicate, getSemigroup } from 'fp-ts/function'
 * import * as B from 'fp-ts/boolean'
 *
 * const f: Predicate<number> = (n) => n <= 2
 * const g: Predicate<number> = (n) => n >= 0
 *
 * const S1 = getSemigroup(B.SemigroupAll)<number>()
 *
 * assert.deepStrictEqual(S1.concat(f, g)(1), true)
 * assert.deepStrictEqual(S1.concat(f, g)(3), false)
 *
 * const S2 = getSemigroup(B.SemigroupAny)<number>()
 *
 * assert.deepStrictEqual(S2.concat(f, g)(1), true)
 * assert.deepStrictEqual(S2.concat(f, g)(3), true)
 *
 * @category instances
 * @since 2.10.0
 */
var getSemigroup = function (S) { return function () { return ({
    concat: function (f, g) { return function (a) { return S.concat(f(a), g(a)); }; }
}); }; };
exports.getSemigroup = getSemigroup;
/**
 * Unary functions form a monoid as long as you can provide a monoid for the codomain.
 *
 * @example
 * import { Predicate, getMonoid } from 'fp-ts/function'
 * import * as B from 'fp-ts/boolean'
 *
 * const f: Predicate<number> = (n) => n <= 2
 * const g: Predicate<number> = (n) => n >= 0
 *
 * const M1 = getMonoid(B.MonoidAll)<number>()
 *
 * assert.deepStrictEqual(M1.concat(f, g)(1), true)
 * assert.deepStrictEqual(M1.concat(f, g)(3), false)
 *
 * const M2 = getMonoid(B.MonoidAny)<number>()
 *
 * assert.deepStrictEqual(M2.concat(f, g)(1), true)
 * assert.deepStrictEqual(M2.concat(f, g)(3), true)
 *
 * @category instances
 * @since 2.10.0
 */
var getMonoid = function (M) {
    var getSemigroupM = exports.getSemigroup(M);
    return function () { return ({
        concat: getSemigroupM().concat,
        empty: function () { return M.empty; }
    }); };
};
exports.getMonoid = getMonoid;
/**
 * @category instances
 * @since 2.10.0
 */
var getSemiring = function (S) { return ({
    add: function (f, g) { return function (x) { return S.add(f(x), g(x)); }; },
    zero: function () { return S.zero; },
    mul: function (f, g) { return function (x) { return S.mul(f(x), g(x)); }; },
    one: function () { return S.one; }
}); };
exports.getSemiring = getSemiring;
/**
 * @category instances
 * @since 2.10.0
 */
var getRing = function (R) {
    var S = exports.getSemiring(R);
    return {
        add: S.add,
        mul: S.mul,
        one: S.one,
        zero: S.zero,
        sub: function (f, g) { return function (x) { return R.sub(f(x), g(x)); }; }
    };
};
exports.getRing = getRing;
/**
 * Endomorphism form a monoid where the `empty` value is the identity function.
 *
 * @category instances
 * @since 2.10.0
 */
var getEndomorphismMonoid = function () { return ({
    concat: function (x, y) { return function (a) { return y(x(a)); }; },
    empty: identity
}); };
exports.getEndomorphismMonoid = getEndomorphismMonoid;
/**
 * @since 2.0.0
 */
function identity(a) {
    return a;
}
exports.identity = identity;
/**
 * @since 2.0.0
 */
exports.unsafeCoerce = identity;
/**
 * @since 2.0.0
 */
function not(predicate) {
    return function (a) { return !predicate(a); };
}
exports.not = not;
/**
 * @since 2.0.0
 */
function constant(a) {
    return function () { return a; };
}
exports.constant = constant;
/**
 * A thunk that returns always `true`.
 *
 * @since 2.0.0
 */
exports.constTrue = 
/*#__PURE__*/
constant(true);
/**
 * A thunk that returns always `false`.
 *
 * @since 2.0.0
 */
exports.constFalse = 
/*#__PURE__*/
constant(false);
/**
 * A thunk that returns always `null`.
 *
 * @since 2.0.0
 */
exports.constNull = 
/*#__PURE__*/
constant(null);
/**
 * A thunk that returns always `undefined`.
 *
 * @since 2.0.0
 */
exports.constUndefined = 
/*#__PURE__*/
constant(undefined);
/**
 * A thunk that returns always `void`.
 *
 * @since 2.0.0
 */
exports.constVoid = exports.constUndefined;
/**
 * Flips the order of the arguments of a function of two arguments.
 *
 * @since 2.0.0
 */
function flip(f) {
    return function (b, a) { return f(a, b); };
}
exports.flip = flip;
function flow(ab, bc, cd, de, ef, fg, gh, hi, ij) {
    switch (arguments.length) {
        case 1:
            return ab;
        case 2:
            return function () {
                return bc(ab.apply(this, arguments));
            };
        case 3:
            return function () {
                return cd(bc(ab.apply(this, arguments)));
            };
        case 4:
            return function () {
                return de(cd(bc(ab.apply(this, arguments))));
            };
        case 5:
            return function () {
                return ef(de(cd(bc(ab.apply(this, arguments)))));
            };
        case 6:
            return function () {
                return fg(ef(de(cd(bc(ab.apply(this, arguments))))));
            };
        case 7:
            return function () {
                return gh(fg(ef(de(cd(bc(ab.apply(this, arguments)))))));
            };
        case 8:
            return function () {
                return hi(gh(fg(ef(de(cd(bc(ab.apply(this, arguments))))))));
            };
        case 9:
            return function () {
                return ij(hi(gh(fg(ef(de(cd(bc(ab.apply(this, arguments)))))))));
            };
    }
    return;
}
exports.flow = flow;
/**
 * @since 2.0.0
 */
function tuple() {
    var t = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        t[_i] = arguments[_i];
    }
    return t;
}
exports.tuple = tuple;
/**
 * @since 2.0.0
 */
function increment(n) {
    return n + 1;
}
exports.increment = increment;
/**
 * @since 2.0.0
 */
function decrement(n) {
    return n - 1;
}
exports.decrement = decrement;
/**
 * @since 2.0.0
 */
function absurd(_) {
    throw new Error('Called `absurd` function which should be uncallable');
}
exports.absurd = absurd;
/**
 * Creates a tupled version of this function: instead of `n` arguments, it accepts a single tuple argument.
 *
 * @example
 * import { tupled } from 'fp-ts/function'
 *
 * const add = tupled((x: number, y: number): number => x + y)
 *
 * assert.strictEqual(add([1, 2]), 3)
 *
 * @since 2.4.0
 */
function tupled(f) {
    return function (a) { return f.apply(void 0, a); };
}
exports.tupled = tupled;
/**
 * Inverse function of `tupled`
 *
 * @since 2.4.0
 */
function untupled(f) {
    return function () {
        var a = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            a[_i] = arguments[_i];
        }
        return f(a);
    };
}
exports.untupled = untupled;
function pipe(a, ab, bc, cd, de, ef, fg, gh, hi, ij, jk, kl, lm, mn, no, op, pq, qr, rs, st) {
    switch (arguments.length) {
        case 1:
            return a;
        case 2:
            return ab(a);
        case 3:
            return bc(ab(a));
        case 4:
            return cd(bc(ab(a)));
        case 5:
            return de(cd(bc(ab(a))));
        case 6:
            return ef(de(cd(bc(ab(a)))));
        case 7:
            return fg(ef(de(cd(bc(ab(a))))));
        case 8:
            return gh(fg(ef(de(cd(bc(ab(a)))))));
        case 9:
            return hi(gh(fg(ef(de(cd(bc(ab(a))))))));
        case 10:
            return ij(hi(gh(fg(ef(de(cd(bc(ab(a)))))))));
        case 11:
            return jk(ij(hi(gh(fg(ef(de(cd(bc(ab(a))))))))));
        case 12:
            return kl(jk(ij(hi(gh(fg(ef(de(cd(bc(ab(a)))))))))));
        case 13:
            return lm(kl(jk(ij(hi(gh(fg(ef(de(cd(bc(ab(a))))))))))));
        case 14:
            return mn(lm(kl(jk(ij(hi(gh(fg(ef(de(cd(bc(ab(a)))))))))))));
        case 15:
            return no(mn(lm(kl(jk(ij(hi(gh(fg(ef(de(cd(bc(ab(a))))))))))))));
        case 16:
            return op(no(mn(lm(kl(jk(ij(hi(gh(fg(ef(de(cd(bc(ab(a)))))))))))))));
        case 17:
            return pq(op(no(mn(lm(kl(jk(ij(hi(gh(fg(ef(de(cd(bc(ab(a))))))))))))))));
        case 18:
            return qr(pq(op(no(mn(lm(kl(jk(ij(hi(gh(fg(ef(de(cd(bc(ab(a)))))))))))))))));
        case 19:
            return rs(qr(pq(op(no(mn(lm(kl(jk(ij(hi(gh(fg(ef(de(cd(bc(ab(a))))))))))))))))));
        case 20:
            return st(rs(qr(pq(op(no(mn(lm(kl(jk(ij(hi(gh(fg(ef(de(cd(bc(ab(a)))))))))))))))))));
    }
    return;
}
exports.pipe = pipe;
/**
 * Type hole simulation
 *
 * @since 2.7.0
 */
exports.hole = absurd;

},{}],"../lib/vec3.ts":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.round = exports.interpolate = exports.project = exports.cross = exports.dot = exports.distance = exports.normalize = exports.sqrdMagnitude = exports.magnitude = exports.equal = exports.isZero = exports.divide = exports.subtract = exports.multiply = exports.sum = exports.add = exports.vector3 = void 0;

exports.vector3 = function (x, y, z) {
  return [x, y, z];
};

exports.add = function (a, b) {
  return [a[0] + b[0], a[1] + b[1], a[2] + b[2]];
};

function sum(vectors) {
  var sum = [0, 0, 0];

  for (var _i = 0, vectors_1 = vectors; _i < vectors_1.length; _i++) {
    var vec = vectors_1[_i];
    sum[0] += vec[0];
    sum[1] += vec[1];
    sum[2] += vec[2];
  }

  return sum;
}

exports.sum = sum;

exports.multiply = function (vector, scalar) {
  return [vector[0] * scalar, vector[1] * scalar, vector[2] * scalar];
};

exports.subtract = function (a, b) {
  return exports.add(a, exports.multiply(b, -1));
};

exports.divide = function (vector, denominator) {
  return exports.multiply(vector, 1 / denominator);
};

exports.isZero = function (vector) {
  return vector.every(function (component) {
    return component === 0;
  });
};

exports.equal = function (a, b) {
  return exports.isZero(exports.subtract(a, b));
};

exports.magnitude = function (vector) {
  return Math.hypot.apply(Math, vector);
};

exports.sqrdMagnitude = function (v) {
  return Math.pow(v[0], 2) + Math.pow(v[1], 2) + Math.pow(v[2], 2);
};

exports.normalize = function (vector) {
  return exports.isZero(vector) ? [0, 0, 0] : exports.divide(vector, exports.magnitude(vector));
};

exports.distance = function (a, b) {
  return exports.magnitude(exports.subtract(a, b));
};

exports.dot = function (a, b) {
  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];
};

exports.cross = function (a, b) {
  return [a[1] * b[2] - b[1] * a[2], a[2] * b[0] - b[2] * a[0], a[0] * b[1] - b[0] * a[1]];
};

exports.project = function (normal, point) {
  return exports.multiply(normal, exports.dot(normal, point));
};

exports.interpolate = function (a, b, t) {
  return exports.add(a, exports.multiply(exports.subtract(b, a), t));
};

exports.round = function (v) {
  return v.map(Math.round);
};
},{}],"util.ts":[function(require,module,exports) {
"use strict";

var __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {
  if (k2 === undefined) k2 = k;
  Object.defineProperty(o, k2, {
    enumerable: true,
    get: function get() {
      return m[k];
    }
  });
} : function (o, m, k, k2) {
  if (k2 === undefined) k2 = k;
  o[k2] = m[k];
});

var __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {
  Object.defineProperty(o, "default", {
    enumerable: true,
    value: v
  });
} : function (o, v) {
  o["default"] = v;
});

var __importStar = this && this.__importStar || function (mod) {
  if (mod && mod.__esModule) return mod;
  var result = {};
  if (mod != null) for (var k in mod) {
    if (k !== "default" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
  }

  __setModuleDefault(result, mod);

  return result;
};

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.adjustCanvasSizeToWindow = exports.range = exports.startLoop = exports.removeEnclosedVoxels = exports.isVoxelEnclosed = exports.flattenY = exports.setYZero = exports.setY = exports.mapRange = exports.interpolate = exports.normalize = exports.createArray = exports.randomUnitVector = exports.scaleVector = exports.randomRange = exports.randomColor = exports.vec3ToColor = exports.randomVector = void 0;

var function_1 = require("fp-ts/lib/function");

var Vec3 = __importStar(require("../lib/vec3"));

exports.randomVector = function (maxMag) {
  if (maxMag === void 0) {
    maxMag = 2;
  }

  return [0, 1, 2].map(function () {
    return (Math.random() - 0.5) * maxMag;
  });
};

exports.vec3ToColor = function (v) {
  return "rgb(" + Vec3.round(v).join(",") + ")";
};

exports.randomColor = function () {
  return "rgb(" + [0, 1, 2].map(function () {
    return Math.round(Math.random() * 255);
  }).join(",") + ")";
};

exports.randomRange = function (min, max) {
  return min + (max - min) + Math.random();
};

exports.scaleVector = function (scale) {
  return function (vec) {
    return [vec[0] * scale, vec[1] * scale];
  };
};

exports.randomUnitVector = function () {
  return Vec3.normalize([0, 1, 2].map(function () {
    return Math.random() - 0.5;
  }));
};

exports.createArray = function (length) {
  var arr = [];

  for (var i = 0; i < length; i++) {
    arr[i] = i;
  }

  return arr;
};

function normalize(from, to, value) {
  return (value - from) / (to - from);
}

exports.normalize = normalize;

function interpolate(from, to, value) {
  return from + (to - from) * value;
}

exports.interpolate = interpolate;

exports.mapRange = function (range1, range2, value) {
  var relVal = value - range1[0];
  var scale = (range2[1] - range2[0]) / (range1[1] - range1[0]);
  return range2[0] + relVal * scale;
};

exports.setY = function (y) {
  return function (v) {
    return [v[0], y, v[2]];
  };
};

exports.setYZero = exports.setY(0);
exports.flattenY = function_1.flow(exports.setYZero, Vec3.normalize);

var voxelExistsAt = function voxelExistsAt(voxels, point) {
  return voxels.some(function (v) {
    return Vec3.equal(v, point);
  });
};

var voxelExistsOrIsGroundAt = function voxelExistsOrIsGroundAt(voxels) {
  return function (point) {
    if (point[1] < 0) return true;
    return voxelExistsAt(voxels, point);
  };
};

var enclosingOffsets = [[1, 0, 0], [-1, 0, 0], [0, 1, 0], [0, -1, 0], [0, 0, 1], [0, 0, -1]];

exports.isVoxelEnclosed = function (voxels) {
  return function (voxel) {
    return enclosingOffsets.map(function (offset) {
      return Vec3.add(voxel, offset);
    }).every(voxelExistsOrIsGroundAt(voxels));
  };
};

function removeEnclosedVoxels(voxels) {
  return voxels.filter(function_1.not(exports.isVoxelEnclosed(voxels)));
}

exports.removeEnclosedVoxels = removeEnclosedVoxels;

exports.startLoop = function (onLoop) {
  var accumTime = 0;
  var prevTime = 0;

  var loop = function loop() {
    var curTime = window.performance.now();
    var deltaTime = (curTime - prevTime) / 1000;
    accumTime += deltaTime;
    prevTime = curTime;
    onLoop({
      dt: deltaTime,
      t: accumTime
    });
    requestAnimationFrame(loop);
  };

  requestAnimationFrame(loop);
};

function range(start, end) {
  var array = [];

  for (var i = start; i < end; i++) {
    array.push(i);
  }

  return array;
}

exports.range = range;

function adjustCanvasSizeToWindow(canvas) {
  var widthPx = window.innerWidth;
  var heightPx = window.innerHeight;
  var scalePx = window.devicePixelRatio || 1;
  Object.assign(canvas.style, {
    width: widthPx + "px",
    height: heightPx + "px"
  });
  Object.assign(canvas, {
    width: widthPx * scalePx,
    height: heightPx * scalePx
  });
}

exports.adjustCanvasSizeToWindow = adjustCanvasSizeToWindow;
},{"fp-ts/lib/function":"../node_modules/fp-ts/lib/function.js","../lib/vec3":"../lib/vec3.ts"}],"../lib/vec2.ts":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.interpolate = exports.vector2 = exports.round = exports.mapComponents = exports.dot = exports.distance = exports.normalize = exports.magnitude = exports.isZero = exports.divide = exports.subtract = exports.multiply = exports.add = void 0;

var util_1 = require("../src/util");

exports.add = function (a, b) {
  return [a[0] + b[0], a[1] + b[1]];
};

exports.multiply = function (vector, scalar) {
  return [vector[0] * scalar, vector[1] * scalar];
};

exports.subtract = function (a, b) {
  return exports.add(a, exports.multiply(b, -1));
};

exports.divide = function (vector, denominator) {
  return exports.multiply(vector, 1 / denominator);
};

exports.isZero = function (vector) {
  return vector.every(function (component) {
    return component === 0;
  });
};

exports.magnitude = function (vector) {
  return Math.hypot.apply(Math, vector);
};

exports.normalize = function (vector) {
  return exports.isZero(vector) ? [0, 0] : exports.divide(vector, exports.magnitude(vector));
};

exports.distance = function (a, b) {
  return exports.magnitude(exports.subtract(a, b));
};

exports.dot = function (a, b) {
  return a[0] * b[0] + a[1] * b[1];
};

exports.mapComponents = function (map) {
  return function (v) {
    return [map(v[0]), map(v[1])];
  };
};

exports.round = exports.mapComponents(Math.round);

exports.vector2 = function (x, y) {
  return [x, y];
};

exports.interpolate = function (a, b, t) {
  return exports.vector2(util_1.interpolate(a[0], b[0], t), util_1.interpolate(a[1], b[1], t));
};
},{"../src/util":"util.ts"}],"grid-field.ts":[function(require,module,exports) {
"use strict";

var __assign = this && this.__assign || function () {
  __assign = Object.assign || function (t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];

      for (var p in s) {
        if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
      }
    }

    return t;
  };

  return __assign.apply(this, arguments);
};

var __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {
  if (k2 === undefined) k2 = k;
  Object.defineProperty(o, k2, {
    enumerable: true,
    get: function get() {
      return m[k];
    }
  });
} : function (o, m, k, k2) {
  if (k2 === undefined) k2 = k;
  o[k2] = m[k];
});

var __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {
  Object.defineProperty(o, "default", {
    enumerable: true,
    value: v
  });
} : function (o, v) {
  o["default"] = v;
});

var __importStar = this && this.__importStar || function (mod) {
  if (mod && mod.__esModule) return mod;
  var result = {};
  if (mod != null) for (var k in mod) {
    if (k !== "default" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
  }

  __setModuleDefault(result, mod);

  return result;
};

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.takeCellMultiples = exports.worldToGridCoordinate = exports.gridToWorldCoordinate = exports.center = void 0;

var Vec2 = __importStar(require("../lib/vec2"));

function calculateFlatIndex(width, coordinate) {
  return coordinate[0] + width * coordinate[1];
} // export function getValueAt(field: GridScalarField, coordinate: Vector2): number {
// 	return field[calculateFlatIndex(field.size[0], coordinate)];
// }


function center(field) {
  return __assign(__assign({}, field), {
    position: Vec2.multiply(field.size, -field.cellSize / 2)
  });
}

exports.center = center;

function createGridPoints(size) {
  var points = [];

  for (var x = 0; x < size[0]; x++) {
    for (var y = 0; y < size[1]; y++) {
      points.push([x, y]);
    }
  }

  return points;
}

exports.gridToWorldCoordinate = function (gridField) {
  return function (coo) {
    return Vec2.add(gridField.position, Vec2.multiply(coo, gridField.cellSize));
  };
};

exports.worldToGridCoordinate = function (gridField) {
  return function (coo) {
    return Vec2.divide(Vec2.subtract(coo, gridField.position), gridField.cellSize);
  };
}; // export function fromContinuousField(start: Vector2, size: Vector2, cellSize: number, field: ScalarField): GridScalarField {
// 	return center({
// 		cellSize, size,
// 		position: [0, 0],
// 		flatField: pipe(
// 			size,
// 			createGridPoints,
// 			map(p => Vec2.add(start, Vec2.multiply(p, cellSize))),
// 			map(field)
// 		)
// 	})
// }


exports.takeCellMultiples = function (multiple) {
  return function (field) {
    return __assign(__assign({}, field), {
      cellSize: field.cellSize * multiple,
      size: Vec2.divide(field.size, multiple)
    });
  };
};
},{"../lib/vec2":"../lib/vec2.ts"}],"../node_modules/fp-ts/lib/Apply.js":[function(require,module,exports) {
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.sequenceS = exports.sequenceT = exports.getApplySemigroup = exports.apS = exports.apSecond = exports.apFirst = exports.ap = void 0;
var function_1 = require("./function");
function ap(F, G) {
    return function (fa) { return function (fab) {
        return F.ap(F.map(fab, function (gab) { return function (ga) { return G.ap(gab, ga); }; }), fa);
    }; };
}
exports.ap = ap;
function apFirst(A) {
    return function (second) { return function (first) {
        return A.ap(A.map(first, function (a) { return function () { return a; }; }), second);
    }; };
}
exports.apFirst = apFirst;
function apSecond(A) {
    return function (second) { return function (first) {
        return A.ap(A.map(first, function () { return function (b) { return b; }; }), second);
    }; };
}
exports.apSecond = apSecond;
function apS(F) {
    return function (name, fb) { return function (fa) {
        return F.ap(F.map(fa, function (a) { return function (b) {
            var _a;
            return Object.assign({}, a, (_a = {}, _a[name] = b, _a));
        }; }), fb);
    }; };
}
exports.apS = apS;
function getApplySemigroup(F) {
    return function (S) { return ({
        concat: function (first, second) {
            return F.ap(F.map(first, function (x) { return function (y) { return S.concat(x, y); }; }), second);
        }
    }); };
}
exports.getApplySemigroup = getApplySemigroup;
function curried(f, n, acc) {
    return function (x) {
        var combined = Array(acc.length + 1);
        for (var i = 0; i < acc.length; i++) {
            combined[i] = acc[i];
        }
        combined[acc.length] = x;
        return n === 0 ? f.apply(null, combined) : curried(f, n - 1, combined);
    };
}
var tupleConstructors = {
    1: function (a) { return [a]; },
    2: function (a) { return function (b) { return [a, b]; }; },
    3: function (a) { return function (b) { return function (c) { return [a, b, c]; }; }; },
    4: function (a) { return function (b) { return function (c) { return function (d) { return [a, b, c, d]; }; }; }; },
    5: function (a) { return function (b) { return function (c) { return function (d) { return function (e) { return [a, b, c, d, e]; }; }; }; }; }
};
function getTupleConstructor(len) {
    if (!tupleConstructors.hasOwnProperty(len)) {
        tupleConstructors[len] = curried(function_1.tuple, len - 1, []);
    }
    return tupleConstructors[len];
}
function sequenceT(F) {
    return function () {
        var args = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            args[_i] = arguments[_i];
        }
        var len = args.length;
        var f = getTupleConstructor(len);
        var fas = F.map(args[0], f);
        for (var i = 1; i < len; i++) {
            fas = F.ap(fas, args[i]);
        }
        return fas;
    };
}
exports.sequenceT = sequenceT;
function getRecordConstructor(keys) {
    var len = keys.length;
    switch (len) {
        case 1:
            return function (a) {
                var _a;
                return (_a = {}, _a[keys[0]] = a, _a);
            };
        case 2:
            return function (a) { return function (b) {
                var _a;
                return (_a = {}, _a[keys[0]] = a, _a[keys[1]] = b, _a);
            }; };
        case 3:
            return function (a) { return function (b) { return function (c) {
                var _a;
                return (_a = {}, _a[keys[0]] = a, _a[keys[1]] = b, _a[keys[2]] = c, _a);
            }; }; };
        case 4:
            return function (a) { return function (b) { return function (c) { return function (d) {
                var _a;
                return (_a = {},
                    _a[keys[0]] = a,
                    _a[keys[1]] = b,
                    _a[keys[2]] = c,
                    _a[keys[3]] = d,
                    _a);
            }; }; }; };
        case 5:
            return function (a) { return function (b) { return function (c) { return function (d) { return function (e) {
                var _a;
                return (_a = {},
                    _a[keys[0]] = a,
                    _a[keys[1]] = b,
                    _a[keys[2]] = c,
                    _a[keys[3]] = d,
                    _a[keys[4]] = e,
                    _a);
            }; }; }; }; };
        default:
            return curried(function () {
                var args = [];
                for (var _i = 0; _i < arguments.length; _i++) {
                    args[_i] = arguments[_i];
                }
                var r = {};
                for (var i = 0; i < len; i++) {
                    r[keys[i]] = args[i];
                }
                return r;
            }, len - 1, []);
    }
}
function sequenceS(F) {
    return function (r) {
        var keys = Object.keys(r);
        var len = keys.length;
        var f = getRecordConstructor(keys);
        var fr = F.map(r[keys[0]], f);
        for (var i = 1; i < len; i++) {
            fr = F.ap(fr, r[keys[i]]);
        }
        return fr;
    };
}
exports.sequenceS = sequenceS;

},{"./function":"../node_modules/fp-ts/lib/function.js"}],"../node_modules/fp-ts/lib/Chain.js":[function(require,module,exports) {
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.bind = exports.chainFirst = void 0;
function chainFirst(M) {
    return function (f) { return function (first) { return M.chain(first, function (a) { return M.map(f(a), function () { return a; }); }); }; };
}
exports.chainFirst = chainFirst;
function bind(M) {
    return function (name, f) { return function (ma) { return M.chain(ma, function (a) { return M.map(f(a), function (b) {
        var _a;
        return Object.assign({}, a, (_a = {}, _a[name] = b, _a));
    }); }); }; };
}
exports.bind = bind;

},{}],"../node_modules/fp-ts/lib/Functor.js":[function(require,module,exports) {
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.getFunctorComposition = exports.bindTo = exports.flap = exports.map = void 0;
/**
 * A `Functor` is a type constructor which supports a mapping operation `map`.
 *
 * `map` can be used to turn functions `a -> b` into functions `f a -> f b` whose argument and return types use the type
 * constructor `f` to represent some computational context.
 *
 * Instances must satisfy the following laws:
 *
 * 1. Identity: `F.map(fa, a => a) <-> fa`
 * 2. Composition: `F.map(fa, a => bc(ab(a))) <-> F.map(F.map(fa, ab), bc)`
 *
 * @since 2.0.0
 */
var function_1 = require("./function");
function map(F, G) {
    return function (f) { return function (fa) { return F.map(fa, function (ga) { return G.map(ga, f); }); }; };
}
exports.map = map;
function flap(F) {
    return function (a) { return function (fab) { return F.map(fab, function (f) { return f(a); }); }; };
}
exports.flap = flap;
function bindTo(F) {
    return function (name) { return function (fa) { return F.map(fa, function (a) {
        var _a;
        return (_a = {}, _a[name] = a, _a);
    }); }; };
}
exports.bindTo = bindTo;
/** @deprecated */
function getFunctorComposition(F, G) {
    var _map = map(F, G);
    return {
        map: function (fga, f) { return function_1.pipe(fga, _map(f)); }
    };
}
exports.getFunctorComposition = getFunctorComposition;

},{"./function":"../node_modules/fp-ts/lib/function.js"}],"../node_modules/fp-ts/lib/internal.js":[function(require,module,exports) {
"use strict";
var __spreadArray = (this && this.__spreadArray) || function (to, from) {
    for (var i = 0, il = from.length, j = to.length; i < il; i++, j++)
        to[j] = from[i];
    return to;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.fromReadonlyNonEmptyArray = exports.has = exports.isLeft = exports.isSome = void 0;
// -------------------------------------------------------------------------------------
// Option
// -------------------------------------------------------------------------------------
/** @internal */
var isSome = function (fa) { return fa._tag === 'Some'; };
exports.isSome = isSome;
// -------------------------------------------------------------------------------------
// Either
// -------------------------------------------------------------------------------------
/** @internal */
var isLeft = function (ma) { return ma._tag === 'Left'; };
exports.isLeft = isLeft;
// -------------------------------------------------------------------------------------
// Record
// -------------------------------------------------------------------------------------
/** @internal */
exports.has = Object.prototype.hasOwnProperty;
// -------------------------------------------------------------------------------------
// NonEmptyArray
// -------------------------------------------------------------------------------------
/** @internal */
var fromReadonlyNonEmptyArray = function (as) { return __spreadArray([as[0]], as.slice(1)); };
exports.fromReadonlyNonEmptyArray = fromReadonlyNonEmptyArray;

},{}],"../node_modules/fp-ts/lib/Applicative.js":[function(require,module,exports) {
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.getApplicativeComposition = exports.getApplicativeMonoid = void 0;
/**
 * The `Applicative` type class extends the `Apply` type class with a `of` function, which can be used to create values
 * of type `f a` from values of type `a`.
 *
 * Where `Apply` provides the ability to lift functions of two or more arguments to functions whose arguments are
 * wrapped using `f`, and `Functor` provides the ability to lift functions of one argument, `pure` can be seen as the
 * function which lifts functions of _zero_ arguments. That is, `Applicative` functors support a lifting operation for
 * any number of function arguments.
 *
 * Instances must satisfy the following laws in addition to the `Apply` laws:
 *
 * 1. Identity: `A.ap(A.of(a => a), fa) <-> fa`
 * 2. Homomorphism: `A.ap(A.of(ab), A.of(a)) <-> A.of(ab(a))`
 * 3. Interchange: `A.ap(fab, A.of(a)) <-> A.ap(A.of(ab => ab(a)), fab)`
 *
 * Note. `Functor`'s `map` can be derived: `A.map(x, f) = A.ap(A.of(f), x)`
 *
 * @since 2.0.0
 */
var Apply_1 = require("./Apply");
var function_1 = require("./function");
var Functor_1 = require("./Functor");
function getApplicativeMonoid(F) {
    var f = Apply_1.getApplySemigroup(F);
    return function (M) { return ({
        concat: f(M).concat,
        empty: F.of(M.empty)
    }); };
}
exports.getApplicativeMonoid = getApplicativeMonoid;
/** @deprecated */
function getApplicativeComposition(F, G) {
    var map = Functor_1.getFunctorComposition(F, G).map;
    var _ap = Apply_1.ap(F, G);
    return {
        map: map,
        of: function (a) { return F.of(G.of(a)); },
        ap: function (fgab, fga) { return function_1.pipe(fgab, _ap(fga)); }
    };
}
exports.getApplicativeComposition = getApplicativeComposition;

},{"./Apply":"../node_modules/fp-ts/lib/Apply.js","./function":"../node_modules/fp-ts/lib/function.js","./Functor":"../node_modules/fp-ts/lib/Functor.js"}],"../node_modules/fp-ts/lib/Separated.js":[function(require,module,exports) {
"use strict";
/**
 * ```ts
 * interface Separated<E, A> {
 *    readonly left: E
 *    readonly right: A
 * }
 * ```
 *
 * Represents a result of separating a whole into two parts.
 *
 * @since 2.10.0
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.right = exports.left = exports.flap = exports.Functor = exports.Bifunctor = exports.URI = exports.bimap = exports.mapLeft = exports.map = exports.separated = void 0;
var function_1 = require("./function");
var Functor_1 = require("./Functor");
// -------------------------------------------------------------------------------------
// constructors
// -------------------------------------------------------------------------------------
/**
 * @category constructors
 * @since 2.10.0
 */
var separated = function (left, right) { return ({ left: left, right: right }); };
exports.separated = separated;
// -------------------------------------------------------------------------------------
// non-pipeables
// -------------------------------------------------------------------------------------
var _map = function (fa, f) { return function_1.pipe(fa, exports.map(f)); };
var _mapLeft = function (fa, f) { return function_1.pipe(fa, exports.mapLeft(f)); };
var _bimap = function (fa, g, f) { return function_1.pipe(fa, exports.bimap(g, f)); };
// -------------------------------------------------------------------------------------
// type class members
// -------------------------------------------------------------------------------------
/**
 * `map` can be used to turn functions `(a: A) => B` into functions `(fa: F<A>) => F<B>` whose argument and return types
 * use the type constructor `F` to represent some computational context.
 *
 * @category Functor
 * @since 2.10.0
 */
var map = function (f) { return function (fa) {
    return exports.separated(exports.left(fa), f(exports.right(fa)));
}; };
exports.map = map;
/**
 * Map a function over the first type argument of a bifunctor.
 *
 * @category Bifunctor
 * @since 2.10.0
 */
var mapLeft = function (f) { return function (fa) {
    return exports.separated(f(exports.left(fa)), exports.right(fa));
}; };
exports.mapLeft = mapLeft;
/**
 * Map a pair of functions over the two type arguments of the bifunctor.
 *
 * @category Bifunctor
 * @since 2.10.0
 */
var bimap = function (f, g) { return function (fa) {
    return exports.separated(f(exports.left(fa)), g(exports.right(fa)));
}; };
exports.bimap = bimap;
// -------------------------------------------------------------------------------------
// instances
// -------------------------------------------------------------------------------------
/**
 * @category instances
 * @since 2.10.0
 */
exports.URI = 'Separated';
/**
 * @category instances
 * @since 2.10.0
 */
exports.Bifunctor = {
    URI: exports.URI,
    mapLeft: _mapLeft,
    bimap: _bimap
};
/**
 * @category instances
 * @since 2.10.0
 */
exports.Functor = {
    URI: exports.URI,
    map: _map
};
/**
 * Derivable from `Functor`.
 *
 * @category combinators
 * @since 2.10.0
 */
exports.flap = 
/*#_PURE_*/
Functor_1.flap(exports.Functor);
// -------------------------------------------------------------------------------------
// utils
// -------------------------------------------------------------------------------------
/**
 * @since 2.10.0
 */
var left = function (s) { return s.left; };
exports.left = left;
/**
 * @since 2.10.0
 */
var right = function (s) { return s.right; };
exports.right = right;

},{"./function":"../node_modules/fp-ts/lib/function.js","./Functor":"../node_modules/fp-ts/lib/Functor.js"}],"../node_modules/fp-ts/lib/Option.js":[function(require,module,exports) {
"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.getFirstMonoid = exports.getOrd = exports.getEq = exports.getShow = exports.URI = exports.wilt = exports.wither = exports.sequence = exports.traverse = exports.partitionMap = exports.partition = exports.filterMap = exports.filter = exports.separate = exports.compact = exports.reduceRight = exports.foldMap = exports.reduce = exports.duplicate = exports.extend = exports.throwError = exports.zero = exports.alt = exports.altW = exports.flatten = exports.chain = exports.of = exports.ap = exports.map = exports.toUndefined = exports.toNullable = exports.chainNullableK = exports.fromNullableK = exports.tryCatchK = exports.tryCatch = exports.fromNullable = exports.getOrElse = exports.getOrElseW = exports.fold = exports.match = exports.foldW = exports.matchW = exports.fromEither = exports.getRight = exports.getLeft = exports.fromPredicate = exports.some = exports.none = exports.isNone = exports.isSome = void 0;
exports.getApplyMonoid = exports.getApplySemigroup = exports.option = exports.mapNullable = exports.sequenceArray = exports.traverseArray = exports.traverseArrayWithIndex = exports.apS = exports.bind = exports.bindTo = exports.Do = exports.getRefinement = exports.exists = exports.elem = exports.MonadThrow = exports.Witherable = exports.Traversable = exports.Filterable = exports.Compactable = exports.Extend = exports.Alternative = exports.Alt = exports.Foldable = exports.chainFirst = exports.Monad = exports.Chain = exports.Applicative = exports.apSecond = exports.apFirst = exports.Apply = exports.Pointed = exports.flap = exports.Functor = exports.getMonoid = exports.getLastMonoid = void 0;
var Applicative_1 = require("./Applicative");
var Apply_1 = require("./Apply");
var Chain_1 = require("./Chain");
var function_1 = require("./function");
var Functor_1 = require("./Functor");
var _ = __importStar(require("./internal"));
var Separated_1 = require("./Separated");
// -------------------------------------------------------------------------------------
// guards
// -------------------------------------------------------------------------------------
/**
 * Returns `true` if the option is an instance of `Some`, `false` otherwise.
 *
 * @example
 * import { some, none, isSome } from 'fp-ts/Option'
 *
 * assert.strictEqual(isSome(some(1)), true)
 * assert.strictEqual(isSome(none), false)
 *
 * @category guards
 * @since 2.0.0
 */
exports.isSome = _.isSome;
/**
 * Returns `true` if the option is `None`, `false` otherwise.
 *
 * @example
 * import { some, none, isNone } from 'fp-ts/Option'
 *
 * assert.strictEqual(isNone(some(1)), false)
 * assert.strictEqual(isNone(none), true)
 *
 * @category guards
 * @since 2.0.0
 */
var isNone = function (fa) { return fa._tag === 'None'; };
exports.isNone = isNone;
// -------------------------------------------------------------------------------------
// constructors
// -------------------------------------------------------------------------------------
/**
 * `None` doesn't have a constructor, instead you can use it directly as a value. Represents a missing value.
 *
 * @category constructors
 * @since 2.0.0
 */
exports.none = { _tag: 'None' };
/**
 * Constructs a `Some`. Represents an optional value that exists.
 *
 * @category constructors
 * @since 2.0.0
 */
var some = function (a) { return ({ _tag: 'Some', value: a }); };
exports.some = some;
function fromPredicate(predicate) {
    return function (a) { return (predicate(a) ? exports.some(a) : exports.none); };
}
exports.fromPredicate = fromPredicate;
/**
 * Returns the `Left` value of an `Either` if possible.
 *
 * @example
 * import { getLeft, none, some } from 'fp-ts/Option'
 * import { right, left } from 'fp-ts/Either'
 *
 * assert.deepStrictEqual(getLeft(right(1)), none)
 * assert.deepStrictEqual(getLeft(left('a')), some('a'))
 *
 * @category constructors
 * @since 2.0.0
 */
function getLeft(ma) {
    return ma._tag === 'Right' ? exports.none : exports.some(ma.left);
}
exports.getLeft = getLeft;
/**
 * Returns the `Right` value of an `Either` if possible.
 *
 * @example
 * import { getRight, none, some } from 'fp-ts/Option'
 * import { right, left } from 'fp-ts/Either'
 *
 * assert.deepStrictEqual(getRight(right(1)), some(1))
 * assert.deepStrictEqual(getRight(left('a')), none)
 *
 * @category constructors
 * @since 2.0.0
 */
function getRight(ma) {
    return ma._tag === 'Left' ? exports.none : exports.some(ma.right);
}
exports.getRight = getRight;
/**
 * Transforms an `Either` to an `Option` discarding the error.
 *
 * Alias of [getRight](#getright)
 *
 * @category constructors
 * @since 2.0.0
 */
exports.fromEither = getRight;
// -------------------------------------------------------------------------------------
// destructors
// -------------------------------------------------------------------------------------
/**
 * Less strict version of [`match`](#match).
 *
 * @category destructors
 * @since 2.10.0
 */
var matchW = function (onNone, onSome) { return function (ma) {
    return exports.isNone(ma) ? onNone() : onSome(ma.value);
}; };
exports.matchW = matchW;
/**
 * Alias of [`matchW`](#matchw).
 *
 * @category destructors
 * @since 2.10.0
 */
exports.foldW = exports.matchW;
/**
 * Takes a (lazy) default value, a function, and an `Option` value, if the `Option` value is `None` the default value is
 * returned, otherwise the function is applied to the value inside the `Some` and the result is returned.
 *
 * @example
 * import { some, none, match } from 'fp-ts/Option'
 * import { pipe } from 'fp-ts/function'
 *
 * assert.strictEqual(
 *   pipe(
 *     some(1),
 *     match(() => 'a none', a => `a some containing ${a}`)
 *   ),
 *   'a some containing 1'
 * )
 *
 * assert.strictEqual(
 *   pipe(
 *     none,
 *     match(() => 'a none', a => `a some containing ${a}`)
 *   ),
 *   'a none'
 * )
 *
 * @category destructors
 * @since 2.10.0
 */
exports.match = exports.matchW;
/**
 * Alias of [`match`](#match).
 *
 * @category destructors
 * @since 2.0.0
 */
exports.fold = exports.match;
/**
 * Less strict version of [`getOrElse`](#getorelse).
 *
 * @category destructors
 * @since 2.6.0
 */
var getOrElseW = function (onNone) { return function (ma) { return (exports.isNone(ma) ? onNone() : ma.value); }; };
exports.getOrElseW = getOrElseW;
/**
 * Extracts the value out of the structure, if it exists. Otherwise returns the given default value
 *
 * @example
 * import { some, none, getOrElse } from 'fp-ts/Option'
 * import { pipe } from 'fp-ts/function'
 *
 * assert.strictEqual(
 *   pipe(
 *     some(1),
 *     getOrElse(() => 0)
 *   ),
 *   1
 * )
 * assert.strictEqual(
 *   pipe(
 *     none,
 *     getOrElse(() => 0)
 *   ),
 *   0
 * )
 *
 * @category destructors
 * @since 2.0.0
 */
exports.getOrElse = exports.getOrElseW;
// -------------------------------------------------------------------------------------
// interop
// -------------------------------------------------------------------------------------
/**
 * Constructs a new `Option` from a nullable type. If the value is `null` or `undefined`, returns `None`, otherwise
 * returns the value wrapped in a `Some`.
 *
 * @example
 * import { none, some, fromNullable } from 'fp-ts/Option'
 *
 * assert.deepStrictEqual(fromNullable(undefined), none)
 * assert.deepStrictEqual(fromNullable(null), none)
 * assert.deepStrictEqual(fromNullable(1), some(1))
 *
 * @category interop
 * @since 2.0.0
 */
var fromNullable = function (a) { return (a == null ? exports.none : exports.some(a)); };
exports.fromNullable = fromNullable;
/**
 * Transforms an exception into an `Option`. If `f` throws, returns `None`, otherwise returns the output wrapped in a
 * `Some`.
 *
 * See also [`tryCatchK`](#trycatchk).
 *
 * @example
 * import { none, some, tryCatch } from 'fp-ts/Option'
 *
 * assert.deepStrictEqual(
 *   tryCatch(() => {
 *     throw new Error()
 *   }),
 *   none
 * )
 * assert.deepStrictEqual(tryCatch(() => 1), some(1))
 *
 * @category interop
 * @since 2.0.0
 */
var tryCatch = function (f) {
    try {
        return exports.some(f());
    }
    catch (e) {
        return exports.none;
    }
};
exports.tryCatch = tryCatch;
/**
 * Converts a function that may throw to one returning a `Option`.
 *
 * @category interop
 * @since 2.10.0
 */
var tryCatchK = function (f) { return function () {
    var a = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        a[_i] = arguments[_i];
    }
    return exports.tryCatch(function () { return f.apply(void 0, a); });
}; };
exports.tryCatchK = tryCatchK;
/**
 * Returns a *smart constructor* from a function that returns a nullable value.
 *
 * @example
 * import { fromNullableK, none, some } from 'fp-ts/Option'
 *
 * const f = (s: string): number | undefined => {
 *   const n = parseFloat(s)
 *   return isNaN(n) ? undefined : n
 * }
 *
 * const g = fromNullableK(f)
 *
 * assert.deepStrictEqual(g('1'), some(1))
 * assert.deepStrictEqual(g('a'), none)
 *
 * @category interop
 * @since 2.9.0
 */
var fromNullableK = function (f) { return function_1.flow(f, exports.fromNullable); };
exports.fromNullableK = fromNullableK;
/**
 * This is `chain` + `fromNullable`, useful when working with optional values.
 *
 * @example
 * import { some, none, fromNullable, chainNullableK } from 'fp-ts/Option'
 * import { pipe } from 'fp-ts/function'
 *
 * interface Employee {
 *   readonly company?: {
 *     readonly address?: {
 *       readonly street?: {
 *         readonly name?: string
 *       }
 *     }
 *   }
 * }
 *
 * const employee1: Employee = { company: { address: { street: { name: 'high street' } } } }
 *
 * assert.deepStrictEqual(
 *   pipe(
 *     fromNullable(employee1.company),
 *     chainNullableK(company => company.address),
 *     chainNullableK(address => address.street),
 *     chainNullableK(street => street.name)
 *   ),
 *   some('high street')
 * )
 *
 * const employee2: Employee = { company: { address: { street: {} } } }
 *
 * assert.deepStrictEqual(
 *   pipe(
 *     fromNullable(employee2.company),
 *     chainNullableK(company => company.address),
 *     chainNullableK(address => address.street),
 *     chainNullableK(street => street.name)
 *   ),
 *   none
 * )
 *
 * @category interop
 * @since 2.9.0
 */
var chainNullableK = function (f) { return function (ma) {
    return exports.isNone(ma) ? exports.none : exports.fromNullable(f(ma.value));
}; };
exports.chainNullableK = chainNullableK;
/**
 * Extracts the value out of the structure, if it exists. Otherwise returns `null`.
 *
 * @example
 * import { some, none, toNullable } from 'fp-ts/Option'
 * import { pipe } from 'fp-ts/function'
 *
 * assert.strictEqual(
 *   pipe(
 *     some(1),
 *     toNullable
 *   ),
 *   1
 * )
 * assert.strictEqual(
 *   pipe(
 *     none,
 *     toNullable
 *   ),
 *   null
 * )
 *
 * @category interop
 * @since 2.0.0
 */
exports.toNullable = 
/*#__PURE__*/
exports.match(function_1.constNull, function_1.identity);
/**
 * Extracts the value out of the structure, if it exists. Otherwise returns `undefined`.
 *
 * @example
 * import { some, none, toUndefined } from 'fp-ts/Option'
 * import { pipe } from 'fp-ts/function'
 *
 * assert.strictEqual(
 *   pipe(
 *     some(1),
 *     toUndefined
 *   ),
 *   1
 * )
 * assert.strictEqual(
 *   pipe(
 *     none,
 *     toUndefined
 *   ),
 *   undefined
 * )
 *
 * @category interop
 * @since 2.0.0
 */
exports.toUndefined = 
/*#__PURE__*/
exports.match(function_1.constUndefined, function_1.identity);
// -------------------------------------------------------------------------------------
// non-pipeables
// -------------------------------------------------------------------------------------
var _map = function (fa, f) { return function_1.pipe(fa, exports.map(f)); };
var _ap = function (fab, fa) { return function_1.pipe(fab, exports.ap(fa)); };
var _chain = function (ma, f) { return function_1.pipe(ma, exports.chain(f)); };
var _reduce = function (fa, b, f) { return function_1.pipe(fa, exports.reduce(b, f)); };
var _foldMap = function (M) {
    var foldMapM = exports.foldMap(M);
    return function (fa, f) { return function_1.pipe(fa, foldMapM(f)); };
};
var _reduceRight = function (fa, b, f) { return function_1.pipe(fa, exports.reduceRight(b, f)); };
var _traverse = function (F) {
    var traverseF = exports.traverse(F);
    return function (ta, f) { return function_1.pipe(ta, traverseF(f)); };
};
/* istanbul ignore next */
var _alt = function (fa, that) { return function_1.pipe(fa, exports.alt(that)); };
var _filter = function (fa, predicate) { return function_1.pipe(fa, exports.filter(predicate)); };
/* istanbul ignore next */
var _filterMap = function (fa, f) { return function_1.pipe(fa, exports.filterMap(f)); };
/* istanbul ignore next */
var _extend = function (wa, f) { return function_1.pipe(wa, exports.extend(f)); };
/* istanbul ignore next */
var _partition = function (fa, predicate) {
    return function_1.pipe(fa, exports.partition(predicate));
};
/* istanbul ignore next */
var _partitionMap = function (fa, f) { return function_1.pipe(fa, exports.partitionMap(f)); };
/* istanbul ignore next */
var _wither = function (F) {
    var witherF = exports.wither(F);
    return function (fa, f) { return function_1.pipe(fa, witherF(f)); };
};
/* istanbul ignore next */
var _wilt = function (F) {
    var wiltF = exports.wilt(F);
    return function (fa, f) { return function_1.pipe(fa, wiltF(f)); };
};
// -------------------------------------------------------------------------------------
// type class members
// -------------------------------------------------------------------------------------
/**
 * `map` can be used to turn functions `(a: A) => B` into functions `(fa: F<A>) => F<B>` whose argument and return types
 * use the type constructor `F` to represent some computational context.
 *
 * @category Functor
 * @since 2.0.0
 */
var map = function (f) { return function (fa) {
    return exports.isNone(fa) ? exports.none : exports.some(f(fa.value));
}; };
exports.map = map;
/**
 * Apply a function to an argument under a type constructor.
 *
 * @category Apply
 * @since 2.0.0
 */
var ap = function (fa) { return function (fab) {
    return exports.isNone(fab) ? exports.none : exports.isNone(fa) ? exports.none : exports.some(fab.value(fa.value));
}; };
exports.ap = ap;
/**
 * @category Pointed
 * @since 2.7.0
 */
exports.of = exports.some;
/**
 * Composes computations in sequence, using the return value of one computation to determine the next computation.
 *
 * @category Monad
 * @since 2.0.0
 */
var chain = function (f) { return function (ma) {
    return exports.isNone(ma) ? exports.none : f(ma.value);
}; };
exports.chain = chain;
/**
 * Derivable from `Chain`.
 *
 * @category combinators
 * @since 2.0.0
 */
exports.flatten = 
/*#__PURE__*/
exports.chain(function_1.identity);
/**
 * Less strict version of [`alt`](#alt).
 *
 * @category Alt
 * @since 2.9.0
 */
var altW = function (that) { return function (fa) {
    return exports.isNone(fa) ? that() : fa;
}; };
exports.altW = altW;
/**
 * Identifies an associative operation on a type constructor. It is similar to `Semigroup`, except that it applies to
 * types of kind `* -> *`.
 *
 * In case of `Option` returns the left-most non-`None` value.
 *
 * @example
 * import * as O from 'fp-ts/Option'
 * import { pipe } from 'fp-ts/function'
 *
 * assert.deepStrictEqual(
 *   pipe(
 *     O.some('a'),
 *     O.alt(() => O.some('b'))
 *   ),
 *   O.some('a')
 * )
 * assert.deepStrictEqual(
 *   pipe(
 *     O.none,
 *     O.alt(() => O.some('b'))
 *   ),
 *   O.some('b')
 * )
 *
 * @category Alt
 * @since 2.0.0
 */
exports.alt = exports.altW;
/**
 * @category Alternative
 * @since 2.7.0
 */
var zero = function () { return exports.none; };
exports.zero = zero;
/**
 * @category MonadThrow
 * @since 2.7.0
 */
var throwError = function () { return exports.none; };
exports.throwError = throwError;
/**
 * @category Extend
 * @since 2.0.0
 */
var extend = function (f) { return function (wa) {
    return exports.isNone(wa) ? exports.none : exports.some(f(wa));
}; };
exports.extend = extend;
/**
 * Derivable from `Extend`.
 *
 * @category combinators
 * @since 2.0.0
 */
exports.duplicate = 
/*#__PURE__*/
exports.extend(function_1.identity);
/**
 * @category Foldable
 * @since 2.0.0
 */
var reduce = function (b, f) { return function (fa) {
    return exports.isNone(fa) ? b : f(b, fa.value);
}; };
exports.reduce = reduce;
/**
 * @category Foldable
 * @since 2.0.0
 */
var foldMap = function (M) { return function (f) { return function (fa) {
    return exports.isNone(fa) ? M.empty : f(fa.value);
}; }; };
exports.foldMap = foldMap;
/**
 * @category Foldable
 * @since 2.0.0
 */
var reduceRight = function (b, f) { return function (fa) {
    return exports.isNone(fa) ? b : f(fa.value, b);
}; };
exports.reduceRight = reduceRight;
/**
 * @category Compactable
 * @since 2.0.0
 */
exports.compact = exports.flatten;
var defaultSeparated = 
/*#__PURE__*/
Separated_1.separated(exports.none, exports.none);
/**
 * @category Compactable
 * @since 2.0.0
 */
var separate = function (ma) {
    return exports.isNone(ma) ? defaultSeparated : Separated_1.separated(getLeft(ma.value), getRight(ma.value));
};
exports.separate = separate;
/**
 * @category Filterable
 * @since 2.0.0
 */
var filter = function (predicate) { return function (fa) { return (exports.isNone(fa) ? exports.none : predicate(fa.value) ? fa : exports.none); }; };
exports.filter = filter;
/**
 * @category Filterable
 * @since 2.0.0
 */
var filterMap = function (f) { return function (fa) {
    return exports.isNone(fa) ? exports.none : f(fa.value);
}; };
exports.filterMap = filterMap;
/**
 * @category Filterable
 * @since 2.0.0
 */
var partition = function (predicate) { return function (fa) {
    return Separated_1.separated(_filter(fa, function (a) { return !predicate(a); }), _filter(fa, predicate));
}; };
exports.partition = partition;
/**
 * @category Filterable
 * @since 2.0.0
 */
var partitionMap = function (f) { return function_1.flow(exports.map(f), exports.separate); };
exports.partitionMap = partitionMap;
/**
 * @category Traversable
 * @since 2.6.3
 */
var traverse = function (F) { return function (f) { return function (ta) { return (exports.isNone(ta) ? F.of(exports.none) : F.map(f(ta.value), exports.some)); }; }; };
exports.traverse = traverse;
/**
 * @category Traversable
 * @since 2.6.3
 */
var sequence = function (F) { return function (ta) { return (exports.isNone(ta) ? F.of(exports.none) : F.map(ta.value, exports.some)); }; };
exports.sequence = sequence;
/**
 * @category Witherable
 * @since 2.6.5
 */
var wither = function (F) { return function (f) { return function (fa) { return (exports.isNone(fa) ? F.of(exports.none) : f(fa.value)); }; }; };
exports.wither = wither;
/**
 * @category Witherable
 * @since 2.6.5
 */
var wilt = function (F) { return function (f) { return function (fa) {
    return exports.isNone(fa) ? F.of(defaultSeparated) : F.map(f(fa.value), function (e) { return Separated_1.separated(getLeft(e), getRight(e)); });
}; }; };
exports.wilt = wilt;
// -------------------------------------------------------------------------------------
// instances
// -------------------------------------------------------------------------------------
/**
 * @category instances
 * @since 2.0.0
 */
exports.URI = 'Option';
/**
 * @category instances
 * @since 2.0.0
 */
function getShow(S) {
    return {
        show: function (ma) { return (exports.isNone(ma) ? 'none' : "some(" + S.show(ma.value) + ")"); }
    };
}
exports.getShow = getShow;
/**
 * @example
 * import { none, some, getEq } from 'fp-ts/Option'
 * import * as N from 'fp-ts/number'
 *
 * const E = getEq(N.Eq)
 * assert.strictEqual(E.equals(none, none), true)
 * assert.strictEqual(E.equals(none, some(1)), false)
 * assert.strictEqual(E.equals(some(1), none), false)
 * assert.strictEqual(E.equals(some(1), some(2)), false)
 * assert.strictEqual(E.equals(some(1), some(1)), true)
 *
 * @category instances
 * @since 2.0.0
 */
function getEq(E) {
    return {
        equals: function (x, y) { return x === y || (exports.isNone(x) ? exports.isNone(y) : exports.isNone(y) ? false : E.equals(x.value, y.value)); }
    };
}
exports.getEq = getEq;
/**
 * The `Ord` instance allows `Option` values to be compared with
 * `compare`, whenever there is an `Ord` instance for
 * the type the `Option` contains.
 *
 * `None` is considered to be less than any `Some` value.
 *
 *
 * @example
 * import { none, some, getOrd } from 'fp-ts/Option'
 * import * as N from 'fp-ts/number'
 *
 * const O = getOrd(N.Ord)
 * assert.strictEqual(O.compare(none, none), 0)
 * assert.strictEqual(O.compare(none, some(1)), -1)
 * assert.strictEqual(O.compare(some(1), none), 1)
 * assert.strictEqual(O.compare(some(1), some(2)), -1)
 * assert.strictEqual(O.compare(some(1), some(1)), 0)
 *
 * @category instances
 * @since 2.0.0
 */
function getOrd(O) {
    return {
        equals: getEq(O).equals,
        compare: function (x, y) { return (x === y ? 0 : exports.isSome(x) ? (exports.isSome(y) ? O.compare(x.value, y.value) : 1) : -1); }
    };
}
exports.getOrd = getOrd;
/**
 * Monoid returning the left-most non-`None` value
 *
 * | x       | y       | concat(x, y) |
 * | ------- | ------- | ------------ |
 * | none    | none    | none         |
 * | some(a) | none    | some(a)      |
 * | none    | some(a) | some(a)      |
 * | some(a) | some(b) | some(a)      |
 *
 * @example
 * import { getFirstMonoid, some, none } from 'fp-ts/Option'
 *
 * const M = getFirstMonoid<number>()
 * assert.deepStrictEqual(M.concat(none, none), none)
 * assert.deepStrictEqual(M.concat(some(1), none), some(1))
 * assert.deepStrictEqual(M.concat(none, some(1)), some(1))
 * assert.deepStrictEqual(M.concat(some(1), some(2)), some(1))
 *
 * @category instances
 * @since 2.0.0
 */
function getFirstMonoid() {
    return {
        concat: function (x, y) { return (exports.isNone(x) ? y : x); },
        empty: exports.none
    };
}
exports.getFirstMonoid = getFirstMonoid;
/**
 * Monoid returning the right-most non-`None` value
 *
 * | x       | y       | concat(x, y) |
 * | ------- | ------- | ------------ |
 * | none    | none    | none         |
 * | some(a) | none    | some(a)      |
 * | none    | some(a) | some(a)      |
 * | some(a) | some(b) | some(b)      |
 *
 * @example
 * import { getLastMonoid, some, none } from 'fp-ts/Option'
 *
 * const M = getLastMonoid<number>()
 * assert.deepStrictEqual(M.concat(none, none), none)
 * assert.deepStrictEqual(M.concat(some(1), none), some(1))
 * assert.deepStrictEqual(M.concat(none, some(1)), some(1))
 * assert.deepStrictEqual(M.concat(some(1), some(2)), some(2))
 *
 * @category instances
 * @since 2.0.0
 */
function getLastMonoid() {
    return {
        concat: function (x, y) { return (exports.isNone(y) ? x : y); },
        empty: exports.none
    };
}
exports.getLastMonoid = getLastMonoid;
/**
 * Monoid returning the left-most non-`None` value. If both operands are `Some`s then the inner values are
 * concatenated using the provided `Semigroup`
 *
 * | x       | y       | concat(x, y)       |
 * | ------- | ------- | ------------------ |
 * | none    | none    | none               |
 * | some(a) | none    | some(a)            |
 * | none    | some(a) | some(a)            |
 * | some(a) | some(b) | some(concat(a, b)) |
 *
 * @example
 * import { getMonoid, some, none } from 'fp-ts/Option'
 * import { SemigroupSum } from 'fp-ts/number'
 *
 * const M = getMonoid(SemigroupSum)
 * assert.deepStrictEqual(M.concat(none, none), none)
 * assert.deepStrictEqual(M.concat(some(1), none), some(1))
 * assert.deepStrictEqual(M.concat(none, some(1)), some(1))
 * assert.deepStrictEqual(M.concat(some(1), some(2)), some(3))
 *
 * @category instances
 * @since 2.0.0
 */
function getMonoid(S) {
    return {
        concat: function (x, y) { return (exports.isNone(x) ? y : exports.isNone(y) ? x : exports.some(S.concat(x.value, y.value))); },
        empty: exports.none
    };
}
exports.getMonoid = getMonoid;
/**
 * @category instances
 * @since 2.7.0
 */
exports.Functor = {
    URI: exports.URI,
    map: _map
};
/**
 * Derivable from `Functor`.
 *
 * @category combinators
 * @since 2.10.0
 */
exports.flap = 
/*#__PURE__*/
Functor_1.flap(exports.Functor);
/**
 * @category instances
 * @since 2.10.0
 */
exports.Pointed = {
    URI: exports.URI,
    of: exports.of
};
/**
 * @category instances
 * @since 2.10.0
 */
exports.Apply = {
    URI: exports.URI,
    map: _map,
    ap: _ap
};
/**
 * Combine two effectful actions, keeping only the result of the first.
 *
 * Derivable from `Apply`.
 *
 * @category combinators
 * @since 2.0.0
 */
exports.apFirst = 
/*#__PURE__*/
Apply_1.apFirst(exports.Apply);
/**
 * Combine two effectful actions, keeping only the result of the second.
 *
 * Derivable from `Apply`.
 *
 * @category combinators
 * @since 2.0.0
 */
exports.apSecond = 
/*#__PURE__*/
Apply_1.apSecond(exports.Apply);
/**
 * @category instances
 * @since 2.7.0
 */
exports.Applicative = {
    URI: exports.URI,
    map: _map,
    ap: _ap,
    of: exports.of
};
/**
 * @category instances
 * @since 2.10.0
 */
exports.Chain = {
    URI: exports.URI,
    map: _map,
    ap: _ap,
    chain: _chain
};
/**
 * @category instances
 * @since 2.7.0
 */
exports.Monad = {
    URI: exports.URI,
    map: _map,
    ap: _ap,
    of: exports.of,
    chain: _chain
};
/**
 * Composes computations in sequence, using the return value of one computation to determine the next computation and
 * keeping only the result of the first.
 *
 * Derivable from `Chain`.
 *
 * @category combinators
 * @since 2.0.0
 */
exports.chainFirst = 
/*#__PURE__*/
Chain_1.chainFirst(exports.Chain);
/**
 * @category instances
 * @since 2.7.0
 */
exports.Foldable = {
    URI: exports.URI,
    reduce: _reduce,
    foldMap: _foldMap,
    reduceRight: _reduceRight
};
/**
 * @category instances
 * @since 2.7.0
 */
exports.Alt = {
    URI: exports.URI,
    map: _map,
    alt: _alt
};
/**
 * @category instances
 * @since 2.7.0
 */
exports.Alternative = {
    URI: exports.URI,
    map: _map,
    ap: _ap,
    of: exports.of,
    alt: _alt,
    zero: exports.zero
};
/**
 * @category instances
 * @since 2.7.0
 */
exports.Extend = {
    URI: exports.URI,
    map: _map,
    extend: _extend
};
/**
 * @category instances
 * @since 2.7.0
 */
exports.Compactable = {
    URI: exports.URI,
    compact: exports.compact,
    separate: exports.separate
};
/**
 * @category instances
 * @since 2.7.0
 */
exports.Filterable = {
    URI: exports.URI,
    map: _map,
    compact: exports.compact,
    separate: exports.separate,
    filter: _filter,
    filterMap: _filterMap,
    partition: _partition,
    partitionMap: _partitionMap
};
/**
 * @category instances
 * @since 2.7.0
 */
exports.Traversable = {
    URI: exports.URI,
    map: _map,
    reduce: _reduce,
    foldMap: _foldMap,
    reduceRight: _reduceRight,
    traverse: _traverse,
    sequence: exports.sequence
};
/**
 * @category instances
 * @since 2.7.0
 */
exports.Witherable = {
    URI: exports.URI,
    map: _map,
    reduce: _reduce,
    foldMap: _foldMap,
    reduceRight: _reduceRight,
    traverse: _traverse,
    sequence: exports.sequence,
    compact: exports.compact,
    separate: exports.separate,
    filter: _filter,
    filterMap: _filterMap,
    partition: _partition,
    partitionMap: _partitionMap,
    wither: _wither,
    wilt: _wilt
};
/**
 * @category instances
 * @since 2.7.0
 */
exports.MonadThrow = {
    URI: exports.URI,
    map: _map,
    ap: _ap,
    of: exports.of,
    chain: _chain,
    throwError: exports.throwError
};
// -------------------------------------------------------------------------------------
// utils
// -------------------------------------------------------------------------------------
/**
 * Returns `true` if `ma` contains `a`
 *
 * @example
 * import { some, none, elem } from 'fp-ts/Option'
 * import * as N from 'fp-ts/number'
 *
 * assert.strictEqual(elem(N.Eq)(1, some(1)), true)
 * assert.strictEqual(elem(N.Eq)(2, some(1)), false)
 * assert.strictEqual(elem(N.Eq)(1, none), false)
 *
 * @since 2.0.0
 */
function elem(E) {
    return function (a, ma) { return (exports.isNone(ma) ? false : E.equals(a, ma.value)); };
}
exports.elem = elem;
/**
 * Returns `true` if the predicate is satisfied by the wrapped value
 *
 * @example
 * import { some, none, exists } from 'fp-ts/Option'
 * import { pipe } from 'fp-ts/function'
 *
 * assert.strictEqual(
 *   pipe(
 *     some(1),
 *     exists(n => n > 0)
 *   ),
 *   true
 * )
 * assert.strictEqual(
 *   pipe(
 *     some(1),
 *     exists(n => n > 1)
 *   ),
 *   false
 * )
 * assert.strictEqual(
 *   pipe(
 *     none,
 *     exists(n => n > 0)
 *   ),
 *   false
 * )
 *
 * @since 2.0.0
 */
function exists(predicate) {
    return function (ma) { return (exports.isNone(ma) ? false : predicate(ma.value)); };
}
exports.exists = exists;
/**
 * Returns a `Refinement` (i.e. a custom type guard) from a `Option` returning function.
 * This function ensures that a custom type guard definition is type-safe.
 *
 * ```ts
 * import { some, none, getRefinement } from 'fp-ts/Option'
 *
 * type A = { type: 'A' }
 * type B = { type: 'B' }
 * type C = A | B
 *
 * const isA = (c: C): c is A => c.type === 'B' // <= typo but typescript doesn't complain
 * const isA = getRefinement<C, A>(c => (c.type === 'B' ? some(c) : none)) // static error: Type '"B"' is not assignable to type '"A"'
 * ```
 *
 * @since 2.0.0
 */
function getRefinement(getOption) {
    return function (a) { return exports.isSome(getOption(a)); };
}
exports.getRefinement = getRefinement;
// -------------------------------------------------------------------------------------
// do notation
// -------------------------------------------------------------------------------------
/**
 * @since 2.9.0
 */
exports.Do = 
/*#__PURE__*/
exports.of({});
/**
 * @since 2.8.0
 */
exports.bindTo = 
/*#__PURE__*/
Functor_1.bindTo(exports.Functor);
/**
 * @since 2.8.0
 */
exports.bind = 
/*#__PURE__*/
Chain_1.bind(exports.Chain);
// -------------------------------------------------------------------------------------
// pipeable sequence S
// -------------------------------------------------------------------------------------
/**
 * @since 2.8.0
 */
exports.apS = 
/*#__PURE__*/
Apply_1.apS(exports.Apply);
// -------------------------------------------------------------------------------------
// array utils
// -------------------------------------------------------------------------------------
/**
 * Equivalent to `ReadonlyArray#traverseWithIndex(Applicative)`.
 *
 * @since 2.9.0
 */
var traverseArrayWithIndex = function (f) { return function (as) {
    var out = [];
    for (var i = 0; i < as.length; i++) {
        var b = f(i, as[i]);
        if (exports.isNone(b)) {
            return exports.none;
        }
        out.push(b.value);
    }
    return exports.some(out);
}; };
exports.traverseArrayWithIndex = traverseArrayWithIndex;
/**
 * Equivalent to `ReadonlyArray#traverse(Applicative)`.
 *
 * @since 2.9.0
 */
var traverseArray = function (f) {
    return exports.traverseArrayWithIndex(function (_, a) { return f(a); });
};
exports.traverseArray = traverseArray;
/**
 * Equivalent to `ReadonlyArray#sequence(Applicative)`.
 *
 * @since 2.9.0
 */
exports.sequenceArray = 
/*#__PURE__*/
exports.traverseArray(function_1.identity);
// -------------------------------------------------------------------------------------
// deprecated
// -------------------------------------------------------------------------------------
/**
 * Use [`chainNullableK`](#chainnullablek) instead.
 *
 * @category combinators
 * @since 2.0.0
 * @deprecated
 */
exports.mapNullable = exports.chainNullableK;
/**
 * Use small, specific instances instead.
 *
 * @category instances
 * @since 2.0.0
 * @deprecated
 */
exports.option = {
    URI: exports.URI,
    map: _map,
    of: exports.of,
    ap: _ap,
    chain: _chain,
    reduce: _reduce,
    foldMap: _foldMap,
    reduceRight: _reduceRight,
    traverse: _traverse,
    sequence: exports.sequence,
    zero: exports.zero,
    alt: _alt,
    extend: _extend,
    compact: exports.compact,
    separate: exports.separate,
    filter: _filter,
    filterMap: _filterMap,
    partition: _partition,
    partitionMap: _partitionMap,
    wither: _wither,
    wilt: _wilt,
    throwError: exports.throwError
};
/**
 * Use [`getApplySemigroup`](./Apply.ts.html#getApplySemigroup) instead.
 *
 * @category instances
 * @since 2.0.0
 * @deprecated
 */
exports.getApplySemigroup = 
/*#__PURE__*/
Apply_1.getApplySemigroup(exports.Apply);
/**
 * Use [`getApplicativeMonoid`](./Applicative.ts.html#getApplicativeMonoid) instead.
 *
 * @category instances
 * @since 2.0.0
 * @deprecated
 */
exports.getApplyMonoid = 
/*#__PURE__*/
Applicative_1.getApplicativeMonoid(exports.Applicative);

},{"./Applicative":"../node_modules/fp-ts/lib/Applicative.js","./Apply":"../node_modules/fp-ts/lib/Apply.js","./Chain":"../node_modules/fp-ts/lib/Chain.js","./function":"../node_modules/fp-ts/lib/function.js","./Functor":"../node_modules/fp-ts/lib/Functor.js","./internal":"../node_modules/fp-ts/lib/internal.js","./Separated":"../node_modules/fp-ts/lib/Separated.js"}],"../node_modules/fp-ts/lib/Eq.js":[function(require,module,exports) {
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.eqDate = exports.eqNumber = exports.eqString = exports.eqBoolean = exports.eq = exports.strictEqual = exports.getStructEq = exports.getTupleEq = exports.Contravariant = exports.getMonoid = exports.getSemigroup = exports.eqStrict = exports.URI = exports.contramap = exports.tuple = exports.struct = exports.fromEquals = void 0;
var function_1 = require("./function");
// -------------------------------------------------------------------------------------
// constructors
// -------------------------------------------------------------------------------------
/**
 * @category constructors
 * @since 2.0.0
 */
function fromEquals(equals) {
    return {
        equals: function (x, y) { return x === y || equals(x, y); }
    };
}
exports.fromEquals = fromEquals;
// -------------------------------------------------------------------------------------
// combinators
// -------------------------------------------------------------------------------------
/**
 * @category combinators
 * @since 2.10.0
 */
var struct = function (eqs) {
    return fromEquals(function (first, second) {
        for (var key in eqs) {
            if (!eqs[key].equals(first[key], second[key])) {
                return false;
            }
        }
        return true;
    });
};
exports.struct = struct;
/**
 * Given a tuple of `Eq`s returns a `Eq` for the tuple
 *
 * @example
 * import { tuple } from 'fp-ts/Eq'
 * import * as S from 'fp-ts/string'
 * import * as N from 'fp-ts/number'
 * import * as B from 'fp-ts/boolean'
 *
 * const E = tuple(S.Eq, N.Eq, B.Eq)
 * assert.strictEqual(E.equals(['a', 1, true], ['a', 1, true]), true)
 * assert.strictEqual(E.equals(['a', 1, true], ['b', 1, true]), false)
 * assert.strictEqual(E.equals(['a', 1, true], ['a', 2, true]), false)
 * assert.strictEqual(E.equals(['a', 1, true], ['a', 1, false]), false)
 *
 * @category combinators
 * @since 2.10.0
 */
var tuple = function () {
    var eqs = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        eqs[_i] = arguments[_i];
    }
    return fromEquals(function (first, second) { return eqs.every(function (E, i) { return E.equals(first[i], second[i]); }); });
};
exports.tuple = tuple;
// -------------------------------------------------------------------------------------
// non-pipeables
// -------------------------------------------------------------------------------------
/* istanbul ignore next */
var contramap_ = function (fa, f) { return function_1.pipe(fa, exports.contramap(f)); };
// -------------------------------------------------------------------------------------
// type class members
// -------------------------------------------------------------------------------------
/**
 * @category Contravariant
 * @since 2.0.0
 */
var contramap = function (f) { return function (fa) {
    return fromEquals(function (x, y) { return fa.equals(f(x), f(y)); });
}; };
exports.contramap = contramap;
// -------------------------------------------------------------------------------------
// instances
// -------------------------------------------------------------------------------------
/**
 * @category instances
 * @since 2.0.0
 */
exports.URI = 'Eq';
/**
 * @category instances
 * @since 2.5.0
 */
exports.eqStrict = {
    equals: function (a, b) { return a === b; }
};
var empty = {
    equals: function () { return true; }
};
/**
 * @category instances
 * @since 2.10.0
 */
var getSemigroup = function () { return ({
    concat: function (x, y) { return fromEquals(function (a, b) { return x.equals(a, b) && y.equals(a, b); }); }
}); };
exports.getSemigroup = getSemigroup;
/**
 * @category instances
 * @since 2.6.0
 */
var getMonoid = function () { return ({
    concat: exports.getSemigroup().concat,
    empty: empty
}); };
exports.getMonoid = getMonoid;
/**
 * @category instances
 * @since 2.7.0
 */
exports.Contravariant = {
    URI: exports.URI,
    contramap: contramap_
};
// -------------------------------------------------------------------------------------
// deprecated
// -------------------------------------------------------------------------------------
/**
 * Use [`tuple`](#tuple) instead.
 *
 * @category combinators
 * @since 2.0.0
 * @deprecated
 */
exports.getTupleEq = exports.tuple;
/**
 * Use [`struct`](#struct) instead.
 *
 * @category combinators
 * @since 2.0.0
 * @deprecated
 */
exports.getStructEq = exports.struct;
/**
 * Use [`eqStrict`](#eqstrict) instead
 *
 * @since 2.0.0
 * @deprecated
 */
exports.strictEqual = exports.eqStrict.equals;
/**
 * Use small, specific instances instead.
 *
 * @category instances
 * @since 2.0.0
 * @deprecated
 */
exports.eq = exports.Contravariant;
/**
 * Use [`Eq`](./boolean.ts.html#Eq) instead.
 *
 * @category instances
 * @since 2.0.0
 * @deprecated
 */
exports.eqBoolean = exports.eqStrict;
/**
 * Use [`Eq`](./string.ts.html#Eq) instead.
 *
 * @category instances
 * @since 2.0.0
 * @deprecated
 */
exports.eqString = exports.eqStrict;
/**
 * Use [`Eq`](./number.ts.html#Eq) instead.
 *
 * @category instances
 * @since 2.0.0
 * @deprecated
 */
exports.eqNumber = exports.eqStrict;
/**
 * Use [`Eq`](./Date.ts.html#Eq) instead.
 *
 * @category instances
 * @since 2.0.0
 * @deprecated
 */
exports.eqDate = {
    equals: function (first, second) { return first.valueOf() === second.valueOf(); }
};

},{"./function":"../node_modules/fp-ts/lib/function.js"}],"../node_modules/fp-ts/lib/Ord.js":[function(require,module,exports) {
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.ordDate = exports.ordNumber = exports.ordString = exports.ordBoolean = exports.ord = exports.getDualOrd = exports.getTupleOrd = exports.between = exports.clamp = exports.max = exports.min = exports.geq = exports.leq = exports.gt = exports.lt = exports.Contravariant = exports.getMonoid = exports.getSemigroup = exports.URI = exports.contramap = exports.reverse = exports.tuple = exports.fromCompare = exports.equalsDefault = void 0;
var Eq_1 = require("./Eq");
var function_1 = require("./function");
// -------------------------------------------------------------------------------------
// defaults
// -------------------------------------------------------------------------------------
/**
 * @category defaults
 * @since 2.10.0
 */
var equalsDefault = function (compare) { return function (first, second) {
    return first === second || compare(first, second) === 0;
}; };
exports.equalsDefault = equalsDefault;
// -------------------------------------------------------------------------------------
// constructors
// -------------------------------------------------------------------------------------
/**
 * @category constructors
 * @since 2.0.0
 */
var fromCompare = function (compare) { return ({
    equals: exports.equalsDefault(compare),
    compare: function (first, second) { return (first === second ? 0 : compare(first, second)); }
}); };
exports.fromCompare = fromCompare;
// -------------------------------------------------------------------------------------
// combinators
// -------------------------------------------------------------------------------------
/**
 * Given a tuple of `Ord`s returns an `Ord` for the tuple.
 *
 * @example
 * import { tuple } from 'fp-ts/Ord'
 * import * as B from 'fp-ts/boolean'
 * import * as S from 'fp-ts/string'
 * import * as N from 'fp-ts/number'
 *
 * const O = tuple(S.Ord, N.Ord, B.Ord)
 * assert.strictEqual(O.compare(['a', 1, true], ['b', 2, true]), -1)
 * assert.strictEqual(O.compare(['a', 1, true], ['a', 2, true]), -1)
 * assert.strictEqual(O.compare(['a', 1, true], ['a', 1, false]), 1)
 *
 * @category combinators
 * @since 2.10.0
 */
var tuple = function () {
    var ords = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        ords[_i] = arguments[_i];
    }
    return exports.fromCompare(function (first, second) {
        var i = 0;
        for (; i < ords.length - 1; i++) {
            var r = ords[i].compare(first[i], second[i]);
            if (r !== 0) {
                return r;
            }
        }
        return ords[i].compare(first[i], second[i]);
    });
};
exports.tuple = tuple;
/**
 * @category combinators
 * @since 2.10.0
 */
var reverse = function (O) { return exports.fromCompare(function (first, second) { return O.compare(second, first); }); };
exports.reverse = reverse;
// -------------------------------------------------------------------------------------
// non-pipeables
// -------------------------------------------------------------------------------------
/* istanbul ignore next */
var contramap_ = function (fa, f) { return function_1.pipe(fa, exports.contramap(f)); };
// -------------------------------------------------------------------------------------
// type class members
// -------------------------------------------------------------------------------------
/**
 * @category Contravariant
 * @since 2.0.0
 */
var contramap = function (f) { return function (fa) {
    return exports.fromCompare(function (first, second) { return fa.compare(f(first), f(second)); });
}; };
exports.contramap = contramap;
// -------------------------------------------------------------------------------------
// instances
// -------------------------------------------------------------------------------------
/**
 * @category instances
 * @since 2.0.0
 */
exports.URI = 'Ord';
/**
 * @category instances
 * @since 2.0.0
 */
var getSemigroup = function () { return ({
    concat: function (first, second) {
        return exports.fromCompare(function (a, b) {
            var ox = first.compare(a, b);
            return ox !== 0 ? ox : second.compare(a, b);
        });
    }
}); };
exports.getSemigroup = getSemigroup;
/**
 * Returns a `Monoid` such that:
 *
 * - its `concat(ord1, ord2)` operation will order first by `ord1`, and then by `ord2`
 * - its `empty` value is an `Ord` that always considers compared elements equal
 *
 * @example
 * import { sort } from 'fp-ts/Array'
 * import { contramap, reverse, getMonoid } from 'fp-ts/Ord'
 * import * as S from 'fp-ts/string'
 * import * as B from 'fp-ts/boolean'
 * import { pipe } from 'fp-ts/function'
 * import { concatAll } from 'fp-ts/Monoid'
 * import * as N from 'fp-ts/number'
 *
 * interface User {
 *   readonly id: number
 *   readonly name: string
 *   readonly age: number
 *   readonly rememberMe: boolean
 * }
 *
 * const byName = pipe(
 *   S.Ord,
 *   contramap((p: User) => p.name)
 * )
 *
 * const byAge = pipe(
 *   N.Ord,
 *   contramap((p: User) => p.age)
 * )
 *
 * const byRememberMe = pipe(
 *   B.Ord,
 *   contramap((p: User) => p.rememberMe)
 * )
 *
 * const M = getMonoid<User>()
 *
 * const users: Array<User> = [
 *   { id: 1, name: 'Guido', age: 47, rememberMe: false },
 *   { id: 2, name: 'Guido', age: 46, rememberMe: true },
 *   { id: 3, name: 'Giulio', age: 44, rememberMe: false },
 *   { id: 4, name: 'Giulio', age: 44, rememberMe: true }
 * ]
 *
 * // sort by name, then by age, then by `rememberMe`
 * const O1 = concatAll(M)([byName, byAge, byRememberMe])
 * assert.deepStrictEqual(sort(O1)(users), [
 *   { id: 3, name: 'Giulio', age: 44, rememberMe: false },
 *   { id: 4, name: 'Giulio', age: 44, rememberMe: true },
 *   { id: 2, name: 'Guido', age: 46, rememberMe: true },
 *   { id: 1, name: 'Guido', age: 47, rememberMe: false }
 * ])
 *
 * // now `rememberMe = true` first, then by name, then by age
 * const O2 = concatAll(M)([reverse(byRememberMe), byName, byAge])
 * assert.deepStrictEqual(sort(O2)(users), [
 *   { id: 4, name: 'Giulio', age: 44, rememberMe: true },
 *   { id: 2, name: 'Guido', age: 46, rememberMe: true },
 *   { id: 3, name: 'Giulio', age: 44, rememberMe: false },
 *   { id: 1, name: 'Guido', age: 47, rememberMe: false }
 * ])
 *
 * @category instances
 * @since 2.4.0
 */
var getMonoid = function () { return ({
    concat: exports.getSemigroup().concat,
    empty: exports.fromCompare(function () { return 0; })
}); };
exports.getMonoid = getMonoid;
/**
 * @category instances
 * @since 2.7.0
 */
exports.Contravariant = {
    URI: exports.URI,
    contramap: contramap_
};
// -------------------------------------------------------------------------------------
// utils
// -------------------------------------------------------------------------------------
// TODO: curry in v3
/**
 * Test whether one value is _strictly less than_ another
 *
 * @since 2.0.0
 */
var lt = function (O) { return function (first, second) { return O.compare(first, second) === -1; }; };
exports.lt = lt;
// TODO: curry in v3
/**
 * Test whether one value is _strictly greater than_ another
 *
 * @since 2.0.0
 */
var gt = function (O) { return function (first, second) { return O.compare(first, second) === 1; }; };
exports.gt = gt;
// TODO: curry in v3
/**
 * Test whether one value is _non-strictly less than_ another
 *
 * @since 2.0.0
 */
var leq = function (O) { return function (first, second) { return O.compare(first, second) !== 1; }; };
exports.leq = leq;
// TODO: curry in v3
/**
 * Test whether one value is _non-strictly greater than_ another
 *
 * @since 2.0.0
 */
var geq = function (O) { return function (first, second) { return O.compare(first, second) !== -1; }; };
exports.geq = geq;
// TODO: curry in v3
/**
 * Take the minimum of two values. If they are considered equal, the first argument is chosen
 *
 * @since 2.0.0
 */
var min = function (O) { return function (first, second) {
    return first === second || O.compare(first, second) < 1 ? first : second;
}; };
exports.min = min;
// TODO: curry in v3
/**
 * Take the maximum of two values. If they are considered equal, the first argument is chosen
 *
 * @since 2.0.0
 */
var max = function (O) { return function (first, second) {
    return first === second || O.compare(first, second) > -1 ? first : second;
}; };
exports.max = max;
/**
 * Clamp a value between a minimum and a maximum
 *
 * @since 2.0.0
 */
var clamp = function (O) {
    var minO = exports.min(O);
    var maxO = exports.max(O);
    return function (low, hi) { return function (a) { return maxO(minO(a, hi), low); }; };
};
exports.clamp = clamp;
/**
 * Test whether a value is between a minimum and a maximum (inclusive)
 *
 * @since 2.0.0
 */
var between = function (O) {
    var ltO = exports.lt(O);
    var gtO = exports.gt(O);
    return function (low, hi) { return function (a) { return (ltO(a, low) || gtO(a, hi) ? false : true); }; };
};
exports.between = between;
// -------------------------------------------------------------------------------------
// deprecated
// -------------------------------------------------------------------------------------
/**
 * Use [`tuple`](#tuple) instead.
 *
 * @category combinators
 * @since 2.0.0
 * @deprecated
 */
exports.getTupleOrd = exports.tuple;
/**
 * Use [`reverse`](#reverse) instead.
 *
 * @category combinators
 * @since 2.0.0
 * @deprecated
 */
exports.getDualOrd = exports.reverse;
/**
 * Use [`Contravariant`](#contravariant) instead.
 *
 * @category instances
 * @since 2.0.0
 * @deprecated
 */
exports.ord = exports.Contravariant;
// default compare for primitive types
function compare(first, second) {
    return first < second ? -1 : first > second ? 1 : 0;
}
var strictOrd = {
    equals: Eq_1.eqStrict.equals,
    compare: compare
};
/**
 * Use [`Ord`](./boolean.ts.html#Ord) instead.
 *
 * @category instances
 * @since 2.0.0
 * @deprecated
 */
exports.ordBoolean = strictOrd;
/**
 * Use [`Ord`](./string.ts.html#Ord) instead.
 *
 * @category instances
 * @since 2.0.0
 * @deprecated
 */
exports.ordString = strictOrd;
/**
 * Use [`Ord`](./number.ts.html#Ord) instead.
 *
 * @category instances
 * @since 2.0.0
 * @deprecated
 */
exports.ordNumber = strictOrd;
/**
 * Use [`Ord`](./Date.ts.html#Ord) instead.
 *
 * @category instances
 * @since 2.0.0
 * @deprecated
 */
exports.ordDate = 
/*#__PURE__*/
function_1.pipe(
// tslint:disable-next-line: deprecation
exports.ordNumber, 
/*#__PURE__*/
exports.contramap(function (date) { return date.valueOf(); }));

},{"./Eq":"../node_modules/fp-ts/lib/Eq.js","./function":"../node_modules/fp-ts/lib/function.js"}],"../node_modules/fp-ts/lib/Semigroup.js":[function(require,module,exports) {
"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.semigroupProduct = exports.semigroupSum = exports.semigroupString = exports.getFunctionSemigroup = exports.semigroupAny = exports.semigroupAll = exports.fold = exports.getIntercalateSemigroup = exports.getMeetSemigroup = exports.getJoinSemigroup = exports.getDualSemigroup = exports.getStructSemigroup = exports.getTupleSemigroup = exports.getFirstSemigroup = exports.getLastSemigroup = exports.getObjectSemigroup = exports.concatAll = exports.semigroupVoid = exports.last = exports.first = exports.intercalate = exports.tuple = exports.struct = exports.reverse = exports.constant = exports.max = exports.min = void 0;
/**
 * If a type `A` can form a `Semigroup` it has an **associative** binary operation.
 *
 * ```ts
 * interface Semigroup<A> {
 *   readonly concat: (x: A, y: A) => A
 * }
 * ```
 *
 * Associativity means the following equality must hold for any choice of `x`, `y`, and `z`.
 *
 * ```ts
 * concat(x, concat(y, z)) = concat(concat(x, y), z)
 * ```
 *
 * A common example of a semigroup is the type `string` with the operation `+`.
 *
 * ```ts
 * import { Semigroup } from 'fp-ts/Semigroup'
 *
 * const semigroupString: Semigroup<string> = {
 *   concat: (x, y) => x + y
 * }
 *
 * const x = 'x'
 * const y = 'y'
 * const z = 'z'
 *
 * semigroupString.concat(x, y) // 'xy'
 *
 * semigroupString.concat(x, semigroupString.concat(y, z)) // 'xyz'
 *
 * semigroupString.concat(semigroupString.concat(x, y), z) // 'xyz'
 * ```
 *
 * *Adapted from https://typelevel.org/cats*
 *
 * @since 2.0.0
 */
var function_1 = require("./function");
var _ = __importStar(require("./internal"));
var Or = __importStar(require("./Ord"));
// -------------------------------------------------------------------------------------
// constructors
// -------------------------------------------------------------------------------------
/**
 * Get a semigroup where `concat` will return the minimum, based on the provided order.
 *
 * @example
 * import * as N from 'fp-ts/number'
 * import * as S from 'fp-ts/Semigroup'
 *
 * const S1 = S.min(N.Ord)
 *
 * assert.deepStrictEqual(S1.concat(1, 2), 1)
 *
 * @category constructors
 * @since 2.10.0
 */
var min = function (O) { return ({
    concat: Or.min(O)
}); };
exports.min = min;
/**
 * Get a semigroup where `concat` will return the maximum, based on the provided order.
 *
 * @example
 * import * as N from 'fp-ts/number'
 * import * as S from 'fp-ts/Semigroup'
 *
 * const S1 = S.max(N.Ord)
 *
 * assert.deepStrictEqual(S1.concat(1, 2), 2)
 *
 * @category constructors
 * @since 2.10.0
 */
var max = function (O) { return ({
    concat: Or.max(O)
}); };
exports.max = max;
/**
 * @category constructors
 * @since 2.10.0
 */
var constant = function (a) { return ({
    concat: function () { return a; }
}); };
exports.constant = constant;
// -------------------------------------------------------------------------------------
// combinators
// -------------------------------------------------------------------------------------
/**
 * The dual of a `Semigroup`, obtained by swapping the arguments of `concat`.
 *
 * @example
 * import { reverse } from 'fp-ts/Semigroup'
 * import * as S from 'fp-ts/string'
 *
 * assert.deepStrictEqual(reverse(S.Semigroup).concat('a', 'b'), 'ba')
 *
 * @category combinators
 * @since 2.10.0
 */
var reverse = function (S) { return ({
    concat: function (x, y) { return S.concat(y, x); }
}); };
exports.reverse = reverse;
/**
 * Given a struct of semigroups returns a semigroup for the struct.
 *
 * @example
 * import { struct } from 'fp-ts/Semigroup'
 * import * as N from 'fp-ts/number'
 *
 * interface Point {
 *   readonly x: number
 *   readonly y: number
 * }
 *
 * const S = struct<Point>({
 *   x: N.SemigroupSum,
 *   y: N.SemigroupSum
 * })
 *
 * assert.deepStrictEqual(S.concat({ x: 1, y: 2 }, { x: 3, y: 4 }), { x: 4, y: 6 })
 *
 * @category combinators
 * @since 2.10.0
 */
var struct = function (semigroups) { return ({
    concat: function (first, second) {
        var r = {};
        for (var k in semigroups) {
            if (_.has.call(semigroups, k)) {
                r[k] = semigroups[k].concat(first[k], second[k]);
            }
        }
        return r;
    }
}); };
exports.struct = struct;
/**
 * Given a tuple of semigroups returns a semigroup for the tuple.
 *
 * @example
 * import { tuple } from 'fp-ts/Semigroup'
 * import * as B from 'fp-ts/boolean'
 * import * as N from 'fp-ts/number'
 * import * as S from 'fp-ts/string'
 *
 * const S1 = tuple(S.Semigroup, N.SemigroupSum)
 * assert.deepStrictEqual(S1.concat(['a', 1], ['b', 2]), ['ab', 3])
 *
 * const S2 = tuple(S.Semigroup, N.SemigroupSum, B.SemigroupAll)
 * assert.deepStrictEqual(S2.concat(['a', 1, true], ['b', 2, false]), ['ab', 3, false])
 *
 * @category combinators
 * @since 2.10.0
 */
var tuple = function () {
    var semigroups = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        semigroups[_i] = arguments[_i];
    }
    return ({
        concat: function (first, second) { return semigroups.map(function (s, i) { return s.concat(first[i], second[i]); }); }
    });
};
exports.tuple = tuple;
/**
 * Between each pair of elements insert `middle`.
 *
 * @example
 * import { intercalate } from 'fp-ts/Semigroup'
 * import * as S from 'fp-ts/string'
 * import { pipe } from 'fp-ts/function'
 *
 * const S1 = pipe(S.Semigroup, intercalate(' + '))
 *
 * assert.strictEqual(S1.concat('a', 'b'), 'a + b')
 *
 * @category combinators
 * @since 2.10.0
 */
var intercalate = function (middle) { return function (S) { return ({
    concat: function (x, y) { return S.concat(x, S.concat(middle, y)); }
}); }; };
exports.intercalate = intercalate;
// -------------------------------------------------------------------------------------
// instances
// -------------------------------------------------------------------------------------
/**
 * Always return the first argument.
 *
 * @example
 * import * as S from 'fp-ts/Semigroup'
 *
 * assert.deepStrictEqual(S.first<number>().concat(1, 2), 1)
 *
 * @category instances
 * @since 2.10.0
 */
var first = function () { return ({ concat: function_1.identity }); };
exports.first = first;
/**
 * Always return the last argument.
 *
 * @example
 * import * as S from 'fp-ts/Semigroup'
 *
 * assert.deepStrictEqual(S.last<number>().concat(1, 2), 2)
 *
 * @category instances
 * @since 2.10.0
 */
var last = function () { return ({ concat: function (_, y) { return y; } }); };
exports.last = last;
/**
 * @category instances
 * @since 2.0.0
 */
exports.semigroupVoid = exports.constant(undefined);
// -------------------------------------------------------------------------------------
// utils
// -------------------------------------------------------------------------------------
/**
 * Given a sequence of `as`, concat them and return the total.
 *
 * If `as` is empty, return the provided `startWith` value.
 *
 * @example
 * import { concatAll } from 'fp-ts/Semigroup'
 * import * as N from 'fp-ts/number'
 *
 * const sum = concatAll(N.SemigroupSum)(0)
 *
 * assert.deepStrictEqual(sum([1, 2, 3]), 6)
 * assert.deepStrictEqual(sum([]), 0)
 *
 * @since 2.10.0
 */
var concatAll = function (S) { return function (startWith) { return function (as) {
    return as.reduce(S.concat, startWith);
}; }; };
exports.concatAll = concatAll;
// -------------------------------------------------------------------------------------
// deprecated
// -------------------------------------------------------------------------------------
/**
 * Use [`getAssignSemigroup`](./struct.ts.html#getAssignSemigroup) instead.
 *
 * @category instances
 * @since 2.0.0
 * @deprecated
 */
var getObjectSemigroup = function () { return ({
    concat: function (first, second) { return Object.assign({}, first, second); }
}); };
exports.getObjectSemigroup = getObjectSemigroup;
/**
 * Use [`last`](#last) instead.
 *
 * @category instances
 * @since 2.0.0
 * @deprecated
 */
exports.getLastSemigroup = exports.last;
/**
 * Use [`first`](#first) instead.
 *
 * @category instances
 * @since 2.0.0
 * @deprecated
 */
exports.getFirstSemigroup = exports.first;
/**
 * Use [`tuple`](#tuple) instead.
 *
 * @category combinators
 * @since 2.0.0
 * @deprecated
 */
exports.getTupleSemigroup = exports.tuple;
/**
 * Use [`struct`](#struct) instead.
 *
 * @category combinators
 * @since 2.0.0
 * @deprecated
 */
exports.getStructSemigroup = exports.struct;
/**
 * Use [`reverse`](#reverse) instead.
 *
 * @category combinators
 * @since 2.0.0
 * @deprecated
 */
exports.getDualSemigroup = exports.reverse;
/**
 * Use [`max`](#max) instead.
 *
 * @category constructors
 * @since 2.0.0
 * @deprecated
 */
exports.getJoinSemigroup = exports.max;
/**
 * Use [`min`](#min) instead.
 *
 * @category constructors
 * @since 2.0.0
 * @deprecated
 */
exports.getMeetSemigroup = exports.min;
/**
 * Use [`intercalate`](#intercalate) instead.
 *
 * @category combinators
 * @since 2.5.0
 * @deprecated
 */
exports.getIntercalateSemigroup = exports.intercalate;
function fold(S) {
    var concatAllS = exports.concatAll(S);
    return function (startWith, as) { return (as === undefined ? concatAllS(startWith) : concatAllS(startWith)(as)); };
}
exports.fold = fold;
/**
 * Use [`SemigroupAll`](./boolean.ts.html#SemigroupAll) instead.
 *
 * @category instances
 * @since 2.0.0
 * @deprecated
 */
exports.semigroupAll = {
    concat: function (x, y) { return x && y; }
};
/**
 * Use [`SemigroupAny`](./boolean.ts.html#SemigroupAny) instead.
 *
 * @category instances
 * @since 2.0.0
 * @deprecated
 */
exports.semigroupAny = {
    concat: function (x, y) { return x || y; }
};
/**
 * Use [`getSemigroup`](./function.ts.html#getSemigroup) instead.
 *
 * @category instances
 * @since 2.0.0
 * @deprecated
 */
exports.getFunctionSemigroup = function_1.getSemigroup;
/**
 * Use [`Semigroup`](./string.ts.html#Semigroup) instead.
 *
 * @category instances
 * @since 2.0.0
 * @deprecated
 */
exports.semigroupString = {
    concat: function (x, y) { return x + y; }
};
/**
 * Use [`SemigroupSum`](./number.ts.html#SemigroupSum) instead.
 *
 * @category instances
 * @since 2.0.0
 * @deprecated
 */
exports.semigroupSum = {
    concat: function (x, y) { return x + y; }
};
/**
 * Use [`SemigroupProduct`](./number.ts.html#SemigroupProduct) instead.
 *
 * @category instances
 * @since 2.0.0
 * @deprecated
 */
exports.semigroupProduct = {
    concat: function (x, y) { return x * y; }
};

},{"./function":"../node_modules/fp-ts/lib/function.js","./internal":"../node_modules/fp-ts/lib/internal.js","./Ord":"../node_modules/fp-ts/lib/Ord.js"}],"../node_modules/fp-ts/lib/ReadonlyNonEmptyArray.js":[function(require,module,exports) {
"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __spreadArray = (this && this.__spreadArray) || function (to, from) {
    for (var i = 0, il = from.length, j = to.length; i < il; i++, j++)
        to[j] = from[i];
    return to;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.traverse = exports.reduceRightWithIndex = exports.foldMapWithIndex = exports.reduceWithIndex = exports.reduceRight = exports.foldMap = exports.reduce = exports.mapWithIndex = exports.map = exports.flatten = exports.duplicate = exports.extend = exports.chain = exports.ap = exports.alt = exports.altW = exports.of = exports.chunksOf = exports.splitAt = exports.chop = exports.chainWithIndex = exports.intersperse = exports.prependAll = exports.unzip = exports.zip = exports.zipWith = exports.modifyAt = exports.updateAt = exports.sort = exports.groupBy = exports.groupSort = exports.group = exports.reverse = exports.concat = exports.fromArray = exports.unappend = exports.unprepend = exports.fromReadonlyArray = exports.makeBy = exports.rotate = exports.union = exports.sortBy = exports.uniq = exports.unsafeUpdateAt = exports.unsafeInsertAt = exports.append = exports.prepend = exports.isOutOfBound = exports.isNonEmpty = exports.empty = void 0;
exports.readonlyNonEmptyArray = exports.fold = exports.prependToAll = exports.insertAt = exports.snoc = exports.cons = exports.unsnoc = exports.uncons = exports.filterWithIndex = exports.filter = exports.concatAll = exports.max = exports.min = exports.init = exports.last = exports.tail = exports.head = exports.apS = exports.bind = exports.bindTo = exports.Do = exports.Comonad = exports.Alt = exports.TraversableWithIndex = exports.Traversable = exports.FoldableWithIndex = exports.Foldable = exports.Monad = exports.chainFirst = exports.Chain = exports.Applicative = exports.apSecond = exports.apFirst = exports.Apply = exports.FunctorWithIndex = exports.Pointed = exports.flap = exports.Functor = exports.getEq = exports.getSemigroup = exports.getShow = exports.URI = exports.extract = exports.traverseWithIndex = exports.sequence = void 0;
var Apply_1 = require("./Apply");
var Chain_1 = require("./Chain");
var Eq_1 = require("./Eq");
var function_1 = require("./function");
var Functor_1 = require("./Functor");
var _ = __importStar(require("./internal"));
var O = __importStar(require("./Option"));
var Ord_1 = require("./Ord");
var Se = __importStar(require("./Semigroup"));
// -------------------------------------------------------------------------------------
// internal
// -------------------------------------------------------------------------------------
/**
 * @internal
 */
exports.empty = [];
/**
 * @internal
 */
var isNonEmpty = function (as) { return as.length > 0; };
exports.isNonEmpty = isNonEmpty;
/**
 * @internal
 */
var isOutOfBound = function (i, as) { return i < 0 || i >= as.length; };
exports.isOutOfBound = isOutOfBound;
/**
 * @internal
 */
var prepend = function (head) { return function (tail) { return __spreadArray([head], tail); }; };
exports.prepend = prepend;
/**
 * @internal
 */
var append = function (end) { return function (init) { return concat(init, [end]); }; };
exports.append = append;
/**
 * @internal
 */
var unsafeInsertAt = function (i, a, as) {
    if (exports.isNonEmpty(as)) {
        var xs = _.fromReadonlyNonEmptyArray(as);
        xs.splice(i, 0, a);
        return xs;
    }
    return [a];
};
exports.unsafeInsertAt = unsafeInsertAt;
/**
 * @internal
 */
var unsafeUpdateAt = function (i, a, as) {
    if (as[i] === a) {
        return as;
    }
    else {
        var xs = _.fromReadonlyNonEmptyArray(as);
        xs[i] = a;
        return xs;
    }
};
exports.unsafeUpdateAt = unsafeUpdateAt;
/**
 * @internal
 */
var uniq = function (E) { return function (as) {
    if (as.length === 1) {
        return as;
    }
    var out = [exports.head(as)];
    var rest = exports.tail(as);
    var _loop_1 = function (a) {
        if (out.every(function (o) { return !E.equals(o, a); })) {
            out.push(a);
        }
    };
    for (var _i = 0, rest_1 = rest; _i < rest_1.length; _i++) {
        var a = rest_1[_i];
        _loop_1(a);
    }
    return out;
}; };
exports.uniq = uniq;
/**
 * @internal
 */
var sortBy = function (ords) {
    if (exports.isNonEmpty(ords)) {
        var M = Ord_1.getMonoid();
        return exports.sort(ords.reduce(M.concat, M.empty));
    }
    return function_1.identity;
};
exports.sortBy = sortBy;
/**
 * @internal
 */
var union = function (E) {
    var uniqE = exports.uniq(E);
    return function (first, second) { return uniqE(concat(first, second)); };
};
exports.union = union;
/**
 * @internal
 */
var rotate = function (n) { return function (as) {
    var len = as.length;
    var m = Math.round(n) % len;
    if (exports.isOutOfBound(Math.abs(m), as) || m === 0) {
        return as;
    }
    if (m < 0) {
        var _a = exports.splitAt(-m)(as), f = _a[0], s = _a[1];
        return concat(s, f);
    }
    else {
        return exports.rotate(m - len)(as);
    }
}; };
exports.rotate = rotate;
/**
 * @internal
 */
var makeBy = function (n, f) {
    var j = Math.max(0, Math.floor(n));
    var out = [f(0)];
    for (var i = 1; i < j; i++) {
        out.push(f(i));
    }
    return out;
};
exports.makeBy = makeBy;
// -------------------------------------------------------------------------------------
// constructors
// -------------------------------------------------------------------------------------
/**
 * Return a `ReadonlyNonEmptyArray` from a `ReadonlyArray` returning `none` if the input is empty.
 *
 * @category constructors
 * @since 2.5.0
 */
var fromReadonlyArray = function (as) {
    return exports.isNonEmpty(as) ? O.some(as) : O.none;
};
exports.fromReadonlyArray = fromReadonlyArray;
// -------------------------------------------------------------------------------------
// destructors
// -------------------------------------------------------------------------------------
/**
 * Return the tuple of the `head` and the `tail`.
 *
 * @example
 * import { unprepend } from 'fp-ts/ReadonlyNonEmptyArray'
 *
 * assert.deepStrictEqual(unprepend([1, 2, 3, 4]), [1, [2, 3, 4]])
 *
 * @category destructors
 * @since 2.9.0
 */
var unprepend = function (as) { return [exports.head(as), exports.tail(as)]; };
exports.unprepend = unprepend;
/**
 * Return the tuple of the `init` and the `last`.
 *
 * @example
 * import { unappend } from 'fp-ts/ReadonlyNonEmptyArray'
 *
 * assert.deepStrictEqual(unappend([1, 2, 3, 4]), [[1, 2, 3], 4])
 *
 * @category destructors
 * @since 2.9.0
 */
var unappend = function (as) { return [exports.init(as), exports.last(as)]; };
exports.unappend = unappend;
// -------------------------------------------------------------------------------------
// interop
// -------------------------------------------------------------------------------------
/**
 * @category interop
 * @since 2.5.0
 */
var fromArray = function (as) { return exports.fromReadonlyArray(as.slice()); };
exports.fromArray = fromArray;
function concat(first, second) {
    return first.concat(second);
}
exports.concat = concat;
/**
 * @category combinators
 * @since 2.5.0
 */
var reverse = function (as) {
    return as.length === 1 ? as : __spreadArray([exports.last(as)], as.slice(0, -1).reverse());
};
exports.reverse = reverse;
function group(E) {
    return function (as) {
        var len = as.length;
        if (len === 0) {
            return exports.empty;
        }
        var out = [];
        var head = as[0];
        var nea = [head];
        for (var i = 1; i < len; i++) {
            var a = as[i];
            if (E.equals(a, head)) {
                nea.push(a);
            }
            else {
                out.push(nea);
                head = a;
                nea = [head];
            }
        }
        out.push(nea);
        return out;
    };
}
exports.group = group;
function groupSort(O) {
    var sortO = exports.sort(O);
    var groupO = group(O);
    return function (as) { return (exports.isNonEmpty(as) ? groupO(sortO(as)) : exports.empty); };
}
exports.groupSort = groupSort;
/**
 * Splits an array into sub-non-empty-arrays stored in an object, based on the result of calling a `string`-returning
 * function on each element, and grouping the results according to values returned
 *
 * @example
 * import { groupBy } from 'fp-ts/ReadonlyNonEmptyArray'
 *
 * assert.deepStrictEqual(groupBy((s: string) => String(s.length))(['a', 'b', 'ab']), {
 *   '1': ['a', 'b'],
 *   '2': ['ab']
 * })
 *
 * @category combinators
 * @since 2.5.0
 */
var groupBy = function (f) { return function (as) {
    var out = {};
    for (var _i = 0, as_1 = as; _i < as_1.length; _i++) {
        var a = as_1[_i];
        var k = f(a);
        if (out.hasOwnProperty(k)) {
            out[k].push(a);
        }
        else {
            out[k] = [a];
        }
    }
    return out;
}; };
exports.groupBy = groupBy;
/**
 * @category combinators
 * @since 2.5.0
 */
var sort = function (O) { return function (as) {
    return as.length === 1 ? as : as.slice().sort(O.compare);
}; };
exports.sort = sort;
/**
 * @category combinators
 * @since 2.5.0
 */
var updateAt = function (i, a) {
    return exports.modifyAt(i, function () { return a; });
};
exports.updateAt = updateAt;
/**
 * @category combinators
 * @since 2.5.0
 */
var modifyAt = function (i, f) { return function (as) { return (exports.isOutOfBound(i, as) ? O.none : O.some(exports.unsafeUpdateAt(i, f(as[i]), as))); }; };
exports.modifyAt = modifyAt;
/**
 * @category combinators
 * @since 2.5.1
 */
var zipWith = function (as, bs, f) {
    var cs = [f(as[0], bs[0])];
    var len = Math.min(as.length, bs.length);
    for (var i = 1; i < len; i++) {
        cs[i] = f(as[i], bs[i]);
    }
    return cs;
};
exports.zipWith = zipWith;
function zip(as, bs) {
    if (bs === undefined) {
        return function (bs) { return zip(bs, as); };
    }
    return exports.zipWith(as, bs, function (a, b) { return [a, b]; });
}
exports.zip = zip;
/**
 * @category combinators
 * @since 2.5.1
 */
var unzip = function (abs) {
    var fa = [abs[0][0]];
    var fb = [abs[0][1]];
    for (var i = 1; i < abs.length; i++) {
        fa[i] = abs[i][0];
        fb[i] = abs[i][1];
    }
    return [fa, fb];
};
exports.unzip = unzip;
/**
 * Prepend an element to every member of a `ReadonlyNonEmptyArray`.
 *
 * @example
 * import { prependAll } from 'fp-ts/ReadonlyNonEmptyArray'
 *
 * assert.deepStrictEqual(prependAll(9)([1, 2, 3, 4]), [9, 1, 9, 2, 9, 3, 9, 4])
 *
 * @category combinators
 * @since 2.10.0
 */
var prependAll = function (middle) { return function (as) {
    var out = [middle, as[0]];
    for (var i = 1; i < as.length; i++) {
        out.push(middle, as[i]);
    }
    return out;
}; };
exports.prependAll = prependAll;
/**
 * Places an element in between members of a `ReadonlyNonEmptyArray`.
 *
 * @example
 * import { intersperse } from 'fp-ts/ReadonlyNonEmptyArray'
 *
 * assert.deepStrictEqual(intersperse(9)([1, 2, 3, 4]), [1, 9, 2, 9, 3, 9, 4])
 *
 * @category combinators
 * @since 2.9.0
 */
var intersperse = function (middle) { return function (as) {
    var rest = exports.tail(as);
    return exports.isNonEmpty(rest) ? function_1.pipe(rest, exports.prependAll(middle), exports.prepend(exports.head(as))) : as;
}; };
exports.intersperse = intersperse;
/**
 * @category combinators
 * @since 2.10.0
 */
var chainWithIndex = function (f) { return function (as) {
    var out = _.fromReadonlyNonEmptyArray(f(0, exports.head(as)));
    for (var i = 1; i < as.length; i++) {
        out.push.apply(out, f(i, as[i]));
    }
    return out;
}; };
exports.chainWithIndex = chainWithIndex;
/**
 * A useful recursion pattern for processing a `ReadonlyNonEmptyArray` to produce a new `ReadonlyNonEmptyArray`, often used for "chopping" up the input
 * `ReadonlyNonEmptyArray`. Typically `chop` is called with some function that will consume an initial prefix of the `ReadonlyNonEmptyArray` and produce a
 * value and the tail of the `ReadonlyNonEmptyArray`.
 *
 * @category combinators
 * @since 2.10.0
 */
var chop = function (f) { return function (as) {
    var _a = f(as), b = _a[0], rest = _a[1];
    var out = [b];
    var next = rest;
    while (exports.isNonEmpty(next)) {
        var _b = f(next), b_1 = _b[0], rest_2 = _b[1];
        out.push(b_1);
        next = rest_2;
    }
    return out;
}; };
exports.chop = chop;
/**
 * Splits a `ReadonlyNonEmptyArray` into two pieces, the first piece has max `n` elements.
 *
 * @category combinators
 * @since 2.10.0
 */
var splitAt = function (n) { return function (as) {
    var m = Math.max(1, n);
    return m >= as.length ? [as, exports.empty] : [function_1.pipe(as.slice(1, m), exports.prepend(exports.head(as))), as.slice(m)];
}; };
exports.splitAt = splitAt;
/**
 * Splits a `ReadonlyNonEmptyArray` into length-`n` pieces. The last piece will be shorter if `n` does not evenly divide the length of
 * the `ReadonlyNonEmptyArray`.
 *
 * @category combinators
 * @since 2.10.0
 */
var chunksOf = function (n) { return exports.chop(exports.splitAt(n)); };
exports.chunksOf = chunksOf;
// -------------------------------------------------------------------------------------
// non-pipeables
// -------------------------------------------------------------------------------------
var _map = function (fa, f) { return function_1.pipe(fa, exports.map(f)); };
/* istanbul ignore next */
var _mapWithIndex = function (fa, f) { return function_1.pipe(fa, exports.mapWithIndex(f)); };
var _ap = function (fab, fa) { return function_1.pipe(fab, exports.ap(fa)); };
var _chain = function (ma, f) { return function_1.pipe(ma, exports.chain(f)); };
/* istanbul ignore next */
var _extend = function (wa, f) { return function_1.pipe(wa, exports.extend(f)); };
/* istanbul ignore next */
var _reduce = function (fa, b, f) { return function_1.pipe(fa, exports.reduce(b, f)); };
/* istanbul ignore next */
var _foldMap = function (M) {
    var foldMapM = exports.foldMap(M);
    return function (fa, f) { return function_1.pipe(fa, foldMapM(f)); };
};
/* istanbul ignore next */
var _reduceRight = function (fa, b, f) { return function_1.pipe(fa, exports.reduceRight(b, f)); };
/* istanbul ignore next */
var _traverse = function (F) {
    var traverseF = exports.traverse(F);
    return function (ta, f) { return function_1.pipe(ta, traverseF(f)); };
};
/* istanbul ignore next */
var _alt = function (fa, that) { return function_1.pipe(fa, exports.alt(that)); };
/* istanbul ignore next */
var _reduceWithIndex = function (fa, b, f) {
    return function_1.pipe(fa, exports.reduceWithIndex(b, f));
};
/* istanbul ignore next */
var _foldMapWithIndex = function (M) {
    var foldMapWithIndexM = exports.foldMapWithIndex(M);
    return function (fa, f) { return function_1.pipe(fa, foldMapWithIndexM(f)); };
};
/* istanbul ignore next */
var _reduceRightWithIndex = function (fa, b, f) {
    return function_1.pipe(fa, exports.reduceRightWithIndex(b, f));
};
/* istanbul ignore next */
var _traverseWithIndex = function (F) {
    var traverseWithIndexF = exports.traverseWithIndex(F);
    return function (ta, f) { return function_1.pipe(ta, traverseWithIndexF(f)); };
};
// -------------------------------------------------------------------------------------
// type class members
// -------------------------------------------------------------------------------------
/**
 * @category Pointed
 * @since 2.5.0
 */
var of = function (a) { return [a]; };
exports.of = of;
/**
 * Less strict version of [`alt`](#alt).
 *
 * @category Alt
 * @since 2.9.0
 */
var altW = function (that) { return function (as) { return concat(as, that()); }; };
exports.altW = altW;
/**
 * Identifies an associative operation on a type constructor. It is similar to `Semigroup`, except that it applies to
 * types of kind `* -> *`.
 *
 * @category Alt
 * @since 2.6.2
 */
exports.alt = exports.altW;
/**
 * @category Apply
 * @since 2.5.0
 */
var ap = function (as) { return exports.chain(function (f) { return function_1.pipe(as, exports.map(f)); }); };
exports.ap = ap;
/**
 * Composes computations in sequence, using the return value of one computation to determine the next computation.
 *
 * @category Monad
 * @since 2.5.0
 */
var chain = function (f) { return exports.chainWithIndex(function (_, a) { return f(a); }); };
exports.chain = chain;
/**
 * @category Extend
 * @since 2.5.0
 */
var extend = function (f) { return function (as) {
    var next = exports.tail(as);
    var out = [f(as)];
    while (exports.isNonEmpty(next)) {
        out.push(f(next));
        next = exports.tail(next);
    }
    return out;
}; };
exports.extend = extend;
/**
 * Derivable from `Extend`.
 *
 * @category combinators
 * @since 2.5.0
 */
exports.duplicate = 
/*#__PURE__*/
exports.extend(function_1.identity);
/**
 * Derivable from `Chain`.
 *
 * @category combinators
 * @since 2.5.0
 */
exports.flatten = 
/*#__PURE__*/
exports.chain(function_1.identity);
/**
 * `map` can be used to turn functions `(a: A) => B` into functions `(fa: F<A>) => F<B>` whose argument and return types
 * use the type constructor `F` to represent some computational context.
 *
 * @category Functor
 * @since 2.5.0
 */
var map = function (f) {
    return exports.mapWithIndex(function (_, a) { return f(a); });
};
exports.map = map;
/**
 * @category FunctorWithIndex
 * @since 2.5.0
 */
var mapWithIndex = function (f) { return function (as) {
    var out = [f(0, exports.head(as))];
    for (var i = 1; i < as.length; i++) {
        out.push(f(i, as[i]));
    }
    return out;
}; };
exports.mapWithIndex = mapWithIndex;
/**
 * @category Foldable
 * @since 2.5.0
 */
var reduce = function (b, f) {
    return exports.reduceWithIndex(b, function (_, b, a) { return f(b, a); });
};
exports.reduce = reduce;
/**
 * **Note**. The constraint is relaxed: a `Semigroup` instead of a `Monoid`.
 *
 * @category Foldable
 * @since 2.5.0
 */
var foldMap = function (S) { return function (f) { return function (as) {
    return as.slice(1).reduce(function (s, a) { return S.concat(s, f(a)); }, f(as[0]));
}; }; };
exports.foldMap = foldMap;
/**
 * @category Foldable
 * @since 2.5.0
 */
var reduceRight = function (b, f) {
    return exports.reduceRightWithIndex(b, function (_, b, a) { return f(b, a); });
};
exports.reduceRight = reduceRight;
/**
 * @category FoldableWithIndex
 * @since 2.5.0
 */
var reduceWithIndex = function (b, f) { return function (as) {
    return as.reduce(function (b, a, i) { return f(i, b, a); }, b);
}; };
exports.reduceWithIndex = reduceWithIndex;
/**
 * **Note**. The constraint is relaxed: a `Semigroup` instead of a `Monoid`.
 *
 * @category FoldableWithIndex
 * @since 2.5.0
 */
var foldMapWithIndex = function (S) { return function (f) { return function (as) { return as.slice(1).reduce(function (s, a, i) { return S.concat(s, f(i + 1, a)); }, f(0, as[0])); }; }; };
exports.foldMapWithIndex = foldMapWithIndex;
/**
 * @category FoldableWithIndex
 * @since 2.5.0
 */
var reduceRightWithIndex = function (b, f) { return function (as) { return as.reduceRight(function (b, a, i) { return f(i, a, b); }, b); }; };
exports.reduceRightWithIndex = reduceRightWithIndex;
/**
 * @category Traversable
 * @since 2.6.3
 */
var traverse = function (F) {
    var traverseWithIndexF = exports.traverseWithIndex(F);
    return function (f) { return traverseWithIndexF(function (_, a) { return f(a); }); };
};
exports.traverse = traverse;
/**
 * @category Traversable
 * @since 2.6.3
 */
var sequence = function (F) { return exports.traverseWithIndex(F)(function (_, a) { return a; }); };
exports.sequence = sequence;
/**
 * @category TraversableWithIndex
 * @since 2.6.3
 */
var traverseWithIndex = function (F) { return function (f) { return function (as) {
    var out = F.map(f(0, exports.head(as)), exports.of);
    for (var i = 1; i < as.length; i++) {
        out = F.ap(F.map(out, function (bs) { return function (b) { return function_1.pipe(bs, exports.append(b)); }; }), f(i, as[i]));
    }
    return out;
}; }; };
exports.traverseWithIndex = traverseWithIndex;
/**
 * @category Comonad
 * @since 2.6.3
 */
var extract = function (as) { return as[0]; };
exports.extract = extract;
// -------------------------------------------------------------------------------------
// instances
// -------------------------------------------------------------------------------------
/**
 * @category instances
 * @since 2.5.0
 */
exports.URI = 'ReadonlyNonEmptyArray';
/**
 * @category instances
 * @since 2.5.0
 */
var getShow = function (S) { return ({
    show: function (as) { return "[" + as.map(S.show).join(', ') + "]"; }
}); };
exports.getShow = getShow;
/**
 * Builds a `Semigroup` instance for `ReadonlyNonEmptyArray`
 *
 * @category instances
 * @since 2.5.0
 */
var getSemigroup = function () { return ({
    concat: concat
}); };
exports.getSemigroup = getSemigroup;
/**
 * @example
 * import { getEq } from 'fp-ts/ReadonlyNonEmptyArray'
 * import * as N from 'fp-ts/number'
 *
 * const E = getEq(N.Eq)
 * assert.strictEqual(E.equals([1, 2], [1, 2]), true)
 * assert.strictEqual(E.equals([1, 2], [1, 3]), false)
 *
 * @category instances
 * @since 2.5.0
 */
var getEq = function (E) {
    return Eq_1.fromEquals(function (xs, ys) { return xs.length === ys.length && xs.every(function (x, i) { return E.equals(x, ys[i]); }); });
};
exports.getEq = getEq;
/**
 * @category instances
 * @since 2.7.0
 */
exports.Functor = {
    URI: exports.URI,
    map: _map
};
/**
 * Derivable from `Functor`.
 *
 * @category combinators
 * @since 2.10.0
 */
exports.flap = 
/*#_PURE_*/
Functor_1.flap(exports.Functor);
/**
 * @category instances
 * @since 2.10.0
 */
exports.Pointed = {
    URI: exports.URI,
    of: exports.of
};
/**
 * @category instances
 * @since 2.7.0
 */
exports.FunctorWithIndex = {
    URI: exports.URI,
    map: _map,
    mapWithIndex: _mapWithIndex
};
/**
 * @category instances
 * @since 2.10.0
 */
exports.Apply = {
    URI: exports.URI,
    map: _map,
    ap: _ap
};
/**
 * Combine two effectful actions, keeping only the result of the first.
 *
 * Derivable from `Apply`.
 *
 * @category combinators
 * @since 2.5.0
 */
exports.apFirst = 
/*#__PURE__*/
Apply_1.apFirst(exports.Apply);
/**
 * Combine two effectful actions, keeping only the result of the second.
 *
 * Derivable from `Apply`.
 *
 * @category combinators
 * @since 2.5.0
 */
exports.apSecond = 
/*#__PURE__*/
Apply_1.apSecond(exports.Apply);
/**
 * @category instances
 * @since 2.7.0
 */
exports.Applicative = {
    URI: exports.URI,
    map: _map,
    ap: _ap,
    of: exports.of
};
/**
 * @category instances
 * @since 2.10.0
 */
exports.Chain = {
    URI: exports.URI,
    map: _map,
    ap: _ap,
    chain: _chain
};
/**
 * Composes computations in sequence, using the return value of one computation to determine the next computation and
 * keeping only the result of the first.
 *
 * Derivable from `Chain`.
 *
 * @category combinators
 * @since 2.5.0
 */
exports.chainFirst = 
/*#__PURE__*/
Chain_1.chainFirst(exports.Chain);
/**
 * @category instances
 * @since 2.7.0
 */
exports.Monad = {
    URI: exports.URI,
    map: _map,
    ap: _ap,
    of: exports.of,
    chain: _chain
};
/**
 * @category instances
 * @since 2.7.0
 */
exports.Foldable = {
    URI: exports.URI,
    reduce: _reduce,
    foldMap: _foldMap,
    reduceRight: _reduceRight
};
/**
 * @category instances
 * @since 2.7.0
 */
exports.FoldableWithIndex = {
    URI: exports.URI,
    reduce: _reduce,
    foldMap: _foldMap,
    reduceRight: _reduceRight,
    reduceWithIndex: _reduceWithIndex,
    foldMapWithIndex: _foldMapWithIndex,
    reduceRightWithIndex: _reduceRightWithIndex
};
/**
 * @category instances
 * @since 2.7.0
 */
exports.Traversable = {
    URI: exports.URI,
    map: _map,
    reduce: _reduce,
    foldMap: _foldMap,
    reduceRight: _reduceRight,
    traverse: _traverse,
    sequence: exports.sequence
};
/**
 * @category instances
 * @since 2.7.0
 */
exports.TraversableWithIndex = {
    URI: exports.URI,
    map: _map,
    mapWithIndex: _mapWithIndex,
    reduce: _reduce,
    foldMap: _foldMap,
    reduceRight: _reduceRight,
    traverse: _traverse,
    sequence: exports.sequence,
    reduceWithIndex: _reduceWithIndex,
    foldMapWithIndex: _foldMapWithIndex,
    reduceRightWithIndex: _reduceRightWithIndex,
    traverseWithIndex: _traverseWithIndex
};
/**
 * @category instances
 * @since 2.7.0
 */
exports.Alt = {
    URI: exports.URI,
    map: _map,
    alt: _alt
};
/**
 * @category instances
 * @since 2.7.0
 */
exports.Comonad = {
    URI: exports.URI,
    map: _map,
    extend: _extend,
    extract: exports.extract
};
// -------------------------------------------------------------------------------------
// do notation
// -------------------------------------------------------------------------------------
/**
 * @since 2.9.0
 */
exports.Do = 
/*#__PURE__*/
exports.of({});
/**
 * @since 2.8.0
 */
exports.bindTo = 
/*#__PURE__*/
Functor_1.bindTo(exports.Functor);
/**
 * @since 2.8.0
 */
exports.bind = 
/*#__PURE__*/
Chain_1.bind(exports.Chain);
// -------------------------------------------------------------------------------------
// pipeable sequence S
// -------------------------------------------------------------------------------------
/**
 * @since 2.8.0
 */
exports.apS = 
/*#__PURE__*/
Apply_1.apS(exports.Apply);
// -------------------------------------------------------------------------------------
// utils
// -------------------------------------------------------------------------------------
/**
 * @since 2.5.0
 */
exports.head = exports.extract;
/**
 * @since 2.5.0
 */
var tail = function (as) { return as.slice(1); };
exports.tail = tail;
/**
 * @since 2.5.0
 */
var last = function (as) { return as[as.length - 1]; };
exports.last = last;
/**
 * Get all but the last element of a non empty array, creating a new array.
 *
 * @example
 * import { init } from 'fp-ts/ReadonlyNonEmptyArray'
 *
 * assert.deepStrictEqual(init([1, 2, 3]), [1, 2])
 * assert.deepStrictEqual(init([1]), [])
 *
 * @since 2.5.0
 */
var init = function (as) { return as.slice(0, -1); };
exports.init = init;
/**
 * @since 2.5.0
 */
var min = function (O) {
    var S = Se.min(O);
    return function (as) { return as.reduce(S.concat); };
};
exports.min = min;
/**
 * @since 2.5.0
 */
var max = function (O) {
    var S = Se.max(O);
    return function (as) { return as.reduce(S.concat); };
};
exports.max = max;
/**
 * @since 2.10.0
 */
var concatAll = function (S) { return function (as) { return as.reduce(S.concat); }; };
exports.concatAll = concatAll;
function filter(predicate) {
    // tslint:disable-next-line: deprecation
    return exports.filterWithIndex(function (_, a) { return predicate(a); });
}
exports.filter = filter;
/**
 * Use [`filterWithIndex`](./ReadonlyArray.ts.html#filterWithIndex) instead.
 *
 * @category combinators
 * @since 2.5.0
 * @deprecated
 */
var filterWithIndex = function (predicate) { return function (as) { return exports.fromReadonlyArray(as.filter(function (a, i) { return predicate(i, a); })); }; };
exports.filterWithIndex = filterWithIndex;
/**
 * Use [`unprepend`](#unprepend) instead.
 *
 * @category destructors
 * @since 2.10.0
 * @deprecated
 */
exports.uncons = exports.unprepend;
/**
 * Use [`unappend`](#unappend) instead.
 *
 * @category destructors
 * @since 2.10.0
 * @deprecated
 */
exports.unsnoc = exports.unappend;
function cons(head, tail) {
    return tail === undefined ? exports.prepend(head) : function_1.pipe(tail, exports.prepend(head));
}
exports.cons = cons;
/**
 * Use [`append`](./ReadonlyArray.ts.html#append) instead.
 *
 * @category constructors
 * @since 2.5.0
 * @deprecated
 */
var snoc = function (init, end) { return concat(init, [end]); };
exports.snoc = snoc;
/**
 * Use [`insertAt`](./ReadonlyArray.ts.html#insertAt) instead.
 *
 * @category combinators
 * @since 2.5.0
 * @deprecated
 */
var insertAt = function (i, a) { return function (as) {
    return i < 0 || i > as.length ? O.none : O.some(exports.unsafeInsertAt(i, a, as));
}; };
exports.insertAt = insertAt;
/**
 * Use [`prependAll`](#prependall) instead.
 *
 * @category combinators
 * @since 2.9.0
 * @deprecated
 */
exports.prependToAll = exports.prependAll;
/**
 * Use [`concatAll`](#concatall) instead.
 *
 * @since 2.5.0
 * @deprecated
 */
exports.fold = exports.concatAll;
/**
 * Use small, specific instances instead.
 *
 * @category instances
 * @since 2.5.0
 * @deprecated
 */
exports.readonlyNonEmptyArray = {
    URI: exports.URI,
    of: exports.of,
    map: _map,
    mapWithIndex: _mapWithIndex,
    ap: _ap,
    chain: _chain,
    extend: _extend,
    extract: exports.extract,
    reduce: _reduce,
    foldMap: _foldMap,
    reduceRight: _reduceRight,
    traverse: _traverse,
    sequence: exports.sequence,
    reduceWithIndex: _reduceWithIndex,
    foldMapWithIndex: _foldMapWithIndex,
    reduceRightWithIndex: _reduceRightWithIndex,
    traverseWithIndex: _traverseWithIndex,
    alt: _alt
};

},{"./Apply":"../node_modules/fp-ts/lib/Apply.js","./Chain":"../node_modules/fp-ts/lib/Chain.js","./Eq":"../node_modules/fp-ts/lib/Eq.js","./function":"../node_modules/fp-ts/lib/function.js","./Functor":"../node_modules/fp-ts/lib/Functor.js","./internal":"../node_modules/fp-ts/lib/internal.js","./Option":"../node_modules/fp-ts/lib/Option.js","./Ord":"../node_modules/fp-ts/lib/Ord.js","./Semigroup":"../node_modules/fp-ts/lib/Semigroup.js"}],"../node_modules/fp-ts/lib/NonEmptyArray.js":[function(require,module,exports) {
"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __spreadArray = (this && this.__spreadArray) || function (to, from) {
    for (var i = 0, il = from.length, j = to.length; i < il; i++, j++)
        to[j] = from[i];
    return to;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.reduceRightWithIndex = exports.reduceRight = exports.reduceWithIndex = exports.reduce = exports.mapWithIndex = exports.map = exports.flatten = exports.duplicate = exports.extend = exports.chain = exports.ap = exports.alt = exports.altW = exports.chunksOf = exports.splitAt = exports.chop = exports.chainWithIndex = exports.foldMap = exports.foldMapWithIndex = exports.intersperse = exports.prependAll = exports.unzip = exports.zip = exports.zipWith = exports.of = exports.copy = exports.modifyAt = exports.updateAt = exports.insertAt = exports.sort = exports.groupBy = exports.groupSort = exports.group = exports.reverse = exports.concat = exports.unappend = exports.unprepend = exports.fromArray = exports.fromReadonlyNonEmptyArray = exports.makeBy = exports.rotate = exports.union = exports.sortBy = exports.uniq = exports.unsafeUpdateAt = exports.unsafeInsertAt = exports.append = exports.prepend = exports.isOutOfBound = exports.isNonEmpty = void 0;
exports.nonEmptyArray = exports.fold = exports.prependToAll = exports.snoc = exports.cons = exports.unsnoc = exports.uncons = exports.filterWithIndex = exports.filter = exports.concatAll = exports.max = exports.min = exports.init = exports.last = exports.tail = exports.head = exports.apS = exports.bind = exports.bindTo = exports.Do = exports.Comonad = exports.Alt = exports.TraversableWithIndex = exports.Traversable = exports.FoldableWithIndex = exports.Foldable = exports.Monad = exports.chainFirst = exports.Chain = exports.Applicative = exports.apSecond = exports.apFirst = exports.Apply = exports.FunctorWithIndex = exports.Pointed = exports.flap = exports.Functor = exports.getEq = exports.getSemigroup = exports.getShow = exports.URI = exports.extract = exports.traverseWithIndex = exports.sequence = exports.traverse = void 0;
var Apply_1 = require("./Apply");
var Chain_1 = require("./Chain");
var function_1 = require("./function");
var Functor_1 = require("./Functor");
var _ = __importStar(require("./internal"));
var O = __importStar(require("./Option"));
var Ord_1 = require("./Ord");
var RNEA = __importStar(require("./ReadonlyNonEmptyArray"));
// -------------------------------------------------------------------------------------
// internal
// -------------------------------------------------------------------------------------
/**
 * @internal
 */
var isNonEmpty = function (as) { return as.length > 0; };
exports.isNonEmpty = isNonEmpty;
/**
 * @internal
 */
var isOutOfBound = function (i, as) { return i < 0 || i >= as.length; };
exports.isOutOfBound = isOutOfBound;
/**
 * @internal
 */
var prepend = function (head) { return function (tail) { return __spreadArray([head], tail); }; };
exports.prepend = prepend;
/**
 * @internal
 */
var append = function (end) { return function (init) { return concat(init, [end]); }; };
exports.append = append;
/**
 * @internal
 */
var unsafeInsertAt = function (i, a, as) {
    if (exports.isNonEmpty(as)) {
        var xs = exports.fromReadonlyNonEmptyArray(as);
        xs.splice(i, 0, a);
        return xs;
    }
    return [a];
};
exports.unsafeInsertAt = unsafeInsertAt;
/**
 * @internal
 */
var unsafeUpdateAt = function (i, a, as) {
    var xs = exports.fromReadonlyNonEmptyArray(as);
    xs[i] = a;
    return xs;
};
exports.unsafeUpdateAt = unsafeUpdateAt;
/**
 * @internal
 */
var uniq = function (E) { return function (as) {
    if (as.length === 1) {
        return exports.copy(as);
    }
    var out = [exports.head(as)];
    var rest = exports.tail(as);
    var _loop_1 = function (a) {
        if (out.every(function (o) { return !E.equals(o, a); })) {
            out.push(a);
        }
    };
    for (var _i = 0, rest_1 = rest; _i < rest_1.length; _i++) {
        var a = rest_1[_i];
        _loop_1(a);
    }
    return out;
}; };
exports.uniq = uniq;
/**
 * @internal
 */
var sortBy = function (ords) {
    if (exports.isNonEmpty(ords)) {
        var M = Ord_1.getMonoid();
        return exports.sort(ords.reduce(M.concat, M.empty));
    }
    return exports.copy;
};
exports.sortBy = sortBy;
/**
 * @internal
 */
var union = function (E) {
    var uniqE = exports.uniq(E);
    return function (first, second) { return uniqE(concat(first, second)); };
};
exports.union = union;
/**
 * @internal
 */
var rotate = function (n) { return function (as) {
    var len = as.length;
    var m = Math.round(n) % len;
    if (exports.isOutOfBound(Math.abs(m), as) || m === 0) {
        return exports.copy(as);
    }
    if (m < 0) {
        var _a = exports.splitAt(-m)(as), f = _a[0], s = _a[1];
        return concat(s, f);
    }
    else {
        return exports.rotate(m - len)(as);
    }
}; };
exports.rotate = rotate;
/**
 * @internal
 */
var makeBy = function (n, f) {
    var j = Math.max(0, Math.floor(n));
    var out = [f(0)];
    for (var i = 1; i < j; i++) {
        out.push(f(i));
    }
    return out;
};
exports.makeBy = makeBy;
// -------------------------------------------------------------------------------------
// constructors
// -------------------------------------------------------------------------------------
/**
 * @category constructors
 * @since 2.10.0
 */
exports.fromReadonlyNonEmptyArray = _.fromReadonlyNonEmptyArray;
/**
 * Builds a `NonEmptyArray` from an `Array` returning `none` if `as` is an empty array
 *
 * @category constructors
 * @since 2.0.0
 */
var fromArray = function (as) { return (exports.isNonEmpty(as) ? O.some(as) : O.none); };
exports.fromArray = fromArray;
// -------------------------------------------------------------------------------------
// destructors
// -------------------------------------------------------------------------------------
/**
 * Return the tuple of the `head` and the `tail`.
 *
 * @example
 * import { unprepend } from 'fp-ts/NonEmptyArray'
 *
 * assert.deepStrictEqual(unprepend([1, 2, 3]), [1, [2, 3]])
 *
 * @category destructors
 * @since 2.9.0
 */
var unprepend = function (as) { return [exports.head(as), exports.tail(as)]; };
exports.unprepend = unprepend;
/**
 * Return the tuple of the `init` and the `last`.
 *
 * @example
 * import { unappend } from 'fp-ts/NonEmptyArray'
 *
 * assert.deepStrictEqual(unappend([1, 2, 3, 4]), [[1, 2, 3], 4])
 *
 * @category destructors
 * @since 2.9.0
 */
var unappend = function (as) { return [exports.init(as), exports.last(as)]; };
exports.unappend = unappend;
function concat(first, second) {
    return first.concat(second);
}
exports.concat = concat;
/**
 * @category combinators
 * @since 2.0.0
 */
var reverse = function (as) { return __spreadArray([exports.last(as)], as.slice(0, -1).reverse()); };
exports.reverse = reverse;
function group(E) {
    return function (as) {
        var len = as.length;
        if (len === 0) {
            return [];
        }
        var out = [];
        var head = as[0];
        var nea = [head];
        for (var i = 1; i < len; i++) {
            var a = as[i];
            if (E.equals(a, head)) {
                nea.push(a);
            }
            else {
                out.push(nea);
                head = a;
                nea = [head];
            }
        }
        out.push(nea);
        return out;
    };
}
exports.group = group;
function groupSort(O) {
    var sortO = exports.sort(O);
    var groupO = group(O);
    return function (as) { return (exports.isNonEmpty(as) ? groupO(sortO(as)) : []); };
}
exports.groupSort = groupSort;
/**
 * Splits an array into sub-non-empty-arrays stored in an object, based on the result of calling a `string`-returning
 * function on each element, and grouping the results according to values returned
 *
 * @example
 * import { groupBy } from 'fp-ts/NonEmptyArray'
 *
 * assert.deepStrictEqual(groupBy((s: string) => String(s.length))(['a', 'b', 'ab']), {
 *   '1': ['a', 'b'],
 *   '2': ['ab']
 * })
 *
 * @category combinators
 * @since 2.0.0
 */
var groupBy = function (f) { return function (as) {
    var out = {};
    for (var _i = 0, as_1 = as; _i < as_1.length; _i++) {
        var a = as_1[_i];
        var k = f(a);
        if (out.hasOwnProperty(k)) {
            out[k].push(a);
        }
        else {
            out[k] = [a];
        }
    }
    return out;
}; };
exports.groupBy = groupBy;
/**
 * @category combinators
 * @since 2.0.0
 */
var sort = function (O) { return function (as) {
    return as.slice().sort(O.compare);
}; };
exports.sort = sort;
/**
 * @category combinators
 * @since 2.0.0
 */
var insertAt = function (i, a) { return function (as) {
    return i < 0 || i > as.length ? O.none : O.some(exports.unsafeInsertAt(i, a, as));
}; };
exports.insertAt = insertAt;
/**
 * @category combinators
 * @since 2.0.0
 */
var updateAt = function (i, a) {
    return exports.modifyAt(i, function () { return a; });
};
exports.updateAt = updateAt;
/**
 * @category combinators
 * @since 2.0.0
 */
var modifyAt = function (i, f) { return function (as) {
    return exports.isOutOfBound(i, as) ? O.none : O.some(exports.unsafeUpdateAt(i, f(as[i]), as));
}; };
exports.modifyAt = modifyAt;
/**
 * @category combinators
 * @since 2.0.0
 */
exports.copy = exports.fromReadonlyNonEmptyArray;
/**
 * @category Pointed
 * @since 2.0.0
 */
var of = function (a) { return [a]; };
exports.of = of;
/**
 * @category combinators
 * @since 2.5.1
 */
var zipWith = function (as, bs, f) {
    var cs = [f(as[0], bs[0])];
    var len = Math.min(as.length, bs.length);
    for (var i = 1; i < len; i++) {
        cs[i] = f(as[i], bs[i]);
    }
    return cs;
};
exports.zipWith = zipWith;
function zip(as, bs) {
    if (bs === undefined) {
        return function (bs) { return zip(bs, as); };
    }
    return exports.zipWith(as, bs, function (a, b) { return [a, b]; });
}
exports.zip = zip;
/**
 * @category combinators
 * @since 2.5.1
 */
var unzip = function (abs) {
    var fa = [abs[0][0]];
    var fb = [abs[0][1]];
    for (var i = 1; i < abs.length; i++) {
        fa[i] = abs[i][0];
        fb[i] = abs[i][1];
    }
    return [fa, fb];
};
exports.unzip = unzip;
/**
 * Prepend an element to every member of an array
 *
 * @example
 * import { prependAll } from 'fp-ts/NonEmptyArray'
 *
 * assert.deepStrictEqual(prependAll(9)([1, 2, 3, 4]), [9, 1, 9, 2, 9, 3, 9, 4])
 *
 * @category combinators
 * @since 2.10.0
 */
var prependAll = function (middle) { return function (as) {
    var out = [middle, as[0]];
    for (var i = 1; i < as.length; i++) {
        out.push(middle, as[i]);
    }
    return out;
}; };
exports.prependAll = prependAll;
/**
 * Places an element in between members of an array
 *
 * @example
 * import { intersperse } from 'fp-ts/NonEmptyArray'
 *
 * assert.deepStrictEqual(intersperse(9)([1, 2, 3, 4]), [1, 9, 2, 9, 3, 9, 4])
 *
 * @category combinators
 * @since 2.9.0
 */
var intersperse = function (middle) { return function (as) {
    var rest = exports.tail(as);
    return exports.isNonEmpty(rest) ? function_1.pipe(rest, exports.prependAll(middle), exports.prepend(exports.head(as))) : exports.copy(as);
}; };
exports.intersperse = intersperse;
/**
 * @category combinators
 * @since 2.0.0
 */
exports.foldMapWithIndex = RNEA.foldMapWithIndex;
/**
 * @category combinators
 * @since 2.0.0
 */
exports.foldMap = RNEA.foldMap;
/**
 * @category combinators
 * @since 2.10.0
 */
var chainWithIndex = function (f) { return function (as) {
    var out = exports.fromReadonlyNonEmptyArray(f(0, exports.head(as)));
    for (var i = 1; i < as.length; i++) {
        out.push.apply(out, f(i, as[i]));
    }
    return out;
}; };
exports.chainWithIndex = chainWithIndex;
/**
 * @category combinators
 * @since 2.10.0
 */
var chop = function (f) { return function (as) {
    var _a = f(as), b = _a[0], rest = _a[1];
    var out = [b];
    var next = rest;
    while (exports.isNonEmpty(next)) {
        var _b = f(next), b_1 = _b[0], rest_2 = _b[1];
        out.push(b_1);
        next = rest_2;
    }
    return out;
}; };
exports.chop = chop;
/**
 * Splits a `NonEmptyArray` into two pieces, the first piece has max `n` elements.
 *
 * @category combinators
 * @since 2.10.0
 */
var splitAt = function (n) { return function (as) {
    var m = Math.max(1, n);
    return m >= as.length ? [exports.copy(as), []] : [function_1.pipe(as.slice(1, m), exports.prepend(exports.head(as))), as.slice(m)];
}; };
exports.splitAt = splitAt;
/**
 * @category combinators
 * @since 2.10.0
 */
var chunksOf = function (n) { return exports.chop(exports.splitAt(n)); };
exports.chunksOf = chunksOf;
// -------------------------------------------------------------------------------------
// non-pipeables
// -------------------------------------------------------------------------------------
/* istanbul ignore next */
var _map = function (fa, f) { return function_1.pipe(fa, exports.map(f)); };
/* istanbul ignore next */
var _mapWithIndex = function (fa, f) { return function_1.pipe(fa, exports.mapWithIndex(f)); };
/* istanbul ignore next */
var _ap = function (fab, fa) { return function_1.pipe(fab, exports.ap(fa)); };
/* istanbul ignore next */
var _chain = function (ma, f) { return function_1.pipe(ma, exports.chain(f)); };
/* istanbul ignore next */
var _extend = function (wa, f) { return function_1.pipe(wa, exports.extend(f)); };
/* istanbul ignore next */
var _reduce = function (fa, b, f) { return function_1.pipe(fa, exports.reduce(b, f)); };
/* istanbul ignore next */
var _foldMap = function (M) {
    var foldMapM = exports.foldMap(M);
    return function (fa, f) { return function_1.pipe(fa, foldMapM(f)); };
};
/* istanbul ignore next */
var _reduceRight = function (fa, b, f) { return function_1.pipe(fa, exports.reduceRight(b, f)); };
/* istanbul ignore next */
var _traverse = function (F) {
    var traverseF = exports.traverse(F);
    return function (ta, f) { return function_1.pipe(ta, traverseF(f)); };
};
/* istanbul ignore next */
var _alt = function (fa, that) { return function_1.pipe(fa, exports.alt(that)); };
/* istanbul ignore next */
var _reduceWithIndex = function (fa, b, f) {
    return function_1.pipe(fa, exports.reduceWithIndex(b, f));
};
/* istanbul ignore next */
var _foldMapWithIndex = function (M) {
    var foldMapWithIndexM = exports.foldMapWithIndex(M);
    return function (fa, f) { return function_1.pipe(fa, foldMapWithIndexM(f)); };
};
/* istanbul ignore next */
var _reduceRightWithIndex = function (fa, b, f) {
    return function_1.pipe(fa, exports.reduceRightWithIndex(b, f));
};
/* istanbul ignore next */
var _traverseWithIndex = function (F) {
    var traverseWithIndexF = exports.traverseWithIndex(F);
    return function (ta, f) { return function_1.pipe(ta, traverseWithIndexF(f)); };
};
// -------------------------------------------------------------------------------------
// type class members
// -------------------------------------------------------------------------------------
/**
 * Less strict version of [`alt`](#alt).
 *
 * @category Alt
 * @since 2.9.0
 */
var altW = function (that) { return function (as) {
    return concat(as, that());
}; };
exports.altW = altW;
/**
 * Identifies an associative operation on a type constructor. It is similar to `Semigroup`, except that it applies to
 * types of kind `* -> *`.
 *
 * @category Alt
 * @since 2.6.2
 */
exports.alt = exports.altW;
/**
 * Apply a function to an argument under a type constructor.
 *
 * @category Apply
 * @since 2.0.0
 */
var ap = function (as) {
    return exports.chain(function (f) { return function_1.pipe(as, exports.map(f)); });
};
exports.ap = ap;
/**
 * Composes computations in sequence, using the return value of one computation to determine the next computation.
 *
 * @category Monad
 * @since 2.0.0
 */
var chain = function (f) {
    return exports.chainWithIndex(function (_, a) { return f(a); });
};
exports.chain = chain;
/**
 * @category Extend
 * @since 2.0.0
 */
var extend = function (f) { return function (as) {
    var next = exports.tail(as);
    var out = [f(as)];
    while (exports.isNonEmpty(next)) {
        out.push(f(next));
        next = exports.tail(next);
    }
    return out;
}; };
exports.extend = extend;
/**
 * Derivable from `Extend`.
 *
 * @category combinators
 * @since 2.5.0
 */
exports.duplicate = 
/*#__PURE__*/
exports.extend(function_1.identity);
/**
 * Derivable from `Chain`.
 *
 * @category combinators
 * @since 2.5.0
 */
exports.flatten = 
/*#__PURE__*/
exports.chain(function_1.identity);
/**
 * `map` can be used to turn functions `(a: A) => B` into functions `(fa: F<A>) => F<B>` whose argument and return types
 * use the type constructor `F` to represent some computational context.
 *
 * @category Functor
 * @since 2.0.0
 */
var map = function (f) { return exports.mapWithIndex(function (_, a) { return f(a); }); };
exports.map = map;
/**
 * @category FunctorWithIndex
 * @since 2.0.0
 */
var mapWithIndex = function (f) { return function (as) {
    var out = [f(0, exports.head(as))];
    for (var i = 1; i < as.length; i++) {
        out.push(f(i, as[i]));
    }
    return out;
}; };
exports.mapWithIndex = mapWithIndex;
/**
 * @category Foldable
 * @since 2.0.0
 */
exports.reduce = RNEA.reduce;
/**
 * @category FoldableWithIndex
 * @since 2.0.0
 */
exports.reduceWithIndex = RNEA.reduceWithIndex;
/**
 * @category Foldable
 * @since 2.0.0
 */
exports.reduceRight = RNEA.reduceRight;
/**
 * @category FoldableWithIndex
 * @since 2.0.0
 */
exports.reduceRightWithIndex = RNEA.reduceRightWithIndex;
/**
 * @since 2.6.3
 */
var traverse = function (F) {
    var traverseWithIndexF = exports.traverseWithIndex(F);
    return function (f) { return traverseWithIndexF(function (_, a) { return f(a); }); };
};
exports.traverse = traverse;
/**
 * @since 2.6.3
 */
var sequence = function (F) { return exports.traverseWithIndex(F)(function (_, a) { return a; }); };
exports.sequence = sequence;
/**
 * @since 2.6.3
 */
var traverseWithIndex = function (F) { return function (f) { return function (as) {
    var out = F.map(f(0, exports.head(as)), exports.of);
    for (var i = 1; i < as.length; i++) {
        out = F.ap(F.map(out, function (bs) { return function (b) { return function_1.pipe(bs, exports.append(b)); }; }), f(i, as[i]));
    }
    return out;
}; }; };
exports.traverseWithIndex = traverseWithIndex;
/**
 * @since 2.7.0
 */
exports.extract = RNEA.head;
// -------------------------------------------------------------------------------------
// instances
// -------------------------------------------------------------------------------------
/**
 * @category instances
 * @since 2.0.0
 */
exports.URI = 'NonEmptyArray';
/**
 * @category instances
 * @since 2.0.0
 */
exports.getShow = RNEA.getShow;
/**
 * Builds a `Semigroup` instance for `NonEmptyArray`
 *
 * @category instances
 * @since 2.0.0
 */
var getSemigroup = function () { return ({
    concat: concat
}); };
exports.getSemigroup = getSemigroup;
/**
 * @example
 * import { getEq } from 'fp-ts/NonEmptyArray'
 * import * as N from 'fp-ts/number'
 *
 * const E = getEq(N.Eq)
 * assert.strictEqual(E.equals([1, 2], [1, 2]), true)
 * assert.strictEqual(E.equals([1, 2], [1, 3]), false)
 *
 * @category instances
 * @since 2.0.0
 */
exports.getEq = RNEA.getEq;
/**
 * @category instances
 * @since 2.7.0
 */
exports.Functor = {
    URI: exports.URI,
    map: _map
};
/**
 * Derivable from `Functor`.
 *
 * @category combinators
 * @since 2.10.0
 */
exports.flap = 
/*#_PURE_*/
Functor_1.flap(exports.Functor);
/**
 * @category instances
 * @since 2.10.0
 */
exports.Pointed = {
    URI: exports.URI,
    of: exports.of
};
/**
 * @category instances
 * @since 2.7.0
 */
exports.FunctorWithIndex = {
    URI: exports.URI,
    map: _map,
    mapWithIndex: _mapWithIndex
};
/**
 * @category instances
 * @since 2.10.0
 */
exports.Apply = {
    URI: exports.URI,
    map: _map,
    ap: _ap
};
/**
 * Combine two effectful actions, keeping only the result of the first.
 *
 * Derivable from `Apply`.
 *
 * @category combinators
 * @since 2.5.0
 */
exports.apFirst = 
/*#__PURE__*/
Apply_1.apFirst(exports.Apply);
/**
 * Combine two effectful actions, keeping only the result of the second.
 *
 * Derivable from `Apply`.
 *
 * @category combinators
 * @since 2.5.0
 */
exports.apSecond = 
/*#__PURE__*/
Apply_1.apSecond(exports.Apply);
/**
 * @category instances
 * @since 2.7.0
 */
exports.Applicative = {
    URI: exports.URI,
    map: _map,
    ap: _ap,
    of: exports.of
};
/**
 * @category instances
 * @since 2.10.0
 */
exports.Chain = {
    URI: exports.URI,
    map: _map,
    ap: _ap,
    chain: _chain
};
/**
 * Composes computations in sequence, using the return value of one computation to determine the next computation and
 * keeping only the result of the first.
 *
 * Derivable from `Chain`.
 *
 * @category combinators
 * @since 2.5.0
 */
exports.chainFirst = 
/*#__PURE__*/
Chain_1.chainFirst(exports.Chain);
/**
 * @category instances
 * @since 2.7.0
 */
exports.Monad = {
    URI: exports.URI,
    map: _map,
    ap: _ap,
    of: exports.of,
    chain: _chain
};
/**
 * @category instances
 * @since 2.7.0
 */
exports.Foldable = {
    URI: exports.URI,
    reduce: _reduce,
    foldMap: _foldMap,
    reduceRight: _reduceRight
};
/**
 * @category instances
 * @since 2.7.0
 */
exports.FoldableWithIndex = {
    URI: exports.URI,
    reduce: _reduce,
    foldMap: _foldMap,
    reduceRight: _reduceRight,
    reduceWithIndex: _reduceWithIndex,
    foldMapWithIndex: _foldMapWithIndex,
    reduceRightWithIndex: _reduceRightWithIndex
};
/**
 * @category instances
 * @since 2.7.0
 */
exports.Traversable = {
    URI: exports.URI,
    map: _map,
    reduce: _reduce,
    foldMap: _foldMap,
    reduceRight: _reduceRight,
    traverse: _traverse,
    sequence: exports.sequence
};
/**
 * @category instances
 * @since 2.7.0
 */
exports.TraversableWithIndex = {
    URI: exports.URI,
    map: _map,
    mapWithIndex: _mapWithIndex,
    reduce: _reduce,
    foldMap: _foldMap,
    reduceRight: _reduceRight,
    traverse: _traverse,
    sequence: exports.sequence,
    reduceWithIndex: _reduceWithIndex,
    foldMapWithIndex: _foldMapWithIndex,
    reduceRightWithIndex: _reduceRightWithIndex,
    traverseWithIndex: _traverseWithIndex
};
/**
 * @category instances
 * @since 2.7.0
 */
exports.Alt = {
    URI: exports.URI,
    map: _map,
    alt: _alt
};
/**
 * @category instances
 * @since 2.7.0
 */
exports.Comonad = {
    URI: exports.URI,
    map: _map,
    extend: _extend,
    extract: exports.extract
};
// -------------------------------------------------------------------------------------
// do notation
// -------------------------------------------------------------------------------------
/**
 * @since 2.9.0
 */
exports.Do = 
/*#__PURE__*/
exports.of({});
/**
 * @since 2.8.0
 */
exports.bindTo = 
/*#__PURE__*/
Functor_1.bindTo(exports.Functor);
/**
 * @since 2.8.0
 */
exports.bind = 
/*#__PURE__*/
Chain_1.bind(exports.Chain);
// -------------------------------------------------------------------------------------
// pipeable sequence S
// -------------------------------------------------------------------------------------
/**
 * @since 2.8.0
 */
exports.apS = 
/*#__PURE__*/
Apply_1.apS(exports.Apply);
// -------------------------------------------------------------------------------------
// utils
// -------------------------------------------------------------------------------------
/**
 * @since 2.0.0
 */
exports.head = RNEA.head;
/**
 * @since 2.0.0
 */
var tail = function (as) { return as.slice(1); };
exports.tail = tail;
/**
 * @since 2.0.0
 */
exports.last = RNEA.last;
/**
 * Get all but the last element of a non empty array, creating a new array.
 *
 * @example
 * import { init } from 'fp-ts/NonEmptyArray'
 *
 * assert.deepStrictEqual(init([1, 2, 3]), [1, 2])
 * assert.deepStrictEqual(init([1]), [])
 *
 * @since 2.2.0
 */
var init = function (as) { return as.slice(0, -1); };
exports.init = init;
/**
 * @since 2.0.0
 */
exports.min = RNEA.min;
/**
 * @since 2.0.0
 */
exports.max = RNEA.max;
/**
 * @since 2.10.0
 */
var concatAll = function (S) { return function (as) { return as.reduce(S.concat); }; };
exports.concatAll = concatAll;
function filter(predicate) {
    // tslint:disable-next-line: deprecation
    return exports.filterWithIndex(function (_, a) { return predicate(a); });
}
exports.filter = filter;
/**
 * Use [`filterWithIndex`](./Array.ts.html#filterWithIndex) instead.
 *
 * @category combinators
 * @since 2.0.0
 * @deprecated
 */
var filterWithIndex = function (predicate) { return function (as) { return exports.fromArray(as.filter(function (a, i) { return predicate(i, a); })); }; };
exports.filterWithIndex = filterWithIndex;
/**
 * Use [`unprepend`](#unprepend) instead.
 *
 * @category destructors
 * @since 2.9.0
 * @deprecated
 */
exports.uncons = exports.unprepend;
/**
 * Use [`unappend`](#unappend) instead.
 *
 * @category destructors
 * @since 2.9.0
 * @deprecated
 */
exports.unsnoc = exports.unappend;
function cons(head, tail) {
    return tail === undefined ? exports.prepend(head) : function_1.pipe(tail, exports.prepend(head));
}
exports.cons = cons;
/**
 * Use [`append`](./Array.ts.html#append) instead.
 *
 * @category constructors
 * @since 2.0.0
 * @deprecated
 */
var snoc = function (init, end) { return function_1.pipe(init, exports.append(end)); };
exports.snoc = snoc;
/**
 * Use [`prependAll`](#prependall) instead.
 *
 * @category combinators
 * @since 2.9.0
 * @deprecated
 */
exports.prependToAll = exports.prependAll;
/**
 * Use [`concatAll`](#concatall) instead.
 *
 * @since 2.5.0
 * @deprecated
 */
exports.fold = RNEA.concatAll;
/**
 * Use small, specific instances instead.
 *
 * @category instances
 * @since 2.0.0
 * @deprecated
 */
exports.nonEmptyArray = {
    URI: exports.URI,
    of: exports.of,
    map: _map,
    mapWithIndex: _mapWithIndex,
    ap: _ap,
    chain: _chain,
    extend: _extend,
    extract: exports.extract,
    reduce: _reduce,
    foldMap: _foldMap,
    reduceRight: _reduceRight,
    traverse: _traverse,
    sequence: exports.sequence,
    reduceWithIndex: _reduceWithIndex,
    foldMapWithIndex: _foldMapWithIndex,
    reduceRightWithIndex: _reduceRightWithIndex,
    traverseWithIndex: _traverseWithIndex,
    alt: _alt
};

},{"./Apply":"../node_modules/fp-ts/lib/Apply.js","./Chain":"../node_modules/fp-ts/lib/Chain.js","./function":"../node_modules/fp-ts/lib/function.js","./Functor":"../node_modules/fp-ts/lib/Functor.js","./internal":"../node_modules/fp-ts/lib/internal.js","./Option":"../node_modules/fp-ts/lib/Option.js","./Ord":"../node_modules/fp-ts/lib/Ord.js","./ReadonlyNonEmptyArray":"../node_modules/fp-ts/lib/ReadonlyNonEmptyArray.js"}],"../node_modules/fp-ts/lib/Bounded.js":[function(require,module,exports) {
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.boundedNumber = void 0;
/**
 * The `Bounded` type class represents totally ordered types that have an upper and lower boundary.
 *
 * Instances should satisfy the following law in addition to the `Ord` laws:
 *
 * - Bounded: `bottom <= a <= top`
 *
 * @since 2.0.0
 */
var Ord_1 = require("./Ord");
// -------------------------------------------------------------------------------------
// deprecated
// -------------------------------------------------------------------------------------
/**
 * Use [`Bounded`](./number.ts.html#Bounded) instead.
 *
 * @category instances
 * @since 2.0.0
 * @deprecated
 */
exports.boundedNumber = {
    // tslint:disable-next-line: deprecation
    equals: Ord_1.ordNumber.equals,
    // tslint:disable-next-line: deprecation
    compare: Ord_1.ordNumber.compare,
    top: Infinity,
    bottom: -Infinity
};

},{"./Ord":"../node_modules/fp-ts/lib/Ord.js"}],"../node_modules/fp-ts/lib/Field.js":[function(require,module,exports) {
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.fieldNumber = exports.lcm = exports.gcd = void 0;
// -------------------------------------------------------------------------------------
// utils
// -------------------------------------------------------------------------------------
/**
 * The *greatest common divisor* of two values
 *
 * @since 2.0.0
 */
function gcd(E, field) {
    var zero = field.zero;
    var f = function (x, y) { return (E.equals(y, zero) ? x : f(y, field.mod(x, y))); };
    return f;
}
exports.gcd = gcd;
/**
 * The *least common multiple* of two values
 *
 * @since 2.0.0
 */
function lcm(E, F) {
    var zero = F.zero;
    var gcdSF = gcd(E, F);
    return function (x, y) { return (E.equals(x, zero) || E.equals(y, zero) ? zero : F.div(F.mul(x, y), gcdSF(x, y))); };
}
exports.lcm = lcm;
// -------------------------------------------------------------------------------------
// deprecated
// -------------------------------------------------------------------------------------
/**
 * Use [`Field`](./number.ts.html#Field) instead.
 *
 * @category instances
 * @since 2.0.0
 * @deprecated
 */
exports.fieldNumber = {
    add: function (x, y) { return x + y; },
    zero: 0,
    mul: function (x, y) { return x * y; },
    one: 1,
    sub: function (x, y) { return x - y; },
    degree: function (_) { return 1; },
    div: function (x, y) { return x / y; },
    mod: function (x, y) { return x % y; }
};

},{}],"../node_modules/fp-ts/lib/Show.js":[function(require,module,exports) {
"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.showNumber = exports.showString = exports.showBoolean = exports.getStructShow = exports.getTupleShow = exports.tuple = exports.struct = void 0;
/**
 * The `Show` type class represents those types which can be converted into
 * a human-readable `string` representation.
 *
 * While not required, it is recommended that for any expression `x`, the
 * string `show(x)` be executable TypeScript code which evaluates to the same
 * value as the expression `x`.
 *
 * @since 2.0.0
 */
var _ = __importStar(require("./internal"));
// -------------------------------------------------------------------------------------
// combinators
// -------------------------------------------------------------------------------------
/**
 * @category combinators
 * @since 2.10.0
 */
var struct = function (shows) { return ({
    show: function (a) {
        var s = '{';
        for (var k in shows) {
            if (_.has.call(shows, k)) {
                s += " " + k + ": " + shows[k].show(a[k]) + ",";
            }
        }
        if (s.length > 1) {
            s = s.slice(0, -1) + ' ';
        }
        s += '}';
        return s;
    }
}); };
exports.struct = struct;
/**
 * @category combinators
 * @since 2.10.0
 */
var tuple = function () {
    var shows = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        shows[_i] = arguments[_i];
    }
    return ({
        show: function (t) { return "[" + t.map(function (a, i) { return shows[i].show(a); }).join(', ') + "]"; }
    });
};
exports.tuple = tuple;
// -------------------------------------------------------------------------------------
// deprecated
// -------------------------------------------------------------------------------------
/**
 * Use [`tuple`](#tuple) instead.
 *
 * @category combinators
 * @since 2.0.0
 * @deprecated
 */
exports.getTupleShow = exports.tuple;
/**
 * Use [`struct`](#struct) instead.
 *
 * @category combinators
 * @since 2.0.0
 * @deprecated
 */
exports.getStructShow = exports.struct;
/**
 * Use [`Show`](./boolean.ts.html#Show) instead.
 *
 * @category instances
 * @since 2.0.0
 * @deprecated
 */
exports.showBoolean = {
    show: function (a) { return JSON.stringify(a); }
};
/**
 * Use [`Show`](./string.ts.html#Show) instead.
 *
 * @category instances
 * @since 2.0.0
 * @deprecated
 */
exports.showString = {
    show: function (a) { return JSON.stringify(a); }
};
/**
 * Use [`Show`](./number.ts.html#Show) instead.
 *
 * @category instances
 * @since 2.0.0
 * @deprecated
 */
exports.showNumber = {
    show: function (a) { return JSON.stringify(a); }
};

},{"./internal":"../node_modules/fp-ts/lib/internal.js"}],"../node_modules/fp-ts/lib/Monoid.js":[function(require,module,exports) {
"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.monoidProduct = exports.monoidSum = exports.monoidString = exports.getEndomorphismMonoid = exports.getFunctionMonoid = exports.monoidAny = exports.monoidAll = exports.fold = exports.getMeetMonoid = exports.getJoinMonoid = exports.getDualMonoid = exports.getStructMonoid = exports.getTupleMonoid = exports.concatAll = exports.monoidVoid = exports.tuple = exports.struct = exports.reverse = exports.max = exports.min = void 0;
var function_1 = require("./function");
var _ = __importStar(require("./internal"));
var Se = __importStar(require("./Semigroup"));
// -------------------------------------------------------------------------------------
// constructors
// -------------------------------------------------------------------------------------
/**
 * Get a monoid where `concat` will return the minimum, based on the provided bounded order.
 *
 * The `empty` value is the `top` value.
 *
 * @example
 * import * as N from 'fp-ts/number'
 * import * as M from 'fp-ts/Monoid'
 *
 * const M1 = M.min(N.Bounded)
 *
 * assert.deepStrictEqual(M1.concat(1, 2), 1)
 *
 * @category constructors
 * @since 2.10.0
 */
var min = function (B) { return ({
    concat: Se.min(B).concat,
    empty: B.top
}); };
exports.min = min;
/**
 * Get a monoid where `concat` will return the maximum, based on the provided bounded order.
 *
 * The `empty` value is the `bottom` value.
 *
 * @example
 * import * as N from 'fp-ts/number'
 * import * as M from 'fp-ts/Monoid'
 *
 * const M1 = M.max(N.Bounded)
 *
 * assert.deepStrictEqual(M1.concat(1, 2), 2)
 *
 * @category constructors
 * @since 2.10.0
 */
var max = function (B) { return ({
    concat: Se.max(B).concat,
    empty: B.bottom
}); };
exports.max = max;
// -------------------------------------------------------------------------------------
// combinators
// -------------------------------------------------------------------------------------
/**
 * The dual of a `Monoid`, obtained by swapping the arguments of `concat`.
 *
 * @example
 * import { reverse } from 'fp-ts/Monoid'
 * import * as S from 'fp-ts/string'
 *
 * assert.deepStrictEqual(reverse(S.Monoid).concat('a', 'b'), 'ba')
 *
 * @category combinators
 * @since 2.10.0
 */
var reverse = function (M) { return ({
    concat: Se.reverse(M).concat,
    empty: M.empty
}); };
exports.reverse = reverse;
/**
 * Given a struct of monoids returns a monoid for the struct.
 *
 * @example
 * import { struct } from 'fp-ts/Monoid'
 * import * as N from 'fp-ts/number'
 *
 * interface Point {
 *   readonly x: number
 *   readonly y: number
 * }
 *
 * const M = struct<Point>({
 *   x: N.MonoidSum,
 *   y: N.MonoidSum
 * })
 *
 * assert.deepStrictEqual(M.concat({ x: 1, y: 2 }, { x: 3, y: 4 }), { x: 4, y: 6 })
 *
 * @category combinators
 * @since 2.10.0
 */
var struct = function (monoids) {
    var empty = {};
    for (var k in monoids) {
        if (_.has.call(monoids, k)) {
            empty[k] = monoids[k].empty;
        }
    }
    return {
        concat: Se.struct(monoids).concat,
        empty: empty
    };
};
exports.struct = struct;
/**
 * Given a tuple of monoids returns a monoid for the tuple.
 *
 * @example
 * import { tuple } from 'fp-ts/Monoid'
 * import * as B from 'fp-ts/boolean'
 * import * as N from 'fp-ts/number'
 * import * as S from 'fp-ts/string'
 *
 * const M1 = tuple(S.Monoid, N.MonoidSum)
 * assert.deepStrictEqual(M1.concat(['a', 1], ['b', 2]), ['ab', 3])
 *
 * const M2 = tuple(S.Monoid, N.MonoidSum, B.MonoidAll)
 * assert.deepStrictEqual(M2.concat(['a', 1, true], ['b', 2, false]), ['ab', 3, false])
 *
 * @category combinators
 * @since 2.10.0
 */
var tuple = function () {
    var monoids = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        monoids[_i] = arguments[_i];
    }
    return ({
        concat: Se.tuple.apply(Se, monoids).concat,
        empty: monoids.map(function (m) { return m.empty; })
    });
};
exports.tuple = tuple;
/**
 * @category instances
 * @since 2.0.0
 */
exports.monoidVoid = {
    concat: Se.semigroupVoid.concat,
    empty: undefined
};
// -------------------------------------------------------------------------------------
// utils
// -------------------------------------------------------------------------------------
/**
 * Given a sequence of `as`, concat them and return the total.
 *
 * If `as` is empty, return the monoid `empty` value.
 *
 * @example
 * import { concatAll } from 'fp-ts/Monoid'
 * import * as N from 'fp-ts/number'
 *
 * assert.deepStrictEqual(concatAll(N.MonoidSum)([1, 2, 3]), 6)
 * assert.deepStrictEqual(concatAll(N.MonoidSum)([]), 0)
 *
 * @since 2.10.0
 */
var concatAll = function (M) { return Se.concatAll(M)(M.empty); };
exports.concatAll = concatAll;
// -------------------------------------------------------------------------------------
// deprecated
// -------------------------------------------------------------------------------------
/**
 * Use [`tuple`](#tuple) instead.
 *
 * @category combinators
 * @since 2.0.0
 * @deprecated
 */
exports.getTupleMonoid = exports.tuple;
/**
 * Use [`struct`](#struct) instead.
 *
 * @category combinators
 * @since 2.0.0
 * @deprecated
 */
exports.getStructMonoid = exports.struct;
/**
 * Use [`reverse`](#reverse) instead.
 *
 * @category combinators
 * @since 2.0.0
 * @deprecated
 */
exports.getDualMonoid = exports.reverse;
/**
 * Use [`max`](#max) instead.
 *
 * @category constructors
 * @since 2.0.0
 * @deprecated
 */
exports.getJoinMonoid = exports.max;
/**
 * Use [`min`](#min) instead.
 *
 * @category constructors
 * @since 2.0.0
 * @deprecated
 */
exports.getMeetMonoid = exports.min;
/**
 * Use [`concatAll`](#concatall) instead.
 *
 * @since 2.0.0
 * @deprecated
 */
exports.fold = exports.concatAll;
/**
 * Use [`MonoidAll`](./boolean.ts.html#monoidall) instead.
 *
 * @category instances
 * @since 2.0.0
 * @deprecated
 */
exports.monoidAll = {
    // tslint:disable-next-line: deprecation
    concat: Se.semigroupAll.concat,
    empty: true
};
/**
 * Use [`MonoidAny`](./boolean.ts.html#MonoidAny) instead.
 *
 * @category instances
 * @since 2.0.0
 * @deprecated
 */
exports.monoidAny = {
    // tslint:disable-next-line: deprecation
    concat: Se.semigroupAny.concat,
    empty: false
};
/**
 * Use [`getMonoid`](./function.ts.html#getMonoid) instead.
 *
 * @category instances
 * @since 2.0.0
 * @deprecated
 */
exports.getFunctionMonoid = function_1.getMonoid;
/**
 * Use [`getEndomorphismMonoid`](./function.ts.html#getEndomorphismMonoid) instead.
 *
 * **Note**. The execution order in [`getEndomorphismMonoid`](./function.ts.html#getEndomorphismMonoid) is reversed.
 *
 * @category instances
 * @since 2.0.0
 * @deprecated
 */
var getEndomorphismMonoid = function () { return exports.reverse(function_1.getEndomorphismMonoid()); };
exports.getEndomorphismMonoid = getEndomorphismMonoid;
/**
 * Use [`Monoid`](./string.ts.html#Monoid) instead.
 *
 * @category instances
 * @since 2.0.0
 * @deprecated
 */
exports.monoidString = {
    // tslint:disable-next-line: deprecation
    concat: Se.semigroupString.concat,
    empty: ''
};
/**
 * Use [`MonoidSum`](./number.ts.html#MonoidSum) instead.
 *
 * @category instances
 * @since 2.0.0
 * @deprecated
 */
exports.monoidSum = {
    // tslint:disable-next-line: deprecation
    concat: Se.semigroupSum.concat,
    empty: 0
};
/**
 * Use [`MonoidProduct`](./number.ts.html#MonoidProduct) instead.
 *
 * @category instances
 * @since 2.0.0
 * @deprecated
 */
exports.monoidProduct = {
    // tslint:disable-next-line: deprecation
    concat: Se.semigroupProduct.concat,
    empty: 1
};

},{"./function":"../node_modules/fp-ts/lib/function.js","./internal":"../node_modules/fp-ts/lib/internal.js","./Semigroup":"../node_modules/fp-ts/lib/Semigroup.js"}],"../node_modules/fp-ts/lib/number.js":[function(require,module,exports) {
"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.MonoidProduct = exports.MonoidSum = exports.SemigroupProduct = exports.SemigroupSum = exports.Show = exports.Field = exports.Bounded = exports.Ord = exports.Eq = void 0;
/**
 * @since 2.10.0
 */
var B = __importStar(require("./Bounded"));
var E = __importStar(require("./Eq"));
var F = __importStar(require("./Field"));
var O = __importStar(require("./Ord"));
var S = __importStar(require("./Show"));
var Semigroup_1 = require("./Semigroup");
var Monoid_1 = require("./Monoid");
/**
 * @category instances
 * @since 2.10.0
 */
// tslint:disable-next-line: deprecation
exports.Eq = E.eqNumber;
/**
 * @category instances
 * @since 2.10.0
 */
// tslint:disable-next-line: deprecation
exports.Ord = O.ordNumber;
/**
 * @category instances
 * @since 2.10.0
 */
// tslint:disable-next-line: deprecation
exports.Bounded = B.boundedNumber;
/**
 * @category instances
 * @since 2.10.0
 */
// tslint:disable-next-line: deprecation
exports.Field = F.fieldNumber;
/**
 * @category instances
 * @since 2.10.0
 */
// tslint:disable-next-line: deprecation
exports.Show = S.showNumber;
/**
 * `number` semigroup under addition.
 *
 * @example
 * import { SemigroupSum } from 'fp-ts/number'
 *
 * assert.deepStrictEqual(SemigroupSum.concat(2, 3), 5)
 *
 * @category instances
 * @since 2.10.0
 */
// tslint:disable-next-line: deprecation
exports.SemigroupSum = Semigroup_1.semigroupSum;
/**
 * `number` semigroup under multiplication.
 *
 * @example
 * import { SemigroupProduct } from 'fp-ts/number'
 *
 * assert.deepStrictEqual(SemigroupProduct.concat(2, 3), 6)
 *
 * @category instances
 * @since 2.10.0
 */
// tslint:disable-next-line: deprecation
exports.SemigroupProduct = Semigroup_1.semigroupProduct;
/**
 * `number` monoid under addition.
 *
 * The `empty` value is `0`.
 *
 * @example
 * import { MonoidSum } from 'fp-ts/number'
 *
 * assert.deepStrictEqual(MonoidSum.concat(2, MonoidSum.empty), 2)
 *
 * @category instances
 * @since 2.10.0
 */
// tslint:disable-next-line: deprecation
exports.MonoidSum = Monoid_1.monoidSum;
/**
 * `number` monoid under multiplication.
 *
 * The `empty` value is `1`.
 *
 * @example
 * import { MonoidProduct } from 'fp-ts/number'
 *
 * assert.deepStrictEqual(MonoidProduct.concat(2, MonoidProduct.empty), 2)
 *
 * @category instances
 * @since 2.10.0
 */
// tslint:disable-next-line: deprecation
exports.MonoidProduct = Monoid_1.monoidProduct;

},{"./Bounded":"../node_modules/fp-ts/lib/Bounded.js","./Eq":"../node_modules/fp-ts/lib/Eq.js","./Field":"../node_modules/fp-ts/lib/Field.js","./Ord":"../node_modules/fp-ts/lib/Ord.js","./Show":"../node_modules/fp-ts/lib/Show.js","./Semigroup":"../node_modules/fp-ts/lib/Semigroup.js","./Monoid":"../node_modules/fp-ts/lib/Monoid.js"}],"../node_modules/fp-ts/lib/ReadonlyArray.js":[function(require,module,exports) {
"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.uniq = exports.elem = exports.rotate = exports.intersperse = exports.prependAll = exports.unzip = exports.zip = exports.zipWith = exports.sort = exports.lefts = exports.rights = exports.reverse = exports.modifyAt = exports.deleteAt = exports.updateAt = exports.insertAt = exports.findLastIndex = exports.findLastMap = exports.findLast = exports.findFirstMap = exports.findFirst = exports.findIndex = exports.dropLeftWhile = exports.dropRight = exports.dropLeft = exports.spanLeft = exports.takeLeftWhile = exports.takeRight = exports.takeLeft = exports.init = exports.tail = exports.last = exports.head = exports.lookup = exports.isOutOfBound = exports.size = exports.isNonEmpty = exports.isEmpty = exports.scanRight = exports.scanLeft = exports.chainWithIndex = exports.foldRight = exports.matchRight = exports.foldLeft = exports.matchLeft = exports.replicate = exports.range = exports.makeBy = exports.append = exports.prepend = void 0;
exports.Pointed = exports.flap = exports.Functor = exports.getOrd = exports.getEq = exports.getMonoid = exports.getSemigroup = exports.getShow = exports.URI = exports.unfold = exports.wilt = exports.wither = exports.traverseWithIndex = exports.sequence = exports.traverse = exports.reduceRightWithIndex = exports.reduceRight = exports.reduceWithIndex = exports.foldMap = exports.reduce = exports.foldMapWithIndex = exports.duplicate = exports.extend = exports.filterWithIndex = exports.partitionMapWithIndex = exports.partitionMap = exports.partitionWithIndex = exports.partition = exports.compact = exports.filterMap = exports.filterMapWithIndex = exports.filter = exports.separate = exports.mapWithIndex = exports.map = exports.flatten = exports.chain = exports.ap = exports.alt = exports.altW = exports.zero = exports.of = exports.difference = exports.intersection = exports.union = exports.comprehension = exports.chunksOf = exports.splitAt = exports.chop = exports.sortBy = void 0;
exports.readonlyArray = exports.prependToAll = exports.snoc = exports.cons = exports.apS = exports.bind = exports.bindTo = exports.Do = exports.some = exports.every = exports.empty = exports.fromArray = exports.toArray = exports.unsafeDeleteAt = exports.unsafeUpdateAt = exports.unsafeInsertAt = exports.Witherable = exports.TraversableWithIndex = exports.Traversable = exports.FoldableWithIndex = exports.Foldable = exports.FilterableWithIndex = exports.Filterable = exports.Compactable = exports.Extend = exports.Alternative = exports.Alt = exports.Unfoldable = exports.chainFirst = exports.Monad = exports.Chain = exports.Applicative = exports.apSecond = exports.apFirst = exports.Apply = exports.FunctorWithIndex = void 0;
var Apply_1 = require("./Apply");
var Chain_1 = require("./Chain");
var Eq_1 = require("./Eq");
var function_1 = require("./function");
var Functor_1 = require("./Functor");
var N = __importStar(require("./number"));
var O = __importStar(require("./Option"));
var Ord_1 = require("./Ord");
var RNEA = __importStar(require("./ReadonlyNonEmptyArray"));
var Separated_1 = require("./Separated");
// -------------------------------------------------------------------------------------
// constructors
// -------------------------------------------------------------------------------------
/**
 * Prepend an element to the front of a `ReadonlyArray`, creating a new `ReadonlyNonEmptyArray`.
 *
 * @example
 * import { prepend } from 'fp-ts/ReadonlyArray'
 * import { pipe } from 'fp-ts/function'
 *
 * assert.deepStrictEqual(pipe([2, 3, 4], prepend(1)), [1, 2, 3, 4])
 *
 * @category constructors
 * @since 2.10.0
 */
exports.prepend = RNEA.prepend;
/**
 * Append an element to the end of a `ReadonlyArray`, creating a new `ReadonlyNonEmptyArray`.
 *
 * @example
 * import { append } from 'fp-ts/ReadonlyArray'
 * import { pipe } from 'fp-ts/function'
 *
 * assert.deepStrictEqual(pipe([1, 2, 3], append(4)), [1, 2, 3, 4])
 *
 * @category constructors
 * @since 2.10.0
 */
exports.append = RNEA.append;
/**
 * Return a `ReadonlyArray` of length `n` with element `i` initialized with `f(i)`.
 *
 * **Note**. `n` is normalized to a non negative integer.
 *
 * @example
 * import { makeBy } from 'fp-ts/ReadonlyArray'
 *
 * const double = (n: number): number => n * 2
 * assert.deepStrictEqual(makeBy(5, double), [0, 2, 4, 6, 8])
 *
 * @category constructors
 * @since 2.5.0
 */
var makeBy = function (n, f) { return (n <= 0 ? exports.empty : RNEA.makeBy(n, f)); };
exports.makeBy = makeBy;
/**
 * Create a `ReadonlyArray` containing a range of integers, including both endpoints.
 *
 * @example
 * import { range } from 'fp-ts/ReadonlyArray'
 *
 * assert.deepStrictEqual(range(1, 5), [1, 2, 3, 4, 5])
 *
 * @category constructors
 * @since 2.5.0
 */
var range = function (start, end) {
    return start <= end ? exports.makeBy(end - start + 1, function (i) { return start + i; }) : [start];
};
exports.range = range;
/**
 * Create a `ReadonlyArray` containing a value repeated the specified number of times.
 *
 * **Note**. `n` is normalized to a non negative integer.
 *
 * @example
 * import { replicate } from 'fp-ts/ReadonlyArray'
 *
 * assert.deepStrictEqual(replicate(3, 'a'), ['a', 'a', 'a'])
 *
 * @category constructors
 * @since 2.5.0
 */
var replicate = function (n, a) { return exports.makeBy(n, function () { return a; }); };
exports.replicate = replicate;
// -------------------------------------------------------------------------------------
// destructors
// -------------------------------------------------------------------------------------
/**
 * Break an array into its first element and remaining elements.
 *
 * @example
 * import { matchLeft } from 'fp-ts/ReadonlyArray'
 *
 * const len: <A>(as: ReadonlyArray<A>) => number = matchLeft(() => 0, (_, tail) => 1 + len(tail))
 * assert.strictEqual(len([1, 2, 3]), 3)
 *
 * @category destructors
 * @since 2.10.0
 */
var matchLeft = function (onEmpty, onNonEmpty) { return function (as) { return (exports.isNonEmpty(as) ? onNonEmpty(RNEA.head(as), RNEA.tail(as)) : onEmpty()); }; };
exports.matchLeft = matchLeft;
/**
 * Alias of [`matchLeft`](#matchleft).
 *
 * @category destructors
 * @since 2.5.0
 */
exports.foldLeft = exports.matchLeft;
/**
 * Break an array into its initial elements and the last element.
 *
 * @category destructors
 * @since 2.10.0
 */
var matchRight = function (onEmpty, onNonEmpty) { return function (as) { return (exports.isNonEmpty(as) ? onNonEmpty(RNEA.init(as), RNEA.last(as)) : onEmpty()); }; };
exports.matchRight = matchRight;
/**
 * Alias of [`matchRight`](#matchright).
 *
 * @category destructors
 * @since 2.5.0
 */
exports.foldRight = exports.matchRight;
// -------------------------------------------------------------------------------------
// combinators
// -------------------------------------------------------------------------------------
/**
 * @category combinators
 * @since 2.7.0
 */
var chainWithIndex = function (f) { return function (as) {
    if (exports.isEmpty(as)) {
        return exports.empty;
    }
    var out = [];
    for (var i = 0; i < as.length; i++) {
        out.push.apply(out, f(i, as[i]));
    }
    return out;
}; };
exports.chainWithIndex = chainWithIndex;
/**
 * Same as `reduce` but it carries over the intermediate steps.
 *
 * @example
 * import { scanLeft } from 'fp-ts/ReadonlyArray'
 *
 * assert.deepStrictEqual(scanLeft(10, (b, a: number) => b - a)([1, 2, 3]), [10, 9, 7, 4])
 *
 * @category combinators
 * @since 2.5.0
 */
var scanLeft = function (b, f) { return function (as) {
    var len = as.length;
    var out = new Array(len + 1);
    out[0] = b;
    for (var i = 0; i < len; i++) {
        out[i + 1] = f(out[i], as[i]);
    }
    return out;
}; };
exports.scanLeft = scanLeft;
/**
 * Fold an array from the right, keeping all intermediate results instead of only the final result
 *
 * @example
 * import { scanRight } from 'fp-ts/ReadonlyArray'
 *
 * assert.deepStrictEqual(scanRight(10, (a: number, b) => b - a)([1, 2, 3]), [4, 5, 7, 10])
 *
 * @category combinators
 * @since 2.5.0
 */
var scanRight = function (b, f) { return function (as) {
    var len = as.length;
    var out = new Array(len + 1);
    out[len] = b;
    for (var i = len - 1; i >= 0; i--) {
        out[i] = f(as[i], out[i + 1]);
    }
    return out;
}; };
exports.scanRight = scanRight;
/**
 * Test whether a `ReadonlyArray` is empty.
 *
 * @example
 * import { isEmpty } from 'fp-ts/ReadonlyArray'
 *
 * assert.strictEqual(isEmpty([]), true)
 *
 * @since 2.5.0
 */
var isEmpty = function (as) { return as.length === 0; };
exports.isEmpty = isEmpty;
/**
 * Test whether a `ReadonlyArray` is non empty.
 *
 * @category guards
 * @since 2.5.0
 */
exports.isNonEmpty = RNEA.isNonEmpty;
/**
 * Calculate the number of elements in a `ReadonlyArray`.
 *
 * @since 2.10.0
 */
var size = function (as) { return as.length; };
exports.size = size;
/**
 * Test whether an array contains a particular index
 *
 * @since 2.5.0
 */
exports.isOutOfBound = RNEA.isOutOfBound;
function lookup(i, as) {
    return as === undefined ? function (as) { return lookup(i, as); } : exports.isOutOfBound(i, as) ? O.none : O.some(as[i]);
}
exports.lookup = lookup;
/**
 * Get the first element in an array, or `None` if the array is empty
 *
 * @example
 * import { head } from 'fp-ts/ReadonlyArray'
 * import { some, none } from 'fp-ts/Option'
 *
 * assert.deepStrictEqual(head([1, 2, 3]), some(1))
 * assert.deepStrictEqual(head([]), none)
 *
 * @since 2.5.0
 */
var head = function (as) { return (exports.isNonEmpty(as) ? O.some(RNEA.head(as)) : O.none); };
exports.head = head;
/**
 * Get the last element in an array, or `None` if the array is empty
 *
 * @example
 * import { last } from 'fp-ts/ReadonlyArray'
 * import { some, none } from 'fp-ts/Option'
 *
 * assert.deepStrictEqual(last([1, 2, 3]), some(3))
 * assert.deepStrictEqual(last([]), none)
 *
 * @since 2.5.0
 */
var last = function (as) { return (exports.isNonEmpty(as) ? O.some(RNEA.last(as)) : O.none); };
exports.last = last;
/**
 * Get all but the first element of an array, creating a new array, or `None` if the array is empty
 *
 * @example
 * import { tail } from 'fp-ts/ReadonlyArray'
 * import { some, none } from 'fp-ts/Option'
 *
 * assert.deepStrictEqual(tail([1, 2, 3]), some([2, 3]))
 * assert.deepStrictEqual(tail([]), none)
 *
 * @since 2.5.0
 */
var tail = function (as) {
    return exports.isNonEmpty(as) ? O.some(RNEA.tail(as)) : O.none;
};
exports.tail = tail;
/**
 * Get all but the last element of an array, creating a new array, or `None` if the array is empty
 *
 * @example
 * import { init } from 'fp-ts/ReadonlyArray'
 * import { some, none } from 'fp-ts/Option'
 *
 * assert.deepStrictEqual(init([1, 2, 3]), some([1, 2]))
 * assert.deepStrictEqual(init([]), none)
 *
 * @since 2.5.0
 */
var init = function (as) {
    return exports.isNonEmpty(as) ? O.some(RNEA.init(as)) : O.none;
};
exports.init = init;
/**
 * Keep only a max number of elements from the start of an `ReadonlyArray`, creating a new `ReadonlyArray`.
 *
 * **Note**. `n` is normalized to a non negative integer.
 *
 * @example
 * import * as RA from 'fp-ts/ReadonlyArray'
 * import { pipe } from 'fp-ts/function'
 *
 * const input: ReadonlyArray<number> = [1, 2, 3]
 * assert.deepStrictEqual(pipe(input, RA.takeLeft(2)), [1, 2])
 *
 * // out of bounds
 * assert.strictEqual(pipe(input, RA.takeLeft(4)), input)
 * assert.strictEqual(pipe(input, RA.takeLeft(-1)), input)
 *
 * @category combinators
 * @since 2.5.0
 */
var takeLeft = function (n) { return function (as) {
    return exports.isOutOfBound(n, as) ? as : n === 0 ? exports.empty : as.slice(0, n);
}; };
exports.takeLeft = takeLeft;
/**
 * Keep only a max number of elements from the end of an `ReadonlyArray`, creating a new `ReadonlyArray`.
 *
 * **Note**. `n` is normalized to a non negative integer.
 *
 * @example
 * import * as RA from 'fp-ts/ReadonlyArray'
 * import { pipe } from 'fp-ts/function'
 *
 * const input: ReadonlyArray<number> = [1, 2, 3]
 * assert.deepStrictEqual(pipe(input, RA.takeRight(2)), [2, 3])
 *
 * // out of bounds
 * assert.strictEqual(pipe(input, RA.takeRight(4)), input)
 * assert.strictEqual(pipe(input, RA.takeRight(-1)), input)
 *
 * @since 2.5.0
 */
var takeRight = function (n) { return function (as) {
    return exports.isOutOfBound(n, as) ? as : n === 0 ? exports.empty : as.slice(-n);
}; };
exports.takeRight = takeRight;
function takeLeftWhile(predicate) {
    return function (as) {
        var out = [];
        for (var _i = 0, as_1 = as; _i < as_1.length; _i++) {
            var a = as_1[_i];
            if (!predicate(a)) {
                break;
            }
            out.push(a);
        }
        var len = out.length;
        return len === as.length ? as : len === 0 ? exports.empty : out;
    };
}
exports.takeLeftWhile = takeLeftWhile;
var spanLeftIndex = function (as, predicate) {
    var l = as.length;
    var i = 0;
    for (; i < l; i++) {
        if (!predicate(as[i])) {
            break;
        }
    }
    return i;
};
function spanLeft(predicate) {
    return function (as) {
        var _a = exports.splitAt(spanLeftIndex(as, predicate))(as), init = _a[0], rest = _a[1];
        return { init: init, rest: rest };
    };
}
exports.spanLeft = spanLeft;
/**
 * Drop a max number of elements from the start of an `ReadonlyArray`, creating a new `ReadonlyArray`.
 *
 * **Note**. `n` is normalized to a non negative integer.
 *
 * @example
 * import * as RA from 'fp-ts/ReadonlyArray'
 * import { pipe } from 'fp-ts/function'
 *
 * const input: ReadonlyArray<number> = [1, 2, 3]
 * assert.deepStrictEqual(pipe(input, RA.dropLeft(2)), [3])
 * assert.strictEqual(pipe(input, RA.dropLeft(0)), input)
 * assert.strictEqual(pipe(input, RA.dropLeft(-1)), input)
 *
 * @category combinators
 * @since 2.5.0
 */
var dropLeft = function (n) { return function (as) {
    return n <= 0 || exports.isEmpty(as) ? as : n >= as.length ? exports.empty : as.slice(n, as.length);
}; };
exports.dropLeft = dropLeft;
/**
 * Drop a max number of elements from the end of an `ReadonlyArray`, creating a new `ReadonlyArray`.
 *
 * **Note**. `n` is normalized to a non negative integer.
 *
 * @example
 * import * as RA from 'fp-ts/ReadonlyArray'
 * import { pipe } from 'fp-ts/function'
 *
 * const input: ReadonlyArray<number> = [1, 2, 3]
 * assert.deepStrictEqual(pipe(input, RA.dropRight(2)), [1])
 * assert.strictEqual(pipe(input, RA.dropRight(0)), input)
 * assert.strictEqual(pipe(input, RA.dropRight(-1)), input)
 *
 * @category combinators
 * @since 2.5.0
 */
var dropRight = function (n) { return function (as) {
    return n <= 0 || exports.isEmpty(as) ? as : n >= as.length ? exports.empty : as.slice(0, as.length - n);
}; };
exports.dropRight = dropRight;
/**
 * Remove the longest initial subarray for which all element satisfy the specified predicate, creating a new array
 *
 * @example
 * import { dropLeftWhile } from 'fp-ts/ReadonlyArray'
 *
 * assert.deepStrictEqual(dropLeftWhile((n: number) => n % 2 === 1)([1, 3, 2, 4, 5]), [2, 4, 5])
 *
 * @category combinators
 * @since 2.5.0
 */
var dropLeftWhile = function (predicate) { return function (as) {
    var i = spanLeftIndex(as, predicate);
    return i === 0 ? as : i === as.length ? exports.empty : as.slice(i);
}; };
exports.dropLeftWhile = dropLeftWhile;
/**
 * Find the first index for which a predicate holds
 *
 * @example
 * import { findIndex } from 'fp-ts/ReadonlyArray'
 * import { some, none } from 'fp-ts/Option'
 *
 * assert.deepStrictEqual(findIndex((n: number) => n === 2)([1, 2, 3]), some(1))
 * assert.deepStrictEqual(findIndex((n: number) => n === 2)([]), none)
 *
 * @since 2.5.0
 */
var findIndex = function (predicate) { return function (as) {
    for (var i = 0; i < as.length; i++) {
        if (predicate(as[i])) {
            return O.some(i);
        }
    }
    return O.none;
}; };
exports.findIndex = findIndex;
function findFirst(predicate) {
    return function (as) {
        for (var i = 0; i < as.length; i++) {
            if (predicate(as[i])) {
                return O.some(as[i]);
            }
        }
        return O.none;
    };
}
exports.findFirst = findFirst;
/**
 * Find the first element returned by an option based selector function
 *
 * @example
 * import { findFirstMap } from 'fp-ts/ReadonlyArray'
 * import { some, none } from 'fp-ts/Option'
 *
 * interface Person {
 *   readonly name: string
 *   readonly age?: number
 * }
 *
 * const persons: ReadonlyArray<Person> = [{ name: 'John' }, { name: 'Mary', age: 45 }, { name: 'Joey', age: 28 }]
 *
 * // returns the name of the first person that has an age
 * assert.deepStrictEqual(findFirstMap((p: Person) => (p.age === undefined ? none : some(p.name)))(persons), some('Mary'))
 *
 * @since 2.5.0
 */
var findFirstMap = function (f) { return function (as) {
    for (var i = 0; i < as.length; i++) {
        var out = f(as[i]);
        if (O.isSome(out)) {
            return out;
        }
    }
    return O.none;
}; };
exports.findFirstMap = findFirstMap;
function findLast(predicate) {
    return function (as) {
        for (var i = as.length - 1; i >= 0; i--) {
            if (predicate(as[i])) {
                return O.some(as[i]);
            }
        }
        return O.none;
    };
}
exports.findLast = findLast;
/**
 * Find the last element returned by an option based selector function
 *
 * @example
 * import { findLastMap } from 'fp-ts/ReadonlyArray'
 * import { some, none } from 'fp-ts/Option'
 *
 * interface Person {
 *   readonly name: string
 *   readonly age?: number
 * }
 *
 * const persons: ReadonlyArray<Person> = [{ name: 'John' }, { name: 'Mary', age: 45 }, { name: 'Joey', age: 28 }]
 *
 * // returns the name of the last person that has an age
 * assert.deepStrictEqual(findLastMap((p: Person) => (p.age === undefined ? none : some(p.name)))(persons), some('Joey'))
 *
 * @since 2.5.0
 */
var findLastMap = function (f) { return function (as) {
    for (var i = as.length - 1; i >= 0; i--) {
        var out = f(as[i]);
        if (O.isSome(out)) {
            return out;
        }
    }
    return O.none;
}; };
exports.findLastMap = findLastMap;
/**
 * Returns the index of the last element of the list which matches the predicate
 *
 * @example
 * import { findLastIndex } from 'fp-ts/ReadonlyArray'
 * import { some, none } from 'fp-ts/Option'
 *
 * interface X {
 *   readonly a: number
 *   readonly b: number
 * }
 * const xs: ReadonlyArray<X> = [{ a: 1, b: 0 }, { a: 1, b: 1 }]
 * assert.deepStrictEqual(findLastIndex((x: { readonly a: number }) => x.a === 1)(xs), some(1))
 * assert.deepStrictEqual(findLastIndex((x: { readonly a: number }) => x.a === 4)(xs), none)
 *
 *
 * @since 2.5.0
 */
var findLastIndex = function (predicate) { return function (as) {
    for (var i = as.length - 1; i >= 0; i--) {
        if (predicate(as[i])) {
            return O.some(i);
        }
    }
    return O.none;
}; };
exports.findLastIndex = findLastIndex;
/**
 * Insert an element at the specified index, creating a new array, or returning `None` if the index is out of bounds
 *
 * @example
 * import { insertAt } from 'fp-ts/ReadonlyArray'
 * import { some } from 'fp-ts/Option'
 *
 * assert.deepStrictEqual(insertAt(2, 5)([1, 2, 3, 4]), some([1, 2, 5, 3, 4]))
 *
 * @since 2.5.0
 */
exports.insertAt = 
// tslint:disable-next-line: deprecation
RNEA.insertAt;
/**
 * Change the element at the specified index, creating a new array, or returning `None` if the index is out of bounds
 *
 * @example
 * import { updateAt } from 'fp-ts/ReadonlyArray'
 * import { some, none } from 'fp-ts/Option'
 *
 * assert.deepStrictEqual(updateAt(1, 1)([1, 2, 3]), some([1, 1, 3]))
 * assert.deepStrictEqual(updateAt(1, 1)([]), none)
 *
 * @since 2.5.0
 */
var updateAt = function (i, a) {
    return exports.modifyAt(i, function () { return a; });
};
exports.updateAt = updateAt;
/**
 * Delete the element at the specified index, creating a new array, or returning `None` if the index is out of bounds
 *
 * @example
 * import { deleteAt } from 'fp-ts/ReadonlyArray'
 * import { some, none } from 'fp-ts/Option'
 *
 * assert.deepStrictEqual(deleteAt(0)([1, 2, 3]), some([2, 3]))
 * assert.deepStrictEqual(deleteAt(1)([]), none)
 *
 * @since 2.5.0
 */
var deleteAt = function (i) { return function (as) {
    return exports.isOutOfBound(i, as) ? O.none : O.some(exports.unsafeDeleteAt(i, as));
}; };
exports.deleteAt = deleteAt;
/**
 * Apply a function to the element at the specified index, creating a new array, or returning `None` if the index is out
 * of bounds
 *
 * @example
 * import { modifyAt } from 'fp-ts/ReadonlyArray'
 * import { some, none } from 'fp-ts/Option'
 *
 * const double = (x: number): number => x * 2
 * assert.deepStrictEqual(modifyAt(1, double)([1, 2, 3]), some([1, 4, 3]))
 * assert.deepStrictEqual(modifyAt(1, double)([]), none)
 *
 * @since 2.5.0
 */
var modifyAt = function (i, f) { return function (as) {
    return exports.isOutOfBound(i, as) ? O.none : O.some(exports.unsafeUpdateAt(i, f(as[i]), as));
}; };
exports.modifyAt = modifyAt;
/**
 * Reverse an array, creating a new array
 *
 * @example
 * import { reverse } from 'fp-ts/ReadonlyArray'
 *
 * assert.deepStrictEqual(reverse([1, 2, 3]), [3, 2, 1])
 *
 * @category combinators
 * @since 2.5.0
 */
var reverse = function (as) { return (as.length <= 1 ? as : as.slice().reverse()); };
exports.reverse = reverse;
/**
 * Extracts from an array of `Either` all the `Right` elements. All the `Right` elements are extracted in order
 *
 * @example
 * import { rights } from 'fp-ts/ReadonlyArray'
 * import { right, left } from 'fp-ts/Either'
 *
 * assert.deepStrictEqual(rights([right(1), left('foo'), right(2)]), [1, 2])
 *
 * @category combinators
 * @since 2.5.0
 */
var rights = function (as) {
    var r = [];
    for (var i = 0; i < as.length; i++) {
        var a = as[i];
        if (a._tag === 'Right') {
            r.push(a.right);
        }
    }
    return r;
};
exports.rights = rights;
/**
 * Extracts from an array of `Either` all the `Left` elements. All the `Left` elements are extracted in order
 *
 * @example
 * import { lefts } from 'fp-ts/ReadonlyArray'
 * import { left, right } from 'fp-ts/Either'
 *
 * assert.deepStrictEqual(lefts([right(1), left('foo'), right(2)]), ['foo'])
 *
 * @category combinators
 * @since 2.5.0
 */
var lefts = function (as) {
    var r = [];
    for (var i = 0; i < as.length; i++) {
        var a = as[i];
        if (a._tag === 'Left') {
            r.push(a.left);
        }
    }
    return r;
};
exports.lefts = lefts;
/**
 * Sort the elements of an array in increasing order, creating a new array
 *
 * @example
 * import { sort } from 'fp-ts/ReadonlyArray'
 * import * as N from 'fp-ts/number'
 *
 * assert.deepStrictEqual(sort(N.Ord)([3, 2, 1]), [1, 2, 3])
 *
 * @category combinators
 * @since 2.5.0
 */
var sort = function (O) { return function (as) {
    return as.length <= 1 ? as : as.slice().sort(O.compare);
}; };
exports.sort = sort;
// TODO: curry and make data-last in v3
/**
 * Apply a function to pairs of elements at the same index in two arrays, collecting the results in a new array. If one
 * input array is short, excess elements of the longer array are discarded.
 *
 * @example
 * import { zipWith } from 'fp-ts/ReadonlyArray'
 *
 * assert.deepStrictEqual(zipWith([1, 2, 3], ['a', 'b', 'c', 'd'], (n, s) => s + n), ['a1', 'b2', 'c3'])
 *
 * @category combinators
 * @since 2.5.0
 */
var zipWith = function (fa, fb, f) {
    var fc = [];
    var len = Math.min(fa.length, fb.length);
    for (var i = 0; i < len; i++) {
        fc[i] = f(fa[i], fb[i]);
    }
    return fc;
};
exports.zipWith = zipWith;
function zip(as, bs) {
    if (bs === undefined) {
        return function (bs) { return zip(bs, as); };
    }
    return exports.zipWith(as, bs, function (a, b) { return [a, b]; });
}
exports.zip = zip;
/**
 * The function is reverse of `zip`. Takes an array of pairs and return two corresponding arrays
 *
 * @example
 * import { unzip } from 'fp-ts/ReadonlyArray'
 *
 * assert.deepStrictEqual(unzip([[1, 'a'], [2, 'b'], [3, 'c']]), [[1, 2, 3], ['a', 'b', 'c']])
 *
 * @category combinators
 * @since 2.5.0
 */
var unzip = function (as) {
    var fa = [];
    var fb = [];
    for (var i = 0; i < as.length; i++) {
        fa[i] = as[i][0];
        fb[i] = as[i][1];
    }
    return [fa, fb];
};
exports.unzip = unzip;
/**
 * Prepend an element to every member of an array
 *
 * @example
 * import { prependAll } from 'fp-ts/ReadonlyArray'
 *
 * assert.deepStrictEqual(prependAll(9)([1, 2, 3, 4]), [9, 1, 9, 2, 9, 3, 9, 4])
 *
 * @category combinators
 * @since 2.10.0
 */
var prependAll = function (middle) {
    var f = RNEA.prependAll(middle);
    return function (as) { return (exports.isNonEmpty(as) ? f(as) : as); };
};
exports.prependAll = prependAll;
/**
 * Places an element in between members of an array
 *
 * @example
 * import { intersperse } from 'fp-ts/ReadonlyArray'
 *
 * assert.deepStrictEqual(intersperse(9)([1, 2, 3, 4]), [1, 9, 2, 9, 3, 9, 4])
 *
 * @category combinators
 * @since 2.9.0
 */
var intersperse = function (middle) {
    var f = RNEA.intersperse(middle);
    return function (as) { return (exports.isNonEmpty(as) ? f(as) : as); };
};
exports.intersperse = intersperse;
/**
 * Rotate a `ReadonlyArray` by `n` steps.
 *
 * @example
 * import { rotate } from 'fp-ts/ReadonlyArray'
 *
 * assert.deepStrictEqual(rotate(2)([1, 2, 3, 4, 5]), [4, 5, 1, 2, 3])
 *
 * @category combinators
 * @since 2.5.0
 */
var rotate = function (n) {
    var f = RNEA.rotate(n);
    return function (as) { return (exports.isNonEmpty(as) ? f(as) : as); };
};
exports.rotate = rotate;
function elem(E) {
    return function (a, as) {
        if (as === undefined) {
            var elemE_1 = elem(E);
            return function (as) { return elemE_1(a, as); };
        }
        var predicate = function (element) { return E.equals(element, a); };
        var i = 0;
        for (; i < as.length; i++) {
            if (predicate(as[i])) {
                return true;
            }
        }
        return false;
    };
}
exports.elem = elem;
/**
 * Remove duplicates from an array, keeping the first occurrence of an element.
 *
 * @example
 * import { uniq } from 'fp-ts/ReadonlyArray'
 * import * as N from 'fp-ts/number'
 *
 * assert.deepStrictEqual(uniq(N.Eq)([1, 2, 1]), [1, 2])
 *
 * @category combinators
 * @since 2.5.0
 */
var uniq = function (E) {
    var f = RNEA.uniq(E);
    return function (as) { return (exports.isNonEmpty(as) ? f(as) : as); };
};
exports.uniq = uniq;
/**
 * Sort the elements of an array in increasing order, where elements are compared using first `ords[0]`, then `ords[1]`,
 * etc...
 *
 * @example
 * import { sortBy } from 'fp-ts/ReadonlyArray'
 * import { contramap } from 'fp-ts/Ord'
 * import * as S from 'fp-ts/string'
 * import * as N from 'fp-ts/number'
 * import { pipe } from 'fp-ts/function'
 *
 * interface Person {
 *   readonly name: string
 *   readonly age: number
 * }
 * const byName = pipe(S.Ord, contramap((p: Person) => p.name))
 * const byAge = pipe(N.Ord, contramap((p: Person) => p.age))
 *
 * const sortByNameByAge = sortBy([byName, byAge])
 *
 * const persons = [{ name: 'a', age: 1 }, { name: 'b', age: 3 }, { name: 'c', age: 2 }, { name: 'b', age: 2 }]
 * assert.deepStrictEqual(sortByNameByAge(persons), [
 *   { name: 'a', age: 1 },
 *   { name: 'b', age: 2 },
 *   { name: 'b', age: 3 },
 *   { name: 'c', age: 2 }
 * ])
 *
 * @category combinators
 * @since 2.5.0
 */
var sortBy = function (ords) {
    var f = RNEA.sortBy(ords);
    return function (as) { return (exports.isNonEmpty(as) ? f(as) : as); };
};
exports.sortBy = sortBy;
/**
 * A useful recursion pattern for processing a `ReadonlyArray` to produce a new `ReadonlyArray`, often used for "chopping" up the input
 * `ReadonlyArray`. Typically `chop` is called with some function that will consume an initial prefix of the `ReadonlyArray` and produce a
 * value and the tail of the `ReadonlyArray`.
 *
 * @example
 * import { Eq } from 'fp-ts/Eq'
 * import * as RA from 'fp-ts/ReadonlyArray'
 * import * as N from 'fp-ts/number'
 * import { pipe } from 'fp-ts/function'
 *
 * const group = <A>(S: Eq<A>): ((as: ReadonlyArray<A>) => ReadonlyArray<ReadonlyArray<A>>) => {
 *   return RA.chop(as => {
 *     const { init, rest } = pipe(as, RA.spanLeft((a: A) => S.equals(a, as[0])))
 *     return [init, rest]
 *   })
 * }
 * assert.deepStrictEqual(group(N.Eq)([1, 1, 2, 3, 3, 4]), [[1, 1], [2], [3, 3], [4]])
 *
 * @category combinators
 * @since 2.5.0
 */
var chop = function (f) {
    var g = RNEA.chop(f);
    return function (as) { return (exports.isNonEmpty(as) ? g(as) : exports.empty); };
};
exports.chop = chop;
/**
 * Splits a `ReadonlyArray` into two pieces, the first piece has max `n` elements.
 *
 * @example
 * import { splitAt } from 'fp-ts/ReadonlyArray'
 *
 * assert.deepStrictEqual(splitAt(2)([1, 2, 3, 4, 5]), [[1, 2], [3, 4, 5]])
 *
 * @category combinators
 * @since 2.5.0
 */
var splitAt = function (n) { return function (as) {
    return n >= 1 && exports.isNonEmpty(as) ? RNEA.splitAt(n)(as) : exports.isEmpty(as) ? [as, exports.empty] : [exports.empty, as];
}; };
exports.splitAt = splitAt;
/**
 * Splits a `ReadonlyArray` into length-`n` pieces. The last piece will be shorter if `n` does not evenly divide the length of
 * the `ReadonlyArray`. Note that `chunksOf(n)([])` is `[]`, not `[[]]`. This is intentional, and is consistent with a recursive
 * definition of `chunksOf`; it satisfies the property that:
 *
 * ```ts
 * chunksOf(n)(xs).concat(chunksOf(n)(ys)) == chunksOf(n)(xs.concat(ys)))
 * ```
 *
 * whenever `n` evenly divides the length of `as`.
 *
 * @example
 * import { chunksOf } from 'fp-ts/ReadonlyArray'
 *
 * assert.deepStrictEqual(chunksOf(2)([1, 2, 3, 4, 5]), [[1, 2], [3, 4], [5]])
 *
 * @category combinators
 * @since 2.5.0
 */
var chunksOf = function (n) {
    var f = RNEA.chunksOf(n);
    return function (as) { return (exports.isNonEmpty(as) ? f(as) : exports.empty); };
};
exports.chunksOf = chunksOf;
function comprehension(input, f, g) {
    if (g === void 0) { g = function () { return true; }; }
    var go = function (scope, input) {
        return exports.isNonEmpty(input)
            ? function_1.pipe(RNEA.head(input), exports.chain(function (x) { return go(function_1.pipe(scope, exports.append(x)), RNEA.tail(input)); }))
            : g.apply(void 0, scope) ? [f.apply(void 0, scope)]
                : exports.empty;
    };
    return go(exports.empty, input);
}
exports.comprehension = comprehension;
function union(E) {
    var unionE = RNEA.union(E);
    return function (first, second) {
        if (second === undefined) {
            var unionE_1 = union(E);
            return function (ys) { return unionE_1(ys, first); };
        }
        return exports.isNonEmpty(first) && exports.isNonEmpty(second) ? unionE(first, second) : exports.isNonEmpty(first) ? first : second;
    };
}
exports.union = union;
function intersection(E) {
    var elemE = elem(E);
    return function (xs, ys) {
        if (ys === undefined) {
            var intersectionE_1 = intersection(E);
            return function (ys) { return intersectionE_1(ys, xs); };
        }
        return xs.filter(function (a) { return elemE(a, ys); });
    };
}
exports.intersection = intersection;
function difference(E) {
    var elemE = elem(E);
    return function (xs, ys) {
        if (ys === undefined) {
            var differenceE_1 = difference(E);
            return function (ys) { return differenceE_1(ys, xs); };
        }
        return xs.filter(function (a) { return !elemE(a, ys); });
    };
}
exports.difference = difference;
// -------------------------------------------------------------------------------------
// non-pipeables
// -------------------------------------------------------------------------------------
var _map = function (fa, f) { return function_1.pipe(fa, exports.map(f)); };
var _mapWithIndex = function (fa, f) { return function_1.pipe(fa, exports.mapWithIndex(f)); };
var _ap = function (fab, fa) { return function_1.pipe(fab, exports.ap(fa)); };
var _chain = function (ma, f) { return function_1.pipe(ma, exports.chain(f)); };
var _filter = function (fa, predicate) {
    return function_1.pipe(fa, exports.filter(predicate));
};
var _filterMap = function (fa, f) { return function_1.pipe(fa, exports.filterMap(f)); };
var _partition = function (fa, predicate) {
    return function_1.pipe(fa, exports.partition(predicate));
};
var _partitionMap = function (fa, f) { return function_1.pipe(fa, exports.partitionMap(f)); };
var _partitionWithIndex = function (fa, predicateWithIndex) { return function_1.pipe(fa, exports.partitionWithIndex(predicateWithIndex)); };
var _partitionMapWithIndex = function (fa, f) { return function_1.pipe(fa, exports.partitionMapWithIndex(f)); };
var _alt = function (fa, that) { return function_1.pipe(fa, exports.alt(that)); };
var _reduce = function (fa, b, f) { return function_1.pipe(fa, exports.reduce(b, f)); };
var _foldMap = function (M) {
    var foldMapM = exports.foldMap(M);
    return function (fa, f) { return function_1.pipe(fa, foldMapM(f)); };
};
var _reduceRight = function (fa, b, f) { return function_1.pipe(fa, exports.reduceRight(b, f)); };
var _reduceWithIndex = function (fa, b, f) {
    return function_1.pipe(fa, exports.reduceWithIndex(b, f));
};
var _foldMapWithIndex = function (M) {
    var foldMapWithIndexM = exports.foldMapWithIndex(M);
    return function (fa, f) { return function_1.pipe(fa, foldMapWithIndexM(f)); };
};
var _reduceRightWithIndex = function (fa, b, f) {
    return function_1.pipe(fa, exports.reduceRightWithIndex(b, f));
};
var _filterMapWithIndex = function (fa, f) { return function_1.pipe(fa, exports.filterMapWithIndex(f)); };
var _filterWithIndex = function (fa, predicateWithIndex) { return function_1.pipe(fa, exports.filterWithIndex(predicateWithIndex)); };
var _extend = function (fa, f) { return function_1.pipe(fa, exports.extend(f)); };
var _traverse = function (F) {
    var traverseF = exports.traverse(F);
    return function (ta, f) { return function_1.pipe(ta, traverseF(f)); };
};
/* istanbul ignore next */
var _traverseWithIndex = function (F) {
    var traverseWithIndexF = exports.traverseWithIndex(F);
    return function (ta, f) { return function_1.pipe(ta, traverseWithIndexF(f)); };
};
/* istanbul ignore next */
var _wither = function (F) {
    var witherF = exports.wither(F);
    return function (fa, f) { return function_1.pipe(fa, witherF(f)); };
};
/* istanbul ignore next */
var _wilt = function (F) {
    var wiltF = exports.wilt(F);
    return function (fa, f) { return function_1.pipe(fa, wiltF(f)); };
};
// -------------------------------------------------------------------------------------
// type class members
// -------------------------------------------------------------------------------------
/**
 * @category Pointed
 * @since 2.5.0
 */
exports.of = RNEA.of;
/**
 * @category Alternative
 * @since 2.7.0
 */
var zero = function () { return exports.empty; };
exports.zero = zero;
/**
 * Less strict version of [`alt`](#alt).
 *
 * @category Alt
 * @since 2.9.0
 */
var altW = function (that) { return function (fa) {
    return fa.concat(that());
}; };
exports.altW = altW;
/**
 * Identifies an associative operation on a type constructor. It is similar to `Semigroup`, except that it applies to
 * types of kind `* -> *`.
 *
 * @category Alt
 * @since 2.5.0
 */
exports.alt = exports.altW;
/**
 * Apply a function to an argument under a type constructor.
 *
 * @category Apply
 * @since 2.5.0
 */
var ap = function (fa) {
    return exports.chain(function (f) { return function_1.pipe(fa, exports.map(f)); });
};
exports.ap = ap;
/**
 * Composes computations in sequence, using the return value of one computation to determine the next computation.
 *
 * @category Monad
 * @since 2.5.0
 */
var chain = function (f) { return function (ma) {
    return function_1.pipe(ma, exports.chainWithIndex(function (_, a) { return f(a); }));
}; };
exports.chain = chain;
/**
 * Derivable from `Chain`.
 *
 * @category combinators
 * @since 2.5.0
 */
exports.flatten = 
/*#__PURE__*/
exports.chain(function_1.identity);
/**
 * `map` can be used to turn functions `(a: A) => B` into functions `(fa: F<A>) => F<B>` whose argument and return types
 * use the type constructor `F` to represent some computational context.
 *
 * @category Functor
 * @since 2.5.0
 */
var map = function (f) { return function (fa) {
    return fa.map(function (a) { return f(a); });
}; };
exports.map = map;
/**
 * @category FunctorWithIndex
 * @since 2.5.0
 */
var mapWithIndex = function (f) { return function (fa) { return fa.map(function (a, i) { return f(i, a); }); }; };
exports.mapWithIndex = mapWithIndex;
/**
 * @category Compactable
 * @since 2.5.0
 */
var separate = function (fa) {
    var left = [];
    var right = [];
    for (var _i = 0, fa_1 = fa; _i < fa_1.length; _i++) {
        var e = fa_1[_i];
        if (e._tag === 'Left') {
            left.push(e.left);
        }
        else {
            right.push(e.right);
        }
    }
    return Separated_1.separated(left, right);
};
exports.separate = separate;
/**
 * @category Filterable
 * @since 2.5.0
 */
var filter = function (predicate) { return function (fa) { return fa.filter(predicate); }; };
exports.filter = filter;
/**
 * @category FilterableWithIndex
 * @since 2.5.0
 */
var filterMapWithIndex = function (f) { return function (fa) {
    var out = [];
    for (var i = 0; i < fa.length; i++) {
        var optionB = f(i, fa[i]);
        if (O.isSome(optionB)) {
            out.push(optionB.value);
        }
    }
    return out;
}; };
exports.filterMapWithIndex = filterMapWithIndex;
/**
 * @category Filterable
 * @since 2.5.0
 */
var filterMap = function (f) {
    return exports.filterMapWithIndex(function (_, a) { return f(a); });
};
exports.filterMap = filterMap;
/**
 * @category Compactable
 * @since 2.5.0
 */
exports.compact = 
/*#__PURE__*/
exports.filterMap(function_1.identity);
/**
 * @category Filterable
 * @since 2.5.0
 */
var partition = function (predicate) {
    return exports.partitionWithIndex(function (_, a) { return predicate(a); });
};
exports.partition = partition;
/**
 * @category FilterableWithIndex
 * @since 2.5.0
 */
var partitionWithIndex = function (predicateWithIndex) { return function (fa) {
    var left = [];
    var right = [];
    for (var i = 0; i < fa.length; i++) {
        var a = fa[i];
        if (predicateWithIndex(i, a)) {
            right.push(a);
        }
        else {
            left.push(a);
        }
    }
    return Separated_1.separated(left, right);
}; };
exports.partitionWithIndex = partitionWithIndex;
/**
 * @category Filterable
 * @since 2.5.0
 */
var partitionMap = function (f) {
    return exports.partitionMapWithIndex(function (_, a) { return f(a); });
};
exports.partitionMap = partitionMap;
/**
 * @category FilterableWithIndex
 * @since 2.5.0
 */
var partitionMapWithIndex = function (f) { return function (fa) {
    var left = [];
    var right = [];
    for (var i = 0; i < fa.length; i++) {
        var e = f(i, fa[i]);
        if (e._tag === 'Left') {
            left.push(e.left);
        }
        else {
            right.push(e.right);
        }
    }
    return Separated_1.separated(left, right);
}; };
exports.partitionMapWithIndex = partitionMapWithIndex;
/**
 * @category FilterableWithIndex
 * @since 2.5.0
 */
var filterWithIndex = function (predicateWithIndex) { return function (fa) {
    return fa.filter(function (a, i) { return predicateWithIndex(i, a); });
}; };
exports.filterWithIndex = filterWithIndex;
/**
 * @category Extend
 * @since 2.5.0
 */
var extend = function (f) { return function (wa) { return wa.map(function (_, i) { return f(wa.slice(i)); }); }; };
exports.extend = extend;
/**
 * Derivable from `Extend`.
 *
 * @category combinators
 * @since 2.5.0
 */
exports.duplicate = 
/*#__PURE__*/
exports.extend(function_1.identity);
/**
 * @category FoldableWithIndex
 * @since 2.5.0
 */
var foldMapWithIndex = function (M) { return function (f) { return function (fa) {
    return fa.reduce(function (b, a, i) { return M.concat(b, f(i, a)); }, M.empty);
}; }; };
exports.foldMapWithIndex = foldMapWithIndex;
/**
 * @category Foldable
 * @since 2.5.0
 */
var reduce = function (b, f) {
    return exports.reduceWithIndex(b, function (_, b, a) { return f(b, a); });
};
exports.reduce = reduce;
/**
 * @category Foldable
 * @since 2.5.0
 */
var foldMap = function (M) {
    var foldMapWithIndexM = exports.foldMapWithIndex(M);
    return function (f) { return foldMapWithIndexM(function (_, a) { return f(a); }); };
};
exports.foldMap = foldMap;
/**
 * @category FoldableWithIndex
 * @since 2.5.0
 */
var reduceWithIndex = function (b, f) { return function (fa) {
    var len = fa.length;
    var out = b;
    for (var i = 0; i < len; i++) {
        out = f(i, out, fa[i]);
    }
    return out;
}; };
exports.reduceWithIndex = reduceWithIndex;
/**
 * @category Foldable
 * @since 2.5.0
 */
var reduceRight = function (b, f) {
    return exports.reduceRightWithIndex(b, function (_, a, b) { return f(a, b); });
};
exports.reduceRight = reduceRight;
/**
 * @category FoldableWithIndex
 * @since 2.5.0
 */
var reduceRightWithIndex = function (b, f) { return function (fa) { return fa.reduceRight(function (b, a, i) { return f(i, a, b); }, b); }; };
exports.reduceRightWithIndex = reduceRightWithIndex;
/**
 * @category Traversable
 * @since 2.6.3
 */
var traverse = function (F) {
    var traverseWithIndexF = exports.traverseWithIndex(F);
    return function (f) { return traverseWithIndexF(function (_, a) { return f(a); }); };
};
exports.traverse = traverse;
/**
 * @category Traversable
 * @since 2.6.3
 */
var sequence = function (F) { return function (ta) {
    return _reduce(ta, F.of(exports.zero()), function (fas, fa) {
        return F.ap(F.map(fas, function (as) { return function (a) { return function_1.pipe(as, exports.append(a)); }; }), fa);
    });
}; };
exports.sequence = sequence;
/**
 * @category TraversableWithIndex
 * @since 2.6.3
 */
var traverseWithIndex = function (F) { return function (f) {
    return exports.reduceWithIndex(F.of(exports.zero()), function (i, fbs, a) {
        return F.ap(F.map(fbs, function (bs) { return function (b) { return function_1.pipe(bs, exports.append(b)); }; }), f(i, a));
    });
}; };
exports.traverseWithIndex = traverseWithIndex;
/**
 * @category Witherable
 * @since 2.6.5
 */
var wither = function (F) {
    var traverseF = exports.traverse(F);
    return function (f) { return function (fa) { return F.map(function_1.pipe(fa, traverseF(f)), exports.compact); }; };
};
exports.wither = wither;
/**
 * @category Witherable
 * @since 2.6.5
 */
var wilt = function (F) {
    var traverseF = exports.traverse(F);
    return function (f) { return function (fa) { return F.map(function_1.pipe(fa, traverseF(f)), exports.separate); }; };
};
exports.wilt = wilt;
/**
 * @category Unfoldable
 * @since 2.6.6
 */
var unfold = function (b, f) {
    var out = [];
    var bb = b;
    while (true) {
        var mt = f(bb);
        if (O.isSome(mt)) {
            var _a = mt.value, a = _a[0], b_1 = _a[1];
            out.push(a);
            bb = b_1;
        }
        else {
            break;
        }
    }
    return out;
};
exports.unfold = unfold;
// -------------------------------------------------------------------------------------
// instances
// -------------------------------------------------------------------------------------
/**
 * @category instances
 * @since 2.5.0
 */
exports.URI = 'ReadonlyArray';
/**
 * @category instances
 * @since 2.5.0
 */
var getShow = function (S) { return ({
    show: function (as) { return "[" + as.map(S.show).join(', ') + "]"; }
}); };
exports.getShow = getShow;
/**
 * @category instances
 * @since 2.5.0
 */
var getSemigroup = function () { return ({
    concat: function (first, second) { return (exports.isEmpty(first) ? second : exports.isEmpty(second) ? first : first.concat(second)); }
}); };
exports.getSemigroup = getSemigroup;
/**
 * Returns a `Monoid` for `ReadonlyArray<A>`.
 *
 * @example
 * import { getMonoid } from 'fp-ts/ReadonlyArray'
 *
 * const M = getMonoid<number>()
 * assert.deepStrictEqual(M.concat([1, 2], [3, 4]), [1, 2, 3, 4])
 *
 * @category instances
 * @since 2.5.0
 */
var getMonoid = function () { return ({
    concat: exports.getSemigroup().concat,
    empty: exports.empty
}); };
exports.getMonoid = getMonoid;
/**
 * Derives an `Eq` over the `ReadonlyArray` of a given element type from the `Eq` of that type. The derived `Eq` defines two
 * arrays as equal if all elements of both arrays are compared equal pairwise with the given `E`. In case of arrays of
 * different lengths, the result is non equality.
 *
 * @example
 * import * as S from 'fp-ts/string'
 * import { getEq } from 'fp-ts/ReadonlyArray'
 *
 * const E = getEq(S.Eq)
 * assert.strictEqual(E.equals(['a', 'b'], ['a', 'b']), true)
 * assert.strictEqual(E.equals(['a'], []), false)
 *
 * @category instances
 * @since 2.5.0
 */
var getEq = function (E) {
    return Eq_1.fromEquals(function (xs, ys) { return xs.length === ys.length && xs.every(function (x, i) { return E.equals(x, ys[i]); }); });
};
exports.getEq = getEq;
/**
 * Derives an `Ord` over the `ReadonlyArray` of a given element type from the `Ord` of that type. The ordering between two such
 * arrays is equal to: the first non equal comparison of each arrays elements taken pairwise in increasing order, in
 * case of equality over all the pairwise elements; the longest array is considered the greatest, if both arrays have
 * the same length, the result is equality.
 *
 * @example
 * import { getOrd } from 'fp-ts/ReadonlyArray'
 * import * as S from 'fp-ts/string'
 *
 * const O = getOrd(S.Ord)
 * assert.strictEqual(O.compare(['b'], ['a']), 1)
 * assert.strictEqual(O.compare(['a'], ['a']), 0)
 * assert.strictEqual(O.compare(['a'], ['b']), -1)
 *
 *
 * @category instances
 * @since 2.5.0
 */
var getOrd = function (O) {
    return Ord_1.fromCompare(function (a, b) {
        var aLen = a.length;
        var bLen = b.length;
        var len = Math.min(aLen, bLen);
        for (var i = 0; i < len; i++) {
            var ordering = O.compare(a[i], b[i]);
            if (ordering !== 0) {
                return ordering;
            }
        }
        return N.Ord.compare(aLen, bLen);
    });
};
exports.getOrd = getOrd;
/**
 * @category instances
 * @since 2.7.0
 */
exports.Functor = {
    URI: exports.URI,
    map: _map
};
/**
 * Derivable from `Functor`.
 *
 * @category combinators
 * @since 2.10.0
 */
exports.flap = 
/*#_PURE_*/
Functor_1.flap(exports.Functor);
/**
 * @category instances
 * @since 2.10.0
 */
exports.Pointed = {
    URI: exports.URI,
    of: exports.of
};
/**
 * @category instances
 * @since 2.7.0
 */
exports.FunctorWithIndex = {
    URI: exports.URI,
    map: _map,
    mapWithIndex: _mapWithIndex
};
/**
 * @category instances
 * @since 2.10.0
 */
exports.Apply = {
    URI: exports.URI,
    map: _map,
    ap: _ap
};
/**
 * Combine two effectful actions, keeping only the result of the first.
 *
 * Derivable from `Apply`.
 *
 * @category combinators
 * @since 2.5.0
 */
exports.apFirst = 
/*#__PURE__*/
Apply_1.apFirst(exports.Apply);
/**
 * Combine two effectful actions, keeping only the result of the second.
 *
 * Derivable from `Apply`.
 *
 * @category combinators
 * @since 2.5.0
 */
exports.apSecond = 
/*#__PURE__*/
Apply_1.apSecond(exports.Apply);
/**
 * @category instances
 * @since 2.7.0
 */
exports.Applicative = {
    URI: exports.URI,
    map: _map,
    ap: _ap,
    of: exports.of
};
/**
 * @category instances
 * @since 2.10.0
 */
exports.Chain = {
    URI: exports.URI,
    map: _map,
    ap: _ap,
    chain: _chain
};
/**
 * @category instances
 * @since 2.7.0
 */
exports.Monad = {
    URI: exports.URI,
    map: _map,
    ap: _ap,
    of: exports.of,
    chain: _chain
};
/**
 * Composes computations in sequence, using the return value of one computation to determine the next computation and
 * keeping only the result of the first.
 *
 * Derivable from `Chain`.
 *
 * @category combinators
 * @since 2.5.0
 */
exports.chainFirst = 
/*#__PURE__*/
Chain_1.chainFirst(exports.Chain);
/**
 * @category instances
 * @since 2.7.0
 */
exports.Unfoldable = {
    URI: exports.URI,
    unfold: exports.unfold
};
/**
 * @category instances
 * @since 2.7.0
 */
exports.Alt = {
    URI: exports.URI,
    map: _map,
    alt: _alt
};
/**
 * @category instances
 * @since 2.7.0
 */
exports.Alternative = {
    URI: exports.URI,
    map: _map,
    ap: _ap,
    of: exports.of,
    alt: _alt,
    zero: exports.zero
};
/**
 * @category instances
 * @since 2.7.0
 */
exports.Extend = {
    URI: exports.URI,
    map: _map,
    extend: _extend
};
/**
 * @category instances
 * @since 2.7.0
 */
exports.Compactable = {
    URI: exports.URI,
    compact: exports.compact,
    separate: exports.separate
};
/**
 * @category instances
 * @since 2.7.0
 */
exports.Filterable = {
    URI: exports.URI,
    map: _map,
    compact: exports.compact,
    separate: exports.separate,
    filter: _filter,
    filterMap: _filterMap,
    partition: _partition,
    partitionMap: _partitionMap
};
/**
 * @category instances
 * @since 2.7.0
 */
exports.FilterableWithIndex = {
    URI: exports.URI,
    map: _map,
    mapWithIndex: _mapWithIndex,
    compact: exports.compact,
    separate: exports.separate,
    filter: _filter,
    filterMap: _filterMap,
    partition: _partition,
    partitionMap: _partitionMap,
    partitionMapWithIndex: _partitionMapWithIndex,
    partitionWithIndex: _partitionWithIndex,
    filterMapWithIndex: _filterMapWithIndex,
    filterWithIndex: _filterWithIndex
};
/**
 * @category instances
 * @since 2.7.0
 */
exports.Foldable = {
    URI: exports.URI,
    reduce: _reduce,
    foldMap: _foldMap,
    reduceRight: _reduceRight
};
/**
 * @category instances
 * @since 2.7.0
 */
exports.FoldableWithIndex = {
    URI: exports.URI,
    reduce: _reduce,
    foldMap: _foldMap,
    reduceRight: _reduceRight,
    reduceWithIndex: _reduceWithIndex,
    foldMapWithIndex: _foldMapWithIndex,
    reduceRightWithIndex: _reduceRightWithIndex
};
/**
 * @category instances
 * @since 2.7.0
 */
exports.Traversable = {
    URI: exports.URI,
    map: _map,
    reduce: _reduce,
    foldMap: _foldMap,
    reduceRight: _reduceRight,
    traverse: _traverse,
    sequence: exports.sequence
};
/**
 * @category instances
 * @since 2.7.0
 */
exports.TraversableWithIndex = {
    URI: exports.URI,
    map: _map,
    mapWithIndex: _mapWithIndex,
    reduce: _reduce,
    foldMap: _foldMap,
    reduceRight: _reduceRight,
    reduceWithIndex: _reduceWithIndex,
    foldMapWithIndex: _foldMapWithIndex,
    reduceRightWithIndex: _reduceRightWithIndex,
    traverse: _traverse,
    sequence: exports.sequence,
    traverseWithIndex: _traverseWithIndex
};
/**
 * @category instances
 * @since 2.7.0
 */
exports.Witherable = {
    URI: exports.URI,
    map: _map,
    compact: exports.compact,
    separate: exports.separate,
    filter: _filter,
    filterMap: _filterMap,
    partition: _partition,
    partitionMap: _partitionMap,
    reduce: _reduce,
    foldMap: _foldMap,
    reduceRight: _reduceRight,
    traverse: _traverse,
    sequence: exports.sequence,
    wither: _wither,
    wilt: _wilt
};
// -------------------------------------------------------------------------------------
// unsafe
// -------------------------------------------------------------------------------------
/**
 * @category unsafe
 * @since 2.5.0
 */
exports.unsafeInsertAt = RNEA.unsafeInsertAt;
/**
 * @category unsafe
 * @since 2.5.0
 */
var unsafeUpdateAt = function (i, a, as) {
    return exports.isNonEmpty(as) ? RNEA.unsafeUpdateAt(i, a, as) : as;
};
exports.unsafeUpdateAt = unsafeUpdateAt;
/**
 * @category unsafe
 * @since 2.5.0
 */
var unsafeDeleteAt = function (i, as) {
    var xs = as.slice();
    xs.splice(i, 1);
    return xs;
};
exports.unsafeDeleteAt = unsafeDeleteAt;
// -------------------------------------------------------------------------------------
// interop
// -------------------------------------------------------------------------------------
/**
 * @category interop
 * @since 2.5.0
 */
var toArray = function (as) { return as.slice(); };
exports.toArray = toArray;
/**
 * @category interop
 * @since 2.5.0
 */
var fromArray = function (as) { return (exports.isEmpty(as) ? exports.empty : as.slice()); };
exports.fromArray = fromArray;
// -------------------------------------------------------------------------------------
// utils
// -------------------------------------------------------------------------------------
/**
 * An empty array
 *
 * @since 2.5.0
 */
exports.empty = RNEA.empty;
/**
 * Check if a predicate holds true for every array member.
 *
 * @example
 * import { every } from 'fp-ts/ReadonlyArray'
 * import { pipe } from 'fp-ts/function'
 *
 * const isPositive = (n: number): boolean => n > 0
 *
 * assert.deepStrictEqual(pipe([1, 2, 3], every(isPositive)), true)
 * assert.deepStrictEqual(pipe([1, 2, -3], every(isPositive)), false)
 *
 * @since 2.9.0
 */
var every = function (predicate) { return function (as) { return as.every(predicate); }; };
exports.every = every;
/**
 * Check if a predicate holds true for any array member.
 *
 * @example
 * import { some } from 'fp-ts/ReadonlyArray'
 * import { pipe } from 'fp-ts/function'
 *
 * const isPositive = (n: number): boolean => n > 0
 *
 * assert.deepStrictEqual(pipe([-1, -2, 3], some(isPositive)), true)
 * assert.deepStrictEqual(pipe([-1, -2, -3], some(isPositive)), false)
 *
 * @since 2.9.0
 */
var some = function (predicate) { return function (as) {
    return as.some(predicate);
}; };
exports.some = some;
// -------------------------------------------------------------------------------------
// do notation
// -------------------------------------------------------------------------------------
/**
 * @since 2.9.0
 */
exports.Do = 
/*#__PURE__*/
exports.of({});
/**
 * @since 2.8.0
 */
exports.bindTo = 
/*#__PURE__*/
Functor_1.bindTo(exports.Functor);
/**
 * @since 2.8.0
 */
exports.bind = 
/*#__PURE__*/
Chain_1.bind(exports.Chain);
// -------------------------------------------------------------------------------------
// pipeable sequence S
// -------------------------------------------------------------------------------------
/**
 * @since 2.8.0
 */
exports.apS = 
/*#__PURE__*/
Apply_1.apS(exports.Apply);
// -------------------------------------------------------------------------------------
// deprecated
// -------------------------------------------------------------------------------------
/**
 * Use [`prepend`](#prepend) instead.
 *
 * @category constructors
 * @since 2.5.0
 * @deprecated
 */
// tslint:disable-next-line: deprecation
exports.cons = RNEA.cons;
/**
 * Use [`append`](#append) instead.
 *
 * @category constructors
 * @since 2.5.0
 * @deprecated
 */
// tslint:disable-next-line: deprecation
exports.snoc = RNEA.snoc;
/**
 * Use [`prependAll`](#prependall) instead.
 *
 * @category combinators
 * @since 2.9.0
 * @deprecated
 */
exports.prependToAll = exports.prependAll;
/**
 * Use small, specific instances instead.
 *
 * @category instances
 * @since 2.5.0
 * @deprecated
 */
exports.readonlyArray = {
    URI: exports.URI,
    compact: exports.compact,
    separate: exports.separate,
    map: _map,
    ap: _ap,
    of: exports.of,
    chain: _chain,
    filter: _filter,
    filterMap: _filterMap,
    partition: _partition,
    partitionMap: _partitionMap,
    mapWithIndex: _mapWithIndex,
    partitionMapWithIndex: _partitionMapWithIndex,
    partitionWithIndex: _partitionWithIndex,
    filterMapWithIndex: _filterMapWithIndex,
    filterWithIndex: _filterWithIndex,
    alt: _alt,
    zero: exports.zero,
    unfold: exports.unfold,
    reduce: _reduce,
    foldMap: _foldMap,
    reduceRight: _reduceRight,
    traverse: _traverse,
    sequence: exports.sequence,
    reduceWithIndex: _reduceWithIndex,
    foldMapWithIndex: _foldMapWithIndex,
    reduceRightWithIndex: _reduceRightWithIndex,
    traverseWithIndex: _traverseWithIndex,
    extend: _extend,
    wither: _wither,
    wilt: _wilt
};

},{"./Apply":"../node_modules/fp-ts/lib/Apply.js","./Chain":"../node_modules/fp-ts/lib/Chain.js","./Eq":"../node_modules/fp-ts/lib/Eq.js","./function":"../node_modules/fp-ts/lib/function.js","./Functor":"../node_modules/fp-ts/lib/Functor.js","./number":"../node_modules/fp-ts/lib/number.js","./Option":"../node_modules/fp-ts/lib/Option.js","./Ord":"../node_modules/fp-ts/lib/Ord.js","./ReadonlyNonEmptyArray":"../node_modules/fp-ts/lib/ReadonlyNonEmptyArray.js","./Separated":"../node_modules/fp-ts/lib/Separated.js"}],"../node_modules/fp-ts/lib/Array.js":[function(require,module,exports) {
"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.elem = exports.rotate = exports.intersperse = exports.prependAll = exports.unzip = exports.zip = exports.zipWith = exports.sort = exports.lefts = exports.rights = exports.reverse = exports.modifyAt = exports.deleteAt = exports.updateAt = exports.insertAt = exports.copy = exports.findLastIndex = exports.findLastMap = exports.findLast = exports.findFirstMap = exports.findFirst = exports.findIndex = exports.dropLeftWhile = exports.dropRight = exports.dropLeft = exports.spanLeft = exports.takeLeftWhile = exports.takeRight = exports.takeLeft = exports.init = exports.tail = exports.last = exports.head = exports.lookup = exports.isOutOfBound = exports.size = exports.isNonEmpty = exports.isEmpty = exports.scanRight = exports.scanLeft = exports.chainWithIndex = exports.foldRight = exports.matchRight = exports.foldLeft = exports.matchLeft = exports.replicate = exports.range = exports.makeBy = exports.append = exports.prepend = void 0;
exports.flap = exports.Functor = exports.getOrd = exports.getEq = exports.getMonoid = exports.getSemigroup = exports.getShow = exports.URI = exports.unfold = exports.wilt = exports.wither = exports.traverseWithIndex = exports.sequence = exports.traverse = exports.reduceRightWithIndex = exports.reduceRight = exports.reduceWithIndex = exports.reduce = exports.foldMapWithIndex = exports.foldMap = exports.duplicate = exports.extend = exports.filterWithIndex = exports.alt = exports.altW = exports.partitionMapWithIndex = exports.partitionMap = exports.partitionWithIndex = exports.partition = exports.filter = exports.separate = exports.compact = exports.filterMap = exports.filterMapWithIndex = exports.mapWithIndex = exports.flatten = exports.chain = exports.ap = exports.map = exports.zero = exports.of = exports.difference = exports.intersection = exports.union = exports.comprehension = exports.chunksOf = exports.splitAt = exports.chop = exports.sortBy = exports.uniq = void 0;
exports.array = exports.prependToAll = exports.snoc = exports.cons = exports.empty = exports.apS = exports.bind = exports.bindTo = exports.Do = exports.some = exports.every = exports.unsafeDeleteAt = exports.unsafeUpdateAt = exports.unsafeInsertAt = exports.Witherable = exports.TraversableWithIndex = exports.Traversable = exports.FoldableWithIndex = exports.Foldable = exports.FilterableWithIndex = exports.Filterable = exports.Compactable = exports.Extend = exports.Alternative = exports.Alt = exports.Unfoldable = exports.Monad = exports.chainFirst = exports.Chain = exports.Applicative = exports.apSecond = exports.apFirst = exports.Apply = exports.FunctorWithIndex = exports.Pointed = void 0;
var Apply_1 = require("./Apply");
var Chain_1 = require("./Chain");
var function_1 = require("./function");
var Functor_1 = require("./Functor");
var NEA = __importStar(require("./NonEmptyArray"));
var O = __importStar(require("./Option"));
var RA = __importStar(require("./ReadonlyArray"));
var Separated_1 = require("./Separated");
// -------------------------------------------------------------------------------------
// constructors
// -------------------------------------------------------------------------------------
/**
 * Prepend an element to the front of a `Array`, creating a new `NonEmptyArray`.
 *
 * @example
 * import { prepend } from 'fp-ts/Array'
 * import { pipe } from 'fp-ts/function'
 *
 * assert.deepStrictEqual(pipe([2, 3, 4], prepend(1)), [1, 2, 3, 4])
 *
 * @category constructors
 * @since 2.10.0
 */
exports.prepend = NEA.prepend;
/**
 * Append an element to the end of a `Array`, creating a new `NonEmptyArray`.
 *
 * @example
 * import { append } from 'fp-ts/Array'
 * import { pipe } from 'fp-ts/function'
 *
 * assert.deepStrictEqual(pipe([1, 2, 3], append(4)), [1, 2, 3, 4])
 *
 * @category constructors
 * @since 2.10.0
 */
exports.append = NEA.append;
/**
 * Return a `Array` of length `n` with element `i` initialized with `f(i)`.
 *
 * **Note**. `n` is normalized to a non negative integer.
 *
 * @example
 * import { makeBy } from 'fp-ts/Array'
 *
 * const double = (n: number): number => n * 2
 * assert.deepStrictEqual(makeBy(5, double), [0, 2, 4, 6, 8])
 *
 * @category constructors
 * @since 2.0.0
 */
var makeBy = function (n, f) { return (n <= 0 ? [] : NEA.makeBy(n, f)); };
exports.makeBy = makeBy;
/**
 * Create an `Array` containing a range of integers, including both endpoints.
 *
 * @example
 * import { range } from 'fp-ts/Array'
 *
 * assert.deepStrictEqual(range(1, 5), [1, 2, 3, 4, 5])
 *
 * @category constructors
 * @since 2.0.0
 */
var range = function (start, end) {
    return start <= end ? exports.makeBy(end - start + 1, function (i) { return start + i; }) : [start];
};
exports.range = range;
/**
 * Create a `Array` containing a value repeated the specified number of times.
 *
 * **Note**. `n` is normalized to a non negative integer.
 *
 * @example
 * import { replicate } from 'fp-ts/Array'
 *
 * assert.deepStrictEqual(replicate(3, 'a'), ['a', 'a', 'a'])
 *
 * @category constructors
 * @since 2.0.0
 */
var replicate = function (n, a) { return exports.makeBy(n, function () { return a; }); };
exports.replicate = replicate;
// -------------------------------------------------------------------------------------
// destructors
// -------------------------------------------------------------------------------------
/**
 * Break an array into its first element and remaining elements
 *
 * @example
 * import { matchLeft } from 'fp-ts/Array'
 *
 * const len: <A>(as: Array<A>) => number = matchLeft(() => 0, (_, tail) => 1 + len(tail))
 * assert.strictEqual(len([1, 2, 3]), 3)
 *
 * @category destructors
 * @since 2.10.0
 */
var matchLeft = function (onEmpty, onNonEmpty) { return function (as) {
    return exports.isNonEmpty(as) ? onNonEmpty(NEA.head(as), NEA.tail(as)) : onEmpty();
}; };
exports.matchLeft = matchLeft;
/**
 * Alias of [`matchLeft`](#matchleft).
 *
 * @category destructors
 * @since 2.0.0
 */
exports.foldLeft = exports.matchLeft;
/**
 * Break an array into its initial elements and the last element
 *
 * @category destructors
 * @since 2.10.0
 */
var matchRight = function (onEmpty, onNonEmpty) { return function (as) {
    return exports.isNonEmpty(as) ? onNonEmpty(NEA.init(as), NEA.last(as)) : onEmpty();
}; };
exports.matchRight = matchRight;
/**
 * Alias of [`matchRight`](#matchright).
 *
 * @category destructors
 * @since 2.0.0
 */
exports.foldRight = exports.matchRight;
// -------------------------------------------------------------------------------------
// combinators
// -------------------------------------------------------------------------------------
/**
 * @category combinators
 * @since 2.7.0
 */
var chainWithIndex = function (f) { return function (as) {
    var out = [];
    for (var i = 0; i < as.length; i++) {
        out.push.apply(out, f(i, as[i]));
    }
    return out;
}; };
exports.chainWithIndex = chainWithIndex;
/**
 * Same as `reduce` but it carries over the intermediate steps
 *
 * @example
 * import { scanLeft } from 'fp-ts/Array'
 *
 * assert.deepStrictEqual(scanLeft(10, (b, a: number) => b - a)([1, 2, 3]), [10, 9, 7, 4])
 *
 * @category combinators
 * @since 2.0.0
 */
var scanLeft = function (b, f) { return function (as) {
    var len = as.length;
    var out = new Array(len + 1);
    out[0] = b;
    for (var i = 0; i < len; i++) {
        out[i + 1] = f(out[i], as[i]);
    }
    return out;
}; };
exports.scanLeft = scanLeft;
/**
 * Fold an array from the right, keeping all intermediate results instead of only the final result
 *
 * @example
 * import { scanRight } from 'fp-ts/Array'
 *
 * assert.deepStrictEqual(scanRight(10, (a: number, b) => b - a)([1, 2, 3]), [4, 5, 7, 10])
 *
 * @category combinators
 * @since 2.0.0
 */
var scanRight = function (b, f) { return function (as) {
    var len = as.length;
    var out = new Array(len + 1);
    out[len] = b;
    for (var i = len - 1; i >= 0; i--) {
        out[i] = f(as[i], out[i + 1]);
    }
    return out;
}; };
exports.scanRight = scanRight;
/**
 * Test whether an array is empty
 *
 * @example
 * import { isEmpty } from 'fp-ts/Array'
 *
 * assert.strictEqual(isEmpty([]), true)
 *
 * @since 2.0.0
 */
exports.isEmpty = RA.isEmpty;
/**
 * Test whether an array is non empty narrowing down the type to `NonEmptyArray<A>`
 *
 * @category guards
 * @since 2.0.0
 */
exports.isNonEmpty = NEA.isNonEmpty;
/**
 * Calculate the number of elements in a `Array`.
 *
 * @since 2.10.0
 */
var size = function (as) { return as.length; };
exports.size = size;
/**
 * Test whether an array contains a particular index
 *
 * @since 2.0.0
 */
exports.isOutOfBound = NEA.isOutOfBound;
// TODO: remove non-curried overloading in v3
/**
 * This function provides a safe way to read a value at a particular index from an array
 *
 * @example
 * import { lookup } from 'fp-ts/Array'
 * import { some, none } from 'fp-ts/Option'
 * import { pipe } from 'fp-ts/function'
 *
 * assert.deepStrictEqual(pipe([1, 2, 3], lookup(1)), some(2))
 * assert.deepStrictEqual(pipe([1, 2, 3], lookup(3)), none)
 *
 * @since 2.0.0
 */
exports.lookup = RA.lookup;
/**
 * Get the first element in an array, or `None` if the array is empty
 *
 * @example
 * import { head } from 'fp-ts/Array'
 * import { some, none } from 'fp-ts/Option'
 *
 * assert.deepStrictEqual(head([1, 2, 3]), some(1))
 * assert.deepStrictEqual(head([]), none)
 *
 * @category destructors
 * @since 2.0.0
 */
exports.head = RA.head;
/**
 * Get the last element in an array, or `None` if the array is empty
 *
 * @example
 * import { last } from 'fp-ts/Array'
 * import { some, none } from 'fp-ts/Option'
 *
 * assert.deepStrictEqual(last([1, 2, 3]), some(3))
 * assert.deepStrictEqual(last([]), none)
 *
 * @category destructors
 * @since 2.0.0
 */
exports.last = RA.last;
/**
 * Get all but the first element of an array, creating a new array, or `None` if the array is empty
 *
 * @example
 * import { tail } from 'fp-ts/Array'
 * import { some, none } from 'fp-ts/Option'
 *
 * assert.deepStrictEqual(tail([1, 2, 3]), some([2, 3]))
 * assert.deepStrictEqual(tail([]), none)
 *
 * @category destructors
 * @since 2.0.0
 */
var tail = function (as) { return (exports.isNonEmpty(as) ? O.some(NEA.tail(as)) : O.none); };
exports.tail = tail;
/**
 * Get all but the last element of an array, creating a new array, or `None` if the array is empty
 *
 * @example
 * import { init } from 'fp-ts/Array'
 * import { some, none } from 'fp-ts/Option'
 *
 * assert.deepStrictEqual(init([1, 2, 3]), some([1, 2]))
 * assert.deepStrictEqual(init([]), none)
 *
 * @category destructors
 * @since 2.0.0
 */
var init = function (as) { return (exports.isNonEmpty(as) ? O.some(NEA.init(as)) : O.none); };
exports.init = init;
/**
 * Keep only a max number of elements from the start of an `Array`, creating a new `Array`.
 *
 * **Note**. `n` is normalized to a non negative integer.
 *
 * @example
 * import { takeLeft } from 'fp-ts/Array'
 *
 * assert.deepStrictEqual(takeLeft(2)([1, 2, 3]), [1, 2])
 *
 * @category combinators
 * @since 2.0.0
 */
var takeLeft = function (n) { return function (as) { return (exports.isOutOfBound(n, as) ? exports.copy(as) : as.slice(0, n)); }; };
exports.takeLeft = takeLeft;
/**
 * Keep only a max number of elements from the end of an `Array`, creating a new `Array`.
 *
 * **Note**. `n` is normalized to a non negative integer.
 *
 * @example
 * import { takeRight } from 'fp-ts/Array'
 *
 * assert.deepStrictEqual(takeRight(2)([1, 2, 3, 4, 5]), [4, 5])
 *
 * @category combinators
 * @since 2.0.0
 */
var takeRight = function (n) { return function (as) {
    return exports.isOutOfBound(n, as) ? exports.copy(as) : n === 0 ? [] : as.slice(-n);
}; };
exports.takeRight = takeRight;
function takeLeftWhile(predicate) {
    return function (as) {
        var out = [];
        for (var _i = 0, as_1 = as; _i < as_1.length; _i++) {
            var a = as_1[_i];
            if (!predicate(a)) {
                break;
            }
            out.push(a);
        }
        return out;
    };
}
exports.takeLeftWhile = takeLeftWhile;
var spanLeftIndex = function (as, predicate) {
    var l = as.length;
    var i = 0;
    for (; i < l; i++) {
        if (!predicate(as[i])) {
            break;
        }
    }
    return i;
};
function spanLeft(predicate) {
    return function (as) {
        var _a = exports.splitAt(spanLeftIndex(as, predicate))(as), init = _a[0], rest = _a[1];
        return { init: init, rest: rest };
    };
}
exports.spanLeft = spanLeft;
/**
 * Drop a max number of elements from the start of an `Array`, creating a new `Array`.
 *
 * **Note**. `n` is normalized to a non negative integer.
 *
 * @example
 * import { dropLeft } from 'fp-ts/Array'
 *
 * assert.deepStrictEqual(dropLeft(2)([1, 2, 3]), [3])
 *
 * @category combinators
 * @since 2.0.0
 */
var dropLeft = function (n) { return function (as) {
    return n <= 0 || exports.isEmpty(as) ? exports.copy(as) : n >= as.length ? [] : as.slice(n, as.length);
}; };
exports.dropLeft = dropLeft;
/**
 * Drop a max number of elements from the end of an `Array`, creating a new `Array`.
 *
 * **Note**. `n` is normalized to a non negative integer.
 *
 * @example
 * import { dropRight } from 'fp-ts/Array'
 *
 * assert.deepStrictEqual(dropRight(2)([1, 2, 3, 4, 5]), [1, 2, 3])
 *
 * @category combinators
 * @since 2.0.0
 */
var dropRight = function (n) { return function (as) {
    return n <= 0 || exports.isEmpty(as) ? exports.copy(as) : n >= as.length ? [] : as.slice(0, as.length - n);
}; };
exports.dropRight = dropRight;
/**
 * Remove the longest initial subarray for which all element satisfy the specified predicate, creating a new array
 *
 * @example
 * import { dropLeftWhile } from 'fp-ts/Array'
 *
 * assert.deepStrictEqual(dropLeftWhile((n: number) => n % 2 === 1)([1, 3, 2, 4, 5]), [2, 4, 5])
 *
 * @category combinators
 * @since 2.0.0
 */
var dropLeftWhile = function (predicate) { return function (as) {
    return as.slice(spanLeftIndex(as, predicate));
}; };
exports.dropLeftWhile = dropLeftWhile;
/**
 * Find the first index for which a predicate holds
 *
 * @example
 * import { findIndex } from 'fp-ts/Array'
 * import { some, none } from 'fp-ts/Option'
 *
 * assert.deepStrictEqual(findIndex((n: number) => n === 2)([1, 2, 3]), some(1))
 * assert.deepStrictEqual(findIndex((n: number) => n === 2)([]), none)
 *
 * @since 2.0.0
 */
exports.findIndex = RA.findIndex;
function findFirst(predicate) {
    return RA.findFirst(predicate);
}
exports.findFirst = findFirst;
/**
 * Find the first element returned by an option based selector function
 *
 * @example
 * import { findFirstMap } from 'fp-ts/Array'
 * import { some, none } from 'fp-ts/Option'
 *
 * interface Person {
 *   readonly name: string
 *   readonly age?: number
 * }
 *
 * const persons: Array<Person> = [{ name: 'John' }, { name: 'Mary', age: 45 }, { name: 'Joey', age: 28 }]
 *
 * // returns the name of the first person that has an age
 * assert.deepStrictEqual(findFirstMap((p: Person) => (p.age === undefined ? none : some(p.name)))(persons), some('Mary'))
 *
 * @category destructors
 * @since 2.0.0
 */
exports.findFirstMap = RA.findFirstMap;
function findLast(predicate) {
    return RA.findLast(predicate);
}
exports.findLast = findLast;
/**
 * Find the last element returned by an option based selector function
 *
 * @example
 * import { findLastMap } from 'fp-ts/Array'
 * import { some, none } from 'fp-ts/Option'
 *
 * interface Person {
 *   readonly name: string
 *   readonly age?: number
 * }
 *
 * const persons: Array<Person> = [{ name: 'John' }, { name: 'Mary', age: 45 }, { name: 'Joey', age: 28 }]
 *
 * // returns the name of the last person that has an age
 * assert.deepStrictEqual(findLastMap((p: Person) => (p.age === undefined ? none : some(p.name)))(persons), some('Joey'))
 *
 * @category destructors
 * @since 2.0.0
 */
exports.findLastMap = RA.findLastMap;
/**
 * Returns the index of the last element of the list which matches the predicate
 *
 * @example
 * import { findLastIndex } from 'fp-ts/Array'
 * import { some, none } from 'fp-ts/Option'
 *
 * interface X {
 *   readonly a: number
 *   readonly b: number
 * }
 * const xs: Array<X> = [{ a: 1, b: 0 }, { a: 1, b: 1 }]
 * assert.deepStrictEqual(findLastIndex((x: { readonly a: number }) => x.a === 1)(xs), some(1))
 * assert.deepStrictEqual(findLastIndex((x: { readonly a: number }) => x.a === 4)(xs), none)
 *
 *
 * @since 2.0.0
 */
exports.findLastIndex = RA.findLastIndex;
/**
 * @category combinators
 * @since 2.0.0
 */
var copy = function (as) { return as.slice(); };
exports.copy = copy;
/**
 * Insert an element at the specified index, creating a new array, or returning `None` if the index is out of bounds
 *
 * @example
 * import { insertAt } from 'fp-ts/Array'
 * import { some } from 'fp-ts/Option'
 *
 * assert.deepStrictEqual(insertAt(2, 5)([1, 2, 3, 4]), some([1, 2, 5, 3, 4]))
 *
 * @since 2.0.0
 */
var insertAt = function (i, a) { return function (as) {
    return i < 0 || i > as.length ? O.none : O.some(exports.unsafeInsertAt(i, a, as));
}; };
exports.insertAt = insertAt;
/**
 * Change the element at the specified index, creating a new array, or returning `None` if the index is out of bounds
 *
 * @example
 * import { updateAt } from 'fp-ts/Array'
 * import { some, none } from 'fp-ts/Option'
 *
 * assert.deepStrictEqual(updateAt(1, 1)([1, 2, 3]), some([1, 1, 3]))
 * assert.deepStrictEqual(updateAt(1, 1)([]), none)
 *
 * @since 2.0.0
 */
var updateAt = function (i, a) { return exports.modifyAt(i, function () { return a; }); };
exports.updateAt = updateAt;
/**
 * Delete the element at the specified index, creating a new array, or returning `None` if the index is out of bounds
 *
 * @example
 * import { deleteAt } from 'fp-ts/Array'
 * import { some, none } from 'fp-ts/Option'
 *
 * assert.deepStrictEqual(deleteAt(0)([1, 2, 3]), some([2, 3]))
 * assert.deepStrictEqual(deleteAt(1)([]), none)
 *
 * @since 2.0.0
 */
var deleteAt = function (i) { return function (as) {
    return exports.isOutOfBound(i, as) ? O.none : O.some(exports.unsafeDeleteAt(i, as));
}; };
exports.deleteAt = deleteAt;
/**
 * Apply a function to the element at the specified index, creating a new array, or returning `None` if the index is out
 * of bounds
 *
 * @example
 * import { modifyAt } from 'fp-ts/Array'
 * import { some, none } from 'fp-ts/Option'
 *
 * const double = (x: number): number => x * 2
 * assert.deepStrictEqual(modifyAt(1, double)([1, 2, 3]), some([1, 4, 3]))
 * assert.deepStrictEqual(modifyAt(1, double)([]), none)
 *
 * @since 2.0.0
 */
var modifyAt = function (i, f) { return function (as) {
    return exports.isOutOfBound(i, as) ? O.none : O.some(exports.unsafeUpdateAt(i, f(as[i]), as));
}; };
exports.modifyAt = modifyAt;
/**
 * Reverse an array, creating a new array
 *
 * @example
 * import { reverse } from 'fp-ts/Array'
 *
 * assert.deepStrictEqual(reverse([1, 2, 3]), [3, 2, 1])
 *
 * @category combinators
 * @since 2.0.0
 */
var reverse = function (as) { return (exports.isEmpty(as) ? [] : as.slice().reverse()); };
exports.reverse = reverse;
/**
 * Extracts from an array of `Either` all the `Right` elements. All the `Right` elements are extracted in order
 *
 * @example
 * import { rights } from 'fp-ts/Array'
 * import { right, left } from 'fp-ts/Either'
 *
 * assert.deepStrictEqual(rights([right(1), left('foo'), right(2)]), [1, 2])
 *
 * @category combinators
 * @since 2.0.0
 */
var rights = function (as) {
    var r = [];
    for (var i = 0; i < as.length; i++) {
        var a = as[i];
        if (a._tag === 'Right') {
            r.push(a.right);
        }
    }
    return r;
};
exports.rights = rights;
/**
 * Extracts from an array of `Either` all the `Left` elements. All the `Left` elements are extracted in order
 *
 * @example
 * import { lefts } from 'fp-ts/Array'
 * import { left, right } from 'fp-ts/Either'
 *
 * assert.deepStrictEqual(lefts([right(1), left('foo'), right(2)]), ['foo'])
 *
 * @category combinators
 * @since 2.0.0
 */
var lefts = function (as) {
    var r = [];
    for (var i = 0; i < as.length; i++) {
        var a = as[i];
        if (a._tag === 'Left') {
            r.push(a.left);
        }
    }
    return r;
};
exports.lefts = lefts;
/**
 * Sort the elements of an array in increasing order, creating a new array
 *
 * @example
 * import { sort } from 'fp-ts/Array'
 * import * as N from 'fp-ts/number'
 *
 * assert.deepStrictEqual(sort(N.Ord)([3, 2, 1]), [1, 2, 3])
 *
 * @category combinators
 * @since 2.0.0
 */
var sort = function (O) { return function (as) {
    return as.length <= 1 ? exports.copy(as) : as.slice().sort(O.compare);
}; };
exports.sort = sort;
/**
 * Apply a function to pairs of elements at the same index in two arrays, collecting the results in a new array. If one
 * input array is short, excess elements of the longer array are discarded.
 *
 * @example
 * import { zipWith } from 'fp-ts/Array'
 *
 * assert.deepStrictEqual(zipWith([1, 2, 3], ['a', 'b', 'c', 'd'], (n, s) => s + n), ['a1', 'b2', 'c3'])
 *
 * @category combinators
 * @since 2.0.0
 */
var zipWith = function (fa, fb, f) {
    var fc = [];
    var len = Math.min(fa.length, fb.length);
    for (var i = 0; i < len; i++) {
        fc[i] = f(fa[i], fb[i]);
    }
    return fc;
};
exports.zipWith = zipWith;
function zip(as, bs) {
    if (bs === undefined) {
        return function (bs) { return zip(bs, as); };
    }
    return exports.zipWith(as, bs, function (a, b) { return [a, b]; });
}
exports.zip = zip;
/**
 * The function is reverse of `zip`. Takes an array of pairs and return two corresponding arrays
 *
 * @example
 * import { unzip } from 'fp-ts/Array'
 *
 * assert.deepStrictEqual(unzip([[1, 'a'], [2, 'b'], [3, 'c']]), [[1, 2, 3], ['a', 'b', 'c']])
 *
 * @since 2.0.0
 */
var unzip = function (as) {
    var fa = [];
    var fb = [];
    for (var i = 0; i < as.length; i++) {
        fa[i] = as[i][0];
        fb[i] = as[i][1];
    }
    return [fa, fb];
};
exports.unzip = unzip;
/**
 * Prepend an element to every member of an array
 *
 * @example
 * import { prependAll } from 'fp-ts/Array'
 *
 * assert.deepStrictEqual(prependAll(9)([1, 2, 3, 4]), [9, 1, 9, 2, 9, 3, 9, 4])
 *
 * @category combinators
 * @since 2.10.0
 */
var prependAll = function (middle) {
    var f = NEA.prependAll(middle);
    return function (as) { return (exports.isNonEmpty(as) ? f(as) : []); };
};
exports.prependAll = prependAll;
/**
 * Places an element in between members of an array
 *
 * @example
 * import { intersperse } from 'fp-ts/Array'
 *
 * assert.deepStrictEqual(intersperse(9)([1, 2, 3, 4]), [1, 9, 2, 9, 3, 9, 4])
 *
 * @category combinators
 * @since 2.9.0
 */
var intersperse = function (middle) {
    var f = NEA.intersperse(middle);
    return function (as) { return (exports.isNonEmpty(as) ? f(as) : exports.copy(as)); };
};
exports.intersperse = intersperse;
/**
 * Rotate a `Array` by `n` steps.
 *
 * @example
 * import { rotate } from 'fp-ts/Array'
 *
 * assert.deepStrictEqual(rotate(2)([1, 2, 3, 4, 5]), [4, 5, 1, 2, 3])
 *
 * @category combinators
 * @since 2.0.0
 */
var rotate = function (n) {
    var f = NEA.rotate(n);
    return function (as) { return (exports.isNonEmpty(as) ? f(as) : exports.copy(as)); };
};
exports.rotate = rotate;
// TODO: remove non-curried overloading in v3
/**
 * Test if a value is a member of an array. Takes a `Eq<A>` as a single
 * argument which returns the function to use to search for a value of type `A` in
 * an array of type `Array<A>`.
 *
 * @example
 * import { elem } from 'fp-ts/Array'
 * import * as N from 'fp-ts/number'
 * import { pipe } from 'fp-ts/function'
 *
 * assert.strictEqual(pipe([1, 2, 3], elem(N.Eq)(2)), true)
 * assert.strictEqual(pipe([1, 2, 3], elem(N.Eq)(0)), false)
 *
 * @since 2.0.0
 */
exports.elem = RA.elem;
/**
 * Remove duplicates from an array, keeping the first occurrence of an element.
 *
 * @example
 * import { uniq } from 'fp-ts/Array'
 * import * as N from 'fp-ts/number'
 *
 * assert.deepStrictEqual(uniq(N.Eq)([1, 2, 1]), [1, 2])
 *
 * @category combinators
 * @since 2.0.0
 */
var uniq = function (E) {
    var f = NEA.uniq(E);
    return function (as) { return (exports.isNonEmpty(as) ? f(as) : exports.copy(as)); };
};
exports.uniq = uniq;
/**
 * Sort the elements of an array in increasing order, where elements are compared using first `ords[0]`, then `ords[1]`,
 * etc...
 *
 * @example
 * import { sortBy } from 'fp-ts/Array'
 * import { contramap } from 'fp-ts/Ord'
 * import * as S from 'fp-ts/string'
 * import * as N from 'fp-ts/number'
 * import { pipe } from 'fp-ts/function'
 *
 * interface Person {
 *   readonly name: string
 *   readonly age: number
 * }
 * const byName = pipe(S.Ord, contramap((p: Person) => p.name))
 * const byAge = pipe(N.Ord, contramap((p: Person) => p.age))
 *
 * const sortByNameByAge = sortBy([byName, byAge])
 *
 * const persons = [{ name: 'a', age: 1 }, { name: 'b', age: 3 }, { name: 'c', age: 2 }, { name: 'b', age: 2 }]
 * assert.deepStrictEqual(sortByNameByAge(persons), [
 *   { name: 'a', age: 1 },
 *   { name: 'b', age: 2 },
 *   { name: 'b', age: 3 },
 *   { name: 'c', age: 2 }
 * ])
 *
 * @category combinators
 * @since 2.0.0
 */
var sortBy = function (ords) {
    var f = NEA.sortBy(ords);
    return function (as) { return (exports.isNonEmpty(as) ? f(as) : exports.copy(as)); };
};
exports.sortBy = sortBy;
/**
 * A useful recursion pattern for processing an array to produce a new array, often used for "chopping" up the input
 * array. Typically chop is called with some function that will consume an initial prefix of the array and produce a
 * value and the rest of the array.
 *
 * @example
 * import { Eq } from 'fp-ts/Eq'
 * import * as A from 'fp-ts/Array'
 * import * as N from 'fp-ts/number'
 * import { pipe } from 'fp-ts/function'
 *
 * const group = <A>(S: Eq<A>): ((as: Array<A>) => Array<Array<A>>) => {
 *   return A.chop(as => {
 *     const { init, rest } = pipe(as, A.spanLeft((a: A) => S.equals(a, as[0])))
 *     return [init, rest]
 *   })
 * }
 * assert.deepStrictEqual(group(N.Eq)([1, 1, 2, 3, 3, 4]), [[1, 1], [2], [3, 3], [4]])
 *
 * @category combinators
 * @since 2.0.0
 */
var chop = function (f) {
    var g = NEA.chop(f);
    return function (as) { return (exports.isNonEmpty(as) ? g(as) : []); };
};
exports.chop = chop;
/**
 * Splits an `Array` into two pieces, the first piece has max `n` elements.
 *
 * @example
 * import { splitAt } from 'fp-ts/Array'
 *
 * assert.deepStrictEqual(splitAt(2)([1, 2, 3, 4, 5]), [[1, 2], [3, 4, 5]])
 *
 * @category combinators
 * @since 2.0.0
 */
var splitAt = function (n) { return function (as) {
    return n >= 1 && exports.isNonEmpty(as) ? NEA.splitAt(n)(as) : exports.isEmpty(as) ? [exports.copy(as), []] : [[], exports.copy(as)];
}; };
exports.splitAt = splitAt;
/**
 * Splits an array into length-`n` pieces. The last piece will be shorter if `n` does not evenly divide the length of
 * the array. Note that `chunksOf(n)([])` is `[]`, not `[[]]`. This is intentional, and is consistent with a recursive
 * definition of `chunksOf`; it satisfies the property that
 *
 * ```ts
 * chunksOf(n)(xs).concat(chunksOf(n)(ys)) == chunksOf(n)(xs.concat(ys)))
 * ```
 *
 * whenever `n` evenly divides the length of `xs`.
 *
 * @example
 * import { chunksOf } from 'fp-ts/Array'
 *
 * assert.deepStrictEqual(chunksOf(2)([1, 2, 3, 4, 5]), [[1, 2], [3, 4], [5]])
 *
 * @category combinators
 * @since 2.0.0
 */
var chunksOf = function (n) {
    var f = NEA.chunksOf(n);
    return function (as) { return (exports.isNonEmpty(as) ? f(as) : []); };
};
exports.chunksOf = chunksOf;
function comprehension(input, f, g) {
    if (g === void 0) { g = function () { return true; }; }
    var go = function (scope, input) {
        return exports.isNonEmpty(input)
            ? function_1.pipe(NEA.head(input), exports.chain(function (x) { return go(function_1.pipe(scope, exports.append(x)), NEA.tail(input)); }))
            : g.apply(void 0, scope) ? [f.apply(void 0, scope)]
                : [];
    };
    return go([], input);
}
exports.comprehension = comprehension;
function union(E) {
    var unionE = NEA.union(E);
    return function (first, second) {
        if (second === undefined) {
            var unionE_1 = union(E);
            return function (ys) { return unionE_1(ys, first); };
        }
        return exports.isNonEmpty(first) && exports.isNonEmpty(second)
            ? unionE(first, second)
            : exports.isNonEmpty(first)
                ? exports.copy(first)
                : exports.copy(second);
    };
}
exports.union = union;
function intersection(E) {
    var elemE = exports.elem(E);
    return function (xs, ys) {
        if (ys === undefined) {
            var intersectionE_1 = intersection(E);
            return function (ys) { return intersectionE_1(ys, xs); };
        }
        return xs.filter(function (a) { return elemE(a, ys); });
    };
}
exports.intersection = intersection;
function difference(E) {
    var elemE = exports.elem(E);
    return function (xs, ys) {
        if (ys === undefined) {
            var differenceE_1 = difference(E);
            return function (ys) { return differenceE_1(ys, xs); };
        }
        return xs.filter(function (a) { return !elemE(a, ys); });
    };
}
exports.difference = difference;
// -------------------------------------------------------------------------------------
// non-pipeables
// -------------------------------------------------------------------------------------
var _map = function (fa, f) { return function_1.pipe(fa, exports.map(f)); };
/* istanbul ignore next */
var _mapWithIndex = function (fa, f) { return function_1.pipe(fa, exports.mapWithIndex(f)); };
var _ap = function (fab, fa) { return function_1.pipe(fab, exports.ap(fa)); };
var _chain = function (ma, f) { return function_1.pipe(ma, exports.chain(f)); };
/* istanbul ignore next */
var _filter = function (fa, predicate) { return function_1.pipe(fa, exports.filter(predicate)); };
/* istanbul ignore next */
var _filterMap = function (fa, f) { return function_1.pipe(fa, exports.filterMap(f)); };
/* istanbul ignore next */
var _partition = function (fa, predicate) {
    return function_1.pipe(fa, exports.partition(predicate));
};
/* istanbul ignore next */
var _partitionMap = function (fa, f) { return function_1.pipe(fa, exports.partitionMap(f)); };
/* istanbul ignore next */
var _partitionWithIndex = function (fa, predicateWithIndex) { return function_1.pipe(fa, exports.partitionWithIndex(predicateWithIndex)); };
/* istanbul ignore next */
var _partitionMapWithIndex = function (fa, f) { return function_1.pipe(fa, exports.partitionMapWithIndex(f)); };
/* istanbul ignore next */
var _alt = function (fa, that) { return function_1.pipe(fa, exports.alt(that)); };
var _reduce = function (fa, b, f) { return function_1.pipe(fa, exports.reduce(b, f)); };
/* istanbul ignore next */
var _foldMap = function (M) {
    var foldMapM = exports.foldMap(M);
    return function (fa, f) { return function_1.pipe(fa, foldMapM(f)); };
};
/* istanbul ignore next */
var _reduceRight = function (fa, b, f) { return function_1.pipe(fa, exports.reduceRight(b, f)); };
/* istanbul ignore next */
var _reduceWithIndex = function (fa, b, f) {
    return function_1.pipe(fa, exports.reduceWithIndex(b, f));
};
/* istanbul ignore next */
var _foldMapWithIndex = function (M) {
    var foldMapWithIndexM = exports.foldMapWithIndex(M);
    return function (fa, f) { return function_1.pipe(fa, foldMapWithIndexM(f)); };
};
/* istanbul ignore next */
var _reduceRightWithIndex = function (fa, b, f) {
    return function_1.pipe(fa, exports.reduceRightWithIndex(b, f));
};
/* istanbul ignore next */
var _filterMapWithIndex = function (fa, f) { return function_1.pipe(fa, exports.filterMapWithIndex(f)); };
/* istanbul ignore next */
var _filterWithIndex = function (fa, predicateWithIndex) { return function_1.pipe(fa, exports.filterWithIndex(predicateWithIndex)); };
/* istanbul ignore next */
var _extend = function (fa, f) { return function_1.pipe(fa, exports.extend(f)); };
/* istanbul ignore next */
var _traverse = function (F) {
    var traverseF = exports.traverse(F);
    return function (ta, f) { return function_1.pipe(ta, traverseF(f)); };
};
/* istanbul ignore next */
var _traverseWithIndex = function (F) {
    var traverseWithIndexF = exports.traverseWithIndex(F);
    return function (ta, f) { return function_1.pipe(ta, traverseWithIndexF(f)); };
};
/* istanbul ignore next */
var _wither = function (F) {
    var witherF = exports.wither(F);
    return function (fa, f) { return function_1.pipe(fa, witherF(f)); };
};
/* istanbul ignore next */
var _wilt = function (F) {
    var wiltF = exports.wilt(F);
    return function (fa, f) { return function_1.pipe(fa, wiltF(f)); };
};
// -------------------------------------------------------------------------------------
// type class members
// -------------------------------------------------------------------------------------
/**
 * @category Pointed
 * @since 2.0.0
 */
exports.of = NEA.of;
/**
 * @category Alternative
 * @since 2.7.0
 */
var zero = function () { return []; };
exports.zero = zero;
/**
 * `map` can be used to turn functions `(a: A) => B` into functions `(fa: F<A>) => F<B>` whose argument and return types
 * use the type constructor `F` to represent some computational context.
 *
 * @category Functor
 * @since 2.0.0
 */
var map = function (f) { return function (fa) { return fa.map(function (a) { return f(a); }); }; };
exports.map = map;
/**
 * Apply a function to an argument under a type constructor.
 *
 * @category Apply
 * @since 2.0.0
 */
var ap = function (fa) { return exports.chain(function (f) { return function_1.pipe(fa, exports.map(f)); }); };
exports.ap = ap;
/**
 * Composes computations in sequence, using the return value of one computation to determine the next computation.
 *
 * @category Monad
 * @since 2.0.0
 */
var chain = function (f) { return function (ma) {
    return function_1.pipe(ma, exports.chainWithIndex(function (_, a) { return f(a); }));
}; };
exports.chain = chain;
/**
 * Derivable from `Chain`.
 *
 * @category combinators
 * @since 2.5.0
 */
exports.flatten = 
/*#__PURE__*/
exports.chain(function_1.identity);
/**
 * @category FunctorWithIndex
 * @since 2.0.0
 */
var mapWithIndex = function (f) { return function (fa) {
    return fa.map(function (a, i) { return f(i, a); });
}; };
exports.mapWithIndex = mapWithIndex;
/**
 * @category FilterableWithIndex
 * @since 2.0.0
 */
var filterMapWithIndex = function (f) { return function (fa) {
    var out = [];
    for (var i = 0; i < fa.length; i++) {
        var optionB = f(i, fa[i]);
        if (O.isSome(optionB)) {
            out.push(optionB.value);
        }
    }
    return out;
}; };
exports.filterMapWithIndex = filterMapWithIndex;
/**
 * @category Filterable
 * @since 2.0.0
 */
var filterMap = function (f) {
    return exports.filterMapWithIndex(function (_, a) { return f(a); });
};
exports.filterMap = filterMap;
/**
 * @category Compactable
 * @since 2.0.0
 */
exports.compact = 
/*#__PURE__*/
exports.filterMap(function_1.identity);
/**
 * @category Compactable
 * @since 2.0.0
 */
var separate = function (fa) {
    var left = [];
    var right = [];
    for (var _i = 0, fa_1 = fa; _i < fa_1.length; _i++) {
        var e = fa_1[_i];
        if (e._tag === 'Left') {
            left.push(e.left);
        }
        else {
            right.push(e.right);
        }
    }
    return Separated_1.separated(left, right);
};
exports.separate = separate;
/**
 * @category Filterable
 * @since 2.0.0
 */
var filter = function (predicate) { return function (fa) { return fa.filter(predicate); }; };
exports.filter = filter;
/**
 * @category Filterable
 * @since 2.0.0
 */
var partition = function (predicate) {
    return exports.partitionWithIndex(function (_, a) { return predicate(a); });
};
exports.partition = partition;
/**
 * @category FilterableWithIndex
 * @since 2.0.0
 */
var partitionWithIndex = function (predicateWithIndex) { return function (fa) {
    var left = [];
    var right = [];
    for (var i = 0; i < fa.length; i++) {
        var a = fa[i];
        if (predicateWithIndex(i, a)) {
            right.push(a);
        }
        else {
            left.push(a);
        }
    }
    return Separated_1.separated(left, right);
}; };
exports.partitionWithIndex = partitionWithIndex;
/**
 * @category Filterable
 * @since 2.0.0
 */
var partitionMap = function (f) { return exports.partitionMapWithIndex(function (_, a) { return f(a); }); };
exports.partitionMap = partitionMap;
/**
 * @category FilterableWithIndex
 * @since 2.0.0
 */
var partitionMapWithIndex = function (f) { return function (fa) {
    var left = [];
    var right = [];
    for (var i = 0; i < fa.length; i++) {
        var e = f(i, fa[i]);
        if (e._tag === 'Left') {
            left.push(e.left);
        }
        else {
            right.push(e.right);
        }
    }
    return Separated_1.separated(left, right);
}; };
exports.partitionMapWithIndex = partitionMapWithIndex;
/**
 * Less strict version of [`alt`](#alt).
 *
 * @category Alt
 * @since 2.9.0
 */
var altW = function (that) { return function (fa) { return fa.concat(that()); }; };
exports.altW = altW;
/**
 * Identifies an associative operation on a type constructor. It is similar to `Semigroup`, except that it applies to
 * types of kind `* -> *`.
 *
 * @category Alt
 * @since 2.0.0
 */
exports.alt = exports.altW;
/**
 * @category FilterableWithIndex
 * @since 2.0.0
 */
var filterWithIndex = function (predicateWithIndex) { return function (fa) {
    return fa.filter(function (a, i) { return predicateWithIndex(i, a); });
}; };
exports.filterWithIndex = filterWithIndex;
/**
 * @category Extend
 * @since 2.0.0
 */
var extend = function (f) { return function (wa) {
    return wa.map(function (_, i) { return f(wa.slice(i)); });
}; };
exports.extend = extend;
/**
 * Derivable from `Extend`.
 *
 * @category combinators
 * @since 2.0.0
 */
exports.duplicate = 
/*#__PURE__*/
exports.extend(function_1.identity);
/**
 * @category Foldable
 * @since 2.0.0
 */
exports.foldMap = RA.foldMap;
/**
 * @category FoldableWithIndex
 * @since 2.0.0
 */
exports.foldMapWithIndex = RA.foldMapWithIndex;
/**
 * @category Foldable
 * @since 2.0.0
 */
exports.reduce = RA.reduce;
/**
 * @category FoldableWithIndex
 * @since 2.0.0
 */
exports.reduceWithIndex = RA.reduceWithIndex;
/**
 * @category Foldable
 * @since 2.0.0
 */
exports.reduceRight = RA.reduceRight;
/**
 * @category FoldableWithIndex
 * @since 2.0.0
 */
exports.reduceRightWithIndex = RA.reduceRightWithIndex;
/**
 * @category Traversable
 * @since 2.6.3
 */
var traverse = function (F) {
    var traverseWithIndexF = exports.traverseWithIndex(F);
    return function (f) { return traverseWithIndexF(function (_, a) { return f(a); }); };
};
exports.traverse = traverse;
/**
 * @category Traversable
 * @since 2.6.3
 */
var sequence = function (F) { return function (ta) {
    return _reduce(ta, F.of(exports.zero()), function (fas, fa) {
        return F.ap(F.map(fas, function (as) { return function (a) { return function_1.pipe(as, exports.append(a)); }; }), fa);
    });
}; };
exports.sequence = sequence;
/**
 * @category TraversableWithIndex
 * @since 2.6.3
 */
var traverseWithIndex = function (F) { return function (f) {
    return exports.reduceWithIndex(F.of(exports.zero()), function (i, fbs, a) {
        return F.ap(F.map(fbs, function (bs) { return function (b) { return function_1.pipe(bs, exports.append(b)); }; }), f(i, a));
    });
}; };
exports.traverseWithIndex = traverseWithIndex;
/**
 * @category Witherable
 * @since 2.6.5
 */
var wither = function (F) {
    var traverseF = exports.traverse(F);
    return function (f) { return function (fa) { return F.map(function_1.pipe(fa, traverseF(f)), exports.compact); }; };
};
exports.wither = wither;
/**
 * @category Witherable
 * @since 2.6.5
 */
var wilt = function (F) {
    var traverseF = exports.traverse(F);
    return function (f) { return function (fa) { return F.map(function_1.pipe(fa, traverseF(f)), exports.separate); }; };
};
exports.wilt = wilt;
/**
 * @category Unfoldable
 * @since 2.6.6
 */
var unfold = function (b, f) {
    var out = [];
    var bb = b;
    while (true) {
        var mt = f(bb);
        if (O.isSome(mt)) {
            var _a = mt.value, a = _a[0], b_1 = _a[1];
            out.push(a);
            bb = b_1;
        }
        else {
            break;
        }
    }
    return out;
};
exports.unfold = unfold;
// -------------------------------------------------------------------------------------
// instances
// -------------------------------------------------------------------------------------
/**
 * @category instances
 * @since 2.0.0
 */
exports.URI = 'Array';
/**
 * @category instances
 * @since 2.0.0
 */
exports.getShow = RA.getShow;
/**
 * @category instances
 * @since 2.10.0
 */
var getSemigroup = function () { return ({
    concat: function (first, second) { return first.concat(second); }
}); };
exports.getSemigroup = getSemigroup;
/**
 * Returns a `Monoid` for `Array<A>`
 *
 * @example
 * import { getMonoid } from 'fp-ts/Array'
 *
 * const M = getMonoid<number>()
 * assert.deepStrictEqual(M.concat([1, 2], [3, 4]), [1, 2, 3, 4])
 *
 * @category instances
 * @since 2.0.0
 */
var getMonoid = function () { return ({
    concat: exports.getSemigroup().concat,
    empty: []
}); };
exports.getMonoid = getMonoid;
/**
 * Derives an `Eq` over the `Array` of a given element type from the `Eq` of that type. The derived `Eq` defines two
 * arrays as equal if all elements of both arrays are compared equal pairwise with the given `E`. In case of arrays of
 * different lengths, the result is non equality.
 *
 * @example
 * import * as S from 'fp-ts/string'
 * import { getEq } from 'fp-ts/Array'
 *
 * const E = getEq(S.Eq)
 * assert.strictEqual(E.equals(['a', 'b'], ['a', 'b']), true)
 * assert.strictEqual(E.equals(['a'], []), false)
 *
 * @category instances
 * @since 2.0.0
 */
exports.getEq = RA.getEq;
/**
 * Derives an `Ord` over the `Array` of a given element type from the `Ord` of that type. The ordering between two such
 * arrays is equal to: the first non equal comparison of each arrays elements taken pairwise in increasing order, in
 * case of equality over all the pairwise elements; the longest array is considered the greatest, if both arrays have
 * the same length, the result is equality.
 *
 * @example
 * import { getOrd } from 'fp-ts/Array'
 * import * as S from 'fp-ts/string'
 *
 * const O = getOrd(S.Ord)
 * assert.strictEqual(O.compare(['b'], ['a']), 1)
 * assert.strictEqual(O.compare(['a'], ['a']), 0)
 * assert.strictEqual(O.compare(['a'], ['b']), -1)
 *
 * @category instances
 * @since 2.0.0
 */
exports.getOrd = RA.getOrd;
/**
 * @category instances
 * @since 2.7.0
 */
exports.Functor = {
    URI: exports.URI,
    map: _map
};
/**
 * Derivable from `Functor`.
 *
 * @category combinators
 * @since 2.10.0
 */
exports.flap = 
/*#_PURE_*/
Functor_1.flap(exports.Functor);
/**
 * @category instances
 * @since 2.10.0
 */
exports.Pointed = {
    URI: exports.URI,
    of: exports.of
};
/**
 * @category instances
 * @since 2.7.0
 */
exports.FunctorWithIndex = {
    URI: exports.URI,
    map: _map,
    mapWithIndex: _mapWithIndex
};
/**
 * @category instances
 * @since 2.10.0
 */
exports.Apply = {
    URI: exports.URI,
    map: _map,
    ap: _ap
};
/**
 * Combine two effectful actions, keeping only the result of the first.
 *
 * Derivable from `Apply`.
 *
 * @category combinators
 * @since 2.5.0
 */
exports.apFirst = 
/*#__PURE__*/
Apply_1.apFirst(exports.Apply);
/**
 * Combine two effectful actions, keeping only the result of the second.
 *
 * Derivable from `Apply`.
 *
 * @category combinators
 * @since 2.5.0
 */
exports.apSecond = 
/*#__PURE__*/
Apply_1.apSecond(exports.Apply);
/**
 * @category instances
 * @since 2.7.0
 */
exports.Applicative = {
    URI: exports.URI,
    map: _map,
    ap: _ap,
    of: exports.of
};
/**
 * @category instances
 * @since 2.10.0
 */
exports.Chain = {
    URI: exports.URI,
    map: _map,
    ap: _ap,
    chain: _chain
};
/**
 * Composes computations in sequence, using the return value of one computation to determine the next computation and
 * keeping only the result of the first.
 *
 * Derivable from `Chain`.
 *
 * @category combinators
 * @since 2.0.0
 */
exports.chainFirst = 
/*#__PURE__*/
Chain_1.chainFirst(exports.Chain);
/**
 * @category instances
 * @since 2.7.0
 */
exports.Monad = {
    URI: exports.URI,
    map: _map,
    ap: _ap,
    of: exports.of,
    chain: _chain
};
/**
 * @category instances
 * @since 2.7.0
 */
exports.Unfoldable = {
    URI: exports.URI,
    unfold: exports.unfold
};
/**
 * @category instances
 * @since 2.7.0
 */
exports.Alt = {
    URI: exports.URI,
    map: _map,
    alt: _alt
};
/**
 * @category instances
 * @since 2.7.0
 */
exports.Alternative = {
    URI: exports.URI,
    map: _map,
    ap: _ap,
    of: exports.of,
    alt: _alt,
    zero: exports.zero
};
/**
 * @category instances
 * @since 2.7.0
 */
exports.Extend = {
    URI: exports.URI,
    map: _map,
    extend: _extend
};
/**
 * @category instances
 * @since 2.7.0
 */
exports.Compactable = {
    URI: exports.URI,
    compact: exports.compact,
    separate: exports.separate
};
/**
 * @category instances
 * @since 2.7.0
 */
exports.Filterable = {
    URI: exports.URI,
    map: _map,
    compact: exports.compact,
    separate: exports.separate,
    filter: _filter,
    filterMap: _filterMap,
    partition: _partition,
    partitionMap: _partitionMap
};
/**
 * @category instances
 * @since 2.7.0
 */
exports.FilterableWithIndex = {
    URI: exports.URI,
    map: _map,
    mapWithIndex: _mapWithIndex,
    compact: exports.compact,
    separate: exports.separate,
    filter: _filter,
    filterMap: _filterMap,
    partition: _partition,
    partitionMap: _partitionMap,
    partitionMapWithIndex: _partitionMapWithIndex,
    partitionWithIndex: _partitionWithIndex,
    filterMapWithIndex: _filterMapWithIndex,
    filterWithIndex: _filterWithIndex
};
/**
 * @category instances
 * @since 2.7.0
 */
exports.Foldable = {
    URI: exports.URI,
    reduce: _reduce,
    foldMap: _foldMap,
    reduceRight: _reduceRight
};
/**
 * @category instances
 * @since 2.7.0
 */
exports.FoldableWithIndex = {
    URI: exports.URI,
    reduce: _reduce,
    foldMap: _foldMap,
    reduceRight: _reduceRight,
    reduceWithIndex: _reduceWithIndex,
    foldMapWithIndex: _foldMapWithIndex,
    reduceRightWithIndex: _reduceRightWithIndex
};
/**
 * @category instances
 * @since 2.7.0
 */
exports.Traversable = {
    URI: exports.URI,
    map: _map,
    reduce: _reduce,
    foldMap: _foldMap,
    reduceRight: _reduceRight,
    traverse: _traverse,
    sequence: exports.sequence
};
/**
 * @category instances
 * @since 2.7.0
 */
exports.TraversableWithIndex = {
    URI: exports.URI,
    map: _map,
    mapWithIndex: _mapWithIndex,
    reduce: _reduce,
    foldMap: _foldMap,
    reduceRight: _reduceRight,
    reduceWithIndex: _reduceWithIndex,
    foldMapWithIndex: _foldMapWithIndex,
    reduceRightWithIndex: _reduceRightWithIndex,
    traverse: _traverse,
    sequence: exports.sequence,
    traverseWithIndex: _traverseWithIndex
};
/**
 * @category instances
 * @since 2.7.0
 */
exports.Witherable = {
    URI: exports.URI,
    map: _map,
    compact: exports.compact,
    separate: exports.separate,
    filter: _filter,
    filterMap: _filterMap,
    partition: _partition,
    partitionMap: _partitionMap,
    reduce: _reduce,
    foldMap: _foldMap,
    reduceRight: _reduceRight,
    traverse: _traverse,
    sequence: exports.sequence,
    wither: _wither,
    wilt: _wilt
};
// -------------------------------------------------------------------------------------
// unsafe
// -------------------------------------------------------------------------------------
/**
 * @category unsafe
 * @since 2.0.0
 */
exports.unsafeInsertAt = NEA.unsafeInsertAt;
/**
 * @category unsafe
 * @since 2.0.0
 */
var unsafeUpdateAt = function (i, a, as) {
    return exports.isNonEmpty(as) ? NEA.unsafeUpdateAt(i, a, as) : [];
};
exports.unsafeUpdateAt = unsafeUpdateAt;
/**
 * @category unsafe
 * @since 2.0.0
 */
var unsafeDeleteAt = function (i, as) {
    var xs = as.slice();
    xs.splice(i, 1);
    return xs;
};
exports.unsafeDeleteAt = unsafeDeleteAt;
// -------------------------------------------------------------------------------------
// utils
// -------------------------------------------------------------------------------------
/**
 * @since 2.9.0
 */
exports.every = RA.every;
/**
 * @since 2.9.0
 */
var some = function (predicate) { return function (as) { return as.some(predicate); }; };
exports.some = some;
// -------------------------------------------------------------------------------------
// do notation
// -------------------------------------------------------------------------------------
/**
 * @since 2.9.0
 */
exports.Do = 
/*#__PURE__*/
exports.of({});
/**
 * @since 2.8.0
 */
exports.bindTo = 
/*#__PURE__*/
Functor_1.bindTo(exports.Functor);
/**
 * @since 2.8.0
 */
exports.bind = 
/*#__PURE__*/
Chain_1.bind(exports.Chain);
// -------------------------------------------------------------------------------------
// pipeable sequence S
// -------------------------------------------------------------------------------------
/**
 * @since 2.8.0
 */
exports.apS = 
/*#__PURE__*/
Apply_1.apS(exports.Apply);
// -------------------------------------------------------------------------------------
// deprecated
// -------------------------------------------------------------------------------------
/**
 * Use a new `[]` instead.
 *
 * @since 2.0.0
 * @deprecated
 */
exports.empty = [];
/**
 * Use `prepend` instead.
 *
 * @category constructors
 * @since 2.0.0
 * @deprecated
 */
// tslint:disable-next-line: deprecation
exports.cons = NEA.cons;
/**
 * Use `append` instead.
 *
 * @category constructors
 * @since 2.0.0
 * @deprecated
 */
// tslint:disable-next-line: deprecation
exports.snoc = NEA.snoc;
/**
 * Use `prependAll` instead
 *
 * @category combinators
 * @since 2.9.0
 * @deprecated
 */
exports.prependToAll = exports.prependAll;
/**
 * Use small, specific instances instead.
 *
 * @category instances
 * @since 2.0.0
 * @deprecated
 */
exports.array = {
    URI: exports.URI,
    compact: exports.compact,
    separate: exports.separate,
    map: _map,
    ap: _ap,
    of: exports.of,
    chain: _chain,
    filter: _filter,
    filterMap: _filterMap,
    partition: _partition,
    partitionMap: _partitionMap,
    mapWithIndex: _mapWithIndex,
    partitionMapWithIndex: _partitionMapWithIndex,
    partitionWithIndex: _partitionWithIndex,
    filterMapWithIndex: _filterMapWithIndex,
    filterWithIndex: _filterWithIndex,
    alt: _alt,
    zero: exports.zero,
    unfold: exports.unfold,
    reduce: _reduce,
    foldMap: _foldMap,
    reduceRight: _reduceRight,
    traverse: _traverse,
    sequence: exports.sequence,
    reduceWithIndex: _reduceWithIndex,
    foldMapWithIndex: _foldMapWithIndex,
    reduceRightWithIndex: _reduceRightWithIndex,
    traverseWithIndex: _traverseWithIndex,
    extend: _extend,
    wither: _wither,
    wilt: _wilt
};

},{"./Apply":"../node_modules/fp-ts/lib/Apply.js","./Chain":"../node_modules/fp-ts/lib/Chain.js","./function":"../node_modules/fp-ts/lib/function.js","./Functor":"../node_modules/fp-ts/lib/Functor.js","./NonEmptyArray":"../node_modules/fp-ts/lib/NonEmptyArray.js","./Option":"../node_modules/fp-ts/lib/Option.js","./ReadonlyArray":"../node_modules/fp-ts/lib/ReadonlyArray.js","./Separated":"../node_modules/fp-ts/lib/Separated.js"}],"scalar-grid-field.ts":[function(require,module,exports) {
"use strict";

var __assign = this && this.__assign || function () {
  __assign = Object.assign || function (t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];

      for (var p in s) {
        if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
      }
    }

    return t;
  };

  return __assign.apply(this, arguments);
};

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.fromContinuousField = exports.init = exports.scale = exports.mapValues = exports.setValueAt = exports.emptyField = exports.evaluateByWorldCoordinate = exports.evaluateSmooth = exports.evaluateDiscrete = exports.calculateFlatIndex = void 0;

var Array_1 = require("fp-ts/lib/Array");

var function_1 = require("fp-ts/lib/function");

var vec2_1 = require("../lib/vec2");

var grid_field_1 = require("./grid-field");

var util_1 = require("./util");

function repeatInt(s, n) {
  return n - Math.round(Math.floor(n / s)) * s;
}

function repeatPoint(size, point) {
  return [repeatInt(size[0], point[0]), repeatInt(size[1], point[1])];
}

function calculateFlatIndex(width, _a) {
  var x = _a[0],
      y = _a[1];
  return y * width + x;
}

exports.calculateFlatIndex = calculateFlatIndex;

function calculateFlatRepeatingIndex(size, point) {
  return calculateFlatIndex(size[0], repeatPoint(size, point));
}

function evaluateFlat2DArray(size, coo, array) {
  return array[calculateFlatIndex(size[0], coo)];
}

function evaluateFlatRepeating2DArray(size, _a, array) {
  var x = _a[0],
      y = _a[1];
  return evaluateFlat2DArray(size, [repeatInt(size[0], x), repeatInt(size[1], y)], array);
}

exports.evaluateDiscrete = function (field) {
  return function (point) {
    return evaluateFlatRepeating2DArray(field.size, point, field.values);
  };
}; //point is in grid-space


exports.evaluateSmooth = function (field) {
  return function (point) {
    var bottomLeft = vec2_1.mapComponents(Math.floor)(point);
    var lerpCoordinates = vec2_1.subtract(point, bottomLeft);
    var x = bottomLeft[0],
        y = bottomLeft[1];
    var evalDisc = exports.evaluateDiscrete(field);
    return util_1.interpolate(util_1.interpolate(evalDisc([x, y]), evalDisc([x + 1, y]), lerpCoordinates[0]), util_1.interpolate(evalDisc([x, y + 1]), evalDisc([x + 1, y + 1]), lerpCoordinates[0]), lerpCoordinates[1]);
  };
};

exports.evaluateByWorldCoordinate = function (field) {
  return function_1.flow(grid_field_1.worldToGridCoordinate(field), exports.evaluateSmooth(field));
};

function emptyField(args) {
  return {
    position: args.position,
    size: args.size,
    cellSize: args.cellSize,
    values: Array_1.range(0, args.size[0] * args.size[1] - 1).map(function_1.constant(0))
  };
}

exports.emptyField = emptyField;

exports.setValueAt = function (coo, value) {
  return function (field) {
    var newValues = field.values.slice();
    newValues[calculateFlatIndex(field.size[0], coo)] = value;
    return __assign(__assign({}, field), {
      values: newValues
    });
  };
};

exports.mapValues = function (map) {
  return function (field) {
    return __assign(__assign({}, field), {
      values: field.values.map(map)
    });
  };
};

exports.scale = function (scale) {
  return exports.mapValues(function (n) {
    return n * scale;
  });
};

function init(initFunc, from) {
  var _a = from.size,
      w = _a[0],
      h = _a[1];
  var newValues = [];

  for (var y = 0; y < w; y++) {
    for (var x = 0; x < h; x++) {
      newValues[calculateFlatIndex(w, [x, y])] = initFunc([x, y]);
    }
  }

  return __assign(__assign({}, from), {
    values: newValues
  });
}

exports.init = init;

exports.fromContinuousField = function (args, scalarField) {
  return init(function_1.flow(grid_field_1.gridToWorldCoordinate(args), scalarField), args);
};
},{"fp-ts/lib/Array":"../node_modules/fp-ts/lib/Array.js","fp-ts/lib/function":"../node_modules/fp-ts/lib/function.js","../lib/vec2":"../lib/vec2.ts","./grid-field":"grid-field.ts","./util":"util.ts"}],"../lib/ctx-util.ts":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.drawDisc = exports.pathPolyline = exports.pathPolygon = void 0;

exports.pathPolygon = function (ctx, polygon) {
  exports.pathPolyline(ctx, polygon);
  ctx.closePath();
};

exports.pathPolyline = function (ctx, polyline) {
  ctx.beginPath();
  ctx.moveTo.apply(ctx, polyline[0]);
  polyline.slice(1).map(function (point) {
    return ctx.lineTo.apply(ctx, point);
  });
};

function drawDisc(ctx, point, radius, style) {
  if (style) {
    Object.assign(ctx, style);
  }

  ctx.beginPath();
  ctx.arc(point[0], point[1], radius, 0, Math.PI * 2);
  ctx.fill();
}

exports.drawDisc = drawDisc;
},{}],"../lib/mat3x3.ts":[function(require,module,exports) {
"use strict";

var __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {
  if (k2 === undefined) k2 = k;
  Object.defineProperty(o, k2, {
    enumerable: true,
    get: function get() {
      return m[k];
    }
  });
} : function (o, m, k, k2) {
  if (k2 === undefined) k2 = k;
  o[k2] = m[k];
});

var __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {
  Object.defineProperty(o, "default", {
    enumerable: true,
    value: v
  });
} : function (o, v) {
  o["default"] = v;
});

var __importStar = this && this.__importStar || function (mod) {
  if (mod && mod.__esModule) return mod;
  var result = {};
  if (mod != null) for (var k in mod) {
    if (k !== "default" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
  }

  __setModuleDefault(result, mod);

  return result;
};

var __spreadArrays = this && this.__spreadArrays || function () {
  for (var s = 0, i = 0, il = arguments.length; i < il; i++) {
    s += arguments[i].length;
  }

  for (var r = Array(s), k = 0, i = 0; i < il; i++) {
    for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++) {
      r[k] = a[j];
    }
  }

  return r;
};

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.rotation = exports.inverse = exports.multiplyMatrix = exports.multiplyVector = exports.identity = void 0;

var Vec3 = __importStar(require("./vec3"));

exports.identity = [1, 0, 0, 0, 1, 0, 0, 0, 1];

exports.multiplyVector = function (matrix, vector) {
  return [matrix[0] * vector[0] + matrix[3] * vector[1] + matrix[6] * vector[2], matrix[1] * vector[0] + matrix[4] * vector[1] + matrix[7] * vector[2], matrix[2] * vector[0] + matrix[5] * vector[1] + matrix[8] * vector[2]];
};

exports.multiplyMatrix = function (a, b) {
  return __spreadArrays(exports.multiplyVector(a, b.slice(0, 3)), exports.multiplyVector(a, b.slice(3, 6)), exports.multiplyVector(a, b.slice(6, 9)));
};

exports.inverse = function (matrix) {
  var a = matrix[0],
      b = matrix[1],
      c = matrix[2],
      d = matrix[3],
      e = matrix[4],
      f = matrix[5],
      g = matrix[6],
      h = matrix[7],
      i = matrix[8];
  var vals = [e * i - f * h, f * g - i * d, h * d - g * e, b * i - c * h, c * g - a * i, h * a - g * b, e * c - f * b, f * a - d * c, b * d - a * e];
  var m = 1 / (a * vals[0] + b * vals[1] + c * vals[2]);
  var n = 1 / (d * vals[3] + e * vals[4] + f * vals[5]);
  var o = 1 / (g * vals[6] + h * vals[7] + i * vals[8]);
  return [vals[0] * m, vals[3] * n, vals[6] * o, vals[1] * m, vals[4] * n, vals[7] * o, vals[2] * m, vals[5] * n, vals[8] * o];
};

var rotateVector = function rotateVector(axis, angle) {
  return function (vec) {
    var sinDir = Vec3.normalize(Vec3.cross(axis, vec));
    var axisCenter = Vec3.multiply(axis, Vec3.dot(axis, vec));
    var cosDir = Vec3.normalize(Vec3.subtract(vec, axisCenter));
    var _a = [Math.sin(angle), Math.cos(angle)],
        sin = _a[0],
        cos = _a[1];
    var radius = Vec3.distance(axisCenter, vec);
    return Vec3.add(axisCenter, Vec3.multiply(Vec3.add(Vec3.multiply(sinDir, sin), Vec3.multiply(cosDir, cos)), radius));
  };
};

exports.rotation = function (vector) {
  if (Vec3.isZero(vector)) {
    return exports.identity;
  }

  var axis = Vec3.normalize(vector);
  var angle = Vec3.magnitude(vector);
  var rotateFunc = rotateVector(axis, angle);
  return __spreadArrays(rotateFunc([1, 0, 0]), rotateFunc([0, 1, 0]), rotateFunc([0, 0, 1]));
};
},{"./vec3":"../lib/vec3.ts"}],"camera/orbit-camera.ts":[function(require,module,exports) {
"use strict";

var __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {
  if (k2 === undefined) k2 = k;
  Object.defineProperty(o, k2, {
    enumerable: true,
    get: function get() {
      return m[k];
    }
  });
} : function (o, m, k, k2) {
  if (k2 === undefined) k2 = k;
  o[k2] = m[k];
});

var __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {
  Object.defineProperty(o, "default", {
    enumerable: true,
    value: v
  });
} : function (o, v) {
  o["default"] = v;
});

var __importStar = this && this.__importStar || function (mod) {
  if (mod && mod.__esModule) return mod;
  var result = {};
  if (mod != null) for (var k in mod) {
    if (k !== "default" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
  }

  __setModuleDefault(result, mod);

  return result;
};

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.toRegularCamera = void 0;

var mat3x3_1 = require("../../lib/mat3x3");

var Vec3 = __importStar(require("../../lib/vec3"));

function calculateOrientation(orbitCam) {
  var rotationMatrix1 = mat3x3_1.rotation([0, orbitCam.longitude, 0]);
  var rotationMatrix2 = mat3x3_1.rotation([orbitCam.latitude, 0, 0]);
  return mat3x3_1.multiplyMatrix(rotationMatrix1, rotationMatrix2);
}

function calculateTransform(orbitCam) {
  var orientation = calculateOrientation(orbitCam);
  var forward = orientation.slice(6);
  var position = Vec3.multiply(forward, -orbitCam.radius);
  return {
    position: position,
    orientation: orientation
  };
}

function toRegularCamera(orbitCam) {
  var transform = calculateTransform(orbitCam);
  return {
    transform: transform,
    inverseMatrix: mat3x3_1.inverse(transform.orientation)
  };
}

exports.toRegularCamera = toRegularCamera;
},{"../../lib/mat3x3":"../lib/mat3x3.ts","../../lib/vec3":"../lib/vec3.ts"}],"camera/perspective-camera.ts":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.projectPoints = exports.projectPoint = exports.createCamSettingsFromCanvas = void 0;

exports.createCamSettingsFromCanvas = function (zScale, planeScale, canvas) {
  return {
    zScale: zScale,
    planeWidthHalf: canvas.offsetWidth * planeScale / 2,
    planeHeightHalf: canvas.offsetHeight * planeScale / 2
  };
};

exports.projectPoint = function (cam) {
  return function (point) {
    var c = cam.zScale / point[2];
    return [c * point[0] / cam.planeWidthHalf, c * point[1] / cam.planeHeightHalf];
  };
};

exports.projectPoints = function (cam) {
  return function (points) {
    return points.map(exports.projectPoint(cam));
  };
};
},{}],"space-conversion.ts":[function(require,module,exports) {
"use strict";

var __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {
  if (k2 === undefined) k2 = k;
  Object.defineProperty(o, k2, {
    enumerable: true,
    get: function get() {
      return m[k];
    }
  });
} : function (o, m, k, k2) {
  if (k2 === undefined) k2 = k;
  o[k2] = m[k];
});

var __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {
  Object.defineProperty(o, "default", {
    enumerable: true,
    value: v
  });
} : function (o, v) {
  o["default"] = v;
});

var __importStar = this && this.__importStar || function (mod) {
  if (mod && mod.__esModule) return mod;
  var result = {};
  if (mod != null) for (var k in mod) {
    if (k !== "default" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
  }

  __setModuleDefault(result, mod);

  return result;
};

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.worldPointToScreenPoint = exports.worldPointToCamPoint = exports.camPointToScreenPoint = exports.viewportToCanvas = void 0;

var function_1 = require("fp-ts/lib/function");

var mat3x3_1 = require("../lib/mat3x3");

var Vec3 = __importStar(require("../lib/vec3"));

var perspective_camera_1 = require("./camera/perspective-camera");

exports.viewportToCanvas = function (ctx) {
  var canvas = ctx.canvas;
  return function (point) {
    return [point[0] * canvas.offsetWidth / 2, point[1] * canvas.offsetHeight / 2];
  };
};

exports.camPointToScreenPoint = function (ctx, camera) {
  return function (camPoint) {
    return exports.viewportToCanvas(ctx)(perspective_camera_1.projectPoint(camera.settings)(camPoint));
  };
};

exports.worldPointToCamPoint = function (camera) {
  return function (worldPoint) {
    return mat3x3_1.multiplyVector(camera.inverseMatrix, Vec3.subtract(worldPoint, camera.transform.position));
  };
};

exports.worldPointToScreenPoint = function (ctx, camera) {
  return function_1.flow(exports.worldPointToCamPoint(camera), exports.camPointToScreenPoint(ctx, camera));
};
},{"fp-ts/lib/function":"../node_modules/fp-ts/lib/function.js","../lib/mat3x3":"../lib/mat3x3.ts","../lib/vec3":"../lib/vec3.ts","./camera/perspective-camera":"camera/perspective-camera.ts"}],"scalar-value-order.ts":[function(require,module,exports) {
"use strict";

var __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {
  if (k2 === undefined) k2 = k;
  Object.defineProperty(o, k2, {
    enumerable: true,
    get: function get() {
      return m[k];
    }
  });
} : function (o, m, k, k2) {
  if (k2 === undefined) k2 = k;
  o[k2] = m[k];
});

var __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {
  Object.defineProperty(o, "default", {
    enumerable: true,
    value: v
  });
} : function (o, v) {
  o["default"] = v;
});

var __importStar = this && this.__importStar || function (mod) {
  if (mod && mod.__esModule) return mod;
  var result = {};
  if (mod != null) for (var k in mod) {
    if (k !== "default" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
  }

  __setModuleDefault(result, mod);

  return result;
};

var __spreadArrays = this && this.__spreadArrays || function () {
  for (var s = 0, i = 0, il = arguments.length; i < il; i++) {
    s += arguments[i].length;
  }

  for (var r = Array(s), k = 0, i = 0; i < il; i++) {
    for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++) {
      r[k] = a[j];
    }
  }

  return r;
};

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.calculateScalarFieldOrder = void 0;

var grid_field_1 = require("./grid-field");

var Vec2 = __importStar(require("../lib/vec2"));

var function_1 = require("fp-ts/lib/function");

var Array_1 = require("fp-ts/lib/Array");

var number_1 = require("fp-ts/lib/number");

var Option_1 = require("fp-ts/lib/Option");

var unpackOptionArray = function_1.flow(Array_1.filter(Option_1.isSome), Array_1.map(function (o) {
  return o.value;
}));

function isIntInRange(range, n) {
  return n >= range[0] && n <= range[1];
}

function transformToFieldSpace(field, position) {
  var flatPosition = [position[0], position[2]];
  return function_1.pipe(Vec2.subtract(flatPosition, field.position), Vec2.mapComponents(function (c) {
    return Math.round(c / field.cellSize);
  }));
}

function sign(n) {
  return Math.sign(n);
}

var signPatterns = [[-1, -1], [-1, +1], [+1, -1], [+1, +1]];

var applySignPatternToVector = function applySignPatternToVector(signPattern) {
  return function (v) {
    return [0, 1].map(function (i) {
      return v[i] * signPattern[i];
    });
  };
};

var getQuadrantRectFromRect = function getQuadrantRectFromRect(rect) {
  return function (signPattern) {
    var localRect = function_1.pipe([0, 1], Array_1.map(function_1.flow(function (i) {
      return Vec2.multiply(rect[i], signPattern[i]);
    }, Array_1.sort(number_1.Ord))));
    if (localRect[0][1] < 1 || localRect[1][1] < 1) return Option_1.none;
    var localRectClamped = function_1.pipe(localRect, Array_1.map(function (r) {
      return r.map(function (c) {
        return Math.max(1, c);
      });
    }));
    return Option_1.some({
      signPattern: signPattern,
      rect: localRectClamped
    });
  };
};

function findQuadrantRects(rect) {
  return function_1.pipe(signPatterns, Array_1.map(getQuadrantRectFromRect(rect)), unpackOptionArray);
}

function getSortedPixelsFromQuadrantRect(quadRect) {
  var _a = quadRect.rect[0],
      minX = _a[0],
      maxX = _a[1];
  var _b = quadRect.rect[1],
      minY = _b[0],
      maxY = _b[1];
  var pixels = [];

  for (var ix = maxX; ix >= minX; ix--) {
    var diag = ix + maxY;

    for (var x = ix; x <= maxX; x++) {
      var y = diag - x;
      if (y < minY) break;
      pixels.push([x, y]);
    }
  }

  for (var iy = maxY - 1; iy >= minY; iy--) {
    var diag = minX + iy;

    for (var x = minX; x <= maxX; x++) {
      var y = diag - x;
      if (y < minY) break;
      pixels.push([x, y]);
    }
  }

  pixels = pixels.map(applySignPatternToVector(quadRect.signPattern));
  return pixels;
}

var mainAxes = [[1, 0], [-1, 0], [0, 1], [0, -1]];

var getMainLineFromRect = function getMainLineFromRect(rect) {
  return function (axis) {
    var zeroIndex = axis[0] === 0 ? 0 : 1;
    var orthoRange = rect[zeroIndex];
    if (orthoRange[0] > 0 || orthoRange[1] < 0) return Option_1.none;
    var nonZeroIndex = (zeroIndex + 1) % 2;
    var axisValue = axis[nonZeroIndex];
    var localAxisRange = function_1.pipe(rect[nonZeroIndex], Array_1.map(function (r) {
      return r * axisValue;
    }), Array_1.sort(number_1.Ord));
    if (localAxisRange[1] < 1) return Option_1.none;
    localAxisRange = Vec2.mapComponents(function (v) {
      return Math.max(1, v);
    })(localAxisRange);
    return Option_1.some({
      axis: axis,
      range: localAxisRange
    });
  };
};

function findMainLines(rect) {
  return function_1.pipe(mainAxes, Array_1.map(getMainLineFromRect(rect)), unpackOptionArray);
}

function getSortedPixelsFromGridLine(line) {
  return function_1.pipe(Array_1.range(line.range[0], line.range[1]), Array_1.reverse, Array_1.map(function (i) {
    return Vec2.multiply(line.axis, i);
  }));
}

function isOriginInRect(rect) {
  return rect[0][0] <= 0 && rect[0][1] >= 0 && rect[1][0] <= 0 && rect[1][1] >= 0;
} //calculate the rendering order of the scalar-field values


function calculateScalarFieldOrder(camPosition, field) {
  var relFieldPosition = Vec2.multiply(transformToFieldSpace(field, camPosition), -1);
  var rect = [0, 1].map(function (i) {
    return [relFieldPosition[i], relFieldPosition[i] + field.size[i]];
  });

  var localCoordinates = __spreadArrays(function_1.pipe(rect, findQuadrantRects, Array_1.map(getSortedPixelsFromQuadrantRect), Array_1.flatten), function_1.pipe(rect, findMainLines, Array_1.map(getSortedPixelsFromGridLine), Array_1.flatten), isOriginInRect(rect) ? [Vec2.vector2(0, 0)] : []); // //unsorted order, just for fun
  // let localCoordinates: Vector2[] = [];
  // for (let i = 0; i < field.size[0]; i++){
  // 	for (let j = 0; j < field.size[1]; j++){
  // 		localCoordinates.push([i, j]);
  // 	}
  // }


  return Array_1.map(function_1.flow(function (p) {
    return Vec2.subtract(p, relFieldPosition);
  }, grid_field_1.gridToWorldCoordinate(field)))(localCoordinates);
}

exports.calculateScalarFieldOrder = calculateScalarFieldOrder;
},{"./grid-field":"grid-field.ts","../lib/vec2":"../lib/vec2.ts","fp-ts/lib/function":"../node_modules/fp-ts/lib/function.js","fp-ts/lib/Array":"../node_modules/fp-ts/lib/Array.js","fp-ts/lib/number":"../node_modules/fp-ts/lib/number.js","fp-ts/lib/Option":"../node_modules/fp-ts/lib/Option.js"}],"voxel/voxel-face.ts":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.getNonZeroIndex = exports.voxelFaceNormals = void 0;
exports.voxelFaceNormals = [[1, 0, 0], [-1, 0, 0], [0, 1, 0], [0, -1, 0], [0, 0, 1], [0, 0, -1]];

function getNonZeroIndex(normal) {
  for (var i = 0; i < 3; i++) {
    if (normal[i] !== 0) return i;
  }
}

exports.getNonZeroIndex = getNonZeroIndex;
},{}],"voxel/rendering.ts":[function(require,module,exports) {
"use strict";

var __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {
  if (k2 === undefined) k2 = k;
  Object.defineProperty(o, k2, {
    enumerable: true,
    get: function get() {
      return m[k];
    }
  });
} : function (o, m, k, k2) {
  if (k2 === undefined) k2 = k;
  o[k2] = m[k];
});

var __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {
  Object.defineProperty(o, "default", {
    enumerable: true,
    value: v
  });
} : function (o, v) {
  o["default"] = v;
});

var __importStar = this && this.__importStar || function (mod) {
  if (mod && mod.__esModule) return mod;
  var result = {};
  if (mod != null) for (var k in mod) {
    if (k !== "default" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
  }

  __setModuleDefault(result, mod);

  return result;
};

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.renderVoxelProjections = exports.renderScreenQuad = exports.projectVoxelFaces = exports.projectVoxelFace = exports.getVisibleFaceNormals = exports.getOrthogonalAxes = void 0;

var Array_1 = require("fp-ts/lib/Array");

var function_1 = require("fp-ts/lib/function");

var Option_1 = require("fp-ts/lib/Option");

var mat3x3_1 = require("../../lib/mat3x3");

var Vec3 = __importStar(require("../../lib/vec3"));

var perspective_camera_1 = require("../camera/perspective-camera");

var util_1 = require("../util");

var voxel_face_1 = require("./voxel-face");

var space_conversion_1 = require("../space-conversion");

var ctx_util_1 = require("../../lib/ctx-util");

function getOrthogonalAxes(normal) {
  if (normal[0] === +1) return [[0, 0, 1], [0, 1, 0]];
  if (normal[0] === -1) return [[0, 0, -1], [0, 1, 0]];
  if (normal[1] === +1) return [[1, 0, 0], [0, 0, 1]];
  if (normal[1] === -1) return [[1, 0, 0], [0, 0, -1]];
  if (normal[2] === +1) return [[1, 0, 0], [0, 1, 0]];
  if (normal[2] === -1) return [[1, 0, 0], [0, -1, 0]];
}

exports.getOrthogonalAxes = getOrthogonalAxes;
var localFaceVertices = [[+0.5, +0.5], [-0.5, +0.5], [-0.5, -0.5], [+0.5, -0.5]];

function cutPolygonPartInBack(minZ, camSpacePolygon) {
  var result = [];

  for (var i = 0; i < camSpacePolygon.length; i++) {
    var p1 = camSpacePolygon[i];
    var p2 = camSpacePolygon[(i + 1) % camSpacePolygon.length];
    var _a = [p1[2], p2[2]],
        z1 = _a[0],
        z2 = _a[1];

    if (z1 >= minZ) {
      result.push(p1);
    }

    if (z1 < minZ && z2 > minZ || z1 > minZ && z2 < minZ) {
      var t = util_1.normalize(z1, z2, minZ);
      result.push(Vec3.interpolate(p1, p2, t));
    }
  }

  return result;
}

function cutPolygonPartInBackIfClose(minDistanceSqrd, minZ, camSpaceVoxel, camSpacePolygon) {
  if (Vec3.sqrdMagnitude(camSpaceVoxel) > minDistanceSqrd) return camSpacePolygon;
  return cutPolygonPartInBack(minZ, camSpacePolygon);
}

var isVoxelNormalFacingCamera = function isVoxelNormalFacingCamera(cam, voxel) {
  var relCamPosition = Vec3.subtract(cam.transform.position, voxel);
  return function (faceNormal) {
    return Vec3.dot(Vec3.subtract(relCamPosition, Vec3.multiply(faceNormal, 0.5)), faceNormal) > 0;
  };
};

function getVisibleFaceNormals(cam, voxel) {
  return voxel_face_1.voxelFaceNormals.filter(isVoxelNormalFacingCamera(cam, voxel));
}

exports.getVisibleFaceNormals = getVisibleFaceNormals;

function projectVoxelFace(ctx, cam, localFaceVertices, faceCenter, faceNormal) {
  var camPosition = cam.transform.position;
  var facePosition = faceCenter; // Vec3.add(voxel, Vec3.multiply(faceNormal, 0.5));

  var camPositionDot = Vec3.dot(Vec3.subtract(camPosition, facePosition), faceNormal); //voxel-face is not facing the camera

  if (camPositionDot <= 0) return Option_1.none;
  var inverseMatrix = cam.inverseMatrix;
  var localFacePosition = mat3x3_1.multiplyVector(inverseMatrix, Vec3.subtract(facePosition, camPosition));
  var faceAxes = getOrthogonalAxes(faceNormal).map(function (axis) {
    return mat3x3_1.multiplyVector(inverseMatrix, axis);
  });
  var camFaceVertices = localFaceVertices.map(function (vert) {
    return Vec3.add(localFacePosition, Vec3.add(Vec3.multiply(faceAxes[0], vert[0]), Vec3.multiply(faceAxes[1], vert[1])));
  }); // const culledVertices = cutPolygonPartInBackIfClose(8, 0.3, localFacePosition, camFaceVertices);

  var culledVertices = cutPolygonPartInBack(0.5, camFaceVertices);
  if (culledVertices.length < 3) return Option_1.none;
  var screenVertices = function_1.pipe(culledVertices, perspective_camera_1.projectPoints(cam.settings), Array_1.map(space_conversion_1.viewportToCanvas(ctx)));
  return Option_1.some(screenVertices);
}

exports.projectVoxelFace = projectVoxelFace;

exports.projectVoxelFaces = function (ctx, cam) {
  return function (voxel) {
    var projectedFaces = [];

    for (var _i = 0, voxelFaceNormals_1 = voxel_face_1.voxelFaceNormals; _i < voxelFaceNormals_1.length; _i++) {
      var normal = voxelFaceNormals_1[_i];
      var curProjection = projectVoxelFace(ctx, cam, localFaceVertices, voxel, normal);
      if (Option_1.isNone(curProjection)) continue;
      projectedFaces.push(curProjection.value);
    }

    return projectedFaces;
  };
};

function renderScreenQuad(ctx, screenPolygon) {
  ctx_util_1.pathPolygon(ctx, screenPolygon);
  ctx.fill();
  ctx.stroke();
}

exports.renderScreenQuad = renderScreenQuad;

function renderVoxelProjections(ctx, screenPolygons) {
  ctx.save();
  Object.assign(ctx, {
    lineWidth: 3,
    lineJoin: "round",
    strokeStyle: "#acacad",
    fillStyle: "rgb(24, 26, 27)"
  });

  for (var _i = 0, screenPolygons_1 = screenPolygons; _i < screenPolygons_1.length; _i++) {
    var screenPolygon = screenPolygons_1[_i];
    renderScreenQuad(ctx, screenPolygon);
  }

  ctx.restore();
}

exports.renderVoxelProjections = renderVoxelProjections;
},{"fp-ts/lib/Array":"../node_modules/fp-ts/lib/Array.js","fp-ts/lib/function":"../node_modules/fp-ts/lib/function.js","fp-ts/lib/Option":"../node_modules/fp-ts/lib/Option.js","../../lib/mat3x3":"../lib/mat3x3.ts","../../lib/vec3":"../lib/vec3.ts","../camera/perspective-camera":"camera/perspective-camera.ts","../util":"util.ts","./voxel-face":"voxel/voxel-face.ts","../space-conversion":"space-conversion.ts","../../lib/ctx-util":"../lib/ctx-util.ts"}],"heightmap-scene.ts":[function(require,module,exports) {
"use strict";

var __assign = this && this.__assign || function () {
  __assign = Object.assign || function (t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];

      for (var p in s) {
        if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
      }
    }

    return t;
  };

  return __assign.apply(this, arguments);
};

var __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {
  if (k2 === undefined) k2 = k;
  Object.defineProperty(o, k2, {
    enumerable: true,
    get: function get() {
      return m[k];
    }
  });
} : function (o, m, k, k2) {
  if (k2 === undefined) k2 = k;
  o[k2] = m[k];
});

var __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {
  Object.defineProperty(o, "default", {
    enumerable: true,
    value: v
  });
} : function (o, v) {
  o["default"] = v;
});

var __importStar = this && this.__importStar || function (mod) {
  if (mod && mod.__esModule) return mod;
  var result = {};
  if (mod != null) for (var k in mod) {
    if (k !== "default" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
  }

  __setModuleDefault(result, mod);

  return result;
};

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.setupHeightMapScene = void 0;

var ctx_util_1 = require("../lib/ctx-util");

var util_1 = require("./util");

var Vec3 = __importStar(require("../lib/vec3"));

var Vec2 = __importStar(require("../lib/vec2"));

var orbit_camera_1 = require("./camera/orbit-camera");

var space_conversion_1 = require("./space-conversion");

var grid_field_1 = require("./grid-field");

var scalar_value_order_1 = require("./scalar-value-order");

var Array_1 = require("fp-ts/lib/Array");

var voxel_face_1 = require("./voxel/voxel-face");

var rendering_1 = require("./voxel/rendering");

var Option_1 = require("fp-ts/lib/Option");

var gradient = function gradient(scalarField) {
  return function (_a) {
    var x = _a[0],
        y = _a[1];
    var d = 0.01;
    var left = scalarField([x - d, y]);
    var right = scalarField([x + d, y]);
    var down = scalarField([x, y - d]);
    var up = scalarField([x, y + d]);
    return Vec2.multiply([right - left, up - down], 1 / (2 * d));
  };
};

function applyWindowSizeToCanvas(canvas) {
  var widthPx = window.innerWidth;
  var heightPx = window.innerHeight;
  var scalePx = window.devicePixelRatio || 1;
  Object.assign(canvas.style, {
    width: widthPx + "px",
    height: heightPx + "px"
  });
  Object.assign(canvas, {
    width: widthPx * scalePx,
    height: heightPx * scalePx
  });
}

function autoAdjustCanvasSize(canvas, onResize) {
  window.onresize = function () {
    applyWindowSizeToCanvas(canvas);
    onResize();
  };
}

function setupOrbitCameraControl(canvas, transformCamera) {
  canvas.addEventListener("mousemove", function (e) {
    if (e.buttons !== 1) return;
    var s = 0.01;
    transformCamera(function (cam) {
      return __assign(__assign({}, cam), {
        longitude: cam.longitude + e.movementX * s,
        latitude: cam.latitude + e.movementY * s
      });
    });
  });
  canvas.addEventListener("wheel", function (e) {
    transformCamera(function (cam) {
      return __assign(__assign({}, cam), {
        radius: cam.radius * (1 + e.deltaY * 0.001)
      });
    });
  });
}

function getNonZeroIndex(v) {
  if (v[0] !== 0) return 0;
  if (v[1] !== 0) return 1;
  if (v[2] !== 0) return 2;
}

var renderCube = function renderCube(ctx, camera) {
  return function (cube) {
    for (var _i = 0, voxelFaceNormals_1 = voxel_face_1.voxelFaceNormals; _i < voxelFaceNormals_1.length; _i++) {
      var normal = voxelFaceNormals_1[_i];
      var orthoAxes = rendering_1.getOrthogonalAxes(normal);
      var orthoAxesInds = orthoAxes.map(getNonZeroIndex);
      var localFaceSize = orthoAxesInds.map(function (i) {
        return cube.size[i];
      });
      var localFaceVertices = [[+localFaceSize[0], +localFaceSize[1]], [-localFaceSize[0], +localFaceSize[1]], [-localFaceSize[0], -localFaceSize[1]], [+localFaceSize[0], -localFaceSize[1]]];
      var faceCenter = Vec3.add(cube.center, Vec3.multiply(normal, cube.size[getNonZeroIndex(normal)]));
      var curProjectionOpt = rendering_1.projectVoxelFace(ctx, camera, localFaceVertices, faceCenter, normal);
      if (Option_1.isNone(curProjectionOpt)) continue;
      var adjustedColor = cube.color.map(Math.round);
      ctx.fillStyle = util_1.vec3ToColor(adjustedColor);
      ctx_util_1.pathPolygon(ctx, curProjectionOpt.value);
      ctx.fill();
      ctx.stroke();
    }
  };
}; //quad/triangle-pair ###


var localCorners = [[+1, +1], [-1, +1], [+1, -1], [-1, -1]];
var triangles = [[0, 1, 3], [3, 2, 0]];

function renderHeightmapQuad(ctx, cam, quadSize, scalarField, point, color) {
  var globalCorners = Array_1.map(function (localCorner) {
    var corner2d = Vec2.add(point, Vec2.multiply(localCorner, quadSize));
    var y = scalarField(corner2d);
    return [corner2d[0], y, corner2d[1]];
  })(localCorners);
  var verts = Array_1.map(space_conversion_1.worldPointToScreenPoint(ctx, cam))(globalCorners);
  ctx.fillStyle = util_1.vec3ToColor(color);

  for (var _i = 0, triangles_1 = triangles; _i < triangles_1.length; _i++) {
    var tri = triangles_1[_i];
    var triVerts = tri.map(function (i) {
      return verts[i];
    });
    ctx_util_1.pathPolygon(ctx, triVerts);
    ctx.fill();
    ctx_util_1.pathPolyline(ctx, triVerts);
    ctx.stroke();
  }
}

function renderHeightMap(ctx, perspectiveCam, negativeColor, positiveColor, shape, gridField, scalarField) {
  var worldToCam = space_conversion_1.worldPointToCamPoint(perspectiveCam);
  var camToScreen = space_conversion_1.camPointToScreenPoint(ctx, perspectiveCam);
  var sortedPoints = scalar_value_order_1.calculateScalarFieldOrder(perspectiveCam.transform.position, gridField);
  var maxPoint = grid_field_1.gridToWorldCoordinate(gridField)([gridField.size[0], gridField.size[1]]);
  var cellSize = gridField.cellSize / 2;

  for (var _i = 0, sortedPoints_1 = sortedPoints; _i < sortedPoints_1.length; _i++) {
    var point2d = sortedPoints_1[_i];
    var y = scalarField(point2d);
    var color = Vec3.interpolate(negativeColor, positiveColor, util_1.normalize(-1, +1, y));

    if (shape === "cube") {
      var cubeY = y;
      renderCube(ctx, perspectiveCam)({
        center: [point2d[0], cubeY / 2, point2d[1]],
        size: [cellSize, Math.abs(cubeY / 2), cellSize],
        color: color
      });
    } else if (shape === "sphere") {
      var point = [point2d[0], y, point2d[1]];
      var camPosition = worldToCam(point);
      var dist = Vec3.magnitude(camPosition);
      var screenPosition = camToScreen(camPosition);
      ctx_util_1.drawDisc(ctx, screenPosition, 40 / dist, {
        fillStyle: util_1.vec3ToColor(color)
      });
    } else if (shape === "triangle") {
      //without the offset, the center of the quad would be exactly on the center of a grid point.
      //but we actually want the corners of the quad to coincide with the corners of a grid-cell.
      //therefore we need to add an offset and also ignore the outer strip that is pushed out because of the offset
      // if (point2d[0] === maxPoint[0] || point2d[1] === maxPoint[1]) continue;
      // const offset = cellSize / 2;
      // point2d = Vec2.add([offset, offset], point2d);
      renderHeightmapQuad(ctx, perspectiveCam, cellSize, scalarField, point2d, color);
    }
  }
}

function setupHeightMapScene(args) {
  var canvas = null;

  if (args.canvas) {
    canvas = args.canvas;
  } else {
    document.body.insertAdjacentHTML("beforeend", "<canvas></canvas>");
    canvas = document.querySelector("canvas");
    autoAdjustCanvasSize(canvas, function () {
      updateCamera();
      render();
    });
    applyWindowSizeToCanvas(canvas);
  }

  var camera = {
    radius: 10,
    latitude: 0,
    longitude: 0,
    orthoSize: [canvas.width, canvas.height]
  };

  var updateCamera = function updateCamera() {
    camera = __assign(__assign({}, camera), {
      orthoSize: [canvas.width / 2, canvas.height / 2]
    });
  };

  var transformCamera = function transformCamera(transformation) {
    camera = transformation(camera);
    render();
  };

  var gridField = args.gridField;
  var heightMap = args.heightMap;
  var ctx = canvas.getContext("2d");
  var backgroundColor = "#d4d3d2"; //negative values are bluish, positive ones are reddish

  var negativeColor = [100, 173, 232];
  var positiveColor = [232, 83, 42];

  var render = function render() {
    var canvas = ctx.canvas;
    var _a = [canvas.width, canvas.height],
        w = _a[0],
        h = _a[1];
    ctx.save();
    ctx.fillStyle = backgroundColor;
    ctx.fillRect(0, 0, w, h);
    ctx.translate(w / 2, h / 2);
    ctx.scale(window.devicePixelRatio, -window.devicePixelRatio);

    var perspectiveCam = __assign(__assign({}, orbit_camera_1.toRegularCamera(camera)), {
      settings: {
        planeWidthHalf: canvas.width,
        planeHeightHalf: canvas.height,
        zScale: 2000
      }
    });

    Object.assign(ctx, {
      strokeStyle: "#3b3a39",
      lineWidth: 2,
      lineJoin: "round"
    });
    renderHeightMap(ctx, perspectiveCam, negativeColor, positiveColor, args.shape, gridField, heightMap);
    ctx.restore();
  };

  var updateHeightMap = function updateHeightMap(newHeightMap) {
    heightMap = newHeightMap;
    render();
  };

  updateCamera();
  setupOrbitCameraControl(canvas, transformCamera);
  render();
  return {
    updateHeightMap: updateHeightMap
  };
}

exports.setupHeightMapScene = setupHeightMapScene;
},{"../lib/ctx-util":"../lib/ctx-util.ts","./util":"util.ts","../lib/vec3":"../lib/vec3.ts","../lib/vec2":"../lib/vec2.ts","./camera/orbit-camera":"camera/orbit-camera.ts","./space-conversion":"space-conversion.ts","./grid-field":"grid-field.ts","./scalar-value-order":"scalar-value-order.ts","fp-ts/lib/Array":"../node_modules/fp-ts/lib/Array.js","./voxel/voxel-face":"voxel/voxel-face.ts","./voxel/rendering":"voxel/rendering.ts","fp-ts/lib/Option":"../node_modules/fp-ts/lib/Option.js"}],"laplacian-test.ts":[function(require,module,exports) {
"use strict";

var __assign = this && this.__assign || function () {
  __assign = Object.assign || function (t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];

      for (var p in s) {
        if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
      }
    }

    return t;
  };

  return __assign.apply(this, arguments);
};

var __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {
  function adopt(value) {
    return value instanceof P ? value : new P(function (resolve) {
      resolve(value);
    });
  }

  return new (P || (P = Promise))(function (resolve, reject) {
    function fulfilled(value) {
      try {
        step(generator.next(value));
      } catch (e) {
        reject(e);
      }
    }

    function rejected(value) {
      try {
        step(generator["throw"](value));
      } catch (e) {
        reject(e);
      }
    }

    function step(result) {
      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
    }

    step((generator = generator.apply(thisArg, _arguments || [])).next());
  });
};

var __generator = this && this.__generator || function (thisArg, body) {
  var _ = {
    label: 0,
    sent: function sent() {
      if (t[0] & 1) throw t[1];
      return t[1];
    },
    trys: [],
    ops: []
  },
      f,
      y,
      t,
      g;
  return g = {
    next: verb(0),
    "throw": verb(1),
    "return": verb(2)
  }, typeof Symbol === "function" && (g[Symbol.iterator] = function () {
    return this;
  }), g;

  function verb(n) {
    return function (v) {
      return step([n, v]);
    };
  }

  function step(op) {
    if (f) throw new TypeError("Generator is already executing.");

    while (_) {
      try {
        if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
        if (y = 0, t) op = [op[0] & 2, t.value];

        switch (op[0]) {
          case 0:
          case 1:
            t = op;
            break;

          case 4:
            _.label++;
            return {
              value: op[1],
              done: false
            };

          case 5:
            _.label++;
            y = op[1];
            op = [0];
            continue;

          case 7:
            op = _.ops.pop();

            _.trys.pop();

            continue;

          default:
            if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {
              _ = 0;
              continue;
            }

            if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {
              _.label = op[1];
              break;
            }

            if (op[0] === 6 && _.label < t[1]) {
              _.label = t[1];
              t = op;
              break;
            }

            if (t && _.label < t[2]) {
              _.label = t[2];

              _.ops.push(op);

              break;
            }

            if (t[2]) _.ops.pop();

            _.trys.pop();

            continue;
        }

        op = body.call(thisArg, _);
      } catch (e) {
        op = [6, e];
        y = 0;
      } finally {
        f = t = 0;
      }
    }

    if (op[0] & 5) throw op[1];
    return {
      value: op[0] ? op[1] : void 0,
      done: true
    };
  }
};

Object.defineProperty(exports, "__esModule", {
  value: true
});

var grid_field_1 = require("./grid-field");

var scalar_grid_field_1 = require("./scalar-grid-field");

var heightmap_scene_1 = require("./heightmap-scene");

function nextFramePromise() {
  return new Promise(function (resolve) {
    requestAnimationFrame(resolve);
  });
}

function stepJacobi(field, target) {
  var _a = field.size,
      w = _a[0],
      h = _a[1];
  var t = scalar_grid_field_1.evaluateDiscrete(target);
  var m = scalar_grid_field_1.evaluateDiscrete(field);
  var c2 = Math.pow(field.cellSize, 2);
  var newValues = [];

  for (var y = 0; y < w; y++) {
    for (var x = 0; x < h; x++) {
      newValues[scalar_grid_field_1.calculateFlatIndex(w, [x, y])] = (c2 * t([x, y]) + m([x - 1, y]) + m([x + 1, y]) + m([x, y - 1]) + m([x, y + 1])) / 4;
    }
  }

  return __assign(__assign({}, field), {
    values: newValues
  });
}

function stepJacobiAsync(field, target) {
  return __awaiter(this, void 0, Promise, function () {
    var _a, w, h, t, m, c2, newValues, startTime, y, x, curTime;

    return __generator(this, function (_b) {
      switch (_b.label) {
        case 0:
          _a = field.size, w = _a[0], h = _a[1];
          t = scalar_grid_field_1.evaluateDiscrete(target);
          m = scalar_grid_field_1.evaluateDiscrete(field);
          c2 = Math.pow(field.cellSize, 2);
          newValues = [];
          startTime = performance.now();
          y = 0;
          _b.label = 1;

        case 1:
          if (!(y < w)) return [3
          /*break*/
          , 6];
          x = 0;
          _b.label = 2;

        case 2:
          if (!(x < h)) return [3
          /*break*/
          , 5];
          newValues[scalar_grid_field_1.calculateFlatIndex(w, [x, y])] = (c2 * t([x, y]) + m([x - 1, y]) + m([x + 1, y]) + m([x, y - 1]) + m([x, y + 1])) / 4;
          curTime = performance.now();
          if (!(curTime - startTime > 5)) return [3
          /*break*/
          , 4];
          return [4
          /*yield*/
          , nextFramePromise()];

        case 3:
          _b.sent();

          startTime = performance.now();
          _b.label = 4;

        case 4:
          x++;
          return [3
          /*break*/
          , 2];

        case 5:
          y++;
          return [3
          /*break*/
          , 1];

        case 6:
          return [2
          /*return*/
          , __assign(__assign({}, field), {
            values: newValues
          })];
      }
    });
  });
}

var laplacianValueAt = function laplacianValueAt(field) {
  return function (_a) {
    var x = _a[0],
        y = _a[1];
    var m = scalar_grid_field_1.evaluateDiscrete(field);
    return (4 * m([x, y]) - m([x - 1, y]) - m([x + 1, y]) - m([x, y - 1]) - m([x, y + 1])) / Math.pow(field.cellSize, 2);
  };
};

function laplacian(field) {
  return scalar_grid_field_1.init(laplacianValueAt(field), field);
}

var cellCount = 200; // let targetField = pipe(
// 	emptyField({ position: [0, 0], size: [cellCount, cellCount], cellSize: 1 / cellCount }),
// 	setValueAt([0, 0], 1),
// 	// setValueAt([cellCount / 2, cellCount / 2], 1),
// );
// let targetField = fromContinuousField(
// 	{ cellSize: 1 / cellCount, position: [0, 0], size: [cellCount, cellCount] },
// 	([x, y]) => Math.sin(2 * Math.PI * x) * Math.cos(2 * Math.PI * y) * 0.03
// );

var targetField = {
  "size": [200, 200],
  "cellSize": 0.01,
  "position": [0, 0],
  "values": [-0.8898734625310158, -0.8674751519742347, -0.8375106972921516, -0.5874178342542606, -0.2399469679640962, -0.19053147750489074, -0.21323561876531194, -0.23522231733392296, -0.25181831570387736, -0.26479972067045576, -0.27235838013465674, -0.2725552434599585, -0.26395208607787346, -0.2458133205519637, -0.21805043991550122, -0.1812851180762891, -0.13669747868696724, -0.08596240310825287, -0.03105164518761061, 0.025902251260603748, 0.0827812131823844, 0.13762319725387862, 0.1887187250355744, 0.23470899395850875, 0.2745818927543464, 0.3077117417480162, 0.3337694622016416, 0.35272016374284476, 0.36468405317588903, 0.36992446178423144, 0.36869800614269366, 0.36126658001834855, 0.34776274735852386, 0.32825119582713036, 0.30269363021723183, 0.2708088722316484, 0.22272581641709088, 0.177532985621907, 0.15435877059704417, 0.13474493745896332, 0.11302946575771688, 0.08903090914319378, 0.06268616899681945, 0.03431978082055931, 0.004528070635891446, -0.02555638799826454, -0.05744678656930624, -0.0734962707144513, -0.06494011743293449, 0.054837951185456646, 0.25261015050210744, 0.4551844012018478, 0.6093734396871664, 0.7208611615712619, 0.8232198217740072, 0.9271814711962838, 1.033147362487152, 1.1328783815464925, 1.2232089831597421, 1.30065198179339, 1.3620717714765025, 1.4042575449172334, 1.4247257082405431, 1.4213092684475104, 1.3930080313458904, 1.3396264522028858, 1.2628135986229871, 1.1633403126542294, 1.049517137679067, 0.9388328937864419, 0.8215089412412802, 0.6969571996404005, 0.5716302888033953, 0.45397815583960544, 0.3534303176206435, 0.2823323772537978, 0.25262922929457, 0.25603405597419915, 0.28962596023396436, 0.35046820118497735, 0.433684713572839, 0.5329444011393969, 0.641010346334689, 0.7502669683683441, 0.8533324063040275, 0.943528145786257, 1.015376382132951, 1.0648337948271642, 1.089555880819904, 1.0888227952262355, 1.063558364080471, 1.015987826246377, 0.9494902098092739, 0.8681026731218102, 0.7763295056537833, 0.678627659149921, 0.5792882133123491, 0.48200930193050695, 0.3899208960366183, 0.3052959213704636, 0.22972994887100295, 0.16398341590753773, 0.10827665559789779, 0.06221544660218914, 0.02513396298852477, -0.003957424513849617, -0.02604839160900596, -0.04220657571561759, -0.05331750685178971, -0.06020734069013289, -0.06345943418709221, -0.06357162392159749, -0.06082031607011862, -0.04262051613851103, 0.041771607206039785, 0.1585546701912175, 0.2543617835226444, 0.29601924246259714, 0.32233523991233026, 0.336973156612816, 0.348512444489804, 0.35864331804636285, 0.36669175644107455, 0.37129347429555626, 0.3714023092857399, 0.36631981512029554, 0.35561146494731055, 0.3391325643248324, 0.3171687886902559, 0.29032844057439533, 0.25950447701847246, 0.22579277063731507, 0.19042772394039176, 0.1546694841996219, 0.11964485531211633, 0.0822131120416465, 0.02095336979634066, -0.020908671004226775, -0.022326052414435082, -0.012615587245196735, 0.0027855012537676416, 0.022365720251057652, 0.044477526194508066, 0.06725725555826267, 0.08887376942546155, 0.10764376527191111, 0.12218448083601219, 0.1315037108775594, 0.13509676563780726, 0.13296879645198345, 0.125642885480731, 0.11409554805176114, 0.09967301610832457, 0.08395432424740368, 0.06860728613511391, 0.055223997593981, 0.04517188610342049, 0.03945983653957663, 0.03864157859760642, 0.042760034586064366, 0.05133853858121662, 0.06342083210721405, 0.07764986896870973, 0.09238500699266794, 0.10583452089525092, 0.11620578399332815, 0.12183990390723376, 0.1213445208298527, 0.11368212928606658, 0.09824800538309475, 0.07488334363554872, 0.04388497132972713, 0.005671930624941979, -0.042457134482851266, -0.10243033116642852, -0.16597061581851147, -0.21724937099207509, -0.23974371240981363, -0.23990498107097835, -0.22932339759079046, -0.21753141696378453, -0.309227906908891, -0.6447584210163351, -0.9086103243852026, -1.0334643475278966, -1.1283997092553801, -1.167456487777737, -1.186796183650484, -1.198872926727292, -1.20318445049553, -1.1994483931417284, -1.1875972776700534, -1.167963885412111, -1.1412343191835674, -1.1085752867923366, -1.071504856433811, -1.031921468668676, -0.9918911703060971, -0.9535784892402974, -0.9189948771046081, -0.9231345350014077, -0.8983791421029661, -0.8806095522313764, -0.7992505017212412, -0.440029065278182, -0.2771741367754368, -0.286105181937657, -0.3068904992289454, -0.3217642267451186, -0.33251090682549034, -0.3381095334911439, -0.33666835140795826, -0.32685346679744676, -0.30791386740984983, -0.27978188893172984, -0.2429976381238923, -0.1986803660203229, -0.14838019882912512, -0.09395369861144509, -0.037401670069042936, 0.019290082311495205, 0.07426480785918077, 0.1259302889779308, 0.1729861325092381, 0.21450299184341404, 0.24986019560665262, 0.27876927642734195, 0.3011487140550928, 0.3171167064836373, 0.32684199965033844, 0.3305399501152415, 0.32833296412782875, 0.3202805346166553, 0.30626733801009465, 0.2866298817751982, 0.26524701167904396, 0.19822896542911916, 0.1739800648041534, 0.1534829757867584, 0.1315356119856803, 0.1069002611365013, 0.07930157248648584, 0.04881844100253829, 0.014517437862275884, -0.026436978333246763, -0.05761144357609105, -0.09384867649315787, -0.059753135764082366, 0.05093535838065755, 0.17825607568920354, 0.30399817190323475, 0.42373521774581846, 0.5277867943375174, 0.6339016993165081, 0.7455976502388657, 0.8615813867744877, 0.9750664257399766, 1.0828116766554436, 1.1811889132448905, 1.2667662379411744, 1.3359228606830502, 1.385570656494279, 1.412770409723322, 1.4156021834036734, 1.392836532738122, 1.3437367199938333, 1.3131384159488215, 1.2628933426624416, 1.1621555525745872, 1.0636291377628693, 0.9801444432378252, 0.8885141758585782, 0.7812319112938271, 0.6600058939907876, 0.5196912461337029, 0.361103151919296, 0.26060192277585337, 0.24786225117954075, 0.27634797845118264, 0.3323424794698546, 0.41091020897404906, 0.5059197171093266, 0.6103246926407695, 0.7167085215494458, 0.8178217460746551, 0.907121488421982, 0.9791555367712306, 1.0299234676885263, 1.0569812617108618, 1.05955914792876, 1.0383726331522567, 0.9955321785479745, 0.9341408955936314, 0.8580992719551244, 0.7716169498940655, 0.67903388941063, 0.5843686367416803, 0.4912504518984715, 0.402583575875779, 0.32063192790073014, 0.24682103438127712, 0.18196074068901513, 0.126155889552499, 0.07911204636437219, 0.040097997141302244, 0.008265168470445339, -0.017395349374913494, -0.0377773030542663, -0.05374325183869111, -0.06592241712985536, -0.0748404164648373, -0.0807826208880007, -0.07777536831490817, -0.0006712337815937275, 0.13623713294105566, 0.23600013316209267, 0.2788365917146238, 0.29211614118873097, 0.3019471815518817, 0.31267415301766244, 0.3238578755542951, 0.3340828673924614, 0.3420426293017309, 0.34613344322757245, 0.3452766952999813, 0.33875721135459, 0.32620091092550485, 0.3076103977376645, 0.28335447308284145, 0.25415676483423244, 0.2210272255490091, 0.18520760382197565, 0.14805597675628057, 0.11097052695745457, 0.07589217975795481, 0.040340661284344215, -0.031906688682094675, -0.04721669697638564, -0.04712207264158064, -0.04044051461977727, -0.027622781477665725, -0.010057676458608, 0.010443834825880849, 0.0319929969732371, 0.052706014494209086, 0.07087800541459943, 0.08508622919661235, 0.09432626847597936, 0.09806476911025497, 0.09629641722045479, 0.08951558209931165, 0.0786776520938488, 0.06508899318551231, 0.05028993343350319, 0.0358950017767643, 0.02344398458529451, 0.01424568019359751, 0.00925525619238643, 0.008974905061687188, 0.013404415107079348, 0.022030621796442773, 0.03386837975275503, 0.04753723366772444, 0.06137507827466715, 0.07356997277803123, 0.08230351070566422, 0.0858904263855127, 0.08290183371328941, 0.07226895366913277, 0.05334742628062816, 0.025959398806702172, -0.009617975475991969, -0.052674116924531056, -0.10209095315477601, -0.15662210631666174, -0.2146670316190118, -0.273142536457307, -0.3264677564806284, -0.37458045384499616, -0.4176486107037194, -0.46331276343033245, -0.6247040930769847, -0.9482671323256184, -1.129785328719226, -1.1822313799609274, -1.2161660419133762, -1.2409053432052777, -1.2582608542623817, -1.2677523810792382, -1.2690631223739572, -1.262004779563548, -1.246711873303802, -1.2235905217249279, -1.1934915484504955, -1.1575955876940256, -1.1175156526250571, -1.0750993131877138, -1.032439443374206, -0.9916144161939515, -0.9546254887065917, -0.9039783953912748, -0.8785808702766733, -0.8607758018129821, -0.8381136260032065, -0.6276220644422112, -0.3826721904706343, -0.34313289816812986, -0.35709212407791213, -0.37110522565248516, -0.38088183036342826, -0.3856450710101704, -0.3837206269752933, -0.3738167078471868, -0.35523788505921594, -0.32788787082810167, -0.2922751404977131, -0.24942868939785257, -0.200795229656487, -0.14810999486681453, -0.09323253528397757, -0.03803199683030822, 0.01577831621469894, 0.06669130601343021, 0.11352641065183633, 0.15539512978464387, 0.1917595789757538, 0.22232570324275258, 0.2470527170756487, 0.2660079881460362, 0.2793575542654949, 0.2872203674668352, 0.28967358191329673, 0.28663328083837314, 0.277902536682598, 0.2635573867967862, 0.2486435573889283, 0.1909127492442284, 0.1695246479210386, 0.14859661718246997, 0.12428775497254652, 0.09649039326006292, 0.06081658798247869, 0.019193329293837103, -0.02902217087850012, -0.10600101431977116, -0.11618461804986246, -0.07865198760414671, -0.03682929276769542, 0.03889148298661471, 0.1256410288542158, 0.21754774639824426, 0.31374839450305725, 0.41644099032928317, 0.5304744463316031, 0.6496797019806904, 0.7703456188004583, 0.889273291603851, 1.0028182291147236, 1.107379356045099, 1.1990774563453046, 1.2743823214994725, 1.3297687467707808, 1.3628605053828657, 1.370799430760595, 1.4089252640173164, 1.3985016254404288, 1.419286389008481, 1.4783812321230139, 1.4679298298966783, 1.3455406790801696, 1.208857830255659, 1.0899714306129167, 0.9879598958321569, 0.9058632442129839, 0.8277461877940597, 0.6535916869720939, 0.37548524389576543, 0.22611740587670281, 0.22614220290706477, 0.27670244522194, 0.35078164686366886, 0.4417157424436251, 0.542677074264144, 0.6464698592505915, 0.7460395959204948, 0.8349680715096182, 0.9079019617114881, 0.9608260242098461, 0.9912785414138772, 0.9983340167594128, 0.9825911747017448, 0.9459001843626424, 0.8911933469795059, 0.8220624874652618, 0.7425454764413768, 0.6566801046900759, 0.5683551580576349, 0.4809427157231987, 0.3972825406815188, 0.3194437766456657, 0.24885657055822996, 0.18619900609801032, 0.13164091970038339, 0.08481149944921373, 0.045092106529040166, 0.011604935243568093, -0.016510087108862592, -0.04013454072104761, -0.05995523173007289, -0.07655307107761766, -0.09026203390788012, -0.10062740996691599, -0.06508613611084502, 0.07740269508297604, 0.20012196815815675, 0.2479324626865428, 0.2544254033902599, 0.26137939722851455, 0.27140104419356437, 0.2839342676117378, 0.29664639577517127, 0.3077340347770492, 0.3157666523406708, 0.3194723343587311, 0.3178193996956704, 0.3100874292151552, 0.2959332768398326, 0.27541207635680376, 0.24898994695765087, 0.21749867804664547, 0.1820963748369886, 0.14415931631321932, 0.10520790985048567, 0.0667590744018689, 0.030678779396678735, -0.003941248903892358, -0.04726041188070074, -0.061248410143003085, -0.06484710417481754, -0.06131831065080018, -0.05119741762299235, -0.03591502405151914, -0.01729870937971878, 0.0027120120387196245, 0.022222152600342326, 0.03948718838313203, 0.05308258394440735, 0.06197909363402365, 0.06564641629191437, 0.06405862918031624, 0.05770414417763514, 0.04750732444323136, 0.034748185394073206, 0.02091838773875243, 0.00758574469917761, -0.0037709312558782404, -0.011898117198505531, -0.015900070616062356, -0.015322753839075665, -0.010211713261401467, -0.0011119759438877885, 0.010962733033045957, 0.02461334099844459, 0.03815732319305809, 0.04976494936358189, 0.05759262288802525, 0.05992617804465605, 0.055300665578117636, 0.04260686574468764, 0.021162902623295565, -0.009244495119542062, -0.04835166086368492, -0.09544905537670534, -0.14942982102715874, -0.2088793136184064, -0.27208804849592116, -0.33729426665151596, -0.40243449454671776, -0.46622167378765056, -0.5267697784202348, -0.587056742668473, -0.7563284718212833, -1.0313211420617696, -1.1721698922216621, -1.2084287176045638, -1.2379262176044366, -1.2599890677050745, -1.2740778053369004, -1.279898315360719, -1.2772388469272444, -1.266146458675057, -1.2468628736043588, -1.2200139521367186, -1.186501886586023, -1.147657347654591, -1.105059974101109, -1.0606186352069278, -1.0163212421221175, -0.9742396752537168, -0.9362470640879978, -0.8298335224766564, -0.8055386856808244, -0.7889589077839396, -0.7765609553566373, -0.6816473897333646, -0.44921826643846074, -0.37753218891971585, -0.38280172095524456, -0.3960097631393822, -0.40609455269967043, -0.4113866495160625, -0.41031827102317564, -0.40168146249327563, -0.3848085074894705, -0.35960412984729473, -0.32653223001017295, -0.28653959471494694, -0.24097616273864197, -0.1914378436210118, -0.13966933885497568, -0.08737952560972317, -0.03618045689764404, 0.012570811877577803, 0.05776216270599832, 0.09862558908401375, 0.13465222573270186, 0.16562975210895026, 0.1915063099773615, 0.2123876403042564, 0.22838689575187132, 0.23961452123148597, 0.2460479305299268, 0.2475465737156899, 0.2441104675313026, 0.24033710398968378, 0.2062716543316654, 0.18479861867999325, 0.1631649612555588, 0.14004325482839786, 0.10777454058902691, 0.07062935140163251, -0.009569602094765983, -0.10188318807569807, -0.14697270935685758, -0.17430536747530212, -0.1959453705132841, -0.1655933515669279, -0.1211985233055799, -0.06173908278798734, 0.01089466416750895, 0.0940929623057789, 0.18924116215633102, 0.29636941414095386, 0.41160896548296844, 0.5322813602275716, 0.6553694084027839, 0.7773493331246635, 0.8945830847152254, 1.003077328680452, 1.0990108114786397, 1.1784536936319547, 1.238241210164487, 1.2999388780583994, 1.3606622677694595, 1.5016691082797378, 1.660249185311149, 1.6474156872833614, 1.580166903916865, 1.5288818605508077, 1.434621788713995, 1.2891882811524895, 1.1332557109779615, 0.9907540274868507, 0.8757342914981006, 0.8234882407774549, 0.8285001913590954, 0.626045141623073, 0.28232712895845724, 0.15652216915063044, 0.18688635277426702, 0.2565954457402373, 0.34387167978605326, 0.4418203859400287, 0.5434902938082238, 0.6420520047862688, 0.7312525570621184, 0.8058292474296724, 0.8618061859185935, 0.89664992924956, 0.9093453541289116, 0.9002777666867892, 0.871116013054186, 0.8244923841530065, 0.763784308293002, 0.6927085528079084, 0.6151122605361286, 0.5345960122268023, 0.45440329979697935, 0.37714935344857636, 0.3048511912736016, 0.23878571823821648, 0.1796505308753007, 0.12752616033149433, 0.08211865172846622, 0.04277201610475245, 0.008727872557701133, -0.020868754916120835, -0.04674863412936814, -0.069556966805433, -0.08970177019317971, -0.10744949165756346, -0.11401760631757707, -0.01801299113894106, 0.14120183913128836, 0.20488337783056965, 0.21221317962903108, 0.21611386089071816, 0.22640661451246713, 0.23973788896244663, 0.2541282023254212, 0.268079606184743, 0.2800734087577692, 0.2886275360299977, 0.29241492732449714, 0.2903638666085757, 0.2817487777360519, 0.26624783008376607, 0.2439831810589883, 0.2155087978682637, 0.18179233234075998, 0.1441260907506603, 0.10406113238400394, 0.06325788252277409, 0.024654607567947906, -0.0055650712360098, -0.04161003945302966, -0.05264710919159743, -0.06669583241519739, -0.07508801758457562, -0.07500253041748195, -0.06768527934574653, -0.05483824277735305, -0.0383070337791378, -0.020032750793196996, -0.0019538012764099832, 0.014190951459401191, 0.026951082460008102, 0.03531159397503192, 0.038727164136106884, 0.037181931274655966, 0.03114380876832601, 0.021527761526398015, 0.009575060089064835, -0.0032571021332196137, -0.01545775714113784, -0.025598976713869792, -0.03248954647534785, -0.03528369166851131, -0.0335791793302509, -0.027456024658725653, -0.01749238236956341, -0.00471843082590917, 0.009447285301900088, 0.02331326658326094, 0.035029702304234744, 0.04273594867909836, 0.04468458484519777, 0.03937720714672377, 0.025658678808884616, 0.002805317492607262, -0.029436146199039115, -0.07082730045767693, -0.12066103054942712, -0.1778070898104387, -0.24078478148248994, -0.3078576897663883, -0.3771287051343659, -0.44665465883399413, -0.5145290253822203, -0.5789617977707637, -0.6418308168070093, -0.7956832143189265, -1.0201052271148408, -1.143971007972624, -1.1783057258691638, -1.2042011443292315, -1.2221343315870588, -1.2316928439427652, -1.2326795124195513, -1.2251296357665833, -1.2092242076271917, -1.185469672653726, -1.1545889511163425, -1.1176950076402745, -1.0761258860183185, -1.0315744510613598, -0.9858562807837901, -0.9409764412048762, -0.898848503592232, -0.8613085925925752, -0.7013319081354821, -0.6797369884394566, -0.6662249842056243, -0.6597295356863775, -0.6197526700757603, -0.43768967963709215, -0.375529938638528, -0.3799063563194949, -0.39385256078250386, -0.4056442022784488, -0.4129258597840142, -0.41417674533477467, -0.40826980119461886, -0.3945693681755529, -0.37298783097547883, -0.3439345143011465, -0.3082959815085822, -0.26729470082077356, -0.22242627001284276, -0.17526773864685374, -0.1274212410307065, -0.08032572121876669, -0.03525043236548164, 0.006845746355821802, 0.045251592537155716, 0.07957772295395138, 0.10963461795898155, 0.13544899492581663, 0.1571135624849349, 0.17477328247643964, 0.18848367554078393, 0.1982012885331219, 0.2036795765061985, 0.20543952466166715, 0.22326167150041432, 0.17878815573835816, 0.173241292834712, 0.14905637983497577, 0.1181582609568963, 0.014145174548711559, -0.07988935487261983, -0.15691566272877822, -0.23652075025979613, -0.29344328472821957, -0.2961954582267179, -0.2918673360118973, -0.2685316007815963, -0.23010242934146063, -0.17888123454567406, -0.11342259759014794, -0.033588909954334056, 0.05926303853234316, 0.16347618172772638, 0.27685565788330635, 0.3967268228388354, 0.5198422522187385, 0.6426752370164439, 0.7612664936874132, 0.8716509035787361, 0.9696583268984589, 1.0517191900070744, 1.1356725538248713, 1.28520384253168, 1.5345912467393585, 1.6511868901986748, 1.716017391098183, 1.6892944709099655, 1.561447101032476, 1.4005863010471273, 1.253766657358116, 1.1133242384123463, 0.9768057293558914, 0.8494614523104396, 0.7379889439612564, 0.6533761210054525, 0.658791676431431, 0.6327024461904764, 0.3279931377186196, 0.08382034980991437, 0.07000239652268281, 0.13342416680278935, 0.21762555634994918, 0.3131072342627872, 0.41321933674079303, 0.5113595338669643, 0.6014775758169997, 0.6784227543420909, 0.7382560802883247, 0.7784096572274404, 0.7977343360576001, 0.7964532375935987, 0.7759735512928976, 0.7386926530851499, 0.6876676607966461, 0.6263738684174633, 0.558347125375172, 0.4869939533786889, 0.4153024443730091, 0.34577024595420447, 0.2802344694862029, 0.21993499762432656, 0.1654625552489577, 0.11692913408296324, 0.07399367501663079, 0.03608317515353843, 0.0024384153868082237, -0.027675074056827675, -0.054951342634112166, -0.07988728181909321, -0.10282267596009653, -0.12384038389042784, -0.10686264170113446, 0.03227436459168853, 0.14585444814603177, 0.16517228859382782, 0.16820596739076676, 0.17811219328937844, 0.19151853151203058, 0.20711616384737908, 0.22354972023732889, 0.23928810551946134, 0.2527224963500383, 0.26228885360262977, 0.2665917720182569, 0.2645156337669099, 0.25532040025598146, 0.23871095362630967, 0.2148663045116983, 0.18444870149357762, 0.1485462023569024, 0.10862249840650229, 0.06637873952604956, 0.02366700135937272, -0.012517245780731656, -0.01967684916709267, -0.041400990213758426, -0.05002638516979019, -0.06635928885046738, -0.07838402905690511, -0.08167018513305635, -0.07722228432384082, -0.06690213000051815, -0.05254596364627284, -0.03614473635630944, -0.01962623135895214, -0.004762065672967886, 0.007018696137664815, 0.014686047562836757, 0.01771840067486541, 0.016087797077490862, 0.010271276609523428, 0.001157418775073138, -0.010029553798943103, -0.021879673355622242, -0.032922153399890686, -0.04178864006017524, -0.04733511468467677, -0.04877067730294238, -0.04572872209004375, -0.03832606660298388, -0.027155990117133877, -0.013267065573654868, 0.0019213769529986546, 0.016704925028474316, 0.029230781191968758, 0.03761377442313707, 0.04008633338257739, 0.0351055254057977, 0.02147757129872252, -0.0015763519250753255, -0.03434921825199133, -0.07664134756915342, -0.12775537525584113, -0.18654890306981198, -0.25149043319161457, -0.3207551255228198, -0.39232187151418874, -0.4640828191160402, -0.533953178105973, -0.5999602270351048, -0.6629193246331191, -0.7876886236370613, -0.9545397857838465, -1.063300093461553, -1.0949605739586739, -1.1158048641697933, -1.128254038800951, -1.1320138598615381, -1.127113865948111, -1.113734328247073, -1.0923454816292901, -1.0635926866692973, -1.0284646452257507, -0.9881360096621687, -0.9441207133890597, -0.8980579520121879, -0.851824998472714, -0.8072709426955598, -0.7662826297350529, -0.7304957452300611, -0.5222593712089063, -0.5047824163926355, -0.4958016661830298, -0.4954554954462944, -0.4891222897824621, -0.374504767635365, -0.336927319474138, -0.3468573443258638, -0.3635167247242457, -0.37846493089763733, -0.38918140284635605, -0.3942179465923985, -0.3925041450110065, -0.38346556717917224, -0.3669905372238471, -0.3434737553797369, -0.31369462711699114, -0.27880172194091557, -0.24012501218420823, -0.1991399661399491, -0.15725992648950538, -0.11582466859088214, -0.07592233942503235, -0.03843349847908151, -0.003915468879222672, 0.027293153732103725, 0.05511933601283037, 0.0796110251413662, 0.1009329774715706, 0.11921674094152745, 0.1345378420223735, 0.14679319611565145, 0.15585486213709032, 0.16637352932199256, 0.1818890451682913, 0.17860228032364311, 0.14664215357184496, 0.04902287311105091, -0.03964075575363424, -0.13296516195557473, -0.24526866486325272, -0.30882829303232917, -0.3439771615367171, -0.37145844512536286, -0.38194028342047837, -0.3804768987561644, -0.3667260318475378, -0.3385884666435288, -0.2956317716701733, -0.23763566615244613, -0.16477826531064643, -0.0779733193613179, 0.021220300937033088, 0.13064109277986624, 0.2474893065225503, 0.36851875753624874, 0.48996646365155394, 0.6078789188169118, 0.7180030032379832, 0.8164716483501389, 0.9099593836927684, 1.104868771675783, 1.387324059630067, 1.5797558084445185, 1.6243512284890569, 1.5338691161463105, 1.4342942656725413, 1.3324909993061222, 1.2159707852229786, 1.087612598319979, 0.9545039606961128, 0.8233151873523923, 0.7008439527398971, 0.593583627066662, 0.5072981690590349, 0.4842594614500876, 0.49492266313128686, 0.2617453685222131, -0.01827933631697576, -0.06805113569344723, -0.01209235111617879, 0.0695258204523066, 0.1631324337547717, 0.2622191077594829, 0.36048810568780776, 0.4520756902754579, 0.5319889988626979, 0.5963306222654223, 0.6425059411260756, 0.6692532032284522, 0.6766047403443567, 0.6657414200876874, 0.6387681982839619, 0.5984696915037286, 0.5480029769741863, 0.490652011090023, 0.4295420846917368, 0.36747557375762696, 0.30674106796595346, 0.24907352423549867, 0.1955832243968807, 0.14683689708389203, 0.10288560475331998, 0.06342604706510269, 0.027876884702145333, -0.004437986481977241, -0.034221144668650894, -0.062049512310751176, -0.08835480694497555, -0.1133335097826822, -0.13585368192452218, -0.09256428509990933, 0.0551870093709419, 0.11465259697890628, 0.11909311211018525, 0.12762853936158325, 0.14059384913217388, 0.15682834767674092, 0.1751534625281076, 0.1941372832322209, 0.21215294990561406, 0.2274908161149809, 0.23849650707980197, 0.24369452717956142, 0.24191911769661179, 0.23241128363467034, 0.21489419135744559, 0.18961428497239474, 0.15732699094682978, 0.11927076942591963, 0.07705489353219619, 0.03258000742847855, -0.012149380437298518, -0.04618733342208614, -0.029610857575154803, -0.01424407504668146, -0.035455241024622275, -0.05986175534327032, -0.07565844169675096, -0.08196398224775248, -0.08037509901719009, -0.07256488696434493, -0.060425630159696375, -0.04593313723193759, -0.03105954452886195, -0.01755215515877051, -0.006862150488060159, 0.000013214133458339106, 0.0025430816814469015, 0.0007253971006022653, -0.004978050905951603, -0.013675763824345877, -0.024177926446637632, -0.03509857977614794, -0.04501855582326464, -0.05260855301733325, -0.056778317158237446, -0.05677102642666765, -0.05225906399475422, -0.04337345553623573, -0.03072524553667244, -0.015357276115526952, 0.001305562383097092, 0.0175699583896185, 0.0315708702154891, 0.04142031396564838, 0.04531575349707451, 0.04168715679885615, 0.029282163650448112, 0.00727851265789603, -0.024679909795772836, -0.06642712612434032, -0.11730010235321497, -0.1761465757640046, -0.24140711130736836, -0.3111785852301727, -0.38333353238895285, -0.4556181285324108, -0.5257774315567492, -0.5916603575717883, -0.6524657924136186, -0.7409944619836368, -0.8441986042204608, -0.933754804936247, -0.9622311353192012, -0.9769103489830915, -0.9826224258792218, -0.9795096102316379, -0.9677344076008199, -0.9477632994619896, -0.9202324206397652, -0.8860900444644599, -0.8464413218460054, -0.802698750429796, -0.7563811279515118, -0.7092494178789757, -0.6630589178012904, -0.6196654909951587, -0.5807462760783944, -0.547877870519291, -0.29946930684098483, -0.2871143483534695, -0.2838211856708659, -0.2900346654924304, -0.30500939160654106, -0.2725474948318727, -0.2666501282264164, -0.28455579372628925, -0.30555625252488383, -0.3249662319603779, -0.34044610066161596, -0.35059359778180266, -0.3544491704174586, -0.3514439571027914, -0.34150273342949866, -0.3249399449647008, -0.30249817639706755, -0.2751718108076915, -0.24420530232145943, -0.2108777069344434, -0.17650002015614774, -0.14220807889427434, -0.10899568098671963, -0.0775578542000197, -0.048377837072717256, -0.021641861598990175, 0.002627177620282417, 0.024579610105450733, 0.0444206214771814, 0.06233238808210739, 0.07838410972399323, 0.09246285827264256, 0.10475282961346721, 0.15096103697335295, 0.13572240166539906, 0.09751817605081481, 0.02688562814741058, -0.06805518949427292, -0.19370863263972193, -0.2535409203668708, -0.3106026254848011, -0.3601980187679441, -0.3998523608570679, -0.4311376000741891, -0.4529136596104948, -0.4627575704411129, -0.4597175944693621, -0.44230041353234206, -0.4095289885991633, -0.3609513280641412, -0.2967349952542886, -0.21768044354780614, -0.12527645439192625, -0.02170170236534652, 0.09026267868415605, 0.2072294908445773, 0.3254302925343264, 0.44068851115842733, 0.548804110701735, 0.6490850898590121, 0.8287396613283846, 1.1511929221966506, 1.3593893735649392, 1.3708738255616444, 1.3281322114100966, 1.2772065170519036, 1.2045102779097197, 1.1106195921707704, 0.999956067270785, 0.8778175051111581, 0.7506095824317152, 0.6250958396711563, 0.5080319096147654, 0.4057509470683076, 0.32370299251368995, 0.290082304410997, 0.3010959359945229, 0.11838520687750131, -0.15337651669858277, -0.2213959345256118, -0.17230227055272795, -0.09292104674524593, -0.0007258913267840228, 0.0977833219496782, 0.1965561869437531, 0.29000419524522625, 0.37326087881701575, 0.4425271425859474, 0.495170890411075, 0.5298405517908515, 0.5463824478223644, 0.545744125117035, 0.5297544902906823, 0.5008965679235717, 0.46203458485699755, 0.4161576957918456, 0.3661424976595704, 0.31455546123306544, 0.2635141888532546, 0.21459782605135924, 0.1688290444362588, 0.12669496057551655, 0.08823022267696778, 0.05311219793480504, 0.020797224570939576, -0.009365475583728688, -0.03799996002239325, -0.06562270168318918, -0.09255431284827687, -0.1189244673823211, -0.13783302341057357, -0.0723228178180153, 0.04772939521434072, 0.0698115439520719, 0.07668551924772649, 0.08874883726684457, 0.10498244027666015, 0.12443787682951535, 0.14589637888007534, 0.16783716985014063, 0.18852396638770774, 0.2061447198145132, 0.2189365665374503, 0.22534349779855778, 0.22413588752958358, 0.21453186923641399, 0.19627262569061577, 0.16965977227162377, 0.1355618055769865, 0.09534265390959717, 0.050799944642451855, 0.003993245373758114, -0.038344178628978653, -0.04836409802067809, -0.021480961859386305, 0.006348814920276169, -0.017793420520667347, -0.047984341005339104, -0.06759029264236105, -0.07688179505838111, -0.07803495774936264, -0.07268536898018008, -0.06270309578905042, -0.05012183647372925, -0.03688895952789606, -0.024787678328693108, -0.015232834658329919, -0.009235901931568868, -0.007289576411653842, -0.009404894529298269, -0.01509782915201785, -0.023498510428621167, -0.033421473904443666, -0.04352074205367373, -0.05240280284518062, -0.058786650840339516, -0.06161074212421003, -0.06015715100738106, -0.054111002922074825, -0.0436208764799384, -0.029287591236301536, -0.012153460157199536, 0.006379946762260946, 0.024620323007976008, 0.04071848932076794, 0.05276664602922354, 0.05895283635867221, 0.05765545925515392, 0.047585102837236715, 0.027845007793120047, -0.0019675682215583024, -0.04175598502310951, -0.09088075233725501, -0.148217069402234, -0.21217317456036433, -0.28080295882842954, -0.3518755547563188, -0.42301973843605545, -0.49182227499453823, -0.5559698557858823, -0.6131416587408696, -0.6653475411142544, -0.6897484965204983, -0.7598787403407261, -0.7866072591770399, -0.7946632387616734, -0.792701960887638, -0.7818117829106646, -0.7624360949024922, -0.7352124539920926, -0.7010896415144403, -0.6611745468772083, -0.6168580774474082, -0.5696215091559509, -0.5211700449980654, -0.4732004127820595, -0.42752766976085965, -0.38582261868478884, -0.3497234668575038, -0.32056299962699075, -0.0423202029501315, -0.0357239335601518, -0.03874177195901485, -0.05218772993340437, -0.08156309913196846, -0.12448087122980134, -0.167662848011644, -0.1956687930882648, -0.22207431860364757, -0.24701057325368403, -0.26829380123444757, -0.284673680907261, -0.29522133753320645, -0.29945690329987507, -0.29725610190697793, -0.288942605385742, -0.27512557108120816, -0.2567412769383477, -0.23483949844651342, -0.21060302626101723, -0.18512221618636282, -0.15944673335516235, -0.13438892416397152, -0.1104641827963313, -0.08796766744023188, -0.0670214313392421, -0.04753989703204553, -0.029325519376509845, -0.011956950495977559, 0.004615849795317928, 0.020472672232317635, 0.03560028955218009, 0.04409367787098173, 0.0873225607585173, 0.10622404465701063, 0.036488347287468414, -0.07648328652649639, -0.14283514636568562, -0.2116004236259137, -0.27538307022473596, -0.3351478665033083, -0.39068791543142467, -0.4403695488324004, -0.482329617752427, -0.5150287116800243, -0.5364576085357555, -0.5448464167912785, -0.5387166624796151, -0.5169150019334765, -0.47883992508681317, -0.42446459887277044, -0.3544816283410963, -0.2702947911335958, -0.17403636501109254, -0.06852829965218454, 0.04283879912387789, 0.15615725949219783, 0.26706230173964585, 0.3687018923106109, 0.5051464367413137, 0.8288638401398485, 1.0464208529529397, 1.0796374502639168, 1.0763272917406956, 1.0562920391520292, 1.0123026694664143, 0.9441980953442419, 0.8550878996243254, 0.7494941080306416, 0.6329271169222439, 0.5116021642296094, 0.3920850516602439, 0.28093226688217987, 0.18422064023513385, 0.10724622196727918, 0.07523506616197229, 0.07300829781496843, -0.07969466505535205, -0.31939416085271155, -0.38581499339294956, -0.33947172608061793, -0.26176833752956785, -0.170657867323337, -0.07253555360731534, 0.026920541008478516, 0.12232699629232524, 0.20904405163489037, 0.2833257525104638, 0.3425734633663237, 0.38531905325729165, 0.41126551897374286, 0.4211124794342678, 0.4164325143697152, 0.3993997389592354, 0.3725893446179347, 0.33869246981490875, 0.3003313379050807, 0.2598355317530592, 0.2191406737849695, 0.1796704572483625, 0.14234532457548266, 0.10757447358301686, 0.0753579721605675, 0.04535766681014408, 0.017045677295183026, -0.010196384535189118, -0.03693906809468217, -0.06362745389507118, -0.09049777076537957, -0.11756338013989343, -0.13187781730045423, -0.05992631791990455, 0.016144313932865195, 0.026999662954933612, 0.03802011393097837, 0.053628508806063735, 0.07337034845290535, 0.0963319661893125, 0.12122363824509397, 0.14641768122262155, 0.17007514584790873, 0.19025879474107454, 0.20510471362458482, 0.2129551828025682, 0.2125198384080207, 0.2029834578762073, 0.1840985559037387, 0.15623044212796078, 0.12033918697554924, 0.07794705803970192, 0.03100024017440628, -0.01822451635055078, -0.05491180885598901, -0.02380767847184373, 0.025026354461113343, 0.03329727484291478, 0.0009516337977188982, -0.03281975726097919, -0.05549297288611221, -0.06765873394436017, -0.07142068814420632, -0.06837957238837733, -0.060475012690097696, -0.04971504251186909, -0.03810105474308001, -0.027380764060136453, -0.01899631544317737, -0.01391479161789455, -0.012639225362386153, -0.015142776176081618, -0.020953859062801394, -0.029186594282570866, -0.03868273262940258, -0.048104465028391, -0.056097448753411605, -0.0613996152150742, -0.06298530242520584, -0.06014604877276897, -0.0525841347572511, -0.04043496202446173, -0.024294679082609294, -0.005173098351665573, 0.01554115702844805, 0.036189056349844595, 0.05491925888987126, 0.06983543737075504, 0.07908902910287452, 0.08103600794470678, 0.07431354931196044, 0.057976575572122435, 0.031531574233667925, -0.004971472824297329, -0.05096592983966275, -0.10533582056719482, -0.16650784446831857, -0.23247926645399453, -0.30096329243856346, -0.3694643895694796, -0.4354492021164109, -0.4964447269061427, -0.5496307282199808, -0.5796557432756879, -0.5325688309312904, -0.5474809719070466, -0.5758322938606266, -0.5786252257064302, -0.5685340933762983, -0.5493139774704439, -0.5218164433554966, -0.48697141886287376, -0.445906452743297, -0.400036540908566, -0.350876226171013, -0.3001485025196935, -0.24956252172452942, -0.2009372643580889, -0.15595484036894014, -0.11628935786321826, -0.0833482359020552, -0.058399620614668635, 0.23778163745168435, 0.23856668493341715, 0.2291877673612186, 0.2082790701952124, 0.16696386802816665, 0.05832122465931633, -0.044931900853383056, -0.082950854279213, -0.11181068296331631, -0.14148299996377212, -0.16954652563382133, -0.19400576420967575, -0.2135100785889179, -0.22721648294309915, -0.23488129832114346, -0.2366590969001301, -0.233146701211151, -0.22514233971218545, -0.21367352677575013, -0.19974915644951174, -0.18443081378896764, -0.16876311917413922, -0.15298209153648656, -0.13757148555035847, -0.1228440045709629, -0.1087284402636497, -0.09533188817878724, -0.08091928601230247, -0.0665207142037918, -0.050764143155259234, -0.03306900919769351, -0.010549186511195074, 0.06964540849111245, 0.09543796213850708, 0.06878502794662911, 0.0018814085427978355, -0.06936494558945583, -0.1397788921618046, -0.20993918650544607, -0.2793826842128464, -0.346743527031947, -0.4107275066612921, -0.4697953457431492, -0.5220523560607528, -0.5655483892287769, -0.5982385726671282, -0.6182064166377259, -0.6237065130506032, -0.613420033008877, -0.5864946796990225, -0.5427627616602422, -0.48274341361156026, -0.4077602541081138, -0.3198877124518127, -0.22193601770037397, -0.1173493812572044, -0.010040708330187442, 0.09221468858796378, 0.1846344600281995, 0.4261246410623132, 0.6862876118978987, 0.7483365358696297, 0.7760129805560814, 0.7856146588546054, 0.7694625152408108, 0.7279095120275212, 0.6628764064177757, 0.5776864842333174, 0.4768024299770506, 0.36562056550368904, 0.2501640864456198, 0.13680521347780283, 0.03180663382644733, -0.05895222408962075, -0.13047056794957523, -0.15683979142108972, -0.1765121619397716, -0.30640322322568014, -0.5000174281363052, -0.5520222659558813, -0.505384799581321, -0.4289563319048475, -0.33893519304562236, -0.24123316556236407, -0.14126565178330353, -0.04407395867685393, 0.04584770902663582, 0.12492003361511639, 0.19051866036742865, 0.24114772620071728, 0.2763217571832144, 0.2965595162925565, 0.3031389644150182, 0.29797598868022757, 0.283320110751335, 0.2616044875490915, 0.2351590627716278, 0.20611017269441856, 0.176171401198304, 0.1466400835889079, 0.1182930973456866, 0.09148602260781491, 0.06614404323464029, 0.04193181980881633, 0.018301102779849643, -0.005322550494566869, -0.029485325851318578, -0.05455577257341737, -0.08070638245470807, -0.10780450280622667, -0.12137554350659663, -0.057880329205105774, -0.01998700257909025, -0.009626502468029763, 0.004888914297054736, 0.024111740279197935, 0.047525446091336576, 0.07417978790311874, 0.10269076673412592, 0.13133916824462055, 0.1581574421262778, 0.18109930313044154, 0.19817341793557652, 0.20763218053406474, 0.2081057478575592, 0.19874682885803185, 0.1793169320659036, 0.15022977279089744, 0.11255836244996864, 0.067946976765632, 0.018539308330231208, -0.03322993680424702, -0.06316704498027992, 0.012048128026682647, 0.08938724240988272, 0.06719255490508136, 0.021478428803855643, -0.015995111080453484, -0.040933544348826345, -0.05576397812772793, -0.06189608746408126, -0.0610061851530852, -0.05500351192736064, -0.04596881352968829, -0.03587072702237304, -0.02650385136786082, -0.01926558176920934, -0.01514351261550917, -0.01459299564809946, -0.017597145322409413, -0.023650322221741016, -0.031883129463602944, -0.041126012903018594, -0.05006922099522054, -0.05736342234846231, -0.0617763783201955, -0.062285632898165244, -0.05819838368585073, -0.04920113117928693, -0.03542220420023334, -0.017419260537485215, 0.0038200050528485185, 0.026954443681020734, 0.05034006541681246, 0.0721580395837862, 0.09049507231349052, 0.10350022881488519, 0.10946751334395888, 0.10699411067432418, 0.09503657886905081, 0.07304309260677488, 0.04095847802255648, -0.0006921744103962624, -0.05086528110334321, -0.10797653538991714, -0.17003058797176074, -0.23465879681314306, -0.29929985916300694, -0.3612808523729969, -0.41801482250212096, -0.4669831028896505, -0.4930717122845385, -0.4159895172430348, -0.32325564377656146, -0.3391631487626352, -0.33975178762540725, -0.3221247969312824, -0.2943527999174824, -0.25858068914993293, -0.21594321370794844, -0.1678663070364088, -0.1159229659493084, -0.061902492106220564, -0.007595314529420527, 0.045108947801932864, 0.09445713082203255, 0.138708071179642, 0.17637583096529585, 0.20608833159975504, 0.22682784870752837, 0.5282894765541579, 0.5239488480922079, 0.5112099513309385, 0.48528253886362105, 0.45370896410689276, 0.2796389773089505, 0.13258595755940572, 0.09462529258652985, 0.04933614872389214, 0.0018241998749157773, -0.041602106141830575, -0.07959227384532674, -0.11141669592169023, -0.13682413029840745, -0.1558630168813746, -0.1689875957380238, -0.1768381510326691, -0.1803141928333254, -0.18032948968654594, -0.17803295035209565, -0.1745981594893049, -0.1690409336101144, -0.1615099917670495, -0.1541332716720003, -0.1470836922813632, -0.14051349740788321, -0.129640280507747, -0.10203674625268278, -0.08346725485233364, -0.025426031222318457, 0.028262610617498574, 0.01969403709269013, 0.08669425093319205, 0.13591540810339708, 0.08993225129222626, 0.021240166099633306, -0.05026354739910399, -0.1236157059399563, -0.19803751026636185, -0.2727139424619205, -0.3465186581099431, -0.4180678180238129, -0.4856823744561769, -0.5474570260931486, -0.6012642332888412, -0.6449337845437491, -0.6762967290937638, -0.6934409373665424, -0.6947676841339376, -0.6792599106339985, -0.6465077915827724, -0.5969154984238081, -0.5316582247271295, -0.45277271764749294, -0.3630345421366581, -0.2659159897805248, -0.16510723592173004, -0.07559132145212288, 0.03202134186793604, 0.2990039638527042, 0.38950406459481535, 0.4485735835367244, 0.4833658299431196, 0.49306871562520627, 0.47739032648077817, 0.4371442600272779, 0.3744405605005614, 0.2925864109224747, 0.19598981992212838, 0.08988349151982522, -0.019860836174381724, -0.12716841420775538, -0.22598278032365116, -0.31077598497986125, -0.3767128366721373, -0.3960127073383104, -0.4321260046767028, -0.5411387766313949, -0.6815452754575144, -0.711235357571149, -0.6620353861341295, -0.5868658871866028, -0.49817756481110465, -0.4013214741073696, -0.3012840509787482, -0.2028818791025513, -0.11031480438666375, -0.02708763142759074, 0.04427864484652, 0.10218517427538887, 0.14606844766793964, 0.1761989430489167, 0.19365534844441168, 0.20002822001218612, 0.1973262720314959, 0.1876531737500322, 0.1731249056065911, 0.15558697540153554, 0.13660463066401363, 0.11726631510188135, 0.09827401559696103, 0.07984561579542326, 0.061893034701707705, 0.04400300079381925, 0.025659122517343924, 0.006258581620596004, -0.014679040249948372, -0.03750589706294338, -0.06229948279993458, -0.0888707763331773, -0.10844209763864576, -0.06652005559916674, -0.05233248305641691, -0.039323769080557014, -0.021274815442962947, 0.0016079172320351276, 0.028774211418434614, 0.05919957861260006, 0.09142862683366548, 0.12362228169084677, 0.15370867529318488, 0.17950317075269284, 0.1989077907790321, 0.21006079674156797, 0.2115235165664281, 0.20240544829082685, 0.18247038970651253, 0.1521906120034, 0.11272208549245111, 0.06586872767985774, 0.013915401903622282, -0.03177957383918617, -0.020313180032670353, 0.06660668993843455, 0.1260971575860328, 0.09455146961561844, 0.04247748776041327, 0.0018037556309540292, -0.025512480637474244, -0.0426877164101751, -0.05095898938837706, -0.051960896011444824, -0.0476904428888858, -0.04019688007976807, -0.031518491705354146, -0.023408833583310695, -0.017304086462606616, -0.01414093736192279, -0.014390847298659248, -0.017989745641748545, -0.02444294898971966, -0.032851002236497506, -0.04206181633630984, -0.05075381474990981, -0.05759912123045191, -0.06135884713702605, -0.06102281054751468, -0.05587863919914726, -0.045604161593215675, -0.03028552017921704, -0.010452215411312138, 0.012965654593910525, 0.03865651431182471, 0.06502746848608387, 0.09026362256716314, 0.11247155150373178, 0.12975701259158035, 0.1403899957827166, 0.1428741914152929, 0.1361073325722888, 0.11941451060770714, 0.09267689257232625, 0.05630476842742915, 0.011312580227786917, -0.04078191791891328, -0.09794715313154434, -0.15780894362151265, -0.21769921166223316, -0.27487345337203006, -0.32659669422712057, -0.37036467130075046, -0.39438985407149474, -0.3066069939333289, -0.10988782236764472, -0.08873223156043242, -0.08938645333642858, -0.06640939030172621, -0.030481700323767846, 0.013433576378794498, 0.06368864672336194, 0.11869094527632384, 0.17659035904434628, 0.2354842355164264, 0.2933614732960912, 0.34833126067962716, 0.39852518322274477, 0.44232912404048186, 0.47824711230898487, 0.5051267085666895, 0.521998196838136, 0.816481900854761, 0.8136178774564282, 0.8130802397955952, 0.8218999517309422, 0.7639613269066787, 0.4824710043926226, 0.3096857673847788, 0.23662043097082108, 0.16260748747149556, 0.10448185679345556, 0.05551135065204349, 0.014379935148264522, -0.0198387834117284, -0.04792470749329425, -0.07070725714241277, -0.08891961185577557, -0.10338153557353813, -0.11482427365912073, -0.12421699818608545, -0.131682811109334, -0.13488634300358981, -0.13089982836462966, -0.12343117963230554, -0.11512196728604351, -0.10571876355555432, -0.09422769648061902, -0.043234687111442405, 0.013361271554337861, 0.02860937157558574, 0.028275402437804686, 0.007890018087818973, 0.04537969789478247, 0.13512633983005795, 0.17850038008957725, 0.11766015756170134, 0.048948362859553285, -0.02313230240613695, -0.09809111578485386, -0.17529669327217956, -0.25393117782649455, -0.3329085120179105, -0.41083176220795714, -0.4859969839127132, -0.5563829181343038, -0.6197683022017291, -0.673767418040228, -0.7160572205794491, -0.7444432921340507, -0.7571498705699309, -0.7528724852367557, -0.7310550125416615, -0.691876359130875, -0.6364408170441695, -0.5666645738341991, -0.485338514365357, -0.39585251026449786, -0.30675579845938916, -0.2322559573358749, -0.0697211595806877, 0.05017393053734853, 0.116662558222977, 0.16980183735975007, 0.20196963083316888, 0.21016451283254156, 0.1939811797283113, 0.15432469838318408, 0.09330550226441403, 0.014249314968640903, -0.07856089674759925, -0.1799776921136269, -0.2844020813812911, -0.3859384679939981, -0.478901899944848, -0.5579606015838112, -0.6185791405417786, -0.6341112134661326, -0.6781322036121429, -0.7579423395139906, -0.8455179971982911, -0.8534238696301841, -0.8021012044184941, -0.7285482871637621, -0.6418458640627058, -0.546510421403001, -0.44725146551959494, -0.3484848639975415, -0.254240789191444, -0.16778788901359576, -0.0916485775854965, -0.02737716442640581, 0.02429003117966766, 0.06351070031717543, 0.09106991084526594, 0.10835959393145833, 0.1170467223229048, 0.11902658759515328, 0.11609040077974253, 0.10992015399080124, 0.1018126715876595, 0.09276056390925991, 0.08326549195090793, 0.07351384908839265, 0.0632797764809494, 0.05216770521034242, 0.03957667160274703, 0.02495710660517325, 0.007792273902397895, -0.012187865359218009, -0.03504983625378966, -0.060538048538308686, -0.09446833043402059, -0.08387955479609577, -0.07746870278430151, -0.06111275867877364, -0.03953698383711668, -0.013004402995397513, 0.017897277950856605, 0.0520980872907737, 0.08804017090132099, 0.12379525567058502, 0.1571566014049175, 0.18582960406761662, 0.20758281797073597, 0.22046023354791167, 0.2229375111935078, 0.21408412515730446, 0.19366713739258645, 0.16219623439419317, 0.12093662670250316, 0.07180149395494784, 0.017273509496158468, -0.018697873615458604, 0.04797456822307966, 0.1496416851635849, 0.1638029278139843, 0.11598813048824441, 0.061012780139329426, 0.01881562180887153, -0.010726396908155689, -0.029944161976902528, -0.04001382507728568, -0.0426655846104671, -0.03986143034979994, -0.03374196029976306, -0.026309174827229942, -0.019379226326081467, -0.014339861949469457, -0.012158937103717848, -0.013254079859437162, -0.01757434620635323, -0.02457973361830873, -0.03338111966460361, -0.04279697733015064, -0.05151815220128669, -0.05819697141576374, -0.061601351981571684, -0.06069523077243677, -0.05475553401195765, -0.043414861909252256, -0.026727580956738328, -0.005159141488443542, 0.020400763993097648, 0.04870622623296139, 0.078187599926963, 0.1070712685396491, 0.13344280025913147, 0.15540448902127757, 0.17114748846106043, 0.1791256725815309, 0.17810970662162973, 0.16735025624743116, 0.14658515528100313, 0.11616401470464233, 0.07698447785502971, 0.030556488365607315, -0.021142904750168334, -0.07567332776686264, -0.13034729590408922, -0.1822906976886891, -0.22869618452095253, -0.26691098759657805, -0.28857931063908104, -0.20206013173879267, 0.07780291915244764, 0.15950215669921874, 0.1641260703374332, 0.18644256237003898, 0.22854033963096576, 0.2800536165716281, 0.3375204897779449, 0.3990690753446291, 0.46271498042088943, 0.5263225053180243, 0.5878261297387173, 0.6451769930071807, 0.6965685655552587, 0.7403270538936724, 0.7751248703648645, 0.7998247470992075, 0.8136792850999308, 1.095454493788055, 1.1215042767977668, 1.123315487501693, 1.1094607042757927, 0.9055148705595579, 0.5043534721137597, 0.28267055313540723, 0.17036087211850148, 0.10262189134979494, 0.05716290869461105, 0.02510194243670938, 0.0035105911566670756, -0.010046764016230725, -0.01789417666251225, -0.021959350187009008, -0.023895851818885205, -0.024870672365317148, -0.02575991515088738, -0.026237078368088973, -0.024720716160505418, -0.018185064305574983, -0.0074465757898423135, 0.003403895631031162, 0.014421679029847922, 0.026378093087906507, 0.03801249070826529, 0.048335100957752175, 0.036312369822820045, 0.017212520417984933, -0.0038346457025522085, -0.020208796319456823, 0.10077599584161945, 0.22268751482259308, 0.21012110235301407, 0.1501034447344365, 0.08338716613826858, 0.012331899197548069, -0.06266407019304587, -0.1410837485733154, -0.2221718254513334, -0.304891125379811, -0.3878602902002708, -0.4693282311831215, -0.5472186426977359, -0.6191486517653821, -0.6826029347604639, -0.7349976675329248, -0.7739616249708359, -0.7974108322622477, -0.8038702110976352, -0.7924993909218117, -0.7633700483613559, -0.7173869653342209, -0.6564546360391503, -0.5832690582252997, -0.5000002970780475, -0.42782275331936237, -0.3802086966037175, -0.23275115611213248, -0.19676238091240972, -0.1344769914414572, -0.08527325899704596, -0.05616296181570668, -0.0500716778721193, -0.06728575410475734, -0.10690413521101583, -0.16673286034080803, -0.24353562832473052, -0.33303795523384316, -0.4303225175047052, -0.529913569917543, -0.6262733073520637, -0.7139069326518963, -0.7878840776449589, -0.8427635591440188, -0.8620191524060021, -0.8953688319036779, -0.9419001491502099, -0.9791240858606658, -0.9697291449590608, -0.91896782544144, -0.8482329904097652, -0.7643762636037099, -0.6716217481725266, -0.5742070157530321, -0.4763026732421931, -0.3815837748749251, -0.29321604737404794, -0.21354683833688348, -0.1442063343096116, -0.08593471527580276, -0.03880552196317477, -0.0021638482703466577, 0.025057825731837235, 0.04434485665440102, 0.05724546843374312, 0.065384211773865, 0.07012713646065638, 0.07265819083947544, 0.07371168066295919, 0.0737390524188668, 0.0727298389999893, 0.0704603405776405, 0.06639335088906506, 0.05996775236423346, 0.05054258766172648, 0.037669324902772416, 0.021036351077594162, 0.0006601989652628149, -0.023998662905129642, -0.07630819944222544, -0.10363603254162523, -0.09416780665993674, -0.07453508210470794, -0.04952906637574728, -0.0194439379477096, 0.015117847801828788, 0.05300522640816929, 0.09259247805686055, 0.13183118898757318, 0.16841301445157342, 0.1999065436282117, 0.22397401718343835, 0.23854615434016369, 0.2420256985133069, 0.23343725208015975, 0.21254026384714142, 0.17989866939430454, 0.13684523056997921, 0.08544768611967779, 0.03183673775150453, 0.019372722801151543, 0.1286395030866081, 0.2290014967887375, 0.20215406945834768, 0.13428979288960763, 0.07589070615343863, 0.03340059908805548, 0.0020063106482379744, -0.01883264572758181, -0.030386685852696438, -0.034340477959662774, -0.0327638372664254, -0.0277634497402397, -0.021429367377195918, -0.01553515943429895, -0.011522111749404096, -0.010304207293732048, -0.012323252122439787, -0.017473427750912263, -0.025224173268939554, -0.03464120502894019, -0.04454818653711479, -0.05360112227308089, -0.06045235846457164, -0.06383452989820598, -0.06269747785421637, -0.05626870415280372, -0.04414644352406516, -0.02631674808051543, -0.0031972623870085704, 0.024398346344017607, 0.055263429314719614, 0.08788804389416316, 0.12050022057399623, 0.15120402932907728, 0.1780439433916201, 0.19917724608801146, 0.2129387778478482, 0.21802472005440166, 0.21352840795854355, 0.19910592451632425, 0.1749521275255077, 0.1419183579161798, 0.10140544050824563, 0.055413120067587585, 0.006344949815300538, -0.04301268983986528, -0.08975328958533435, -0.13092143208425622, -0.16379699907536072, -0.18568950734788991, -0.1473809864463771, 0.1491094156294599, 0.39409316426291596, 0.4154341756093527, 0.4274112758122173, 0.4701644817257309, 0.5277837277246533, 0.5917239319500824, 0.6592809942408895, 0.7282396396012984, 0.7963788128746057, 0.861456216255025, 0.9214294678493484, 0.9743917825566566, 1.0187792366069939, 1.0532397995897407, 1.076819468672638, 1.0889182109684414, 1.3760624632973775, 1.3740978023178734, 1.2976537063390694, 1.1530552170248045, 0.7374326222586185, 0.2649482138235584, 0.06264395619782093, -0.006560652264274935, -0.039204833041933895, -0.05363725369351258, -0.05479023816084805, -0.04607675723835314, -0.030869505191564173, -0.012124539425482084, 0.007583810318912754, 0.0263744867640181, 0.042907813633561886, 0.056568120715100534, 0.06737297054114322, 0.07524729256883056, 0.07972783476189171, 0.07904636861952241, 0.0728892097687659, 0.06284234618955509, 0.04967147463158916, 0.03399422748849901, 0.016328239743435446, -0.0033968340000356534, -0.02281078851784457, -0.041494188467734006, -0.000047439855231701245, 0.17039897954587246, 0.2868017988281979, 0.24489400232447078, 0.18734177923637585, 0.12429561448474047, 0.055992917848660895, -0.017333008055651078, -0.09526386491800132, -0.17715915189098208, -0.26203926205170713, -0.3485479665319353, -0.43492270884286555, -0.518991307595396, -0.5982755000551059, -0.670040680170743, -0.7315387646252667, -0.7800931496483283, -0.8134344982171964, -0.8297648182663533, -0.828101239830378, -0.8082480081688725, -0.7710611027396315, -0.7182776703718936, -0.652563797343988, -0.5774795306234015, -0.5170718234814142, -0.5015092207127116, -0.4531773066824458, -0.40904157523864804, -0.35170541522075105, -0.3055910506802437, -0.279756523730045, -0.2759607504395607, -0.2945151405065092, -0.33438908925318067, -0.3934571242046063, -0.4684189088927839, -0.5551832463945168, -0.6488838994675374, -0.7443644189867786, -0.8362391226948875, -0.9194169812114987, -0.9891420866831262, -1.038834060335776, -1.074324559697978, -1.0552575145371454, -1.0740457627089368, -1.0793133134461517, -1.0575287336006571, -1.008338027442801, -0.9414068511846647, -0.861593470349173, -0.7726231057858692, -0.6784439686389465, -0.5827811795722768, -0.4891143481102045, -0.4003101865254095, -0.31868524735675186, -0.24575176961316636, -0.1823935014220477, -0.12872216487870203, -0.08435917956682726, -0.048367999226296754, -0.01960559811175866, 0.0033235196485381646, 0.021698888904935654, 0.03676498321647936, 0.04939937652211546, 0.0602694426901893, 0.06957504478233911, 0.0772919119045179, 0.08299950105813281, 0.08618685919930424, 0.0861469410346496, 0.08229331512012905, 0.07408224062518176, 0.061279352794182174, 0.04379993363580681, 0.014132340772765595, -0.05869323865399689, -0.1187894337485016, -0.10260326393996433, -0.07975210051633841, -0.05148479654853588, -0.01798687129010723, 0.020077871651998258, 0.06151317354794017, 0.1045941148353684, 0.14718677698822447, 0.18685619522617847, 0.2210651077762229, 0.24735164200200543, 0.26355332486911465, 0.26799334700153277, 0.2596505753725915, 0.23828769937881145, 0.20449163072339127, 0.1596982742145041, 0.10606260939629286, 0.06619496089863741, 0.1212874587011874, 0.2323135871474622, 0.2645895152682116, 0.21626498401022642, 0.14676985036171208, 0.08837156867519314, 0.04433071902439689, 0.011586184782105047, -0.010486611595311945, -0.023094744012165602, -0.028038942625586705, -0.027352186259355094, -0.023251946087711417, -0.017791701557809403, -0.012825023856080642, -0.00974447512013532, -0.009507609554773588, -0.012498586679221546, -0.018628316386334887, -0.02730985932805774, -0.037611496873449224, -0.04830743502389068, -0.05804741288788218, -0.06543660306204258, -0.0691887192126387, -0.06819755550052375, -0.06165326704007523, -0.04908170368199827, -0.030415874636682938, -0.0059901567188909155, 0.023433435703736016, 0.05672256401107312, 0.09238961919821875, 0.12870195313906008, 0.16372972005524744, 0.19550340917030518, 0.2220783431484854, 0.24172371916554836, 0.25297797200626615, 0.2548425703766366, 0.24679498035437497, 0.22895373138184194, 0.2020161653745971, 0.16736393012301498, 0.12690520677864559, 0.08310410363277221, 0.03873133595076528, -0.0031756282643593536, -0.03961931867023072, -0.0677196798425248, -0.0850183920423877, -0.07776459007054903, 0.11979984424892143, 0.514507268811113, 0.633203614676408, 0.6597875793260171, 0.6881631286541996, 0.7451009301909686, 0.8140371308910668, 0.886783045382785, 0.9605242497486888, 1.0328532481291148, 1.1014884612087812, 1.1642651883548725, 1.2193340559309531, 1.2650725757744672, 1.3002636974963648, 1.3239460306764688, 1.3382693275843156, 1.579922242939034, 1.4631580348908813, 1.2815104283982768, 0.9298725077477936, 0.40308347902831887, 0.04110888914890687, -0.04274346209544788, -0.06007072965180882, -0.06284396580706808, -0.05550583832194711, -0.04060481168282237, -0.020797890297414412, 0.001471326183798638, 0.023892921380891607, 0.04460794871713247, 0.06205979187868316, 0.07523372998113587, 0.08344100209175842, 0.08648666029474406, 0.08426842588313299, 0.07700065246821985, 0.06500450187284201, 0.04923921995064795, 0.030841041177918527, 0.010912299201603304, -0.009496523396650858, -0.029367119526217067, -0.04790163041829665, -0.0648910955332056, -0.07237827355322146, 0.06629130408030726, 0.2607798525698293, 0.31858996270507234, 0.2800606377729986, 0.22859946570941325, 0.1709998201862435, 0.10723718610251254, 0.03740671595416778, -0.038252483536947324, -0.1192019380982483, -0.20456086509380356, -0.29300930332724917, -0.3827625121827509, -0.47159531958295275, -0.5568677056715519, -0.6357051015211077, -0.7050785446461454, -0.7621226124639424, -0.8042277669499267, -0.8294232227274705, -0.8364051691719414, -0.8248860983882444, -0.7954843450574849, -0.7499602193505552, -0.6892444548470769, -0.6268342269078051, -0.5900514704766797, -0.599909426856196, -0.6295428066800239, -0.5791435453371245, -0.5250064802302346, -0.4825077906804438, -0.4597222971302619, -0.4581810839676699, -0.47804419241160634, -0.5183505852150692, -0.576855066755309, -0.6504029985881301, -0.7348808596932477, -0.8256917087536708, -0.9177719012061551, -1.0061122618757028, -1.0857811445317829, -1.152426260201247, -1.1967802891768988, -1.237070894537184, -1.171193533303537, -1.1486717999751024, -1.1387121288183852, -1.1128561599797662, -1.067075515130778, -1.005201478131701, -0.9306819965043491, -0.846947330805409, -0.7574497780299447, -0.6656516128763474, -0.5746310321118875, -0.4871215837236056, -0.4052001931147835, -0.3304195806986501, -0.26359342456046386, -0.20503420719289744, -0.15442056839162532, -0.1111239319070294, -0.07411937318512019, -0.04236137883944957, -0.014687580637011255, 0.00980772194215107, 0.03192392585608639, 0.05203073073115494, 0.07029935976544222, 0.0864582786036232, 0.10009998294907696, 0.11051626014428262, 0.11704210597198994, 0.11894374672536756, 0.11574057299650864, 0.10710505739282716, 0.09281702437240824, 0.044569122161483676, -0.05363412662330802, -0.12359348584154795, -0.1033100235648039, -0.07748798218088648, -0.04615157926151969, -0.009452210156013052, 0.031921014702719575, 0.07669405988189126, 0.12307534461932601, 0.1688232121070774, 0.2114063667547148, 0.24816782824319983, 0.27654502110143175, 0.2942779158129727, 0.2996170460520222, 0.2915048258982127, 0.26968641169034546, 0.23480101613101145, 0.18833063313706533, 0.1370640519585995, 0.12760173750480397, 0.23531979029494643, 0.3304583569040811, 0.3013522485252065, 0.22411390674506482, 0.1522768148336051, 0.09578842224600681, 0.050778300836254786, 0.017145566855135908, -0.005647903331342574, -0.018924229554499794, -0.024437630573373337, -0.024348089807761486, -0.02083940655826244, -0.016071415258881006, -0.01185661328089449, -0.009656546532832433, -0.010374707643703851, -0.014427929427457409, -0.021665914295926347, -0.0315087363878086, -0.042963805306078795, -0.05479588834138849, -0.0655950073405881, -0.07394229297816435, -0.07848623410765543, -0.07807917929092967, -0.07183329086648549, -0.05921668339267938, -0.04007306584868209, -0.014675476484525385, 0.016299738316946755, 0.05176034496595361, 0.09027632982677991, 0.13010515183404125, 0.16932407822925466, 0.20588437043769492, 0.237790902686561, 0.2631660162350533, 0.28045629486182744, 0.28847496048491106, 0.28660325566221, 0.2747734286319501, 0.25362724419886185, 0.22440642749409534, 0.1890385869348714, 0.14992148652768744, 0.10992759972284105, 0.0720996365049329, 0.03959333003385712, 0.015334743841894038, 0.0019459020787016001, 0.001913723496872688, 0.07877712019478755, 0.45585864660171316, 0.7871177804967293, 0.8583331180246234, 0.8876357997835078, 0.9292651119770814, 0.9958007546856722, 1.071668048470273, 1.1491979026665238, 1.2253114584861065, 1.2973691214782717, 1.3631955381592924, 1.420870250046586, 1.4688613232378698, 1.5059044096610386, 1.531375112378642, 1.5625106341824715, 1.6558848910074975, 1.4214787467226069, 1.0949158415738056, 0.6594673720304511, 0.2268830655845564, 0.04351776508269989, 0.017167793302294676, 0.008996047717094058, 0.009476236223613377, 0.01680555991162347, 0.02886633447561593, 0.04360147627069466, 0.05892191868363028, 0.07304823600425969, 0.08437584717649038, 0.09176528850017185, 0.09435712266176566, 0.0918011842177453, 0.08403160852044778, 0.07143765196131291, 0.05462040785450384, 0.034512588960149415, 0.012141782253912936, -0.01129394021463348, -0.03463343927922935, -0.05671611201313276, -0.0765453714939568, -0.09347243391950855, -0.10877625745385266, -0.08371394800432874, 0.13992060173578125, 0.3484071546324934, 0.3518580092809831, 0.3163222860730013, 0.2727298631817936, 0.22235523136236068, 0.16499188116941177, 0.10049269634771107, 0.028946527193856042, -0.04928133409273272, -0.13339859323687975, -0.22214224494003965, -0.3137244353976971, -0.4058284377568864, -0.4957098403938538, -0.5802570012698016, -0.6562612588007788, -0.72052120706606, -0.7702327921956016, -0.803067907432343, -0.8175870799108704, -0.8132021377554679, -0.7905089525189055, -0.7510683829450642, -0.6929261225093493, -0.6382030309571265, -0.6413359004709962, -0.6883292967435786, -0.7467918319031588, -0.7025333104711207, -0.6493551657974166, -0.6100815365071304, -0.5899016686268359, -0.5901860347253427, -0.6111885656150431, -0.6517970442235157, -0.7098934281989076, -0.7822397905352334, -0.8649445982270114, -0.9534372407186504, -1.0429855594016413, -1.1286999829081639, -1.2060412630364956, -1.2707626945126114, -1.3242191206872365, -1.289156724783493, -1.2097975372114367, -1.1714303844693603, -1.158794736604169, -1.134574927436482, -1.093891930126718, -1.0382840584451385, -0.9704657338716212, -0.8933665470189354, -0.8101431725967299, -0.7237883983059845, -0.6371631440144077, -0.5526542708351334, -0.4722736603497566, -0.39739060402128734, -0.3289243864116975, -0.2671528975336095, -0.21200021163252458, -0.16289975575288618, -0.11915394480125996, -0.07981291387288525, -0.04406431861723681, -0.011082286360027949, 0.019602324424321305, 0.048319273028750054, 0.07495023735791273, 0.0992246521559812, 0.12049212554889577, 0.1380756523065525, 0.15111532147195428, 0.15892819671343883, 0.16089014826922554, 0.15674186270968793, 0.14597367411141704, 0.06432302054635741, -0.0650782106636889, -0.11987866532865787, -0.09737735207701448, -0.06889673577402178, -0.034746494473294476, 0.0049172076673968945, 0.049345195942628095, 0.09721365842310892, 0.14664498627235112, 0.19531483668007077, 0.24058747332703856, 0.2797077464107014, 0.3100138052436714, 0.3291585268192927, 0.33533213284642516, 0.3274283422585542, 0.30520247278903434, 0.2692998865579914, 0.22129829967820203, 0.1910533824985987, 0.27125872068131374, 0.3694850866204933, 0.36402215023143536, 0.30276765305405773, 0.2239262452754993, 0.15430806111923512, 0.09763481401961815, 0.05219057639696256, 0.018263818304689483, -0.004789773691115107, -0.018230021191437018, -0.023945632344481327, -0.02406034046299177, -0.020886305670347882, -0.01654913621322318, -0.012958009327057596, -0.011528402425414752, -0.013219759673316345, -0.018389810607138957, -0.02690816704575827, -0.03812830848937965, -0.0510509192312214, -0.0643705845764786, -0.07665014577810658, -0.08639508311069777, -0.09220773954259898, -0.09285462800973221, -0.08738487988276389, -0.07517056627315266, -0.055985535410665976, -0.03000745371827418, 0.002142692198313423, 0.03944597983576159, 0.08048510096306671, 0.12354510787359763, 0.16664940996928568, 0.2077177229123901, 0.24462722576304952, 0.2754167044997895, 0.29834771381594116, 0.3121277663903408, 0.31593340705670947, 0.30961316013018525, 0.2936307133963352, 0.26920786052278345, 0.2381578580900907, 0.20294379654604366, 0.16640020433651959, 0.13171052805362837, 0.10205210738572479, 0.08052805098597116, 0.06980335793593406, 0.07204851092778197, 0.09445906339572296, 0.2709503303754883, 0.6946447267119291, 0.9751003928752029, 1.0607263841308718, 1.1013577811044724, 1.144978216824462, 1.2118223382157565, 1.2892496047010038, 1.3678302199614665, 1.442835028516563, 1.511678410827341, 1.5725832772543793, 1.6239947681807472, 1.6646455002521403, 1.6958111871608432, 1.7406106306653868, 1.6088653994764637, 1.232639997707384, 0.8620192080607918, 0.46631710258022974, 0.18735187822920274, 0.12378275693629703, 0.10326690900399749, 0.09214758950680846, 0.08883299343168183, 0.09133101889738171, 0.09759733349660227, 0.10545391792351566, 0.11296556557767445, 0.11832378924976794, 0.12017756255397494, 0.11746193779002212, 0.10966176603640143, 0.09658729410838696, 0.07856848749370648, 0.05619787859269465, 0.030464677496535586, 0.0024938406368093524, -0.02636779781653331, -0.05478747062738343, -0.08139866755563219, -0.10498924165785084, -0.1245553624481186, -0.14017571048427513, -0.14789097448671384, -0.03679999834133163, 0.2206400633712029, 0.38303735089431257, 0.3793905740895269, 0.3522076881727916, 0.318157007055512, 0.2768042584976591, 0.22763986072626174, 0.17031400263198115, 0.10466782182754564, 0.030920787957255946, -0.05027481294022618, -0.13771012562492047, -0.22958603040306969, -0.3235280123133535, -0.4166153820495193, -0.505579487363347, -0.5869009753958316, -0.6571740112186042, -0.7132201398172509, -0.7525359073676903, -0.7733293955220688, -0.7749366912562827, -0.7576885314706221, -0.7232018262932938, -0.6655214294795924, -0.6175289152905545, -0.6420546288523798, -0.747291142898189, -0.812427531272061, -0.7746018390501876, -0.7224880345710396, -0.6856132979383984, -0.6672025933812833, -0.6687629272799116, -0.6903907529306652, -0.7311054438302396, -0.7886663346578544, -0.8600244456820825, -0.9412548838197923, -1.0280696711397912, -1.1158041069123872, -1.1999277192156121, -1.2760242993408464, -1.3399323804891337, -1.3740862381517545, -1.2539533556514204, -1.1727473671755448, -1.146528738702144, -1.1410421464815519, -1.123160310958534, -1.0891363847415798, -1.041064962490247, -0.9811995173700181, -0.9121796115056391, -0.8366668012293745, -0.7573819946239198, -0.6767604006406058, -0.597029795819048, -0.5199136152261774, -0.4467835911617728, -0.3784237157075738, -0.3152726074098031, -0.25724190333033237, -0.20404214492297967, -0.1550309574280737, -0.10959469644547437, -0.06698901894900122, -0.0267324647392867, 0.011599606502928572, 0.048017150026812616, 0.08239326224479737, 0.11417714300430082, 0.14274064662882546, 0.16717116106145458, 0.1866506730360995, 0.20030869546703345, 0.20757297183728074, 0.20799395675502552, 0.20007861705873342, 0.06895931411018097, -0.09046032665638126, -0.11115857549379005, -0.0863421710967387, -0.05550499927131636, -0.018811402077609785, 0.023532119168300447, 0.07073857964544406, 0.1214172597646197, 0.17362061769506898, 0.22494009156538208, 0.2726496830833849, 0.3139058786584954, 0.3459559531218348, 0.3663852889149277, 0.37331603093520416, 0.3656243353776407, 0.3430390335786675, 0.30626947589680587, 0.2776724275144329, 0.33230302190858896, 0.41822608325056354, 0.43028500770636136, 0.37839752217526, 0.29558540796196064, 0.21688909971148163, 0.1502381267666415, 0.09370128357925589, 0.0484907395234917, 0.014801843896769196, -0.00792838313402755, -0.021093040616726233, -0.02653589250358457, -0.02652348819827144, -0.02333679939646438, -0.019223731506182062, -0.01605673079127512, -0.015334781007173004, -0.017966151770670846, -0.024349494938019633, -0.03428920992964157, -0.047142747150397124, -0.061835122537492904, -0.07703548646469227, -0.09122191946434177, -0.10285035872267123, -0.1104280614199592, -0.11265265095033028, -0.10846870242615936, -0.09716974740160422, -0.07842434430427048, -0.05234080676302799, -0.019452505973460932, 0.019255337471236977, 0.062412316921557576, 0.10827560624784027, 0.154857609807729, 0.1999747169631494, 0.24143479783810307, 0.27710518263470973, 0.3051416503203903, 0.3240420584100736, 0.33288073502536353, 0.33130249837115056, 0.3197172622077309, 0.2991916750635353, 0.27156566207932276, 0.23922021613102107, 0.2051018572607548, 0.1723818587616126, 0.14440923400031336, 0.12431697156897092, 0.11495523786815376, 0.11852727530471929, 0.13656929233786808, 0.18965652471473216, 0.4192276390752512, 0.8031382492534571, 1.0814699563175405, 1.2098982841142214, 1.2813699687092859, 1.3391511637668199, 1.4005706847397947, 1.4719864570723704, 1.5454256565956257, 1.6155518291992115, 1.6805139733746879, 1.739087281881834, 1.790006105244589, 1.8424441800432243, 1.854592744549329, 1.3401131308571017, 0.9439013330330495, 0.6116070666167763, 0.3257025844710375, 0.2215053338563182, 0.1904997061995104, 0.16994680132195628, 0.15797501971332828, 0.1528082401306614, 0.15248353032896755, 0.15477445737317286, 0.15759394449487196, 0.15889956683505702, 0.1570669774574771, 0.1507428507119677, 0.13915236223069982, 0.12188867029355599, 0.09914071159044902, 0.07143212578703384, 0.03977489635088105, 0.005387096183744333, -0.030211905084259527, -0.06546997664493226, -0.0987489220156128, -0.12854862175943715, -0.15348423114310705, -0.1727959208019776, -0.18712036944701005, -0.17831283980837043, 0.024652082869200953, 0.30058944735693593, 0.4015898921527583, 0.40178470293239776, 0.38585034938124885, 0.3629747142172679, 0.332313021257292, 0.2930979108938221, 0.2446585022489236, 0.1866276971659726, 0.11899929083578975, 0.042306795835553856, -0.04231795820167683, -0.13307549796364704, -0.2274906064828368, -0.32252248805385797, -0.4146373183473102, -0.5001159301189109, -0.575181949885943, -0.6364512208713009, -0.6810312785282893, -0.7069998837096723, -0.7133667077124173, -0.7004622658240534, -0.6696418972769953, -0.6113490920026443, -0.5676033580655604, -0.6058190657021765, -0.753878291897994, -0.8300531989456159, -0.7960276620559705, -0.7451591178197567, -0.7094878293906506, -0.6919427629587771, -0.693887275098346, -0.715574411173308, -0.75588610382421, -0.8127581573752414, -0.883065680826161, -0.9631261810398817, -1.0486678752147398, -1.135342501885182, -1.2187103735451146, -1.2947038744508745, -1.3447586730921128, -1.2595213282571245, -1.1397322543515984, -1.0935807453118924, -1.0918551019338674, -1.0927964754369563, -1.0812029148888467, -1.0549004726552509, -1.015390687410818, -0.9646780172224743, -0.9049254329311713, -0.8385038142695924, -0.7676671180053765, -0.6946211683749546, -0.6212219613185175, -0.5490975247929581, -0.4793867184253573, -0.41293737267680264, -0.3500900937738738, -0.290960155863373, -0.23525553856393167, -0.18263029415734255, -0.13251115295880478, -0.08449007752044446, -0.03812458666184848, 0.006675994199512814, 0.049908129471159524, 0.09113849867646695, 0.1298319074249108, 0.16509276535065598, 0.19604452198025824, 0.22164583222344936, 0.24107236387601239, 0.2535773637052019, 0.2583268545160511, 0.23852740920451154, 0.04523407755722619, -0.11629247131136733, -0.09895777608341749, -0.07194667310922842, -0.03905360758398757, -0.000123266505529962, 0.044603270985556165, 0.09428458423776753, 0.1474681364613044, 0.20214134479629386, 0.2558134240741481, 0.3056877423836388, 0.34883255096119914, 0.38243433807990446, 0.4040019690094505, 0.4116288171531295, 0.40414261860832434, 0.3818690224259642, 0.3662084927320022, 0.4259908587741408, 0.498849639471425, 0.49594184213049, 0.44410994721686947, 0.3619565975464125, 0.2796172647703794, 0.20577079945961074, 0.13993545813983355, 0.08426012843656583, 0.03987617967894774, 0.0070780092610192025, -0.014823155744127403, -0.02716219812486753, -0.03193134419984922, -0.031363431017909615, -0.02788133925311076, -0.023703546045103385, -0.02081361203603027, -0.020670468071742887, -0.02425017110603278, -0.031894391144465795, -0.04343076634977239, -0.05814271482978417, -0.07493909780193209, -0.09239966281027756, -0.108953768950809, -0.12295396291236438, -0.13283376247271994, -0.13717641610143783, -0.13483886807909862, -0.12499801508413899, -0.10723905342719364, -0.08156814832904757, -0.048464735209174936, -0.008848343746208354, 0.035908598986778006, 0.0840734477745384, 0.13358249422645585, 0.18220089885806612, 0.22758609503572824, 0.26750716139614683, 0.2999169072401746, 0.3232020835102798, 0.3362207775040291, 0.3385381520129851, 0.33037861508646316, 0.3127991000073038, 0.28751733387858636, 0.2569915379397534, 0.2241182148995775, 0.1922206181634678, 0.16465320917972903, 0.1447391669496616, 0.13535731548893226, 0.13889401032566595, 0.15690377052909588, 0.19014197581072612, 0.26506417740493604, 0.4677032506427392, 0.7885865439578397, 1.064803467330719, 1.2514269601895198, 1.3704404580371312, 1.46431274214972, 1.5366136333411866, 1.6098605855255297, 1.6853443255013572, 1.7540106790647423, 1.8142626094646355, 1.86410266572058, 1.912110902941631, 1.7550834862812588, 0.9339855741184655, 0.6374097882967837, 0.4143928827028307, 0.30318004888257555, 0.2631714674665062, 0.23548052603717684, 0.2169417546105099, 0.20610284636276122, 0.20118329727190254, 0.19999106325666371, 0.20033548211939411, 0.1999497742915386, 0.1969017853266699, 0.1894773999347077, 0.17653757658197478, 0.15733560436421534, 0.13179034032465076, 0.10023651783089882, 0.06360897781892305, 0.0231493435736283, -0.019484936901976724, -0.06251996070112575, -0.10400935682649326, -0.14210035392324727, -0.17501061705276655, -0.2012357587808662, -0.22047100142171416, -0.23549646302495653, -0.1880230957941169, 0.08561644942901303, 0.35677794088074855, 0.4131730344853999, 0.41843223437479793, 0.4151672741143013, 0.4049096353557111, 0.386502642982709, 0.35878885394442506, 0.32082327234773445, 0.27192674478043877, 0.2119029286134113, 0.14111406399144943, 0.06062458677481786, -0.027753400835953457, -0.12147575990679726, -0.21730090053257278, -0.31151620639854904, -0.40005768799030506, -0.47892676003299606, -0.5443325548931304, -0.5932030980245644, -0.6232382496510072, -0.6333833265203204, -0.6236837620758884, -0.5949095537737197, -0.5377946907931079, -0.48945246610291804, -0.5271276034436503, -0.693304575465139, -0.80348876897117, -0.7717124766432102, -0.7209468249202207, -0.6852979061511988, -0.6674111338267021, -0.66884446778975, -0.6897198432413765, -0.7291037325721934, -0.7848352081024936, -0.8540081982390664, -0.9329167918207677, -1.0175660205018326, -1.1036617804064344, -1.1870821039729256, -1.2395451175160228, -1.1940394528484952, -1.053531831390877, -0.9898366731200472, -0.9882832342308108, -1.0071276076926496, -1.0166964890110544, -1.012433008103617, -0.9946037346402612, -0.9645508315929385, -0.9238595848645073, -0.8744192515323608, -0.8181343262806218, -0.7569909715276717, -0.6927722001296264, -0.6271586399581777, -0.561463658306069, -0.49679319585176795, -0.43381069532741634, -0.3729720357478401, -0.3143202360470325, -0.25779688206853013, -0.20305345944691844, -0.1498211975946555, -0.09771309096309011, -0.046615312837434475, 0.0035515272624118133, 0.05246552128675752, 0.09970561684175397, 0.14444816210820632, 0.1858305940247469, 0.22272694523189163, 0.2541388156675235, 0.2790360282070492, 0.2967034314480639, 0.3054446986111179, 0.2181012404336391, -0.009590292901203945, -0.10776993893533326, -0.08469417011696301, -0.05603606249097304, -0.02140818092476593, 0.01945274620247961, 0.06625475006094295, 0.11809629543207922, 0.17347334741910192, 0.23029491305881677, 0.2860176999446953, 0.3377605579416798, 0.3825460478366196, 0.4174516344182946, 0.43998609462171423, 0.44847125164864465, 0.44711434698415875, 0.46821505445200495, 0.5330881833388865, 0.5816392708334313, 0.5597103439263726, 0.4953833133472416, 0.41742616494855067, 0.33784211706045486, 0.260556678662736, 0.18828129031595608, 0.12401607878066168, 0.0698358090512401, 0.0269821626309259, -0.0043667434172574016, -0.024827164320500694, -0.03588042900052213, -0.03947719150553408, -0.03800339214185522, -0.03385507611384653, -0.029385092635668464, -0.026547735822479712, -0.026898546481790575, -0.03136959088058111, -0.04035217765104848, -0.05360922194183604, -0.07042620576826197, -0.08962515676829153, -0.10974521447514318, -0.12910829868402196, -0.14599226246479735, -0.1587072902438338, -0.1657408232591584, -0.16582063410108394, -0.1580258465258788, -0.14182354107341322, -0.11714538279039965, -0.08438552089378604, -0.04443938200903208, 0.0013528165942231496, 0.05121117608853387, 0.10304138537654994, 0.15448409024501286, 0.2031115961712877, 0.24650572543766813, 0.2825076798006587, 0.3092874363424616, 0.3256063808479448, 0.3308256960835214, 0.3251292983124192, 0.30941978171340523, 0.2854563341270042, 0.25561050861946377, 0.22290196416382813, 0.19062871517740065, 0.16232416385957604, 0.141323012970898, 0.1306989695453995, 0.1328579883822789, 0.1495288289369734, 0.1814735219687309, 0.22858643323273053, 0.30463051563109067, 0.4537667639162697, 0.681780264318764, 0.9211155086102432, 1.1204784105384782, 1.2862071734427873, 1.4188061997002315, 1.52250589715279, 1.6051530848517377, 1.6748928349568564, 1.7261874234090095, 1.7580138577173576, 1.7205985385834666, 1.3878891232549648, 0.593810883692754, 0.44868763207437556, 0.3601643521637521, 0.3156974132611521, 0.28311219933356213, 0.26000169489089364, 0.24534279718523688, 0.2376561335341254, 0.23490278544310117, 0.23488534297162822, 0.23517686580807595, 0.23355466748661868, 0.22791305976747722, 0.21666827249939402, 0.19861368055025608, 0.17324810686256775, 0.14055488390135373, 0.10123122318262823, 0.05640089523124736, 0.007748812390104831, -0.042799209980673325, -0.09301408225702801, -0.14067155908982798, -0.18353358520176855, -0.21960199788876267, -0.24722023657040282, -0.2677422533077909, -0.27830214689075916, -0.1590890474486688, 0.1410580061711606, 0.3649650523132628, 0.4113271746079725, 0.4273176102508529, 0.4378495657439814, 0.44149477772688606, 0.4366473843155081, 0.4218103554165804, 0.3956428069881994, 0.3571991811138524, 0.30601418539954395, 0.24230579656271178, 0.16705310755053837, 0.08207241930119658, -0.009972494688046396, -0.10569937655971717, -0.20109819748450608, -0.291883399063364, -0.3736536114778888, -0.44240083612543657, -0.4946389117419292, -0.5279398036993275, -0.5409038873277536, -0.5335892711476777, -0.50614232619413, -0.44700853505589766, -0.3938355585130804, -0.41213157665130495, -0.5401231478538464, -0.7100790044084961, -0.7081219699723986, -0.6561918954677282, -0.6191438492415369, -0.5997779233815468, -0.5995404711112613, -0.6187609906336746, -0.65640851863607, -0.7105361156225811, -0.778192139873874, -0.8559199059977356, -0.9397443118451188, -1.0092682954153824, -1.0671554734194855, -1.018602849110053, -0.9014481752620056, -0.8390209700291145, -0.8417294096930421, -0.8734032069961852, -0.9016380890988369, -0.9181661978976883, -0.9216749494659444, -0.9128876958415812, -0.8928124096946926, -0.86280691803612, -0.8243337620219799, -0.7790254578639431, -0.7284322864809694, -0.6741091185262746, -0.6173667210050979, -0.5594012134373099, -0.5010585234914551, -0.4430251496803974, -0.3856116860195824, -0.3290157473024733, -0.2731219841765937, -0.217832828722492, -0.16287001187187888, -0.10814889279368067, -0.05355567356528779, 0.0006755404549079191, 0.05423645452202108, 0.10640934692008774, 0.15640323577085494, 0.20309093573926107, 0.24539044203406069, 0.2820777403544923, 0.31216237617134124, 0.3344226111215076, 0.33722013305528886, 0.13989533822189948, -0.07970249930021378, -0.09435345491429814, -0.07030756207291056, -0.040474089795844215, -0.004416588877027117, 0.03807509885057492, 0.0866453200240267, 0.14034672439396, 0.1975941579738114, 0.25625720065908464, 0.3135196579744388, 0.3667097725991768, 0.4126250686906614, 0.44496598815191746, 0.46451802591296865, 0.505045314596611, 0.5734392201551595, 0.6230641650498367, 0.623350324515271, 0.584307575357959, 0.5269658440865945, 0.4600804009256019, 0.3865356362615877, 0.3102745758624481, 0.2353302840444358, 0.1653697338567759, 0.10331669420592737, 0.0513569038194448, 0.01062244902007814, -0.01862541306257426, -0.03714303980549927, -0.04635939297370295, -0.0483808757587052, -0.04556345702989861, -0.04045305860714321, -0.03538029942794241, -0.032422187595963825, -0.033104514041849775, -0.03843907050478934, -0.048767934630741805, -0.06388261669544038, -0.082992843687682, -0.10489756475877698, -0.12803193476081387, -0.15064953797627179, -0.17090022666609594, -0.18699398333658346, -0.19727738449855226, -0.2003667944986507, -0.19520593645385698, -0.18116609410934714, -0.15807213137339193, -0.12626685174654817, -0.08658958891021618, -0.04039733369499299, 0.010522422419994015, 0.06398012777217277, 0.11754858614507491, 0.16863499797430004, 0.21471572402825956, 0.25342441664684046, 0.2828255739080152, 0.30146960919451393, 0.3086537478330058, 0.30438556625863633, 0.28957636537056075, 0.2658675786031761, 0.23572126517054803, 0.2021002154509417, 0.16845892117839378, 0.1383178146724411, 0.11520121850414644, 0.10218906353851309, 0.10187539153493075, 0.1159963272814728, 0.1454778880185026, 0.1902167961739445, 0.24924709580648452, 0.32350878189480525, 0.431586004500657, 0.5735045188794636, 0.7406828228260816, 0.8985275930067367, 1.0527265431131791, 1.1813837109997287, 1.275606091557, 1.3471321331723463, 1.3965031690307148, 1.4176352008826258, 1.3106679359247613, 0.934169621949045, 0.45358756058174077, 0.3894663113871042, 0.34483805714878635, 0.309427795390143, 0.2835253983241319, 0.26661744034940993, 0.257639154269929, 0.25484032906116694, 0.2561510935992879, 0.25910274844352, 0.2612627390080897, 0.26016764522076485, 0.25376449045956306, 0.2403067192986441, 0.21874016462816215, 0.18852565772462526, 0.14992718832851892, 0.10375150063372374, 0.05152507154236474, -0.004828628045444816, -0.06290875130663665, -0.12017844067410621, -0.1739490234834058, -0.22168814401780423, -0.261034049330652, -0.2907802873646954, -0.3124500716700105, -0.30679181840071834, -0.12011269441679673, 0.1778539741826517, 0.3461882491855217, 0.39632359982376997, 0.4263095572454372, 0.45156367675516407, 0.4700913215555502, 0.47988839245946835, 0.4789858588067677, 0.46569883182283256, 0.43871517550375394, 0.3973414917673921, 0.34160564029899376, 0.27241427652602823, 0.19160825048343266, 0.10193743451608928, 0.007013893345279243, -0.08895015375280657, -0.18129316792946426, -0.26537533320168194, -0.33675787439750415, -0.3917713218983687, -0.42759348048974744, -0.4427659858681654, -0.4370484503032177, -0.41176792848692845, -0.35183291024896146, -0.2815308593357413, -0.2813228242207888, -0.34786492207166964, -0.5104849723908651, -0.5888646768807275, -0.5589860353450975, -0.5193755885931299, -0.49719172950426227, -0.49421862233696334, -0.5107008020669515, -0.5458313006489028, -0.5975003850626264, -0.6558987418566673, -0.7161556599810339, -0.777129555450621, -0.8006951515873659, -0.7459869249682685, -0.6581805317196254, -0.6158860119162792, -0.6421673826258276, -0.6968146433526443, -0.7450830866499487, -0.7799755615975474, -0.8030967541026444, -0.8146343586806526, -0.8150751409469557, -0.8052637379334051, -0.7862010571528364, -0.7591037340303357, -0.7251926865848981, -0.685768586582717, -0.6419944460368185, -0.5950016792170061, -0.5456718946936157, -0.4947895669500557, -0.4428296667899021, -0.390171799556831, -0.3368977339807415, -0.28307325825274887, -0.22855088405899116, -0.17330875081277952, -0.117241577075756, -0.06052614733429218, -0.003375750775369557, 0.053610860974957264, 0.10975111343849542, 0.16398597990853925, 0.21523596607425022, 0.26218421753365906, 0.30365293797036463, 0.338348785608352, 0.36167190187779896, 0.2757720622615274, 0.013986790741729926, -0.10314071975766215, -0.08252224795221785, -0.057715296277888406, -0.02700942322034905, 0.010193514627422573, 0.0540297306969455, 0.10409594313718973, 0.15896844139411925, 0.21742251727165485, 0.27587162894202066, 0.3178036600126948, 0.3468034543930516, 0.39084012786177347, 0.46905113375516194, 0.5465936105000724, 0.5873765439546945, 0.601437377775702, 0.5969772400030342, 0.5755389116519458, 0.537191537258559, 0.4844226370542266, 0.42080919054428323, 0.35034999170030545, 0.27712711590007233, 0.2052069204056597, 0.13816845390058718, 0.07903483947650658, 0.029882169414140236, -0.008071855902293201, -0.03469998849841627, -0.05069655855925981, -0.05764267506949938, -0.05760708979791218, -0.0531020295203648, -0.04665229335329002, -0.04073035649768664, -0.0373949680606388, -0.03828062580690239, -0.04436819143063264, -0.05606026170587586, -0.0730913149590201, -0.09467511418289332, -0.11951958411373642, -0.146007998713088, -0.17226926871677928, -0.19635615931624395, -0.21633048943096989, -0.23041743958840244, -0.23708132271773863, -0.23514911956724482, -0.22386192409362815, -0.2029645075291837, -0.17271681836059072, -0.13394221915326376, -0.08797912918161677, -0.036678000279054324, 0.017724819014579563, 0.07266382735952215, 0.1254520855829746, 0.17337483310320811, 0.21395829850518888, 0.2450586269541719, 0.265146155391101, 0.2733300898449933, 0.26959935280148484, 0.2547246877231455, 0.23040604842852686, 0.19902068812077944, 0.16365961914454585, 0.12773776801451153, 0.0949477798270717, 0.06879937927858626, 0.05255761894722155, 0.048810193467774265, 0.059468616095945004, 0.08545727046146379, 0.12683101980830713, 0.18263794852165915, 0.25115540365378575, 0.32982046988980684, 0.418991971398607, 0.522941743541752, 0.628333986386119, 0.7347681936401198, 0.8360067801250217, 0.9295007646895055, 1.0027550993758343, 1.0562697973250987, 1.0828668271345219, 0.9626508985646822, 0.6333541757190169, 0.3947347779086705, 0.349771896693448, 0.3133570271172932, 0.286174034537098, 0.2682572647674477, 0.2590412128237882, 0.2571908153323581, 0.26091199710880986, 0.26785029076949884, 0.27550144157474854, 0.28114964680330834, 0.2823242959065082, 0.2767303173772335, 0.2626839356978712, 0.2389864440030527, 0.20527861695132543, 0.16182710566840974, 0.10976158133680336, 0.05077378561193058, -0.012765450620555896, -0.07816197444117634, -0.14237476493855183, -0.20237201432119356, -0.25515891340401353, -0.29807628414704723, -0.3306479980479011, -0.3536548815031715, -0.3303264093456164, -0.09508439605107277, 0.19634666689461966, 0.31575391100215455, 0.3688595757715163, 0.41342221752543473, 0.4539913073310622, 0.4881300542110196, 0.5133012291869861, 0.5271184882725333, 0.5274376351862564, 0.5126309737831054, 0.48170714316856866, 0.4345354528010885, 0.3719415990854129, 0.2957833639768337, 0.20895542284507318, 0.11523422403648098, 0.019158947314035224, -0.07436798174765791, -0.16028174460126898, -0.23391895110191108, -0.29118334412405744, -0.3291268038713877, -0.3459374814581704, -0.34139125550234617, -0.31656646334288485, -0.26314354370178217, -0.18104510756166103, -0.1406546180393653, -0.1579433811484776, -0.22343362080785267, -0.3422895227685778, -0.3851119717800353, -0.3685888335513616, -0.34551093580748216, -0.3382229637698373, -0.3473383491903048, -0.36905643914587793, -0.40546949933730847, -0.4384603136846459, -0.45497801546623284, -0.44195859638239643, -0.4055370014387969, -0.34451609368592484, -0.35910908738418446, -0.4191034165949512, -0.49426388109817454, -0.5581638198599084, -0.6081688085555883, -0.6481497110115599, -0.6778488941774699, -0.6973126427997394, -0.7069328515083289, -0.7072839440496992, -0.6991680171827168, -0.6834449576697796, -0.6610940703016723, -0.6330363274591164, -0.6002208075899675, -0.5634379861351935, -0.5234409412572427, -0.48075265122331245, -0.43583543191219665, -0.3888981157238911, -0.34012571322985785, -0.2894891069485839, -0.23703596647508185, -0.18269555703926432, -0.12661324959006937, -0.06893177306412523, -0.010133634045724982, 0.049223027483128234, 0.10819646852955422, 0.16578068804362722, 0.2206634875940685, 0.2715836902577705, 0.3170796260016798, 0.3531094891634742, 0.3369553157744578, 0.10228407606183398, -0.09515682664354674, -0.09333039615985683, -0.07360020836093195, -0.04851021725832183, -0.01719199219268308, 0.02083064134515844, 0.0649695526077041, 0.11321525127852006, 0.14000021263755968, 0.145032462339997, 0.1720690753840639, 0.23164041788420686, 0.3043006738753018, 0.36920757492626954, 0.4282021053448597, 0.4813025745109005, 0.5197764794674216, 0.5393373254180922, 0.5394288310518291, 0.5210110101635919, 0.4858399547049408, 0.4365221147676652, 0.37648642368948226, 0.30958708597282936, 0.23997002327954364, 0.17159562929704553, 0.10812013758135741, 0.05244870623793796, 0.006734708577536885, -0.027936672009482688, -0.051372193246167486, -0.0644125911794049, -0.06859235686849385, -0.06613493593576392, -0.059526536629391114, -0.05144342907445343, -0.04434531097755612, -0.040422556185158776, -0.0412953866825827, -0.04803771552742975, -0.061018338715582154, -0.08001014007694707, -0.10415812242544342, -0.1321458469046327, -0.16224593535256593, -0.19250425817747563, -0.22082665984295557, -0.2451512512730154, -0.2635388157897185, -0.27431920859741554, -0.276165824141434, -0.26821038960026566, -0.25008512057236176, -0.2219985645777589, -0.18472517772201336, -0.13963052865814962, -0.08858642161664587, -0.03393662608157655, 0.021675176294926324, 0.07539260703571271, 0.12439692586926299, 0.1660157414759884, 0.19801520572760767, 0.21867472005235067, 0.22706340230921773, 0.22301572051552787, 0.2073324963961949, 0.18160770446534613, 0.14831755194832397, 0.11048953969668296, 0.07168669241541825, 0.03556395732919626, 0.00580115502824019, -0.014363540448419698, -0.022171649378269098, -0.01573087289492836, 0.006047039696860601, 0.04321560647439515, 0.09498370810024426, 0.15966035728542405, 0.23494320277819725, 0.31800021021906044, 0.4057880743087523, 0.49510684660775084, 0.5829180489362624, 0.6676881266165928, 0.7494812435128075, 0.8214419484756856, 0.881725123663788, 0.9186767769140669, 0.7828741968975317, 0.501686798968227, 0.33202370828998795, 0.2959885724177269, 0.2687598829251314, 0.2507604971594244, 0.24196352987799674, 0.24154196270695394, 0.24811135115448968, 0.2595970848198159, 0.2735966424262668, 0.28730642684889185, 0.297966876401488, 0.30281277369026105, 0.29953967755860234, 0.2862263343034108, 0.2617520578035082, 0.22564332679597143, 0.1783840125211924, 0.12116153097053228, 0.05604225533186202, -0.014371505595882184, -0.08689073774875666, -0.15812566858769728, -0.22451885627257795, -0.28270814983729586, -0.32959532636467337, -0.3659643282541154, -0.39422626057146104, -0.3294429375982624, -0.07912329153982967, 0.16937091639718815, 0.2663592301133786, 0.32755531412970385, 0.3868659904720868, 0.4430788157656309, 0.4931867106864072, 0.5341738101281202, 0.5631131442042392, 0.5774587272231297, 0.5751785402535674, 0.5550302590271468, 0.5166902235981059, 0.46091991068668836, 0.38962319550572566, 0.30580475709339794, 0.21349926122238116, 0.11747015659394133, 0.023016477375460198, -0.06454861368687581, -0.14012281060268883, -0.19942787657267136, -0.23912029881980068, -0.25733290939634035, -0.25353916591357706, -0.22890220661130822, -0.18199794291958193, -0.0968245448916436, -0.01090501999426996, 0.013053480471150403, 0.024642579155839783, 0.0010501047466440205, -0.0500137411148498, -0.08229010878651088, -0.0767080570906371, -0.0656026636057887, -0.06219808040953012, -0.060276565642938706, -0.05514268411678325, -0.056102452332006614, -0.04978859749713882, -0.02894402759642567, -0.03732615636736858, -0.10244794652557765, -0.19089891527307667, -0.2795562444677513, -0.35310730323292727, -0.41445100471964613, -0.46785629563752007, -0.5126931321424337, -0.5486435971369801, -0.5757197935029548, -0.5941327757700221, -0.6043142550473686, -0.6067836722692994, -0.6021896347551827, -0.5911731757802237, -0.5744341140888958, -0.5525841998820136, -0.5262416449085734, -0.4958710602025054, -0.46191421080288286, -0.42461994709237416, -0.38422356717718564, -0.34077249918930086, -0.2943630156374395, -0.2449620924716278, -0.19269620825043177, -0.13765876583031877, -0.08022649031204176, -0.020833175071089727, 0.03972481509339332, 0.10056464876202531, 0.16046022786007752, 0.21816197423886385, 0.2720496170027127, 0.3162219337307217, 0.32069095511493556, 0.13360850913015643, -0.08004555140611536, -0.10408945541172843, -0.0884708675706829, -0.06911650897673605, -0.044010220503706066, -0.013382266309167612, 0.015981688669631566, -0.0045988339224667385, -0.04923865533120786, -0.06817200625540032, -0.03786587299202715, 0.024066831384568665, 0.10536841197240054, 0.19765022651370678, 0.2824673191911957, 0.35482968539549464, 0.41228729166968225, 0.4526950561417715, 0.4746585101354155, 0.4777276685039067, 0.4625858599274064, 0.43088057624608656, 0.38525570949557064, 0.329027429327307, 0.2660895234142078, 0.20046296450268764, 0.1361577189234282, 0.0766970959505553, 0.025044762394332398, -0.016784093466934102, -0.04764350680164808, -0.0674833729180695, -0.07709199475927542, -0.07815251288388958, -0.07285374256581045, -0.0638334235898903, -0.053753145440561756, -0.045217357063347174, -0.040412893424231155, -0.041080605371224266, -0.04828355546003804, -0.06246591370215604, -0.08336058517193345, -0.11012513302451898, -0.1413577126044634, -0.17527468455126982, -0.20978820703812517, -0.2426898429745039, -0.27174985235847693, -0.294884379607657, -0.3102500443359548, -0.31638390208234135, -0.31227418812070074, -0.2974643774558099, -0.2720793243705457, -0.23688071497312535, -0.19322448746982124, -0.14305437666283094, -0.08877111669981907, -0.03316159755006609, 0.020822039498518574, 0.07017719039389991, 0.11213633201102491, 0.14427804081357243, 0.16482519420487973, 0.17268611427911384, 0.16770134507054468, 0.15055223784601157, 0.12290465769930492, 0.08715328327072847, 0.046447829144855124, 0.00429302750110383, -0.03550775429723707, -0.0693238317630046, -0.09376218052561658, -0.10610704561808149, -0.1043116123413288, -0.08731242245566495, -0.05489629372552063, -0.007842563890198662, 0.05233063818652095, 0.12338195940314023, 0.20266392503476638, 0.28723536821107665, 0.37415929138341397, 0.4606386797906694, 0.5442230326428419, 0.6229139019565135, 0.6952418578825075, 0.7595461696383605, 0.7968286690445154, 0.6407790261039139, 0.4073277258245973, 0.2602750744651381, 0.23385834581831588, 0.2164397750247007, 0.2084027820226293, 0.20947252362402224, 0.21876938324320339, 0.234643454275258, 0.25497091814372697, 0.2770561614482041, 0.2980375571238505, 0.3148392139371652, 0.3246403209645834, 0.32483353401979453, 0.3134892093412027, 0.2892648584614914, 0.2517908693314874, 0.2014839093851748, 0.13979959578022516, 0.06893301151443332, -0.008078072346979326, -0.08774002880176823, -0.16612282114781962, -0.23927169047420094, -0.30329252616382973, -0.3548295996731312, -0.39741343508962146, -0.42208391517016075, -0.3199201530347189, -0.08659852438442783, 0.10736792843996845, 0.1984600915877177, 0.27131055880601807, 0.3452845565419338, 0.41711026750997604, 0.48326191598009416, 0.5401212821757593, 0.5842811405551291, 0.612691991746404, 0.6229761656062038, 0.6135840923389466, 0.5840377040890843, 0.5350361457064103, 0.46852499909544587, 0.3876823893830874, 0.2967333092016471, 0.2007888841677925, 0.10540199204272316, 0.016315264459260348, -0.06114622752184662, -0.12228487474708061, -0.16363836995803016, -0.18299335259820948, -0.1798390681955251, -0.1550871257647799, -0.1112961234972869, -0.04076070084907557, 0.06225525489092787, 0.15629614372736778, 0.20730701313774413, 0.2502762807447434, 0.2774898630580207, 0.2796081367777461, 0.2825829140746374, 0.29549863107488106, 0.30895064435572106, 0.31344289780404466, 0.3159812027526794, 0.305387991769682, 0.27143954322376995, 0.2059647719597626, 0.11666992071110194, 0.021503964559383526, -0.06581967150930979, -0.14235546884714112, -0.21095559320246093, -0.2739406222790417, -0.3303531601181491, -0.37956410729999845, -0.4212665924429908, -0.45537211038518954, -0.48200258465097523, -0.5013874363576103, -0.5138772135218481, -0.5198435304229729, -0.5197211945569502, -0.5139029926129899, -0.5028090771321594, -0.4867676825607168, -0.4661127792538826, -0.44104826301649336, -0.41178209215929407, -0.37837839615413316, -0.3409395067764249, -0.2994508478815092, -0.25401515567693345, -0.20468723246000398, -0.1517481782571526, -0.09551648834805615, -0.03663252159816821, 0.024171481218391744, 0.08580934635692561, 0.1469571534015568, 0.2049717856166251, 0.2522909220961589, 0.2452792987515977, 0.09284099454972239, -0.08620864158724656, -0.11421299225114928, -0.10244205182358668, -0.08886611462787819, -0.07024846219439418, -0.050787803887437644, -0.08443026866107006, -0.20888554658579483, -0.3080668432303586, -0.3199698202025134, -0.2608009886818339, -0.16369751326703863, -0.06456584163966639, 0.03282411416548037, 0.12574216247907266, 0.21055368340058056, 0.2838860101596614, 0.3427894421206279, 0.3850555038315999, 0.4092564566230159, 0.4150114885508116, 0.4029118200238928, 0.37463925390397845, 0.33272116484206204, 0.2804982024810345, 0.22172595112601412, 0.1604492710802119, 0.10052816605156867, 0.04551900403887443, -0.0017652345526575353, -0.03926395982176345, -0.06597705580479274, -0.08180348034868579, -0.08767435543735869, -0.08522996594671484, -0.07680380563265343, -0.06501079845609925, -0.05265929690361004, -0.0423523103902923, -0.036415064368076955, -0.03659502367038259, -0.044064143944373746, -0.05925693891414563, -0.08196082520904313, -0.11128214429882854, -0.14580144125980743, -0.18362790868140655, -0.2225832874863678, -0.26030091781013587, -0.29440847307440077, -0.32263795432791964, -0.3429894770067232, -0.3538281667325225, -0.35401690993766266, -0.3429776288477737, -0.3207787817768395, -0.2881352249272635, -0.24643383827353516, -0.1976474493829241, -0.1442886043709679, -0.08922630363257245, -0.0355776006338524, 0.013558701992044231, 0.05523486221732421, 0.08696001977941936, 0.10679490515469015, 0.11363353537198995, 0.10718992194317112, 0.0881935831847287, 0.058217868411946094, 0.01975545459763639, -0.02411692400792176, -0.06976941665363945, -0.11346699026419638, -0.15144599464357567, -0.18038052645565616, -0.1974201024197928, -0.20057138340456282, -0.18862679397191862, -0.16139063822440214, -0.11947637576851289, -0.06436458741964124, 0.0018951634860036037, 0.07675101110556604, 0.15746671515196908, 0.24124169090610792, 0.3254688387134035, 0.407844618561656, 0.48651333568533595, 0.5601343611192036, 0.6269410662025727, 0.659130844971326, 0.4998823427188306, 0.3126265547653997, 0.18533715353380664, 0.16889602006748916, 0.16174408741683166, 0.1640858397207312, 0.17558993645538656, 0.1951316508163652, 0.22101508840552375, 0.2508444687676521, 0.28186797749391124, 0.3109137172852594, 0.33483095273299046, 0.3504649460634306, 0.3551406317877337, 0.34662543193826156, 0.3235788049232662, 0.2854422412674946, 0.23277848762078968, 0.16704331674315398, 0.09076621000009233, 0.007198455411584703, -0.0796650395558629, -0.16551700321224772, -0.24582737133386523, -0.3162729639626942, -0.37407533049952235, -0.4204041608135327, -0.4358676389116489, -0.3208216450102128, -0.12355155119074901, 0.022713024814066785, 0.11411869437315758, 0.1995831019179768, 0.28781591724340316, 0.3749674416736841, 0.45687674135348466, 0.5293828531580083, 0.5884901158703411, 0.6307116255156355, 0.6532506841306649, 0.6543072484854688, 0.6332266268314788, 0.5906701121426288, 0.5286598884418794, 0.45051576592612363, 0.360744567488533, 0.2647001573149561, 0.16833559313769708, 0.07764083653548948, -0.0016352899102125562, -0.06462552619415662, -0.10749300288658858, -0.12797684589365144, -0.12527537350534867, -0.10037582921224031, -0.05562804713182823, 0.005158252777273553, 0.08835694787499859, 0.19289656918711495, 0.2926142108494756, 0.3780064352904855, 0.4470263050083272, 0.4968787585774086, 0.5252701772745896, 0.5391636184774224, 0.54298799469806, 0.5312216965917811, 0.4968244245489801, 0.4453411956642057, 0.3753740133098864, 0.29309962433301173, 0.211810932176542, 0.13517416303374663, 0.062142497156775, -0.009450751369302512, -0.07794142059878961, -0.1420667933251909, -0.20091204090025827, -0.2538870613057793, -0.30064860901979906, -0.34106209196111115, -0.3751224344308812, -0.402934147350714, -0.42464051146938475, -0.4404355178139574, -0.45049629743181274, -0.45502553332104867, -0.454175140989431, -0.44811424687060963, -0.43693533119726524, -0.4207491693782188, -0.39957309088373005, -0.37346207080452754, -0.34238428455209124, -0.3063977974862322, -0.2655159004991665, -0.21992808339513203, -0.16984831704789727, -0.11575928782944622, -0.05815115887136635, 0.0019234976792867897, 0.06247727177600737, 0.11740482917834205, 0.15470578431503412, 0.11969427563505475, -0.007004271416447327, -0.11078323827941938, -0.12192210658772518, -0.11523182179787972, -0.10749243677522086, -0.09573654282747646, -0.09386754790410934, -0.22480662177197264, -0.42899976120437255, -0.5344535498829934, -0.49323989852270334, -0.4102529219450046, -0.3215583405062352, -0.22729244524978576, -0.13026929931892894, -0.033835399203954175, 0.058432270837073474, 0.14302655377108575, 0.21657571310034207, 0.27622792207181845, 0.31971841486358077, 0.34569760079961576, 0.35371256164192477, 0.3444088398583536, 0.3193635272105322, 0.2811302453859632, 0.2329097983149362, 0.17846563280209282, 0.12167980511378085, 0.06641969228242806, 0.016075036139731713, -0.026519064915826007, -0.05945760098617292, -0.0817006413496042, -0.09328869793496075, -0.09510684363168154, -0.08893083841538507, -0.07706051480079634, -0.062250065403164134, -0.04729970392690197, -0.034956057141146024, -0.02755884509658124, -0.02698854922804217, -0.03443330702702779, -0.05042274917183287, -0.07473122729180215, -0.10649409038618352, -0.14422300672043442, -0.18597514743531618, -0.22943908064517027, -0.27212351177048166, -0.3114747825908051, -0.34506032121790176, -0.3706876790577214, -0.3865653082671061, -0.3913971313666833, -0.384503574188948, -0.36586367331618685, -0.3361765478119976, -0.29682237217282514, -0.24984787100747186, -0.19782685509106468, -0.14376934473936753, -0.09088489525742238, -0.04244218772030939, -0.00146867788494065, 0.029383690618264957, 0.04814294512253392, 0.05357319276968919, 0.04541542152661937, 0.024301446147506622, -0.008118633993400959, -0.049432671709925935, -0.0964601372475089, -0.14565216148744198, -0.19316350001762617, -0.23531812799751917, -0.26868029003493366, -0.29048190602374824, -0.29861088028793104, -0.2919114481045373, -0.2700432287975225, -0.2336152336841426, -0.18392636643274063, -0.12295401315571208, -0.05303736786617819, 0.023216885231224893, 0.10322690437680215, 0.18454403704278377, 0.2650544767222893, 0.34305625843467524, 0.41733868890891657, 0.4862093759250463, 0.5153082961743287, 0.37034474167685083, 0.21951160574453432, 0.11243565712356762, 0.10616354557448737, 0.10941347803199619, 0.1223852137410546, 0.14452442319315484, 0.17466271126279587, 0.21086042600788346, 0.2506751419034039, 0.2910707416965139, 0.3288027730501599, 0.36038890148780256, 0.38257833147684606, 0.3923486138836081, 0.38739340611621875, 0.3660845185872006, 0.3278922367528363, 0.2732459906824527, 0.2038097900237794, 0.12220098019952808, 0.03208411158178848, -0.06224023859282113, -0.1559010341129472, -0.24392966961717732, -0.32141349140737674, -0.38615348038859487, -0.4357372010635352, -0.4459216063258111, -0.3470189301732418, -0.18806629003656639, -0.0775086522744104, 0.015030341910417633, 0.11243100026340791, 0.2143127960950082, 0.31619574132051653, 0.4133390078950594, 0.5009310657227015, 0.5744567938170171, 0.6299067338591939, 0.6641354854241115, 0.6750499572476993, 0.6618690253138482, 0.6252250816489333, 0.5672210058951102, 0.4913795886293535, 0.4024253273138294, 0.3060667655221412, 0.20851430940641258, 0.11616802827214645, 0.034983630573509394, -0.029786098257120308, -0.07420379594660398, -0.09569179339076461, -0.09346688286202554, -0.0682760821222872, -0.022585487333071086, 0.03997287765004409, 0.11461536472615141, 0.1996072459280689, 0.292240348320405, 0.38210214093764705, 0.46364302737962326, 0.530821991797211, 0.577257890796445, 0.600557029102716, 0.600357156188088, 0.5808027712362911, 0.5456026316950782, 0.4981028994641976, 0.4431320533016816, 0.3831492305747801, 0.3181749900581172, 0.24945748501114284, 0.1792386494726208, 0.10944311545198726, 0.04162367449471738, -0.02302637066997093, -0.08364532949187709, -0.13965376954995223, -0.19069198088029715, -0.23656138580505082, -0.27716980008016523, -0.3124822436867749, -0.3424975716836942, -0.36721081994685, -0.3866246389512775, -0.4007124332873748, -0.4094572663942593, -0.4128024779045454, -0.41071252465608854, -0.4031043464827153, -0.38993354320603313, -0.3711082321755965, -0.3466102010680885, -0.31638692747372144, -0.2800675090165372, -0.23692956971776535, -0.18827132058418883, -0.13630168006003007, -0.08244889502662378, -0.0290816382828627, 0.018451345423684984, 0.02411952819866947, -0.03060473206419534, -0.09650350703266675, -0.12435906927542639, -0.1265497145161718, -0.12614229897953333, -0.12435768473090159, -0.11936935532335236, -0.13236243508648568, -0.3336422498559876, -0.586306832733868, -0.6606880368072652, -0.6034274538809408, -0.5363360155314809, -0.459240293960161, -0.3735735494983867, -0.281852397829633, -0.1869887236838803, -0.09234905119177572, -0.0014158731032605232, 0.08224528672791998, 0.15537638652215602, 0.2150882883552736, 0.25923078305373704, 0.2864096357807582, 0.2962603316626038, 0.2893490382445898, 0.2672991958339854, 0.2325379060496826, 0.18827347487648272, 0.13810406209206483, 0.08590067216631381, 0.03535028291348641, -0.01016119776530977, -0.04796899118802456, -0.07614840047367832, -0.09380680047443946, -0.10094406690744928, -0.09857423568334034, -0.08843073593210615, -0.07293983371733703, -0.0548347397121719, -0.03705231972529488, -0.02235033715819057, -0.013212059514138674, -0.011550036621657545, -0.01867985267492711, -0.03515353888137729, -0.06082257038903949, -0.0947987697468815, -0.13559153370137222, -0.18116468165293442, -0.2291172227762348, -0.2767964960503284, -0.32149296582779785, -0.36057439764034216, -0.39167138586052275, -0.41280188838532794, -0.42252611147828745, -0.42003010898379145, -0.40522634990085127, -0.3787635261017339, -0.3420502688671383, -0.2971645053475065, -0.246790336790776, -0.19401970033810523, -0.14221789440881416, -0.09474034648001917, -0.054773456265711395, -0.025019502527022563, -0.0075830602735360575, -0.003693611991097079, -0.013710247062747927, -0.03694352013955138, -0.07182548416410928, -0.11585808694720967, -0.16594650088416474, -0.21845150674415226, -0.26962851736671567, -0.31571650688591535, -0.35338655073734415, -0.3797817138960049, -0.39287621188992006, -0.3914005124956761, -0.37504836494898175, -0.34427165192432785, -0.300330753595496, -0.245000129140446, -0.18050923303923128, -0.10923470665736801, -0.033600725379141494, 0.04416712418410107, 0.12212592145795576, 0.19875358334562243, 0.2729923795298159, 0.3433224784998412, 0.3739899503908948, 0.2475532983785591, 0.12987609379078258, 0.04604185586645926, 0.0498070912757278, 0.06345031770650245, 0.086979897618777, 0.11979684972003035, 0.1605184418708765, 0.2071681819153035, 0.25705571716405284, 0.30708709698581726, 0.3537145384613636, 0.393358606662082, 0.4224151581673081, 0.43774597010514116, 0.4366952695591184, 0.4175693039331536, 0.3795885061621238, 0.32326042226825624, 0.2501965850317198, 0.16330445993263965, 0.06643982436358087, -0.03559939304224713, -0.1375478456189807, -0.23382571205015523, -0.31904330508788625, -0.3906945099057104, -0.4442531133509817, -0.45266865910111065, -0.3985976003042886, -0.2912762694497353, -0.196071982798383, -0.09779961333569176, 0.01067794657951282, 0.12537215236714871, 0.24122059807697127, 0.35280190859533, 0.45472111001228654, 0.5418524824518336, 0.6097424161764149, 0.6548380918376253, 0.674824466427987, 0.6687800029139179, 0.6373457866800232, 0.5827388545413044, 0.508662813328395, 0.4201391365740905, 0.32313205343660023, 0.22423426243746425, 0.1300782971285881, 0.04700060317701382, -0.019603719706881684, -0.06547032152915677, -0.0879917328596489, -0.08612567309538299, -0.060687393650349364, -0.013942003644051848, 0.0503434325524903, 0.12754257726229756, 0.21226587079787018, 0.29908060143315485, 0.3826191754817101, 0.4582107476436281, 0.5219336096270286, 0.5708541905758002, 0.6031557023830789, 0.6182210828631485, 0.6162916314885871, 0.5985281200029808, 0.5666925885381255, 0.5230334053281576, 0.469990007001301, 0.41006338612273563, 0.34561511332037487, 0.27877438494327045, 0.21135483124198196, 0.14482112210725884, 0.08030655923915297, 0.01862900835687098, -0.03963385190900337, -0.09410692729674186, -0.14453274358145196, -0.1907384601012695, -0.23257538070999795, -0.2699023861912424, -0.3025622606011289, -0.33037658832336314, -0.3531538565822334, -0.3706816819546104, -0.3827565823695722, -0.38916114832982185, -0.3897116180667952, -0.3841971619113185, -0.37048018042622033, -0.3466891967013712, -0.3176427371057198, -0.28124630524090577, -0.23359404500759062, -0.17889125110930504, -0.12738427290883791, -0.09167428336912131, -0.08484138088772042, -0.09054666691582014, -0.10270090904654872, -0.11691783209799667, -0.12368842450830186, -0.12883422740431172, -0.1342353605705866, -0.13847926883786243, -0.13989235371370468, -0.15505050469036763, -0.3634448265027985, -0.6547273571766816, -0.7239177865519447, -0.6830875586669821, -0.6323078232515562, -0.5697600753758567, -0.4963209304156173, -0.4139752538521222, -0.32517988275032117, -0.23295685898531682, -0.14058540942329678, -0.05161307224758804, 0.030524288562462587, 0.10254220244275647, 0.16169883222417658, 0.2058266292506965, 0.2336607946735647, 0.2447916991283372, 0.2398675530938612, 0.2204134272904883, 0.18888188459024624, 0.14832805182932152, 0.10233440265785121, 0.054586133195121844, 0.008744702304425367, -0.031989428965760514, -0.06495719182340154, -0.08839354430429514, -0.10138036391865435, -0.10404651263702824, -0.09736188261569678, -0.08317365397274257, -0.0638729283052073, -0.04231385122582887, -0.021431297945858463, -0.004122355251744203, 0.007095004014255557, 0.010162433948510796, 0.0037159245165049315, -0.012915567134271, -0.039605371107570564, -0.0755178880329972, -0.11911967727409323, -0.16833504338763938, -0.22063928842838854, -0.27325184867000596, -0.3232745693180239, -0.3678946501451956, -0.4045329027620168, -0.4310302337678191, -0.4457704462469869, -0.4478218753044443, -0.43699713245062854, -0.4139209387005951, -0.379992781521612, -0.3373613248228913, -0.2887722670660011, -0.23745294787214766, -0.1868568208337651, -0.14049433800372935, -0.10161877551864062, -0.07306887859383604, -0.05696446157138335, -0.054638166034366664, -0.06641066841199539, -0.09167357531739695, -0.12878831738749041, -0.17534044850659436, -0.22816008896134077, -0.28371265741764806, -0.3381894586408585, -0.3879525646676427, -0.4296135409679769, -0.460431801281735, -0.47830333151819815, -0.4820321332418711, -0.47118955774195026, -0.44622896782843213, -0.4082324209678889, -0.3588952433986421, -0.30022297201562864, -0.23444812974804208, -0.16375521034998997, -0.09019299054694585, -0.015486883712902966, 0.05901552959107548, 0.13241981598366692, 0.2034366257636151, 0.23622831622368778, 0.13480454154860233, 0.0515045052735168, -0.010595158193936527, 0.0029931617743415018, 0.026746797595919247, 0.06062527964888886, 0.103842786475278, 0.15498512029764555, 0.21186640411129876, 0.2717562131014537, 0.3313008816165235, 0.3868728040978091, 0.43456577694307175, 0.47065059896366845, 0.49162024329426357, 0.4946933564586731, 0.47784443063147153, 0.440258672589243, 0.38225918207730203, 0.30560985745685976, 0.21326963768944118, 0.1094804610478004, -0.0006593781824317801, -0.1113097970321526, -0.2164254428222474, -0.3099404950352991, -0.38702844013563364, -0.44348730997457153, -0.47789037786946764, -0.48108306943267465, -0.41813997128163294, -0.3282021617819204, -0.22266655474641084, -0.10409540937753547, 0.022487595788636128, 0.15135055742833536, 0.27645212573323263, 0.39172288043513603, 0.49150705839655373, 0.5708367840541406, 0.625837630115031, 0.6539390514324923, 0.6541455954895747, 0.627115328127581, 0.575198036532651, 0.5023272550913029, 0.4137690518701911, 0.31583235358171047, 0.21535962737639336, 0.1193479405451976, 0.034309191464254596, -0.03403812154789421, -0.08136104092198715, -0.10478903011923446, -0.10330850118802914, -0.07752301534879047, -0.029793467494954484, 0.03628823583179619, 0.11596124357203275, 0.20397927631536783, 0.2947514919135861, 0.38301360413553187, 0.4639167803877289, 0.5335437754434045, 0.5888633081549299, 0.62801997739163, 0.6501438514040476, 0.6554225686520638, 0.6448180204593648, 0.6199866923437742, 0.5829855978110166, 0.5361284023181003, 0.4817568949966242, 0.4221080149527294, 0.35919492575256484, 0.2947268462431287, 0.23010207175938913, 0.16638537773984696, 0.10438095234652245, 0.044645571051060706, -0.012406361239811314, -0.06648401138765492, -0.11732557182542203, -0.1646952600629411, -0.20832247520533886, -0.2479187893421695, -0.28315258441862357, -0.3136755670654161, -0.33912227070465617, -0.35913077694134454, -0.37333504373779647, -0.37560226129386143, -0.3671132423777683, -0.3414152138409685, -0.294553148224848, -0.2478904750213493, -0.2009517668829517, -0.1620573053254004, -0.13309565588679995, -0.11090928810943002, -0.10100199822482736, -0.09870276653428789, -0.10178211905249235, -0.10916319464431634, -0.11746829762759248, -0.12755578462970707, -0.13843723897899451, -0.14865858459696035, -0.15660948324025803, -0.17008040511394196, -0.3187247393524011, -0.6354590246347196, -0.7482885155919223, -0.7273964662412102, -0.6943262265044707, -0.6484390702415657, -0.5899330981607487, -0.5202375928995708, -0.44130670523805327, -0.3557288613434171, -0.2664532739139518, -0.17684228189301487, -0.0903136872060073, -0.010331303860573016, 0.05998899895257326, 0.11790818399104719, 0.16142741957918982, 0.1892731771739813, 0.20116287379138775, 0.19768569424362736, 0.18042705699962802, 0.15171412861488953, 0.11459931633843867, 0.07248721898917976, 0.02902688296562861, -0.012315281456700022, -0.0483691885799733, -0.07665107350609546, -0.09539330145954938, -0.10381463016122128, -0.10200769961908729, -0.09104874198278767, -0.07273977774268969, -0.04957398171667882, -0.024384937851178456, -0.00023020954277852557, 0.019969059661528732, 0.03354760377355975, 0.038387084097470825, 0.03297596648854384, 0.016583773106634725, -0.010767126596982424, -0.04825248335320609, -0.0943586970499366, -0.14693862798085355, -0.20338609870499003, -0.2607630710055129, -0.31600779729150785, -0.3660964196928145, -0.408254709965322, -0.4401148159353552, -0.45989727775558764, -0.46652019164335456, -0.45971571190908733, -0.4400498389144829, -0.4089436848508168, -0.36857514870034436, -0.3217957683008166, -0.27191322167255816, -0.22252753294765082, -0.17722908522490277, -0.13941232157875483, -0.11195416699321936, -0.09708394205170534, -0.09611750111861728, -0.10945679972282074, -0.13643798361508408, -0.1755004646956243, -0.22416615115809513, -0.2793655879048951, -0.3375150386045853, -0.3949351697132313, -0.4479532412055871, -0.49331905516198926, -0.5282489757072888, -0.5507483467364205, -0.5595388927591873, -0.5542355261776413, -0.5351488735083345, -0.5033198216457277, -0.4602410814255924, -0.40779866276714216, -0.3479857300385625, -0.2828160938874724, -0.21409886389149868, -0.14337321947554926, -0.07178289653354142, -0.00005091837143744726, 0.0708354687421533, 0.10768217153566972, 0.03880384174493123, -0.014611729958451392, -0.05531443087963517, -0.032333908392388366, 0.0011318147810133183, 0.044879994236278975, 0.09809271384741436, 0.1591816434708626, 0.22593453698692123, 0.2954097686917825, 0.36419867185162325, 0.4283951392349845, 0.4839835426128416, 0.5268854940990042, 0.5534453465083966, 0.5605123361041082, 0.5459445975222226, 0.508640186723829, 0.44894464059524797, 0.3685312552718063, 0.27060765825867605, 0.15958649086115173, 0.04105142554493035, -0.07875632722813641, -0.1931607435528946, -0.29496951432032503, -0.37318614482371615, -0.4434910727347834, -0.5315727232079226, -0.5933884685530089, -0.5587198391021175, -0.46943623480011354, -0.3571617145664874, -0.22947048071344156, -0.09200167249747793, 0.04889275911204116, 0.18646682532615344, 0.3140533877282756, 0.4253904584778532, 0.5150893651376336, 0.5789048307165263, 0.6140996237382819, 0.6195903759440702, 0.5961074804413986, 0.5461550849073795, 0.47389098184465794, 0.3848816288743846, 0.2856974960698002, 0.18352309772003972, 0.08555960197957058, -0.0013700501539897214, -0.07144634422260054, -0.12008198806569281, -0.14440450892368867, -0.14319296458740827, -0.11711640132900758, -0.06835579738665731, -0.0006040383946355199, 0.0815382084482339, 0.17270388795691272, 0.26743226321941904, 0.3603180517141533, 0.44659258785158773, 0.5221718732277782, 0.5840394678681697, 0.6301483059967161, 0.6595767141565956, 0.6723076223558557, 0.6691985173294555, 0.6517079141243878, 0.6217591182981499, 0.5814952557939197, 0.5331201330861761, 0.4787430542742168, 0.42025588992353224, 0.35929090468086233, 0.2971565528706499, 0.23489258710650507, 0.17325399090563387, 0.11282201750629861, 0.05400745735904122, -0.002828947945376914, -0.05738244839387385, -0.10930792304842674, -0.1582496528489824, -0.2037806706249895, -0.24545354300636824, -0.28276887673350126, -0.3152294692998199, -0.34119674424862545, -0.34522792257171675, -0.3158676105227216, -0.26469801936474546, -0.20223788091271588, -0.15506461481322287, -0.12249091917696298, -0.09599969244431428, -0.08315730440011482, -0.07876155893927717, -0.07758900284391412, -0.08040318514465028, -0.0868551216198643, -0.09604447329234311, -0.10797895401217605, -0.12222756012545233, -0.13790650810264893, -0.1537029343604095, -0.16816718390741414, -0.18254758168272467, -0.2506355968217857, -0.5359060632218822, -0.7314055646280404, -0.7350907566276943, -0.7203944698671729, -0.6924336415990969, -0.6507470946967167, -0.5961570972823158, -0.5300983488089448, -0.45467730039252263, -0.3724340666150521, -0.2864273757227096, -0.19990624247579003, -0.11633166749231583, -0.03899435685595165, 0.02900014701343112, 0.08511061771303474, 0.12736059124617238, 0.15464949034333442, 0.16668000310348452, 0.16414836337551586, 0.14855567337592435, 0.12225705448625157, 0.08815066965717566, 0.04961022721867281, 0.010091142409868414, -0.02698779850510169, -0.058645523280849376, -0.08242167941251721, -0.0966996288896278, -0.10067959293613526, -0.09456156752942102, -0.07937534590645623, -0.05700916166937697, -0.02991760453806236, -0.001033190834934139, 0.02658299588990448, 0.04987700450081761, 0.06612828403346765, 0.07306053894520892, 0.06907972072025181, 0.05331085504994382, 0.02571568903439747, -0.012961713112524809, -0.061196616867420506, -0.11682064367438194, -0.1771196662937249, -0.2390303701658847, -0.2993002221970822, -0.35471298358874215, -0.40226980042071014, -0.4394066516736048, -0.4641493136616708, -0.47528032357328565, -0.4724181329852648, -0.45609334670867163, -0.42771151085977266, -0.38951540303293175, -0.34441628093294296, -0.29585146882299274, -0.2475063627670182, -0.2031152563085028, -0.16613292380860245, -0.13955573852623693, -0.12562123039874518, -0.12573144711031647, -0.1402508288595561, -0.16858879645242908, -0.20913118890974458, -0.2594910625372593, -0.3165591328710524, -0.3768777146064246, -0.4367503384458127, -0.49265411743636145, -0.5413264505999771, -0.5801217116142179, -0.6070037767174439, -0.6207780881041742, -0.6209590707096506, -0.6078577568633623, -0.5823455139952429, -0.5458282585211993, -0.4999680862500462, -0.4466043848306267, -0.3875051032394694, -0.3242922261749186, -0.25827445747926525, -0.19040849302850127, -0.12123233213634066, -0.05135523995274127, -0.007781499223574073, -0.041822018992707655, -0.06828658040931757, -0.08717701317205595, -0.0553322709635502, -0.012773750303562537, 0.040257742492782356, 0.10279950547602468, 0.1732427514740511, 0.24920942313823957, 0.327725825553693, 0.4051625369968841, 0.4775332085745898, 0.5405215465736273, 0.589908944931361, 0.6216770173580359, 0.6325166123186545, 0.6199392084878436, 0.5827622332265499, 0.5211193783535677, 0.4367916993992864, 0.33301359216267556, 0.21455593961807118, 0.08729449236095022, -0.04195687536512338, -0.16604205877840528, -0.2737604260099058, -0.35262856295918965, -0.4482891221956855, -0.628912612641578, -0.7391017488464513, -0.7093624982124709, -0.6162783800299465, -0.49816220646640375, -0.3622879214352146, -0.21487208837781324, -0.06295921956530748, 0.08606723305750386, 0.22486598053329665, 0.34666261916374097, 0.4455873581175087, 0.5171272472108619, 0.5583454282418021, 0.568156134281395, 0.5473590334343879, 0.4986505891398547, 0.4264384415425484, 0.3365571311768676, 0.2358941706005897, 0.13186599995999293, 0.03196988462552408, -0.056839043448145166, -0.1285026866329919, -0.17840656609296873, -0.20348807805513347, -0.20257096378022976, -0.17615559134376224, -0.1265002484168778, -0.05713435168712078, 0.027252866318237423, 0.1214451542932764, 0.21988066863088118, 0.31726735906669745, 0.4087102324674232, 0.4901753384467078, 0.5584863564515317, 0.611571666521268, 0.6483217457267898, 0.6686284743554705, 0.6731525590821406, 0.6632181016044685, 0.6405675525729482, 0.6071949092827236, 0.5651606690237934, 0.5164355999205412, 0.4628184555945083, 0.40583079869487815, 0.34674114676238066, 0.2865154089884383, 0.22591833123292115, 0.16549756107091218, 0.10571759781785639, 0.04694611055477127, -0.010420216547560424, -0.0659910936960495, -0.11928729130356597, -0.16980504595112134, -0.21695257313553684, -0.2601257210793546, -0.2952042484272235, -0.29852864974883997, -0.22555794634146453, -0.14646104981321484, -0.08894199118374146, -0.0579850287461805, -0.05389531145763016, -0.05062347038483317, -0.05062557472477902, -0.054202217401951636, -0.05754657907630012, -0.06265584615094788, -0.07042203931779589, -0.08130794526693919, -0.09550490829198477, -0.11266376527561306, -0.13209017988502492, -0.1526803506893808, -0.1730722389236341, -0.19190881327548137, -0.22244391813678455, -0.3926984921722241, -0.6518590746899942, -0.7075283782811757, -0.7104054017405166, -0.7007725030474168, -0.6770331891387678, -0.639227208539203, -0.5882663566638688, -0.5257513463272661, -0.4537688681052029, -0.37499779307070247, -0.2924134850803253, -0.20933517287300352, -0.12906496063387385, -0.054891036887865674, 0.010291276213211464, 0.06398251171788116, 0.10441718835802849, 0.13052181083222525, 0.14215694002980994, 0.1399835956174793, 0.1255756003227555, 0.10117226760851183, 0.06966368653113153, 0.034245927543096744, -0.0016774371308376779, -0.03488273800428199, -0.06243527435941476, -0.0820418935959637, -0.09209192422970935, -0.0919026517730196, -0.08163718847750978, -0.06240358466225704, -0.03603993241112413, -0.005075663635401573, 0.027577642801299096, 0.058752084171371954, 0.08535739232235351, 0.1045236424606118, 0.11388722090380782, 0.11168744347788206, 0.09695254995733393, 0.06951208425029076, 0.03006177947196287, -0.01991852762555979, -0.07821482443551098, -0.14204419185764605, -0.2081943348666262, -0.27324618424677993, -0.33376464637108194, -0.3865409981216188, -0.42878538334467553, -0.458341526862057, -0.4738243012357808, -0.4747563414907572, -0.4615979373443846, -0.43576721914218863, -0.3995312508710702, -0.3559019198343871, -0.30839506065264244, -0.260836201455688, -0.21703705407694196, -0.18058294202043523, -0.1545054093949143, -0.1411390219776515, -0.14187087773355478, -0.1571390177193127, -0.18631136333155396, -0.2278551261975208, -0.2793495621437547, -0.3378012240392496, -0.3997456840050786, -0.46163753394273277, -0.5199648154328496, -0.5716220831367607, -0.6139596275839265, -0.6450599567247055, -0.6636727013814125, -0.669354461172631, -0.6622879304947533, -0.643295452704784, -0.6135867656120917, -0.5746955272834722, -0.5282236258470334, -0.475760952679094, -0.4186869793639776, -0.3581170375655063, -0.29479351155119815, -0.22907318540504384, -0.16116035573089782, -0.10902440599692298, -0.10814259845394858, -0.10863439633082272, -0.10629298343797089, -0.0662873715044725, -0.01534385865153709, 0.04617478230043304, 0.11728285472300293, 0.1962432472060005, 0.2806606552319, 0.3673972568613113, 0.45277472863660595, 0.5325702582001828, 0.6023562454179787, 0.6575941639605203, 0.6941020893779406, 0.7082122092245566, 0.6972905459799394, 0.6598601747768911, 0.5960398863793657, 0.5075033708550487, 0.3977000127648713, 0.2715574909524605, 0.13541850204684458, -0.0035041958439840926, -0.13730984490379328, -0.2453160418230116, -0.3197873245593179, -0.49818903120877067, -0.7804368096464529, -0.9017655444052597, -0.8623517139910728, -0.7651690178117221, -0.6419114441806535, -0.4972033739830657, -0.33798526381355565, -0.17101058165882677, -0.00378611792968897, 0.15603474965276654, 0.2972606458145677, 0.4126031332870941, 0.496363837297114, 0.5448570846495304, 0.556542547299335, 0.5321655343684508, 0.4746476656235288, 0.38936920253262475, 0.2847175553856913, 0.17090196793780876, 0.06495385920297081, -0.03690170079053978, -0.12748641653088505, -0.20068905849008195, -0.2517289472975498, -0.2775732058370539, -0.2769023284391319, -0.2502812364351805, -0.19981873335958422, -0.1291112991230734, -0.04269037601824266, 0.05416179801800158, 0.15602473554865437, 0.2575245970652702, 0.35385677662161363, 0.44087101236974835, 0.5154060396558355, 0.5752342916687025, 0.6191832207211707, 0.6469621779083861, 0.6591089233056264, 0.6567637866606129, 0.6415161199565951, 0.6152018641086725, 0.5797282642184589, 0.536953167695648, 0.48854407025985935, 0.4359627598309892, 0.3803802674191923, 0.32275420973603275, 0.2637891866799471, 0.20406963317857496, 0.14403660365031445, 0.0841330539275611, 0.024766761989480024, -0.03356363948321128, -0.09033733139138689, -0.14491592516583807, -0.19663902034702807, -0.24199925928348198, -0.24349001028136508, -0.14141203273036185, -0.03959671521379926, -0.01032626273785997, -0.008228552188695115, -0.01714845531239728, -0.026068504341624887, -0.03205063812009712, -0.03683579346348065, -0.040993701384425485, -0.04647639682702831, -0.054432776495857205, -0.06564148260063352, -0.08055163432209511, -0.09915468679855888, -0.12098887622596877, -0.14517100365700308, -0.17045451361500508, -0.19529104837500189, -0.22022884613396876, -0.28441367775313253, -0.5021114912537001, -0.6413967505594353, -0.6658678223817889, -0.674279727303134, -0.668850111912394, -0.6488027833969481, -0.6144469276679929, -0.5668616095268457, -0.5076534201890692, -0.43907311055461196, -0.36375391126145185, -0.2847753179348791, -0.2053287929915235, -0.12873649296543, -0.05808401098060911, 0.0037786653251410396, 0.05458577264827369, 0.09263115948856449, 0.1170454617361456, 0.127704150257282, 0.12539329661351273, 0.1116202460710849, 0.08865475067419937, 0.05924055808129891, 0.02653386423029236, -0.0062508204838703785, -0.035950094170014824, -0.059809343698818185, -0.07556757441248363, -0.0817469664207614, -0.07764739349349281, -0.06351249650833812, -0.04039924628231062, -0.01020256251915208, 0.024590545291133803, 0.060992254112752387, 0.095826189985801, 0.12587714662099342, 0.148201123904651, 0.16026676030095666, 0.16019929776961828, 0.1468592717346262, 0.11997861419670719, 0.08014588912452592, 0.028820102875517284, -0.03178361738554125, -0.09879259027685938, -0.16887567255915137, -0.23842428313968167, -0.3038033361514625, -0.3615673162905213, -0.4087139933832784, -0.44287448133150864, -0.4625109640303897, -0.4670166313878221, -0.4568038682984805, -0.4332656800227088, -0.3987269622570726, -0.3562553355868805, -0.30949159350075783, -0.26234525162096833, -0.21876607643963042, -0.18239952947969584, -0.15638928605850866, -0.14308170373713014, -0.1439451018679705, -0.1593927483352353, -0.18886829637288782, -0.23081132568402718, -0.2829041006791877, -0.34215129521619203, -0.40523226458318273, -0.46862755689793234, -0.5289912656202045, -0.5832447201245294, -0.6288841308661084, -0.6639794555523162, -0.6873616291022175, -0.698504593032073, -0.6975821243191227, -0.6852573970107692, -0.662643052873702, -0.6310558754961058, -0.5919368801415441, -0.5466349199045162, -0.4963384567187141, -0.4419322430700241, -0.3839677904943066, -0.32260776529200186, -0.2576397266984536, -0.19599552551001054, -0.1602890190576236, -0.1356781667970015, -0.11374466436906339, -0.0663548509022931, -0.007895665446479683, 0.06123754243121837, 0.13995847216793855, 0.22651690289402993, 0.3184015756482026, 0.4124504795947832, 0.5048158470402964, 0.5912003308246261, 0.6669221538960546, 0.7273016495573987, 0.7678285607510409, 0.7846649272700192, 0.7748474865520256, 0.7367955902589836, 0.6704173130264586, 0.5774650106718151, 0.46140671969171265, 0.3275025366973878, 0.1823789865833536, 0.03380636001458903, -0.1079869563620246, -0.19912970292524257, -0.3150194677021485, -0.6204801284721331, -0.9534765225421058, -1.0590872986951876, -1.0094175155422818, -0.9055584031325701, -0.773220454855247, -0.6068690921713937, -0.4155961666157513, -0.20852182273174336, 0.005683255943884191, 0.22543976179587588, 0.425645189276068, 0.5867423871270994, 0.7005652897067058, 0.7620297180138085, 0.7692808445634141, 0.723509236529063, 0.6281066592952023, 0.49015314566538715, 0.32587400336003514, 0.13952629222473978, -0.011680318284065794, -0.11547010617283249, -0.2078176197745668, -0.2824677048546741, -0.33465363227346057, -0.3612326829718415, -0.36094478053470436, -0.3342356058621889, -0.2832721704492558, -0.2115045159019946, -0.12350599135846174, -0.024402415199090477, 0.08034487184997374, 0.18548969014983463, 0.28616060280278965, 0.3782691462209167, 0.458543181513404, 0.5247337973620283, 0.5755156399989136, 0.6105014934059971, 0.6300551205865039, 0.6351716001238454, 0.6272743056131711, 0.6080380417459885, 0.5792380366708789, 0.542582901805547, 0.49965716734911947, 0.4518021658616851, 0.40015810444716404, 0.3455971170199774, 0.2888402845758087, 0.23042114609410458, 0.17083757570482527, 0.1105136558405353, 0.04994888063805325, -0.01034807212959965, -0.06973435168178255, -0.12753807524687355, -0.18247323137514093, -0.20011332078806465, -0.09304620928680662, 0.023763728475392654, 0.03692208917300688, 0.021332493565102695, 0.0036819923438482505, -0.009564562119499076, -0.017744479152942194, -0.023263083347458302, -0.02765159743746004, -0.03266203777085597, -0.0397513150826585, -0.05003091084236733, -0.06423233150655783, -0.08269738448799302, -0.10529513629001208, -0.1314413977091462, -0.16009637398672183, -0.18983772787557385, -0.21893455272765738, -0.25133309809971305, -0.34596566532694695, -0.5249686186303073, -0.5896272266162788, -0.6153862436043287, -0.6278253832361669, -0.6258734654683034, -0.6089891648282122, -0.5777092766435734, -0.5331351155412498, -0.47705211892452737, -0.4117035261597546, -0.3398607492006296, -0.26451848591171734, -0.18892180610628162, -0.11621756503134573, -0.04945925599151901, 0.008739505535293679, 0.05618964433751672, 0.09142280617987764, 0.11362839096465716, 0.12285872409364829, 0.11988756954930979, 0.10630198696125548, 0.0842697652628685, 0.056522965498928546, 0.026049265843783642, -0.003997500768961659, -0.030638394956224224, -0.05117289674812375, -0.06349008578341608, -0.06612047411945488, -0.058456221786550744, -0.04070086030636566, -0.013960610942067575, 0.019924596463277877, 0.058419161820473464, 0.0985561984353554, 0.13706822757862464, 0.1706930336626285, 0.19633739186193389, 0.2113593009952418, 0.2137023945028465, 0.20209811602304822, 0.17612233546897915, 0.1362821649923942, 0.08396848644317201, 0.02141734688899466, -0.04844376657861549, -0.12214490451804005, -0.19591170777251854, -0.2658854375293309, -0.3284001543420709, -0.3802129943557371, -0.4187572018422667, -0.44230991182382917, -0.45015388794063815, -0.4426172548724021, -0.42109570114625683, -0.38793018072601093, -0.3462832960594824, -0.2998709004471727, -0.25273874770673355, -0.2089139993771667, -0.17216917178480562, -0.14568746417003842, -0.1319107639857542, -0.1323046403983591, -0.1473597792099851, -0.17650171891221977, -0.2182623544128679, -0.2703245069423379, -0.32982445141933336, -0.3934750825755895, -0.4579226208889615, -0.5198705151762155, -0.5764044114491775, -0.625046584279521, -0.6639825838690516, -0.6920075258445069, -0.7086267266488644, -0.7138982652728272, -0.7084236483643291, -0.6931292003721135, -0.6691943310157988, -0.637832162985724, -0.6002101606735053, -0.5572820961986764, -0.5097393930995864, -0.457920872355027, -0.4018075080753185, -0.34077871333700216, -0.2692450023164703, -0.1989429567158183, -0.15036260051903838, -0.11130679029206902, -0.057427814687480705, 0.007618906393048519, 0.08335555413200879, 0.16867664978767216, 0.26175200632932416, 0.36005933588712047, 0.46032699317604653, 0.5586662187627205, 0.6505996952608903, 0.7313415471366991, 0.7959444037850147, 0.839736725401985, 0.8585626358279921, 0.8493065728220421, 0.8101177605058816, 0.740872450218445, 0.6432233295777561, 0.5208301976900445, 0.37910614204827375, 0.22512156455618282, 0.06720651764450203, -0.07007736031727241, -0.1585090198045691, -0.35784711325385565, -0.7965302702303294, -1.1513928747984306, -1.2263718629384108, -1.1561708710603362, -1.024364054172377, -0.8354545145869849, -0.5934798164219739, -0.31255590955347934, -0.01623094862891783, 0.2682820621844595, 0.5258479121382678, 0.7544828263560106, 0.9345769919501343, 1.0541864957879499, 1.1088686602137638, 1.09771397111908, 1.0233715347339523, 0.8878429562822232, 0.6956692854355184, 0.4787168688353629, 0.24558054714350486, -0.02806254459447599, -0.19763199471061477, -0.2917305509013136, -0.3678800001007523, -0.42123614995664926, -0.448711481254477, -0.4489674775554513, -0.4225094407765644, -0.3713878239870434, -0.2990846531408211, -0.2100205626438223, -0.10933187206012551, -0.0023265484055121632, 0.10573017585586708, 0.21007475278972354, 0.30656094869162764, 0.39194615136264854, 0.46387283127833445, 0.5209600452093, 0.5626719654708623, 0.5892497097505744, 0.6015265091806716, 0.6007678530670333, 0.5885035388779363, 0.5663478607738384, 0.5359037173679901, 0.4986147039814286, 0.4557656991611019, 0.4083869853877111, 0.357342736811173, 0.3032769021959112, 0.24675775373528452, 0.1882365101900314, 0.12820923438780385, 0.06715639007163432, 0.005692374166097469, -0.05553487019293879, -0.11571103932398863, -0.16218912257361384, -0.08494061888000992, 0.04607758931238781, 0.0666856753764492, 0.041013437053091684, 0.018272733640667504, 0.0024941401350382364, -0.007347749696686723, -0.013587083562896396, -0.01800567324432789, -0.022234042537202736, -0.027782424333675948, -0.03606251472247468, -0.04815852518914454, -0.064827957740345, -0.08633786964593071, -0.11249474254051162, -0.14257022470825742, -0.17538196576039322, -0.20931061485617342, -0.2425037859750372, -0.2821298164591237, -0.38469899881790326, -0.4837400267865952, -0.5272653186364886, -0.5569353426437038, -0.5727913389970825, -0.5736611551918274, -0.559490189967708, -0.5308401715142512, -0.4889905872004905, -0.43575052827426064, -0.37352833934850826, -0.30505817792779144, -0.23342667493028735, -0.16174664502533398, -0.09316058166941366, -0.030504234735985514, 0.023685351682163236, 0.06747203623797082, 0.09947760969467179, 0.11911145969771764, 0.1264656433775817, 0.12244670915073219, 0.1085925851803714, 0.08710077731214072, 0.06056952575832597, 0.031940807062328935, 0.00419187725796788, -0.019764786670529055, -0.037392023541519825, -0.046613922607920855, -0.04607113151326414, -0.03513680854610812, -0.014067945587061703, 0.016084375619654312, 0.053450176334273514, 0.09553844526503996, 0.13932637068645048, 0.18153325535004083, 0.21878043474186726, 0.2478856567898, 0.2660337241221613, 0.27102954815641217, 0.2614200772769429, 0.2366540902549883, 0.1971101159786819, 0.14413152482701697, 0.0799376431630292, 0.007529034507443244, -0.06951359666759638, -0.14722949732317092, -0.22155670439993358, -0.2885834990756253, -0.3448432152551568, -0.3875407100653767, -0.4147863435876733, -0.4257170460916191, -0.4206010158545306, -0.4007960151698806, -0.3686927491728862, -0.3275017010639858, -0.28105895565578165, -0.233491305059637, -0.18896168615853404, -0.1513054561160493, -0.12381873805979726, -0.10896591933778332, -0.10829958262082995, -0.12230680211221245, -0.15050068568478747, -0.19141702621013357, -0.2428575205601664, -0.3019944318247645, -0.3656991777848453, -0.43068140182232195, -0.49381835156686815, -0.5522533033762294, -0.603651993433413, -0.6462090510482241, -0.6787896814076486, -0.700830802361752, -0.7123670028490121, -0.7138519643242418, -0.7061032930628874, -0.6900955897415191, -0.6668761778826493, -0.6373843647709041, -0.6023841873232438, -0.5623465335390971, -0.5174232604696041, -0.4674034069966986, -0.41128502143901713, -0.32970920302867057, -0.2252449421790903, -0.15439840074704492, -0.1012595143093229, -0.0418307354393761, 0.028784225053136936, 0.11007457951162891, 0.20087802488125206, 0.29935387837119976, 0.40291676012981625, 0.5082769032295822, 0.6114357543421534, 0.7078508269556352, 0.7925444113343652, 0.8604383208679405, 0.9065911346472975, 0.9266834654477965, 0.9173172525976514, 0.8765360046700614, 0.804034476120858, 0.7015311955711097, 0.5727149995934662, 0.4233097314578398, 0.2611290651516516, 0.09694514137188115, -0.01986509131895886, -0.12582843719531311, -0.5111074719334283, -1.0796297929583911, -1.3944089167028366, -1.4524513365564928, -1.3461955178635954, -1.1437573620355934, -0.881248501442986, -0.5545011035524201, -0.1982116179309017, 0.14935486983542923, 0.47213233990318315, 0.7418537271898575, 0.9578497181261216, 1.1203963688163352, 1.2238726012357484, 1.2654861378520224, 1.2456415717941507, 1.1688279398617771, 1.0370142913323055, 0.8462289956635312, 0.5884135293702784, 0.3278846569896646, 0.048522450212084456, -0.23361178105375735, -0.3730971026166119, -0.450853185662732, -0.5055910673801618, -0.5341870199344192, -0.53536762764818, -0.5095654130261664, -0.45886602106325025, -0.386622900595329, -0.29725184167283203, -0.19572837625289363, -0.08734101003058825, 0.022789712643720428, 0.12989629993630203, 0.22991494812213098, 0.31954878860577995, 0.3964367191887419, 0.45909000877700823, 0.5068878870874958, 0.5399291156938979, 0.5589064827164423, 0.5649386459874446, 0.5593929844605263, 0.5437606687742154, 0.5194888419449608, 0.4879392676224956, 0.4502648639598572, 0.4074607321420096, 0.360288761338996, 0.3094017067356356, 0.2552945092901533, 0.19846661608050375, 0.13936728131769005, 0.07856181897241399, 0.016641841750186792, -0.04562551091481426, -0.10601494345196283, -0.10366821045441887, 0.026928028063602394, 0.07785454508158329, 0.05487394586976291, 0.028572722026565245, 0.010755570298137562, -0.0010112729232513162, -0.008484785717949306, -0.013023186200294745, -0.01624019923576725, -0.019749249609042785, -0.025205520302540307, -0.03401283280001177, -0.047347017538985625, -0.06591258517714316, -0.08998173783946051, -0.11923928644251713, -0.15286655191921827, -0.18949280622715037, -0.22733914543139377, -0.26276157958690494, -0.29326032009685044, -0.3658919175592219, -0.41491888720605274, -0.45998445591093073, -0.49296371814920725, -0.5113460904031717, -0.514555077339252, -0.5026146496731796, -0.4762463692638055, -0.43677171121393954, -0.38617845817510954, -0.32688188709569577, -0.2617438113223278, -0.19377079639906336, -0.12610841624844715, -0.06171897494188738, -0.003378651764145979, 0.04662218250225081, 0.0864524214199961, 0.11498153469130257, 0.13170195139161944, 0.13688767992844975, 0.13145134149966486, 0.1170098452733026, 0.0956729080036785, 0.07002254148825882, 0.04284585890849413, 0.01705440925407309, -0.004607224573377144, -0.019658807865864047, -0.02615349510052367, -0.02273997605314393, -0.00885914241753194, 0.015274527388947856, 0.04858584825977286, 0.08926181207381412, 0.134784386921196, 0.18214994342400892, 0.22800041878366994, 0.26890169292683264, 0.3015252958131399, 0.32292906334999927, 0.3307284417666665, 0.32331881445553706, 0.2999774819506458, 0.260977611397035, 0.20757740220682508, 0.14199791690007268, 0.06728213151732332, -0.012859869721188577, -0.09430533660307461, -0.17276666811456165, -0.24410678003309672, -0.30460720610563374, -0.3512644251526966, -0.3819879900077918, -0.3957925330070511, -0.3928461897577993, -0.3744992278995225, -0.3431455481807175, -0.30208338864008155, -0.25521565826918, -0.20680158572760332, -0.16107961226386458, -0.12201276997944865, -0.0929435933686551, -0.07643856266803806, -0.07406531930446714, -0.08640136278349786, -0.112970256094727, -0.152417348938644, -0.2025805719423377, -0.2607802562787027, -0.32395793861056665, -0.3889988333138774, -0.4528609739960916, -0.5128516486542551, -0.5666858196000124, -0.6126637425610584, -0.6496306642798624, -0.6770398361235159, -0.6948226445819277, -0.7033573725609052, -0.70328859334077, -0.6954461524796489, -0.6806651072317713, -0.6597037513909711, -0.6331071577066218, -0.6011587172187625, -0.5638085807791953, -0.5206714777399064, -0.4703920001783768, -0.37844423992748766, -0.24058144826524064, -0.14997871516708905, -0.08610557698047927, -0.02211694140142839, 0.05302580880417729, 0.1387668257973953, 0.2339231624647784, 0.33662218926148135, 0.44426950232726625, 0.5535231099401017, 0.6603503356637361, 0.7600936283999093, 0.8476830910739075, 0.9178409278894293, 0.9654785933502943, 0.9860226555081555, 0.9759334076198165, 0.9330349343604465, 0.856991003348091, 0.7494509452242057, 0.6142828256705004, 0.4582348656631319, 0.2941468783639154, 0.13850872640851541, 0.043475387560876655, -0.2306699926898279, -0.9322397793827797, -1.5917260250835294, -1.8409634396142724, -1.8036742341023313, -1.5897935714259805, -1.2770107290872925, -0.9322524151762188, -0.5825004075342193, -0.23180118514655135, 0.10114098600246102, 0.4052898383084571, 0.673392988089649, 0.8933045971696316, 1.058333683473501, 1.164613450516578, 1.2113097405807265, 1.2006593383267457, 1.1397200127717169, 1.0374710616556704, 0.893886478858473, 0.6658788598541062, 0.3575403115985427, 0.059971164778197306, -0.24429237343705812, -0.4353075657692407, -0.5257563112596455, -0.5821805553331476, -0.612328979995644, -0.6149044825992878, -0.590386023346789, -0.5407721300638251, -0.4694116740174561, -0.38057377406616766, -0.2791909270174191, -0.17038702493613123, -0.05923991332927159, 0.04961177280076612, 0.15210772283657192, 0.24500420525081967, 0.32588522361686323, 0.393227278030416, 0.44630268259976713, 0.48510229098762103, 0.5101849591807461, 0.5225187198663379, 0.5233405492894931, 0.5139802360037358, 0.4957823640125225, 0.46995982151890825, 0.4376033654625937, 0.39958309878320986, 0.35664143899203005, 0.3093324255943095, 0.258171875383546, 0.2035855380029865, 0.1460820575274564, 0.08617653262018798, 0.02455821039290118, -0.03805608845493769, -0.08967294078450205, -0.03036431727818112, 0.07063070765676027, 0.06367227819411414, 0.03538209229648204, 0.01518887627043064, 0.0011540307609136935, -0.007746640971997842, -0.012602516824394838, -0.014912196790153986, -0.016280030821677727, -0.018503686990298363, -0.023233302512856824, -0.03202243753997136, -0.04601310487999477, -0.06598477404774883, -0.09211569488591298, -0.12406580727200556, -0.160849962938018, -0.20097962829071303, -0.24239674918016263, -0.2768159776552075, -0.2788264335855377, -0.3009115945447558, -0.340660171704231, -0.39027668861627074, -0.42578534783460675, -0.4460997134158253, -0.45116578173870003, -0.44108494783028185, -0.4166230201153289, -0.3792765375049294, -0.33107403060662977, -0.2745845348302711, -0.21264320152824823, -0.14832898521196403, -0.08465833829972857, -0.024564304913059498, 0.029396533928069735, 0.07503604977852929, 0.11077874412098809, 0.1356065963989641, 0.14923213466801688, 0.15198659017546656, 0.14491200611310878, 0.1295901991208527, 0.10815526250983754, 0.0830691057598002, 0.05706824156657653, 0.032903835572611895, 0.013251226120651105, 0.0004469600411973751, -0.003597630172656796, 0.0023808026122049686, 0.0189610860654994, 0.045897750734920084, 0.08217113310742352, 0.1259583692265953, 0.17478447790438967, 0.22560535610912025, 0.2750447766000488, 0.3195607822746136, 0.3557263479817172, 0.38042665988033275, 0.3911241346481289, 0.38602260901685903, 0.3642548045095866, 0.3259533592586018, 0.2723118443756185, 0.2055221809054837, 0.1286880926295968, 0.045621972093870644, -0.039371216151864896, -0.12180255948288465, -0.19728443171407228, -0.2618701182187837, -0.3123158400122268, -0.3463557421530856, -0.36284285313654463, -0.36187520677624674, -0.3447487101449762, -0.3138974666173595, -0.2726534218920109, -0.22503270538542774, -0.17536682119022307, -0.12802776295625073, -0.08704161178315073, -0.05586868105501008, -0.03710999749863575, -0.0324329680725155, -0.04243563929184058, -0.0667475973744418, -0.10405096371546296, -0.1523215020011679, -0.20895100679444978, -0.27105281410296467, -0.33560742993273873, -0.3997500028013885, -0.46087010246215243, -0.5168191655888279, -0.5659241713278913, -0.6070868576702333, -0.6397059863500401, -0.6636752252249938, -0.6792393329493738, -0.6869249047529973, -0.6873741240683593, -0.6812548412912092, -0.6691163657487706, -0.6513197888807056, -0.6279452729548662, -0.5987657115539271, -0.5632142779678215, -0.519638036094662, -0.41642351041994274, -0.24633540702291867, -0.13956183059334926, -0.06836138811643444, -0.0008101318305353544, 0.07781061336068085, 0.166907304051076, 0.26528177849854373, 0.3710485072874228, 0.48160174960457347, 0.5935832220659751, 0.7029119341417314, 0.8048734336008998, 0.8942755219477636, 0.9657243677739444, 1.0139341497387875, 1.0341853111668247, 1.022722543796422, 0.9772768275761345, 0.8973812653567168, 0.7847511271604541, 0.644287921121244, 0.49281617889674756, 0.34655514466541204, 0.19831925188562494, -0.0768699021833239, -0.8045796878672018, -1.7392979365370511, -2.219053172151627, -2.1982798854639682, -1.9881412888616534, -1.7199247709661325, -1.4104828431893601, -1.0691969192529136, -0.7117306990013414, -0.3536831690054534, -0.008690454281326865, 0.3083874893918299, 0.5850969670344286, 0.8114438510806066, 0.980320308456534, 1.0879099671865005, 1.1336758495239718, 1.1203625117286011, 1.0540985422668487, 0.949302613360191, 0.8250903085933569, 0.6619786654176764, 0.3936564341553275, 0.05686588640302004, -0.2717810027629812, -0.4874971642685506, -0.5876950261780229, -0.6462922839555114, -0.6785283595841278, -0.6831654310411772, -0.6606466681300103, -0.6129783530882875, -0.5433970023098151, -0.456122383312227, -0.35592402890331876, -0.24785039544705167, -0.13681864864704174, -0.027410748741499624, 0.07641944178503923, 0.171432192718032, 0.2552339852114951, 0.3262433649648928, 0.3836706402885852, 0.4274015845741541, 0.4578708440100989, 0.47592255400816175, 0.48263884135090507, 0.4792353018975932, 0.4668989695154302, 0.4467577660825839, 0.41975952416198936, 0.3867270651563519, 0.34828134053267323, 0.3049680797228893, 0.2572040109439344, 0.2054453368949849, 0.15012357446293123, 0.0918242443103221, 0.031180336586771773, -0.030921464793760567, -0.06307988425766187, 0.026615699025481554, 0.06558658089497049, 0.03975623106226189, 0.01664087668332992, 0.00021470905788034678, -0.010385053876563077, -0.015960771232545357, -0.01778107396431794, -0.017316437496126214, -0.01637959025058988, -0.016756843799523136, -0.020293175518534934, -0.02852023950588478, -0.042718986209894005, -0.0636019594999695, -0.09139336425222222, -0.125616960393641, -0.16522839399605083, -0.20853609876239787, -0.2517775104660771, -0.2739422474305204, -0.23835659372730955, -0.22087818939817172, -0.2688368015652083, -0.3207080444020196, -0.35793604361331166, -0.37977401184117365, -0.38633189387692823, -0.37774144056129844, -0.35492192470165485, -0.3194292795249001, -0.2734570133918046, -0.21959442097538773, -0.16078394675345598, -0.10003269146471039, -0.040365688130210575, 0.015459491540579462, 0.06496975968717056, 0.10621949260984287, 0.13775848471321328, 0.15881051291019294, 0.1691866981550425, 0.16939241893189771, 0.16048831628367333, 0.14412716035131584, 0.1223678961330415, 0.0976501221235686, 0.07257081586141045, 0.049812323876384346, 0.0319006551077079, 0.02111455123552286, 0.019256595517845865, 0.0275816440706258, 0.04662053632802654, 0.07616873443298822, 0.11519983019990754, 0.16194470980182163, 0.21391552024535, 0.26808278137802155, 0.32100349035410525, 0.3690745374870237, 0.4087290940852284, 0.43671811147914474, 0.4503158815520736, 0.44756525555169, 0.42742345638576773, 0.38990658332054406, 0.33611495344362785, 0.2682313113213084, 0.189392535150545, 0.10353281436601058, 0.015111998066167143, -0.07115693742836848, -0.15066364717770098, -0.21920404651158565, -0.27332349179440074, -0.3105431908873344, -0.3295869549885122, -0.330435928101938, -0.3143687783650162, -0.28380420602331946, -0.24215187729355048, -0.19347853635502665, -0.14224138807523135, -0.0928792333900228, -0.04954626918055882, -0.015752592905557528, 0.005788825239819273, 0.013378396445976382, 0.006309731927483853, -0.015085471063253308, -0.049619747187438, -0.095338440885123, -0.14979840483121087, -0.21021484307771932, -0.27375168500377, -0.3376506976661675, -0.39946278936503976, -0.4571080212307663, -0.5090085847792345, -0.5540618766136847, -0.5916702182391012, -0.6216397394602335, -0.6441302492557668, -0.6595137845172214, -0.6682850998167176, -0.6709212010519501, -0.6677952229086275, -0.6590708760021062, -0.6446511086250126, -0.6241242310792359, -0.5967615619299664, -0.5606673024052906, -0.44436343436463943, -0.24370659531346384, -0.12562395067685372, -0.05035681173807305, 0.01978501648428832, 0.1008567332481185, 0.19225485229825878, 0.2927549963872913, 0.4004844129496252, 0.512824866802081, 0.6264202623491784, 0.7371572412226968, 0.8402707158005995, 0.9304859668990915, 1.002282156164691, 1.0502432566672812, 1.0694702320502962, 1.0560847075364919, 1.007664324537565, 0.9237223379294779, 0.806653637284696, 0.67375267001889, 0.5639577032254426, 0.3825900745368118, 0.03141424083720068, -0.7347004236255961, -1.7473745963956553, -2.3868980787217007, -2.473083117858879, -2.3315410615891974, -2.1173556679078853, -1.8470703291225146, -1.5310423487952995, -1.1823388075733217, -0.8155987525108124, -0.44665098181103957, -0.09120707258068705, 0.23594352871924062, 0.5218188471164629, 0.755865235478729, 0.9305546508708691, 1.0416042548426598, 1.0881865783247957, 1.0727229216592373, 1.0007252602207568, 0.8807862549759322, 0.7308635175455171, 0.5934494908702552, 0.38101781813400715, 0.06545658712735225, -0.2775003805968055, -0.5208892123484232, -0.6329744655008605, -0.6942469134887754, -0.7292608279241217, -0.7367092239399353, -0.7170604991754486, -0.6722572015402335, -0.6054956744971562, -0.5208564529831046, -0.42301871893618603, -0.3168589573883187, -0.20719650069665363, -0.09846527667260485, 0.005442046324124483, 0.10136510972768598, 0.186909712869193, 0.2604872767637847, 0.3212462975154837, 0.3689884506824175, 0.40404648276845556, 0.4271299980601828, 0.43920797971464776, 0.4413407954581139, 0.4346159086784631, 0.4200078815791013, 0.3983934478458293, 0.37045592660249227, 0.3367796891108803, 0.29778894073855344, 0.2539006102120709, 0.20546848765807457, 0.1529638583511197, 0.0968897773612154, 0.03796256331086667, -0.022356167056586607, -0.032308807103507586, 0.04553852366010247, 0.0415272024108444, 0.016281690841431384, -0.002483339378299476, -0.015036550891316836, -0.02182338153804153, -0.023785062330008877, -0.022137617180717384, -0.018569678368071663, -0.014867514056249309, -0.01304121372023559, -0.014915562087347567, -0.02221261639271166, -0.03616709569758392, -0.05760513457244709, -0.08664707486434242, -0.12282527563970724, -0.1649213438021535, -0.2111515203009917, -0.25123667123432014, -0.23606667313735752, -0.16727380251056, -0.14435722125181805, -0.19991627678214918, -0.2537463312896966, -0.29211625217685633, -0.3151340040776551, -0.3228388752103202, -0.31547903614654693, -0.2940348321169681, -0.26022098814981387, -0.21628564167273545, -0.1649493667498989, -0.10913842723065259, -0.051907066098001664, 0.003840088166771838, 0.055398437510340015, 0.1005050808710326, 0.1373355513722202, 0.16468369761717144, 0.1818992943530014, 0.18900055248128173, 0.18656035060276063, 0.17575673122088548, 0.15821807041451952, 0.13601922201974304, 0.1114936313001268, 0.08718366700666713, 0.06562888497185937, 0.04928506707203406, 0.040306426844233134, 0.04045921996118573, 0.05092804895713843, 0.07226044304750068, 0.10423516435017621, 0.14587570687598173, 0.19541408252292292, 0.2503989476257509, 0.3077695568484198, 0.36405949074462596, 0.4155664508321828, 0.45862198792197306, 0.4898120042034968, 0.5062557567169104, 0.5058090904765213, 0.48728156634034336, 0.4505482843245352, 0.3966395002787979, 0.3277031243920716, 0.24692981886512966, 0.1583471685603004, 0.06659140602478586, -0.0234319783428254, -0.10686356479210524, -0.17927640767719621, -0.23697022097718978, -0.2772905637212846, -0.2987865202483935, -0.3013627577608604, -0.2862240473073854, -0.255818519181672, -0.2135675785724822, -0.1636401704995709, -0.11054765355694451, -0.05885666782320942, -0.01277686337212458, 0.024059819394395054, 0.04889886465818938, 0.059926446529051436, 0.05639485511055842, 0.03850907351219979, 0.007390678867971623, -0.035163271450771916, -0.08681139002834826, -0.14495305172308814, -0.20687364916587292, -0.2699943078005207, -0.3319688544454671, -0.3908477025141357, -0.4450969556736517, -0.4936607795013783, -0.5359042856573035, -0.5715878848002145, -0.600757976791571, -0.6236661666406658, -0.6406430097240179, -0.6520027173570693, -0.6579342034519753, -0.6584273733468606, -0.6532040683767715, -0.6416886919047364, -0.6229859700839686, -0.5950666807923994, -0.4626128868115593, -0.2335770916394342, -0.11046036037808271, -0.03407289920624379, 0.037719976159126034, 0.12029075296225145, 0.21299184123676973, 0.3146216814934899, 0.4232875102748217, 0.5364058999045582, 0.650599506867934, 0.7617621203050042, 0.8650731317315028, 0.9552011044447699, 1.0265194823361696, 1.073488081507195, 1.0910789381054933, 1.0752708565734395, 1.0235757901452693, 0.9357142408608681, 0.8241651436562965, 0.747965158163677, 0.5899711771984393, 0.2085276689983555, -0.6178857059431415, -1.679563201782007, -2.401366018586356, -2.625836829836344, -2.5829123626829675, -2.436265962368209, -2.2227902747383492, -1.9498722652451974, -1.6283125429241974, -1.2717085846407077, -0.8955859440611, -0.516436604934694, -0.15072458388684318, 0.1861186627273863, 0.4805200850437821, 0.7215486040717547, 0.9013647389387818, 1.0156238420941919, 1.0634668164044725, 1.0475049435068216, 0.9733901240233918, 0.8494998373343312, 0.6877531667635177, 0.5169571946309848, 0.34113747932961713, 0.0544649136364912, -0.28253668562627077, -0.533986339219712, -0.6576315704005569, -0.7236405546145326, -0.762188805414648, -0.7732982465821445, -0.7574271846226033, -0.71649714482162, -0.653606952490871, -0.5727497554931684, -0.4784442219395002, -0.37544512172151023, -0.26840071002447186, -0.16163605792279245, -0.05891610792007551, 0.036656493808720825, 0.12273770690823582, 0.1977305401961793, 0.26074980608758125, 0.31153201414734166, 0.3503092078342096, 0.3776935768633898, 0.39451393177466887, 0.4017280432777417, 0.40026952547856265, 0.3910255925058195, 0.3747224666959177, 0.3519827309558625, 0.3232516741533784, 0.288924943193237, 0.24929507396970507, 0.20472403538640283, 0.15557567510090564, 0.10240340370546264, 0.045815373672500215, -0.00938849818322307, -0.003747283204956098, 0.03551701845648125, 0.015258909612220428, -0.00562612799592932, -0.020272271128765507, -0.02870865511630516, -0.031506246748419287, -0.029528479836102184, -0.024207625411101663, -0.017184659443339356, -0.010482321703686348, -0.006081653598152825, -0.006032681235462745, -0.012021608217807733, -0.02545357162941375, -0.04707874590841321, -0.07709421998058374, -0.11489254726948683, -0.15922377821109812, -0.20810242417829983, -0.24114745510821844, -0.1734275759526378, -0.07107735103539081, -0.07078474438159077, -0.13656609476693404, -0.192036778425539, -0.23085486269959254, -0.25473612870151463, -0.26333989932981794, -0.25696152083523494, -0.23671718964142396, -0.2043946096375806, -0.16238223055536283, -0.11343163474526352, -0.06054897059584574, -0.006726822130826315, 0.04514663314144307, 0.09252986652112849, 0.1332623298190092, 0.1657461874877313, 0.18891261992896807, 0.20233523997210337, 0.2061387920469176, 0.2010537115860025, 0.18828492516161277, 0.16952005688581906, 0.1467710059647861, 0.12234347063132922, 0.09865703681982296, 0.0781815514021611, 0.06324226529492694, 0.055935340013277934, 0.057935134507908326, 0.07041443437815298, 0.09388481662587767, 0.1281583949206604, 0.1722592425038596, 0.2244634575764799, 0.28231233460930394, 0.3427520912345541, 0.4022567373949628, 0.4570603715325632, 0.5033650607234037, 0.5376253021957393, 0.5567837246912857, 0.5585401352966954, 0.5415370669924777, 0.505535844103381, 0.4514750846386739, 0.38149142039377115, 0.2988023149054375, 0.20755074457714429, 0.11251578215620528, 0.018819823157930404, -0.068468073338813, -0.1446665641390701, -0.20587343608214548, -0.24921579637793956, -0.2731145511942854, -0.2773417106967231, -0.2630772667660528, -0.2327300849847389, -0.18978644169730918, -0.13844017364133032, -0.0833166450660281, -0.02903014377315083, 0.02008524626438435, 0.060353418121864344, 0.08890004566304022, 0.10386913415420818, 0.10438725815864736, 0.09059884683442743, 0.06347480111802373, 0.024716027078722114, -0.023516850683483526, -0.07875002337534287, -0.13845912388179737, -0.20019263785458907, -0.2617641319384081, -0.3213106001870587, -0.3773874582939296, -0.42895307108448844, -0.47537100210371364, -0.5163359978908986, -0.5518089431369058, -0.5819126379798893, -0.6068355928923843, -0.6267289431490362, -0.6416160399755046, -0.6513156289333839, -0.6553861524901752, -0.6530878943190075, -0.6433783590110114, -0.6242258938201246, -0.4711401870441172, -0.21642626016215694, -0.09604337990318257, -0.02107592268352043, 0.05152573717940534, 0.13470584793786067, 0.22783974110833327, 0.32969177496400803, 0.4384206309315246, 0.5514207900340864, 0.6653625587740031, 0.7761003032480431, 0.878817287953563, 0.9680998529248939, 1.0382620429561946, 1.0836430619360726, 1.0990989294014941, 1.0805635524058594, 1.0254473665138253, 0.9382774938632004, 0.880577105258979, 0.7999810687924578, 0.4454173839358342, -0.4172569456344819, -1.553888978037155, -2.3413647484568028, -2.6759164323296307, -2.7281327375286244, -2.659116579921988, -2.5162451946137185, -2.303156291435265, -2.027487667925106, -1.70051112341742, -1.3363996764053523, -0.9513600028318807, -0.5626013488547157, -0.18726789638468944, 0.15856156611444838, 0.4608262842785793, 0.7081745474713572, 0.8925730334661246, 1.0095334379370238, 1.0582819391598903, 1.0415073188705253, 0.9651220011585424, 0.8376598197875582, 0.6704060633045912, 0.4830703736333626, 0.3036276394226616, 0.0350707472124423, -0.29292545901188927, -0.5369325269796983, -0.6627986997332238, -0.7333946304646037, -0.7762691067488721, -0.7918969960712099, -0.7807368449120853, -0.7446643973265878, -0.6867080249265545, -0.6107323122967436, -0.5211293482892749, -0.42248198761928535, -0.31929773834044894, -0.21574145101314635, -0.11546868518573206, -0.021479989291496082, 0.06392923789185456, 0.13918341209016027, 0.20338027764047517, 0.25620048654876904, 0.29780893745719794, 0.32870562094404043, 0.3496273920284789, 0.36138930807059033, 0.36483199854943305, 0.36069027553708555, 0.3496127154895534, 0.33207211458430574, 0.30846091584901014, 0.27903357249132377, 0.2440612693818336, 0.2037771060179292, 0.15856220528424458, 0.10885643843818826, 0.05534060271059271, 0.0033403735868580142, 0.012671008672479722, 0.013068717887830594, -0.008330360041892249, -0.024903595858303262, -0.03524369480774636, -0.039475135501926495, -0.03804806185037357, -0.03203215503522472, -0.02278904217829525, -0.012195286073640732, -0.0022274235201262815, 0.004890937568260978, 0.007146915844111201, 0.0026430769356822204, -0.009968201226770335, -0.03157394499154487, -0.06226393698221511, -0.10146419280427477, -0.14775556623901842, -0.19712376357562444, -0.2097830511413612, -0.08314787016302194, 0.026997739638495055, -0.011790376461297214, -0.08188829397774011, -0.1370916421202315, -0.17634475027560814, -0.20084849791132076, -0.21011633865909785, -0.20454346942321022, -0.18532097793565683, -0.15436974040401497, -0.11414303057617481, -0.06749411437121555, -0.017422758404468164, 0.033058636843512956, 0.08116918515539945, 0.12444045064222387, 0.16090380687917782, 0.18909418153607643, 0.2081649390055511, 0.2178216771739139, 0.21837515660793697, 0.2106290376295562, 0.19589022836103287, 0.17583213822282662, 0.1524752832885481, 0.12803524661921806, 0.10487637386004023, 0.08534499022458641, 0.07169743592171218, 0.0659228293831462, 0.06965715920569582, 0.08401435541704538, 0.10951454953705686, 0.1459576417757633, 0.19240503596654523, 0.2471348845141348, 0.3077132424433784, 0.3710579838311321, 0.43361451617232705, 0.49152683925493834, 0.5408993811896359, 0.5780367379234135, 0.5997373287088572, 0.6035304529749115, 0.5879226145292802, 0.5525451947253432, 0.4982728577795379, 0.42720784868637063, 0.34261884644045715, 0.24873124290965842, 0.15049092801990183, 0.0531943860742663, -0.03785105024161162, -0.11775995175760334, -0.18238914374367576, -0.22870190181247763, -0.2549372070734428, -0.2607910170594372, -0.24734902823277105, -0.2170392133977046, -0.1733304397851021, -0.12050356261273043, -0.0632091745575627, -0.0061779110937716375, 0.046219755068515944, 0.09018690839127919, 0.12281121767407077, 0.14211180926263767, 0.14716280036438123, 0.13796440950416322, 0.11540187048061679, 0.08100180044988647, 0.036801665502457226, -0.014918918518956659, -0.07177612415528767, -0.13150002008998296, -0.1920243317702166, -0.25161410503633785, -0.308887293843231, -0.3628471739034982, -0.4128431014307372, -0.45852648192007806, -0.49977281161020937, -0.5365923339365795, -0.5690403643714967, -0.5971176752974721, -0.6206936547626682, -0.6394282108954243, -0.6527240158030541, -0.659692825362626, -0.6591422204876931, -0.6492968165387918, -0.47041881067540814, -0.19232489817576415, -0.08389309396170397, -0.01243312054041823, 0.060197481908396355, 0.14324253071213278, 0.2360279532525862, 0.3373741596235593, 0.44540907942681507, 0.5575992428066847, 0.6705814250109228, 0.7802587189820933, 0.8817476907662467, 0.9696419769746001, 1.0381564216556711, 1.0815290869525729, 1.094578690319885, 1.074039544531324, 1.015883529437044, 0.9565302944805563, 0.9669884128961259, 0.715046484781455, -0.1445359104010815, -1.3744285768496542, -2.2456946654646304, -2.634554064179743, -2.757966785716266, -2.771860513140205, -2.7093034461780787, -2.5696869221412335, -2.356697583390946, -2.0782686832743122, -1.74607866536636, -1.374871264164625, -0.9814818853013465, -0.5837851476226357, -0.19957900675602858, 0.1544970412278417, 0.46388237583585834, 0.716909893539948, 0.9052953986062153, 1.024516290047492, 1.073785732899284, 1.055974251340607, 0.9771288024197551, 0.8460549007737841, 0.6739579335748411, 0.4777826569586403, 0.28518379019565465, 0.02832890803066679, -0.28613891014363535, -0.5223937152881408, -0.6485495173479796, -0.7237325926837075, -0.771696807606367, -0.7926583244312955, -0.78708170634994, -0.7567962867814915, -0.7047479153868217, -0.6346864931056464, -0.5508530365262203, -0.45767670048966824, -0.3594929144067862, -0.26031904854306465, -0.1636694359998927, -0.07244283190285472, 0.011139446031927847, 0.08553855493718121, 0.14984758181315616, 0.20372230025651827, 0.2472545607782548, 0.28087699102094366, 0.30520693679916544, 0.32097344919788107, 0.3288734650306786, 0.3295571235684598, 0.3235210705832383, 0.31116817877554404, 0.29273979724656485, 0.2684444334717604, 0.2384084534601305, 0.20285162572552196, 0.16202119774913282, 0.11638516595462267, 0.06649841667064571, 0.012224747617631593, 0.013463805621408476, -0.010079405074462144, -0.02819996722082596, -0.04043353483008705, -0.04646673228647025, -0.04632927124614561, -0.040664061078321545, -0.030449858163692056, -0.017273802482700606, -0.002945004467171941, 0.01031547675675304, 0.020332625620445022, 0.024859471752972095, 0.022049601091472804, 0.010372776830278152, -0.010975493746229192, -0.042178976058010687, -0.08252839362410791, -0.1305945821378689, -0.17120394097110525, -0.12761090606181114, 0.022746849752581788, 0.09216853685432724, 0.03413249512711847, -0.03600567383839515, -0.09076502016200383, -0.13037486016863786, -0.15526648425950818, -0.16501024938542486, -0.16006427874382956, -0.14173127848040235, -0.11201518059576276, -0.07347891578854115, -0.029015279345924183, 0.018325804037460314, 0.06558158690110782, 0.1100099386560014, 0.14928687404065016, 0.1815583609947839, 0.2055616859569759, 0.22059219984537426, 0.2265543550241072, 0.22386861092929872, 0.21347683141440843, 0.19672066447940284, 0.17532318332397412, 0.15125721913027235, 0.12671025962901217, 0.10394430377003494, 0.08523977795882876, 0.07274221181934903, 0.06838373210061177, 0.07372136723815603, 0.08985068640160865, 0.11725945067754595, 0.1557669103524968, 0.20443202342416855, 0.2615609724582897, 0.32470963380241225, 0.3907925718521623, 0.4562000610768333, 0.5170138066318706, 0.5692234272164076, 0.6090152021158808, 0.6330325790373745, 0.6386678143017535, 0.6242808586082704, 0.5894052142791342, 0.5348342090670493, 0.46266412281862745, 0.3761852760094002, 0.27973102863945076, 0.17837054549681186, 0.07760138346176415, -0.017086403452108545, -0.10056826416755937, -0.1685232896021116, -0.21770133187408858, -0.2462258682948737, -0.2536489853519308, -0.24102918589819478, -0.21072851763479994, -0.16626663302282374, -0.11191487425155033, -0.052420849897091504, 0.0074681054670704405, 0.06326748596997556, 0.11115443501625011, 0.14809553911884743, 0.17207022715599063, 0.1820156891391722, 0.17786195579725295, 0.16032908967834736, 0.13083261966951376, 0.09121832044678424, 0.04362389856600579, -0.009761556053183185, -0.0668099759817311, -0.12561499728974646, -0.18454504873749134, -0.2423080478329096, -0.2979440126431827, -0.3508060084631026, -0.4005091770898588, -0.446854685705218, -0.4897581134925062, -0.5291484399418689, -0.5648979532223954, -0.5967280599084805, -0.6241578424450003, -0.6464435963601911, -0.6625551003881451, -0.6711644524856908, -0.6726330584822513, -0.45001287976512216, -0.15914347533741235, -0.07507461381120883, -0.008787551862271314, 0.06324072995198371, 0.1454875433933367, 0.23733229731973893, 0.3375532246196382, 0.44436025265029144, 0.555184820598587, 0.6667507521540266, 0.7749036731532044, 0.8747950213130515, 0.9611169078871598, 1.0277455936938935, 1.0682539383777296, 1.0783528051169782, 1.0604975987096026, 1.0022610197323374, 1.0042152646372955, 0.8762377896280658, 0.11590586888071108, -1.1493901521282774, -2.10142943572035, -2.4986416640847704, -2.6699564509795373, -2.766669492913782, -2.7891039304578227, -2.7322814555512176, -2.595459712506571, -2.382438887204218, -2.101371670628751, -1.7643592907902432, -1.3866399953410777, -0.9856460763162636, -0.5798580761194554, -0.18765852903637636, 0.17377717177754537, 0.4894792669879635, 0.7474426521055708, 0.939229723927931, 1.060211149943699, 1.1096821738997478, 1.0905824289045714, 1.0091834589472803, 0.8744284189607034, 0.6975979399283889, 0.49394397849745353, 0.2906083353343334, 0.0389701239618816, -0.26112245186215066, -0.4895384982296971, -0.6159714884379337, -0.6960676817454328, -0.74977423212425, -0.7767867567676996, -0.7775467394123261, -0.7538520733576615, -0.7085569455838048, -0.6452979425939693, -0.5681676582492994, -0.48143292780444824, -0.3892614401410226, -0.29550854043410624, -0.2035446119770885, -0.11615135766865325, -0.035460864352632626, 0.03703462604886454, 0.1004527888676332, 0.15442291676732278, 0.19900618628413547, 0.2345498144023832, 0.2616052392981061, 0.28077763962733293, 0.2926839041952496, 0.29782984309718596, 0.29663451494121684, 0.2893480426769619, 0.27614859863581653, 0.2570909666396668, 0.23226292392837777, 0.20173535060658576, 0.16575187647424805, 0.12464168124301356, 0.07877907169393694, 0.017461211104766505, -0.0011337793702876908, -0.029749891757587577, -0.04382439972768992, -0.051719581460949016, -0.053337885999868107, -0.04888318968448235, -0.03889273269383686, -0.02455623829993847, -0.007372969273719221, 0.010612633974230512, 0.02724590938852378, 0.040111528055175594, 0.04701848835158573, 0.04590947444880744, 0.035323408931281386, 0.014313065286794768, -0.017198581257876988, -0.05855002617185212, -0.10815750802548596, -0.13413747635275808, -0.018623577347593123, 0.13999695921131172, 0.1469442432493242, 0.06929888193917488, -0.0012718391828450137, -0.05448912913372661, -0.09420294481196434, -0.1192642807309845, -0.1292855490714757, -0.12480494813038012, -0.10721157717341212, -0.07861296467483725, -0.041644317207813364, 0.0007311674581871319, 0.04546011106008363, 0.0895847427103762, 0.13045304327087648, 0.16582785975152087, 0.1940221040897093, 0.21390982558671287, 0.22498056274891232, 0.22727138038629086, 0.22136537880700652, 0.20828263869560149, 0.18945427894030487, 0.16660314412550348, 0.141710233790038, 0.11689474318779824, 0.09437030693901693, 0.07631716301658242, 0.06481787027277552, 0.06171440995386068, 0.06852310545073914, 0.08628612349190456, 0.11548689065781215, 0.15592749214325563, 0.20668513678611555, 0.2660596741598873, 0.33161548556098897, 0.40023636441543564, 0.46827949472234076, 0.5317466690777586, 0.5865410103424411, 0.628721578025031, 0.6548106524223583, 0.6620576938435709, 0.6487117011888968, 0.6141974772452201, 0.5592602462336185, 0.48596664216066654, 0.3976577026838686, 0.29873375210194153, 0.1944145287440331, 0.0903406190600089, -0.00778333527540731, -0.0946643456694054, -0.16575924292027988, -0.21768158926604375, -0.2483756769310803, -0.25732821313473053, -0.24548578013090427, -0.21522240275862758, -0.17000667917868784, -0.11417902469276164, -0.052473569499758455, 0.010263875543292666, 0.06954416016467269, 0.1214326448517764, 0.1628754323932995, 0.19172498552091088, 0.20686941412195914, 0.20808562233376016, 0.1960025871479072, 0.1718526273253902, 0.13734988988852237, 0.09443332331793997, 0.045142040691276364, -0.008578318327971957, -0.06495417084419142, -0.12248352440670196, -0.17995652959737551, -0.2364649824480889, -0.29137654672446356, -0.3442771042799029, -0.3949186574486774, -0.4431239137698775, -0.48872751820613747, -0.5314730964430234, -0.5709638743783421, -0.6065803727560688, -0.6374510865659335, -0.6624140436680559, -0.6797856231378709, -0.6789283240661597, -0.4071881742545571, -0.13231492106375242, -0.07054689342322185, -0.010344032782361623, 0.060515818468472204, 0.14148362691547156, 0.23189162956618325, 0.33059506547823503, 0.43577250119469824, 0.544934865903759, 0.6545397309222558, 0.7604645171385158, 0.8581534668220456, 0.9437082509783288, 1.0082004926134154, 1.041080151014853, 1.0375917564153312, 0.97747475576789, 0.8550983295794818, 0.7115166589278186, 0.24449131341596164, -0.7630399111273283, -1.7437900816081626, -2.225800961446545, -2.468670148630432, -2.642670365104438, -2.749223898897883, -2.779270059906957, -2.727550819597959, -2.593269348390937, -2.380260951922394, -2.0969329581086393, -1.7557159929076027, -1.372330151692207, -0.9647144982048363, -0.5519033663408468, -0.1527994245440638, 0.2149619412424748, 0.5360210276987791, 0.7981185366832575, 0.9926276385532216, 1.1148939723832187, 1.1642077807578741, 1.143655292341721, 1.0596099105095513, 0.921230427866087, 0.7397943688132234, 0.5295370372469135, 0.3150441449238093, 0.06498624931959807, -0.2176139562689059, -0.4391110628185446, -0.5673313605974339, -0.6527632703635042, -0.7127310693536879, -0.7463324228187176, -0.7540241646014918, -0.7375393492074549, -0.6996656500865788, -0.6439104190803571, -0.5742321268477895, -0.494728091702493, -0.4094037102628878, -0.3219442349172148, -0.23557564519719953, -0.15294626669649958, -0.07609713520968242, -0.006445592039100667, 0.05514809556249034, 0.10832735139088534, 0.15310995747928313, 0.18980910892572922, 0.21888250207503823, 0.24087209095981166, 0.2562682046259166, 0.26550225716665565, 0.26884798652770137, 0.2664842695808751, 0.2584347347731111, 0.24469789258312868, 0.2252047757880442, 0.19999642197051415, 0.16916374683053803, 0.13304579940021455, 0.08972172800673306, 0.02241538602252824, -0.02402931325501001, -0.04529029917941951, -0.05503766819925637, -0.05853595805344369, -0.05584248668832359, -0.04704428665660032, -0.032874054502934236, -0.014418350494652898, 0.00660362624984856, 0.02823307452468038, 0.048081659164100454, 0.06380328649211986, 0.07298496585909664, 0.0736372117287889, 0.06412358127887707, 0.04358516403449575, 0.011847951009782642, -0.030301439660668228, -0.07183422789759897, -0.043739410312485294, 0.11867010832233582, 0.2197478852661745, 0.17015591848953404, 0.0911338669090398, 0.023840023662884402, -0.028977892642156444, -0.06853045979719452, -0.09352161769806688, -0.10360864827748051, -0.09940793067488496, -0.08239455052125888, -0.05476669712492077, -0.019238111688211434, 0.021181010275796885, 0.06341402871487267, 0.10453842127118274, 0.1419567020798952, 0.1735521908196986, 0.1977564087423176, 0.21361590722757573, 0.2207603491401493, 0.21939829262003085, 0.21022386027679002, 0.19437897490422806, 0.173341010121559, 0.14888085161495757, 0.12295435154147061, 0.09766232758754567, 0.07514365032310932, 0.05752473804225633, 0.04680037513872648, 0.04476010045124634, 0.05285182747294126, 0.07209088574763545, 0.10292463618905989, 0.1451550754832045, 0.19784481880192883, 0.2593002693044095, 0.3270657479346455, 0.39800964546168105, 0.46843659685171257, 0.5342913708841914, 0.5913814552924048, 0.6356702698566501, 0.6635561765418303, 0.6721831298243734, 0.6596845603016694, 0.6254143388561801, 0.5700534037665106, 0.4956727216927699, 0.405628804486867, 0.30441879363179014, 0.1973561770488237, 0.09025507790677567, -0.011040598165944715, -0.10102970320425442, -0.1750337289892272, -0.22947209251747402, -0.26220099748643655, -0.27256050935666654, -0.26147576119280114, -0.23122910578851785, -0.1853270674754275, -0.12806032571358283, -0.06423888356787266, 0.0013162934945265548, 0.06402000927641804, 0.1199435176489363, 0.16592017239402868, 0.19978066679131867, 0.22027562806989742, 0.22711842580344577, 0.22076894676258796, 0.20234914942570104, 0.17337939150208026, 0.13565468811496828, 0.0910200501710614, 0.041273245035649886, -0.011972312998947743, -0.0673320798160999, -0.12369246237268605, -0.18020734242404046, -0.2362633313114193, -0.2914460905684937, -0.3454563226205636, -0.3980641194116874, -0.44900432998387885, -0.49793341070007013, -0.5443317856803525, -0.5874736101508109, -0.6263614901227506, -0.6597150860291627, -0.6854162851353891, -0.6566200280778212, -0.35911526445618946, -0.12377444672964621, -0.07093345695241027, -0.01705347918776212, 0.05223151474610255, 0.13154445753099075, 0.22025217611466275, 0.3170587742626587, 0.4205225245180664, 0.5284407941672988, 0.6337444762396274, 0.7269655436380482, 0.8006465359799044, 0.8552021017923721, 0.8852707618504816, 0.8703014255746346, 0.7816200314873178, 0.6082242734855257, 0.4624784320547821, 0.35084811181114794, -0.1692589330514629, -1.1044926903291827, -1.8041214939074672, -2.1654576318845162, -2.4062093464438554, -2.590426901855569, -2.7056704026088827, -2.7425040406435635, -2.6954793948491904, -2.5636749142909068, -2.3510131329714934, -2.0660551730292944, -1.7215667366867322, -1.3336354500924532, -0.9206714870536219, -0.502160359645778, -0.09746307073176119, 0.2753900187598628, 0.6007197154058561, 0.8660220199187663, 1.0625479050858369, 1.1855680430059667, 1.2344284296493866, 1.2122631587980495, 1.1256066964612845, 0.9837078777477206, 0.7979532041276265, 0.5818321324060323, 0.35660853372360624, 0.10462088564248972, -0.1593986302938717, -0.3735332049611815, -0.5055635014431932, -0.5969189236439911, -0.6634353967939575, -0.7039794004597004, -0.7189668600389716, -0.7101112931232194, -0.6800976820467097, -0.6323393370091575, -0.570638897968526, -0.49894992178000397, -0.4210993379036827, -0.34061937958320687, -0.26057229367917767, -0.1834837200983399, -0.11127534327107913, -0.04529821431308356, 0.013648848774709066, 0.06521120292360738, 0.10941302667208408, 0.14651187558109147, 0.17693026087028318, 0.2011109101966584, 0.21948424840085679, 0.23235310752024674, 0.23992214394484712, 0.24222345099099574, 0.2392157290512582, 0.23074085669307642, 0.2166815196943599, 0.1969193426717304, 0.17152606774453538, 0.14066291239842332, 0.09302763651453816, 0.021730739520172904, -0.044055483970609544, -0.05664883425192713, -0.0619233418870051, -0.06117892212793841, -0.05420192201598972, -0.04126234655027261, -0.022982378647287582, -0.0006512797638142942, 0.024113386096525247, 0.04913373725212988, 0.07210756627209225, 0.09046982386406954, 0.1018838161182507, 0.10416907238333084, 0.09577101163292223, 0.07569858262565532, 0.043881762116313006, 0.0010552053515131554, -0.018855216211393744, 0.10126039281554444, 0.25522685184299254, 0.25797913368867276, 0.1796753373090767, 0.10152667870174836, 0.037869111096357155, -0.014393523425899613, -0.05348676211457137, -0.07812760784115325, -0.08803703888755754, -0.08389301526590964, -0.06726680814533603, -0.04043164435878022, -0.006179319454460819, 0.03243752303511016, 0.0723279250965263, 0.110592348804359, 0.14470205384332635, 0.172631920504426, 0.1929501340034478, 0.20483589152120452, 0.20808202237463957, 0.20302648877900142, 0.19050477596018744, 0.1717442589839946, 0.14830714171875803, 0.12198550519354456, 0.09475451148779412, 0.06867784864147786, 0.04586436805835503, 0.02837071893601517, 0.01814224157664568, 0.016897035278565564, 0.026041797148949053, 0.04653992745471802, 0.07881841228547648, 0.12264946339191862, 0.17708967670292797, 0.2404230090356525, 0.3101824841594749, 0.3831990807447565, 0.45574084619155464, 0.5236842298999562, 0.5827678752284147, 0.6288575051955299, 0.6582639665626022, 0.6680258045220762, 0.6562017518052774, 0.6220664256588049, 0.5662757341249187, 0.4908780099962753, 0.39927958478400294, 0.2960228120259316, 0.18654649001167067, 0.07676243927566118, -0.027309768084101904, -0.12005470018145381, -0.19660693218123537, -0.2532947409829598, -0.28781096290898756, -0.2994535015448916, -0.2890243900629841, -0.2588165571799146, -0.21225111389981954, -0.15366926394856373, -0.08782210046065808, -0.019605730597828774, 0.046432975834405976, 0.10627145653117864, 0.15675462570956622, 0.19559543978091654, 0.22151552147195908, 0.23407861462484636, 0.2336654310962185, 0.22121750552259378, 0.19813096142788744, 0.16600632552741246, 0.12654137110667563, 0.08135466736453623, 0.03192108067104815, -0.020507552890138392, -0.07491849186180399, -0.13053107212879134, -0.18677908763529594, -0.24324323416589166, -0.29961788441550397, -0.3556109587555003, -0.4109088619179051, -0.46507034496819255, -0.5174989257816929, -0.5673562505425815, -0.6135481623605639, -0.6546811447953083, -0.688520546377462, -0.6120510676259991, -0.3115161430334279, -0.12723099728684772, -0.07614533433185144, -0.02828288255592426, 0.03992828572385321, 0.11928253117182308, 0.20477789412380787, 0.29297441466210117, 0.3837608422856853, 0.4821022340656711, 0.584193377979652, 0.6656876969459731, 0.7090279932913894, 0.7159972281893232, 0.6926396856091372, 0.6383660800022888, 0.5606579811587658, 0.4731229748262038, 0.4659819046094569, 0.3530870563885973, -0.3030627954934797, -1.184456605050645, -1.7449097458246028, -2.0706239711774197, -2.320943242834005, -2.5139797934800834, -2.6368587532041374, -2.6798634165221475, -2.637303742500519, -2.5082000016547177, -2.2964655923307244, -2.0108389272784546, -1.6642926128230542, -1.2732625493813003, -0.8564953814732856, -0.4338793924325408, -0.025123477111030468, 0.3514055397643219, 0.6797691430458688, 0.9472720829180448, 1.1450401101625154, 1.2683121425528636, 1.3164271935818155, 1.2926051305623592, 1.203435610668743, 1.0583014595210072, 0.8686047076379797, 0.6474222952758648, 0.4123993392254057, 0.15830605279867083, -0.09356193870969776, -0.2988991124897753, -0.434425147563978, -0.5320197963995525, -0.6051692577815873, -0.6527430381215114, -0.6751773048783214, -0.6741101216917205, -0.6521762960433, -0.6126568320288426, -0.5592427424499729, -0.4957166959145196, -0.4257622437437636, -0.3527339255631601, -0.27955622069499597, -0.20860242451817967, -0.1416938556174543, -0.08007650160903523, -0.02450419636478518, 0.02471892537561793, 0.06760364980762645, 0.10440895856393606, 0.13549318228570506, 0.16126415294282204, 0.18204921072655633, 0.19809475360860684, 0.20947496120826692, 0.21615808326570463, 0.2179544569879317, 0.2146480145797085, 0.20596312702112485, 0.19174239289192663, 0.17189611957620343, 0.14643204852566605, 0.08446372370046085, 0.0073400265002847576, -0.05710507054102809, -0.06395952990855136, -0.0650094710417024, -0.06010193873748193, -0.04909250932230336, -0.03214192413351391, -0.010059068070807697, 0.01597787176488019, 0.04415011741330499, 0.07238153273680226, 0.0981634354825065, 0.1190210678461674, 0.13242592666428932, 0.1362836661047666, 0.1288885495500074, 0.1093437254508638, 0.07749166713295619, 0.05390604595204551, 0.1232387023353676, 0.2654172396998815, 0.31403194002468116, 0.25639889678127936, 0.17581242826259436, 0.10318194526695024, 0.040970100831037026, -0.010375671150955945, -0.04865250635237972, -0.07262639228948031, -0.08205482761194105, -0.0777084422224974, -0.061221344847420145, -0.03496299986608231, -0.001776378154575653, 0.0352316545745871, 0.07296693766454948, 0.10854784730485664, 0.13950638568519036, 0.16390896752956383, 0.18043665990115854, 0.1884073666169676, 0.18774578458548724, 0.17893437408179103, 0.1629205704638068, 0.14104360454815534, 0.11492937174864526, 0.08642785140831388, 0.057521477856904646, 0.030278630557755815, 0.006770782972035372, -0.01097601301452511, -0.021075285122164722, -0.021850892920181275, -0.011953969546137033, 0.009543709457804805, 0.04302433711744813, 0.08823685510032231, 0.14420392817480998, 0.20919033832584955, 0.2806934404564059, 0.3555152689785359, 0.42987247550461705, 0.4995930589508868, 0.5603430462633607, 0.6079230848084696, 0.6385589629765476, 0.6492253555455454, 0.6379048491019419, 0.6038364644520664, 0.5476336639349593, 0.4713620557094229, 0.3784349225111354, 0.2734748591393217, 0.16197437680955185, 0.049978481346999004, -0.056413964081489354, -0.15142698532640875, -0.2301203690310505, -0.2886632451622928, -0.32470306873051946, -0.337399261606933, -0.3275477802057454, -0.2973285726147834, -0.25019116548064524, -0.19038493171197457, -0.1227135114046316, -0.05199939380884633, 0.017139176911517673, 0.08072903021902267, 0.1355209309034766, 0.17923917401929046, 0.21048004864480685, 0.22876771635613125, 0.23432325745179305, 0.22799591385951778, 0.210997690666467, 0.18479814491184499, 0.15090954228947595, 0.11080719113322424, 0.06580825597201034, 0.017038264215957, -0.0345953190189805, -0.08839929672966829, -0.14384879343281476, -0.20056434148311997, -0.25822162117607306, -0.3165240326265675, -0.37509435551358017, -0.43345155452191975, -0.4909090838458683, -0.5465613042830633, -0.599212781703363, -0.6473775176673762, -0.6898518557001534, -0.548601507384264, -0.2576112587829744, -0.13465071431258302, -0.08569289352097442, -0.02537682412498299, 0.07567009673657132, 0.20703600359026098, 0.308658952521796, 0.3787853945563455, 0.4424387944848931, 0.5016703873691384, 0.557289088402225, 0.6091276718707945, 0.6564618643049442, 0.6901128059893296, 0.7032665746165243, 0.690516184131571, 0.6474092656546091, 0.5955613359723557, 0.5979033982682136, 0.40017587991403936, -0.3568373314751714, -1.1876071207568124, -1.6541300983791114, -1.9561973580917202, -2.2144406228130533, -2.4149740013477388, -2.5446027575006447, -2.5933066304935437, -2.5552317188722906, -2.4292608572830936, -2.2193391870600685, -1.934253683822945, -1.587181824476561, -1.1947518917850388, -0.7760122356310521, -0.35110361691543623, 0.05996502549980143, 0.4386020449972836, 0.7686518634586168, 1.0372784681382807, 1.2355100047847962, 1.358537398282082, 1.4057088730659046, 1.3802577752885767, 1.288845278162384, 1.1408810795939912, 0.947832376731844, 0.722438460306825, 0.4788600866245236, 0.22409478869509059, -0.021656120509819132, -0.22014662447998923, -0.3580961252703947, -0.4617149111003318, -0.5412924981999003, -0.5957660200936843, -0.6255195480577571, -0.6321813113405366, -0.6182808502430088, -0.5870261492576132, -0.5419562509162317, -0.48673446797221054, -0.42486834669613316, -0.3595766888001739, -0.29361329687124815, -0.22923127613723437, -0.1681124866905792, -0.11142266652638444, -0.059822951593588414, -0.013589332285151023, 0.02733148188095491, 0.06317391914662807, 0.09429478683551773, 0.12103158729564534, 0.1436776511839959, 0.16237315137664865, 0.17713924876381526, 0.18781194092249098, 0.1941433080987478, 0.19576779830314361, 0.19235983520445288, 0.18360289468337765, 0.16937774307911102, 0.14934170043304107, 0.06591819491414697, -0.020563573893698006, -0.06484756074831033, -0.06784202513839688, -0.06488658733596075, -0.05611067301622619, -0.04125596588209124, -0.02065535037611088, 0.0049948665761956335, 0.03433304471567489, 0.06565263956020484, 0.09668811298351976, 0.12503563178804544, 0.14803833696171687, 0.16326513779240148, 0.16846640437688487, 0.1620319406075903, 0.1429666202668709, 0.12625602616335985, 0.1790576813359841, 0.30125227895533113, 0.3607222231111664, 0.3169321269181906, 0.2392218760857554, 0.16322273720862945, 0.09469230973269505, 0.03392162210934746, -0.016079375839402, -0.053147229067787904, -0.07606496655440287, -0.08467544775700087, -0.07979606788915161, -0.06316462944952295, -0.0372010540234855, -0.004830609386857643, 0.030818871179808638, 0.06662665772991094, 0.09974258003103559, 0.12774182447295757, 0.14877622517677008, 0.16162861217813862, 0.16573650479680962, 0.161155053079576, 0.14848915487060765, 0.1288101081032792, 0.10355270275621087, 0.07443263069533246, 0.04335090012317422, 0.012333687056522713, -0.01654594491032446, -0.04121497389074502, -0.059677875632019095, -0.07007459605336996, -0.07077776219135612, -0.06047637935307826, -0.03829428347545871, -0.0038869380069961323, 0.042446728231263275, 0.09969530339039556, 0.16607884598697886, 0.23906056555091304, 0.31539476320842397, 0.3912583355167709, 0.46242329940312166, 0.5245091699661217, 0.5732535503953886, 0.6048362940024945, 0.6161714502523772, 0.6052114014566592, 0.5711514528995076, 0.5146078871998334, 0.43763178863288354, 0.3436836337482463, 0.23740343629018046, 0.12437471963054447, 0.010682217066950273, -0.097452821373746, -0.19421046933205321, -0.27451475909694345, -0.3345044748415056, -0.3716928896651259, -0.3852323425203661, -0.37579298472940703, -0.34557055241659196, -0.29789768391388893, -0.2370570757622552, -0.1677455953951359, -0.09483412088567489, -0.022852273364808884, 0.04415861443796487, 0.10300467877704911, 0.15131293519863753, 0.18768600191337015, 0.21151525724215592, 0.2229714813717072, 0.22273956698573727, 0.21193097591821441, 0.1918359128165683, 0.1638354995770257, 0.12923568780122086, 0.08921821068609503, 0.04477431118164965, -0.0033040876048788803, -0.05440611341626589, -0.10808718781370885, -0.16399388812388782, -0.22184217189882371, -0.28131239942707076, -0.34203021374267983, -0.40345597764376695, -0.4648728915197058, -0.5252955265103072, -0.5834658498007244, -0.6376551692425512, -0.6765832161602496, -0.46490053836305645, -0.20697421932069737, -0.14033151062140625, -0.08701286847857226, 0.1358683238689995, 0.19785322440917597, 0.2616160626774544, 0.3286440444249319, 0.3993977732041927, 0.472892993878137, 0.5471589862953223, 0.6194195747603182, 0.6861936165359026, 0.7427679581659952, 0.7839906479745125, 0.8041245292965407, 0.7975101330903094, 0.7588634610734424, 0.729903410050337, 0.7490089415999144, 0.4124622311110606, -0.4026768080239229, -1.1034447334472315, -1.5177699399443814, -1.8246687226757006, -2.0892286105715376, -2.296056384389918, -2.4316500736396325, -2.4857703198603875, -2.4523485936824443, -2.330187494818002, -2.123149144182607, -1.8400856735154356, -1.4942167625856495, -1.1023436373539717, -0.6836370631174109, -0.25845310251938436, 0.15305766366770968, 0.5321120978097458, 0.8624436095444823, 1.1310909649576244, 1.3290225642866336, 1.451378546166576, 1.4974884372714508, 1.4705891057936675, 1.3773357082508353, 1.2271638194013548, 1.031511895255889, 0.8029491906874213, 0.552614428447427, 0.29726953213428686, 0.055057512627019634, -0.13980202229555516, -0.28034200282079524, -0.3894735099971687, -0.4750616391509741, -0.5360204982987611, -0.5727566982069892, -0.5868188416029234, -0.5807015915977765, -0.5574854552213768, -0.5206224785158255, -0.4736137187274201, -0.41984748060032917, -0.36236838904053137, -0.30380586433806656, -0.24625195900204577, -0.19128502902105282, -0.1399431047442956, -0.09282338203321672, -0.050118752812521095, -0.01176038602045093, 0.022522939237930473, 0.05305518940518539, 0.08017029124722086, 0.10408628248392748, 0.12491016687928713, 0.1425540839810875, 0.15680448639016387, 0.1672799426927618, 0.17356294053442056, 0.17517825497599926, 0.17176777871806337, 0.1630361774423017, 0.14587319115685649, 0.04575922489986706, -0.05410224979669831, -0.06988832881443585, -0.06899639651493938, -0.06238981609100591, -0.049987782705948725, -0.031696516512169204, -0.007741825704343341, 0.021012616100504644, 0.05332077296623439, 0.08730453953021744, 0.1208140370476114, 0.15127867467544043, 0.17615242344262594, 0.192855938958842, 0.19923169938347884, 0.19408783266360086, 0.19382728749372768, 0.26367194573591424, 0.36755498380934526, 0.3982913345627488, 0.35692663691109283, 0.2868674724282423, 0.21390131991303107, 0.1433003132988504, 0.07676618270542912, 0.017912613961530877, -0.030288679715987588, -0.06568223165385989, -0.0871306839958208, -0.09450940629351079, -0.08874033729271402, -0.07160484912555143, -0.0456218080873011, -0.013745948842130318, 0.02083393327203109, 0.055005216690661496, 0.08591552477859865, 0.11119591290011183, 0.1290562112240924, 0.13837567262246087, 0.1386933240590822, 0.1301808661329149, 0.11356147737169509, 0.09001828106694965, 0.061094347980026775, 0.02859166095900645, -0.005509807062832328, -0.03913491618652909, -0.07016966159661497, -0.0965312015601294, -0.11621983863419016, -0.12739864712613125, -0.12846462821478144, -0.11815217847064763, -0.09562685872527887, -0.06060052229942903, -0.013420780527123366, 0.044842250999606925, 0.11236017469726711, 0.18653991407589787, 0.2640912761030605, 0.34113886831821505, 0.4134162319774717, 0.47649528254442775, 0.5260840528429016, 0.5583214182681417, 0.5701059434233438, 0.5593592204394442, 0.5252818327125297, 0.4684728290145461, 0.3910147385448921, 0.29636463987213424, 0.18922137689866947, 0.0751744074013816, -0.039609089068440184, -0.14890062102500456, -0.24678074890788526, -0.328172636751046, -0.38910409969604576, -0.42709740966614884, -0.4411849874405025, -0.4320544409864038, -0.4017736227352242, -0.3536981464307125, -0.29197887424093283, -0.22134184217643016, -0.14653317869343674, -0.07212500388652066, -0.0020587893447059358, 0.06040428937942188, 0.11294702221924169, 0.1540703149227447, 0.18316442949417144, 0.20026295019545515, 0.20599219702212146, 0.20130139363942767, 0.18737721491500992, 0.16543324683647231, 0.13664823307718965, 0.1020539576370254, 0.06251389492628778, 0.01870657565126166, -0.028866789607072896, -0.07982831116171951, -0.13390504118578228, -0.19083265399283889, -0.25033855503000435, -0.3120279852371537, -0.3753747698662293, -0.43960907529704585, -0.5037340727867665, -0.566426635064941, -0.6256568411397625, -0.6142111544792224, -0.3755143460550947, -0.15429018777538772, -0.030551251796357093, 0.07413043009010778, 0.1407431581507126, 0.20522578899620214, 0.27585141540573943, 0.3521432139892884, 0.4331389016187046, 0.5173154044603194, 0.6023775742731843, 0.6853320472831754, 0.7622310311324156, 0.8284051240694339, 0.8783850744684258, 0.9063810132451771, 0.9064913915049928, 0.873435068662598, 0.8796278867414955, 0.8702391591329004, 0.42331220384960666, -0.3683017891589646, -0.9817070600246467, -1.3685759269585756, -1.6794860944197394, -1.9488315109887715, -2.160814419841153, -2.301710609122617, -2.3610475664323154, -2.3326130456294365, -2.2150420667774764, -2.0121499907657316, -1.7327009514710223, -1.3899555280504625, -1.0006948606300057, -0.5841875506662522, -0.1608102907132114, 0.24916988960123376, 0.6269363777834833, 0.9561185803851142, 1.2237252407131285, 1.4206478812026315, 1.5420005927703668, 1.587061297441723, 1.5590340083869503, 1.464536237860517, 1.3129511391425277, 1.1156823345232043, 0.8851528145762391, 0.6304333753471578, 0.3743951077566585, 0.13237615539008907, -0.06142117354365695, -0.20450503870402237, -0.318440546584398, -0.40934488339913244, -0.4761828998019908, -0.5193038965240167, -0.5402545479793988, -0.5414271568843843, -0.5258495960167924, -0.49683241403381295, -0.45778348080686726, -0.41192566645783746, -0.36218912080804877, -0.3110343486320044, -0.26044065265906813, -0.2118346196385561, -0.16616445256203694, -0.12390900322187282, -0.08520951606270444, -0.049921360650642566, -0.017767319270893367, 0.011608651326036501, 0.03850079756744229, 0.06312139059429667, 0.08549764334877974, 0.10550909619643978, 0.12283091192667328, 0.13703595192835216, 0.14757299705050997, 0.15392204203802695, 0.15557792676872673, 0.15210315976541278, 0.1178726092239657, 0.01838241999063417, -0.07093121471723496, -0.0728963201897237, -0.06821735178420063, -0.05825357568281575, -0.0426772067475687, -0.02130134518443505, 0.005494860850967065, 0.03695969784355846, 0.07169210970952289, 0.10793407843130787, 0.1433857647629937, 0.17554301164143027, 0.20179869937196138, 0.2197003139360092, 0.2306196522619688, 0.26760271128933555, 0.35352915019896747, 0.42329637256089825, 0.4208100319361321, 0.3749219949787268, 0.3154734984588532, 0.251182971889937, 0.18300354924990136, 0.11491750172201298, 0.05086597767500267, -0.005583012870119086, -0.05146925206470332, -0.08471668423662959, -0.10421315623256522, -0.10993781314682516, -0.10284791165521967, -0.08483177694718924, -0.058438586411122095, -0.026707039879946715, 0.007167327403913126, 0.040032325355093046, 0.06906527071324214, 0.09191121470942315, 0.10684789102203196, 0.11281722328891725, 0.10945530824387073, 0.09702979304531456, 0.07637441872259243, 0.04878142668161056, 0.015900490848194115, -0.020363981437385492, -0.05794517959574352, -0.09468881061951273, -0.12842588562430168, -0.15702901997715868, -0.17848203934444085, -0.19094251074867707, -0.19282915225450514, -0.1829063995181639, -0.16039209208420702, -0.12505304085829327, -0.07730656014182902, -0.018287832003377247, 0.0501025411449012, 0.12521114358781027, 0.2036856463493617, 0.28160628192328296, 0.3546618504635255, 0.4184016813592124, 0.46850768426677014, 0.5011185326765557, 0.5131213088338393, 0.5024566552745204, 0.46832101495486667, 0.4113468837149479, 0.33361160834795545, 0.23861558163132846, 0.13104431373640235, 0.016538170563580756, -0.09876071817896737, -0.2085639343012069, -0.3069873171587698, -0.38887986049892476, -0.45030868694792847, -0.4887007522370359, -0.5031237578162964, -0.49414454954954135, -0.46385698532951825, -0.4154735474996647, -0.3531635965967883, -0.2815006878443045, -0.20525184062418456, -0.12884856564547453, -0.05627043297486001, 0.009326654941195223, 0.06555675471277844, 0.11097262863915791, 0.1448593848761277, 0.1672421016699852, 0.1786104746282149, 0.17985048505084844, 0.17199508224366333, 0.15615514505643446, 0.13335771146477882, 0.10451196978461752, 0.07034992944620733, 0.03142630205623931, -0.011855990910217606, -0.05922958037997983, -0.11048082931858083, -0.16543268197400351, -0.22383421862748953, -0.2853450755678031, -0.3494458796126141, -0.41541312687685217, -0.4821006040564688, -0.5516509167244656, -0.6107598946110162, -0.4418597423448887, -0.146131706945134, -0.021866150885653468, 0.030195197333437562, 0.0826785801940062, 0.12934642706330024, 0.2022817694418677, 0.2823005823323683, 0.3686895662777232, 0.46034389982434476, 0.5554813786716224, 0.6517071633539864, 0.7457187556902873, 0.8334589678183306, 0.909939323570093, 0.9695942666951751, 1.0063523703071269, 1.014260214750447, 0.9884086916760921, 1.0267734507917154, 0.9861079758284674, 0.4585739126751296, -0.3039897261897675, -0.8457255155918961, -1.211796854840813, -1.525018720423306, -1.7976644804278639, -2.0137304025249865, -2.1592963748860576, -2.223736517629396, -2.2006450371751214, -2.0885447241749766, -1.8910760678806486, -1.6169348656894886, -1.2792335116729632, -0.8947246594567719, -0.4825592843858981, -0.06311913822702664, 0.34341261379203836, 0.718186403837807, 1.0448778356569415, 1.3104390841673235, 1.5057664070391024, 1.62589759273484, 1.6700722417672926, 1.641403329887308, 1.5464296845895538, 1.3944360535605513, 1.196722435197339, 0.9656674504821243, 0.7093289046206941, 0.452305186255499, 0.20697712124651346, 0.011985111201683551, -0.13340737600332986, -0.25118572312230825, -0.3465447203183132, -0.4184127055544451, -0.4671635125969189, -0.49426463758989847, -0.5020873759718576, -0.4935411203859221, -0.47187327563336723, -0.440343018604187, -0.4020789778364895, -0.3598466122126638, -0.3159978858549861, -0.2723487582867641, -0.23022243461537606, -0.19042266648817474, -0.15334848689434022, -0.11903000748578751, -0.08728021691126919, -0.057752486040353546, -0.030092833166669664, -0.003980038292868304, 0.02075205536377478, 0.044121987005065755, 0.06592542078124541, 0.08580541592990087, 0.10322236918538241, 0.11758382822694369, 0.1282375023608271, 0.1346406110681233, 0.13602761849242206, 0.07380141245168748, -0.02298469915290635, -0.07684245682530744, -0.07396285032765526, -0.0661209369499387, -0.05328464669351973, -0.034937029039425305, -0.01103072398903393, 0.01815793435022961, 0.05173724840963878, 0.08827492278933846, 0.12610190193556203, 0.1624390864546612, 0.18911494599461864, 0.21071015761636058, 0.2655000576201356, 0.3460092924404723, 0.40056317290767307, 0.415244802643441, 0.3999071732656496, 0.36872721575988354, 0.3255646315768794, 0.27161083043641066, 0.21014443841210317, 0.14487516447088344, 0.07975375639116278, 0.018662611004318652, -0.03485654070048838, -0.07792963561174782, -0.1085085929257561, -0.12558705411296756, -0.12917494815113306, -0.12034020344482421, -0.10099833785535961, -0.0737954586585764, -0.0417832891040808, -0.008223372545518304, 0.023743071043979325, 0.05126927109481422, 0.07204057109056611, 0.08435538518108193, 0.08722500534499722, 0.08034657104325738, 0.06408116039789657, 0.03935418364804599, 0.007566387020986887, -0.029524207516598344, -0.0699026414408972, -0.11139481638827098, -0.1517505836626567, -0.1887146437886631, -0.22009619221116017, -0.24383151902469424, -0.2580604928114809, -0.26120271909474013, -0.2520536367296402, -0.2298772986569524, -0.19451018465565117, -0.14644520659047, -0.08690536043154551, -0.017872496256731818, 0.05791805653232718, 0.13705053641550258, 0.2155484038175981, 0.2890704378054685, 0.3531424915434451, 0.40345335194517506, 0.43614652411468624, 0.4481446205044497, 0.43740589491932713, 0.40317555855229514, 0.346096622608429, 0.2682929109788197, 0.17325169339894853, 0.06569408130460896, -0.04878305002780392, -0.16401016455356565, -0.2737669328769434, -0.37213655381588984, -0.45404499008708665, -0.5155029934955802, -0.5540047521453255, -0.5685230490759485, -0.5596692445352973, -0.529400518662297, -0.48094983189945806, -0.4183198413557023, -0.3460915560700575, -0.26885909204847147, -0.19106688428280627, -0.11654367949525657, -0.04848193699630787, 0.01083726237155691, 0.05989569136928008, 0.09802418848607175, 0.12514228708776365, 0.14172553578563019, 0.1485292464329966, 0.14652156365220304, 0.13667244744183016, 0.11990816957630646, 0.09700235538607149, 0.06856628206260673, 0.0350373156294328, -0.003307536605543504, -0.04629141667691883, -0.09381986453841584, -0.14577165679477755, -0.20202542534731016, -0.26230595100895293, -0.3265517196171306, -0.40356358032497575, -0.46501854207831617, -0.47996461492427045, -0.4743662129210948, -0.30215522155513774, -0.10188779679684057, -0.045695795247207016, 0.005655133961790071, 0.06377667010137245, 0.11060361228436122, 0.19159522690506847, 0.28058294568232967, 0.3767983397288823, 0.47890301468197194, 0.5850295424796137, 0.6924910979647514, 0.7978739276052025, 0.896797143074977, 0.9841563661475767, 1.0540716880760677, 1.100382415228271, 1.1168762330781412, 1.1032767522664244, 1.1547260480798442, 1.0942329246337277, 0.5244615119058338, -0.21684235149423436, -0.7042023155194705, -1.0525991856060095, -1.366395430845543, -1.6408929547016466, -1.8599727482799784, -2.0096003994037837, -2.078989409890637, -2.061611694226153, -1.955786880284025, -1.7650225502506096, -1.4977783574944468, -1.1670303591995932, -0.789284957798225, -0.3835731709020802, 0.02994572207610524, 0.43116601232877194, 0.8014019033348294, 1.1243427888282564, 1.3870216756834015, 1.5802781547404372, 1.6991415466459463, 1.7427346453740906, 1.7140840524886158, 1.6195747532642324, 1.4683510806836377, 1.2715682528136512, 1.041625525330808, 0.7867374762082164, 0.5281894682075698, 0.27607090884385066, 0.07801389713140772, -0.06915224874688874, -0.1896794828436903, -0.2884175082413716, -0.3643400967388146, -0.41776363538441963, -0.45016160917782955, -0.4638091746229378, -0.46158208633876274, -0.44659943583289596, -0.42205202369451555, -0.39091672545060696, -0.355865454430103, -0.3190869790844717, -0.2822929408016561, -0.24664712817214873, -0.2128559107907364, -0.1811791911391598, -0.1515743555981981, -0.12374973584048554, -0.09732422965861343, -0.0718816129265134, -0.0471106474156322, -0.022824639766115595, 0.0009424908001101073, 0.02397414381159102, 0.04582637657735056, 0.0659283401948354, 0.0835756913634107, 0.09807951507215407, 0.10874305716955845, 0.11340534942028224, 0.029316685948412413, -0.06768478727204208, -0.07943219739031981, -0.0736957941256211, -0.06331418816213841, -0.048052429186497214, -0.02752143106558247, -0.001804289945367188, 0.029047302178073053, 0.06269056492972602, 0.0849979508617702, 0.10316642760554018, 0.14282229289774495, 0.2111209146447477, 0.27465522373978235, 0.3145850056423445, 0.3396614371430733, 0.35383237119407296, 0.35510902204244443, 0.34155633962219545, 0.3135737652930546, 0.27284432521170277, 0.2217327945752532, 0.16335998692000864, 0.10136629583109968, 0.039630315042558095, -0.0180134259810929, -0.0681213562214471, -0.10786033014182772, -0.13529529483798264, -0.1494537232608344, -0.15046021905097917, -0.139407584350157, -0.11831470941892497, -0.08984087908223115, -0.057119219600408555, -0.02340986803494871, 0.008094066144029965, 0.034564819140922465, 0.0536702863390498, 0.06374909564902875, 0.06383277657262543, 0.053683825324482404, 0.03372246325921657, 0.0049665281473514344, -0.031088639475205238, -0.07256987343443555, -0.11734405978970108, -0.1631135297171249, -0.20750825465221157, -0.24816452600426042, -0.28279783651792556, -0.309277372653578, -0.32570020455733806, -0.3304782183255768, -0.322425965488349, -0.30086009667970126, -0.26568929966738764, -0.21750088497028242, -0.15761658360830033, -0.08812268364337728, -0.011845134120388234, 0.06771877797276638, 0.14653974014253057, 0.22023944679798158, 0.28434289622457465, 0.3345483508495022, 0.36704451788717574, 0.3787924261238169, 0.3678195204205643, 0.3334084068093828, 0.2762672632533656, 0.19852634810801062, 0.10371294598606062, -0.00349374481396314, -0.1174861577375701, -0.232182493041722, -0.3413656769307516, -0.439231403264714, -0.5206945043349172, -0.5818731446914303, -0.620207735879291, -0.6347482985712491, -0.6259948124709531, -0.5959417908860658, -0.5476585874767141, -0.48515368554443494, -0.4128158805207618, -0.33523455698494686, -0.25666590452790183, -0.180946765893379, -0.11111554978617377, -0.049490834158627095, 0.0025092769379782, 0.044143442841357405, 0.07537059958707282, 0.09656446172580324, 0.10846269393415309, 0.11191293770891875, 0.10782005261032435, 0.09698343487239036, 0.08007591868925257, 0.05758632915442252, 0.029827628366206227, -0.003032408312316548, -0.04095141144735415, -0.08396239903559444, -0.13211916343023944, -0.18644869295873523, -0.26146192233083276, -0.3330682274987753, -0.3782432014297772, -0.42154140644649285, -0.4675488325869779, -0.4118565621202759, -0.25709005358330383, -0.13132859105603067, -0.08164102696294684, -0.025980180481418813, 0.03805007035553665, 0.08374758489769363, 0.1719539949980451, 0.269229025324762, 0.37463078436479336, 0.4867599342499602, 0.60349776538669, 0.7220564536172631, 0.8387141489132226, 0.9489668792807961, 1.0473841384804246, 1.1279712330376412, 1.1842710736583228, 1.209996679096303, 1.2117600378482187, 1.2671167965324663, 1.18041335689899, 0.6112054652472008, -0.1067604801115074, -0.5617993058736559, -0.8966139297783275, -1.2092592497988441, -1.4841708505798126, -1.7051893458825376, -1.8582007567622227, -1.9323391048808212, -1.920907031760457, -1.8220838442775964, -1.639111764830945, -1.3802492820761607, -1.0581346649523997, -0.6890435824402505, -0.291650929985682, 0.11409020832211958, 0.5083807260539661, 0.8726613572284663, 1.1908214024618804, 1.4499072236754396, 1.6408241264519683, 1.7585013564432996, 1.8020004326736139, 1.7741639522912651, 1.6812218124334857, 1.5320969713611277, 1.3377753188572035, 1.1108022600295762, 0.8605278623359585, 0.5997282839387115, 0.3374148534480206, 0.13501437165969676, -0.013154005830248394, -0.13516405145667854, -0.23611479426853244, -0.31494548702205805, -0.3720020510432569, -0.40868311780032585, -0.42725689152567536, -0.4304917393589447, -0.42146573373961704, -0.4032357493395793, -0.3787071471308785, -0.3503980415335297, -0.32040294582397166, -0.2902702942700346, -0.26106051542705977, -0.2333225097982723, -0.20722189589817308, -0.18258163852445897, -0.1590432355532334, -0.13612863877985681, -0.1133953461379491, -0.09047916795578548, -0.06721179247493936, -0.04361457059443019, -0.019962337837875488, 0.0032849659421145816, 0.025468197948639748, 0.04585355423835047, 0.06364489379662785, 0.07797222159220851, 0.06117935362179061, -0.014859015766480965, -0.08453029780336596, -0.080931991967776, -0.07257274911165634, -0.06028803230815072, -0.04335999527591916, -0.023007648380804824, -0.01770815744958565, -0.017266335169610514, -0.0005956935855104817, 0.03817780617837485, 0.08136433250883712, 0.12099872984238047, 0.16349838225777447, 0.20772695862405044, 0.2462575539291283, 0.2744368565765729, 0.29009713199900933, 0.2921134123429274, 0.2799579179442899, 0.2541027206620643, 0.2159568870356514, 0.16784166659653654, 0.11280513505278433, 0.05440782749980322, -0.0035414573519836345, -0.05731931861604389, -0.10354310908759867, -0.13950476234116227, -0.16331505910482758, -0.17412373759203637, -0.17208313902395744, -0.15839389499194612, -0.13508632885606175, -0.10490801649351678, -0.07099216291826349, -0.036666707383387176, -0.005117417865267204, 0.02078194532333444, 0.03871547303712364, 0.04700301156890929, 0.044709509325948804, 0.03161539519837486, 0.00820353508831495, -0.024444989248384674, -0.06473513715057844, -0.1106856661490887, -0.16003176116928675, -0.21033897795704348, -0.2590956059428695, -0.303803933474597, -0.34206208797415183, -0.37164551358765685, -0.3905919214000728, -0.3972881936915649, -0.3905653376359245, -0.3697898452965749, -0.33495490620547674, -0.28675176379053446, -0.22662268968838595, -0.1567715813646664, -0.08013697520721008, -0.0003032382497583086, 0.07863389573001678, 0.15227004276987888, 0.21612684343757627, 0.2659425421322785, 0.29795435107436496, 0.3092079880173868, 0.29779676984511405, 0.26309510402696823, 0.20585123351237566, 0.12825780406546872, 0.03382306810145197, -0.0727591259618765, -0.18596824996084305, -0.2997466333759027, -0.40801316834779167, -0.5049939269932398, -0.5857508472192441, -0.6463976993603282, -0.6844942513749985, -0.6990208299369529, -0.6905459352444585, -0.66092237870288, -0.6132377691956838, -0.5513055785435634, -0.4795028396250012, -0.40220529093988855, -0.3236553126729107, -0.24749397720775157, -0.1767669471620006, -0.11364184281326661, -0.05957619383686996, -0.01521818218370452, 0.019320346385105047, 0.044447166191119436, 0.060805659846788984, 0.0692235438214528, 0.07049724100401367, 0.06535951333896683, 0.05436825595366024, 0.03790750886417715, 0.01616649908867629, -0.01084070314779062, -0.04322091853402377, -0.08315569486889185, -0.15031824534275984, -0.22310829208739236, -0.28637338389057376, -0.34736960748241774, -0.39991022961002987, -0.442110691735083, -0.47228304066022986, -0.37594238518818024, -0.23163573878905463, -0.17386024199635575, -0.12329637631741885, -0.06390162438488112, 0.0050706240344773335, 0.04783139673192416, 0.14220395493743965, 0.24673603225418184, 0.36046137178691495, 0.4817902142105801, 0.6085277244569784, 0.7376169549464855, 0.8652198165857783, 0.9865174669121082, 1.0959517065244029, 1.1872151057968807, 1.253746739141853, 1.2889956658139567, 1.3059660451901465, 1.3706098805910827, 1.2446308925075993, 0.6833858894046614, 0.01647601531617937, -0.41976106366112376, -0.7496354300167223, -1.0594573376552603, -1.3333443602058965, -1.5551676357084183, -1.710816460031488, -1.7893429332388209, -1.7839594826157175, -1.6926165797976171, -1.5183493947241864, -1.269045773367738, -0.957043428049392, -0.5981617135806943, -0.2107499751084152, 0.18568848037513241, 0.5716173598152032, 0.9288260513507876, 1.241332868209441, 1.4963688208284749, 1.684806573471632, 1.8015824935393177, 1.845584462675383, 1.8195161030226172, 1.7293470022160022, 1.5837743341159793, 1.3935631716466084, 1.1716011334783527, 0.9290649987782356, 0.6650210615512204, 0.3893648776055709, 0.18200821986590476, 0.03393342795561516, -0.08824467854189777, -0.19010858590210766, -0.270653291582148, -0.33017206486541006, -0.37008076023717784, -0.39256061107587925, -0.4003653349774101, -0.3964587408564988, -0.3838516505025664, -0.36531110977934844, -0.34327927971031436, -0.31969329248879763, -0.29600318905942746, -0.27310398602589014, -0.2514390384608909, -0.23101774874429015, -0.21157070259738475, -0.19261129019343048, -0.1736012648005376, -0.15401189428559992, -0.13346217117862302, -0.11174275783456356, -0.08890193523207479, -0.06521090606858237, -0.041192000076042845, -0.017523469795102997, 0.004973971055976634, 0.025473095201683726, 0.04262232074258687, 0.002437302528556451, -0.06150823224917712, -0.08743962536296568, -0.08095057835955544, -0.07171035053980823, -0.07185450048385533, -0.08691969228268626, -0.10532182588107375, -0.11039129737438991, -0.09888505089778832, -0.08037017610089947, -0.044370123392264205, 0.0025281017290694763, 0.05208843240211003, 0.10026088136485889, 0.14422719023273967, 0.18124042736820378, 0.20865674217354346, 0.224431186763407, 0.22717926312016123, 0.21641807049949868, 0.19256326740047225, 0.1570035009037718, 0.11198361400045198, 0.06047469400244454, 0.005951852423884407, -0.04789561420867949, -0.09742680438547424, -0.139397865667668, -0.17116583292428955, -0.19097581846070444, -0.19801589766603378, -0.1925527586040754, -0.17579953206197274, -0.14987753046650987, -0.11753132840633596, -0.0819673841661428, -0.04650797870881995, -0.014400731783271947, 0.011482745330888833, 0.02877749760319126, 0.035808584190809345, 0.031617153993923064, 0.016009943903034896, -0.010509999489924038, -0.046793991903474774, -0.09116917547702963, -0.14153646265017583, -0.19549930070082788, -0.2504678510814706, -0.3037715624319106, -0.3527546391367409, -0.3948733342124715, -0.4277877577679656, -0.4494556284351199, -0.4582280123757103, -0.4529438755180324, -0.4330238632689527, -0.3985511747388605, -0.3503384320841275, -0.28996259592166784, -0.21976816473834782, -0.14281875723402515, -0.0628048939353203, 0.016111127662479907, 0.08948995230990509, 0.15286854757272827, 0.2020254951701892, 0.2332838530195216, 0.24377464565541396, 0.23170732316418663, 0.1965347923951004, 0.1391013458683883, 0.061620732581986415, -0.03235977462027129, -0.13820963685444587, -0.2504321864544812, -0.36310917304695667, -0.4702179118116052, -0.566161114303807, -0.64604459090706, -0.7061453233707824, -0.7440056010455041, -0.7587161658326211, -0.7507430634420529, -0.7219839678654076, -0.6753469596291608, -0.6146394763466794, -0.5440146302485189, -0.46782146895778176, -0.3900755251288821, -0.314400305513689, -0.24364635154965963, -0.17999084339753946, -0.12474779228042987, -0.07860593283080775, -0.04159127827388076, -0.01336225574756078, 0.006754223650796476, 0.01950183662667193, 0.02565307840877118, 0.02584556017564754, 0.020549196838324235, 0.010020525313786166, -0.006279580508364191, -0.03449149025008147, -0.08533730446460552, -0.14848458950309507, -0.2142533668566351, -0.2808660611466456, -0.33388707267261086, -0.3766190780631131, -0.41814463684132797, -0.45821229371893946, -0.4309256170575271, -0.3650589257537886, -0.26653612566749363, -0.2222918848878761, -0.17060814843162753, -0.10859780150699905, -0.035820342157975915, 0.0021689768118040575, 0.10136043970502939, 0.21190755521639204, 0.33273067452071103, 0.4622014574685913, 0.5979166933336657, 0.7367249960110449, 0.8745082297433235, 1.0063210813867975, 1.1262986510092077, 1.228012259288942, 1.3046188724723464, 1.349484054274452, 1.3799899383748269, 1.4521307085864628, 1.3106239529974975, 0.7466720736808607, 0.11990337619628555, -0.29397053346135316, -0.6173040020716112, -0.9226659794738135, -1.1940793754767958, -1.4155214263819316, -1.5729215735887614, -1.6553379082424442, -1.6558501201615883, -1.5722582941151764, -1.4072632903156617, -1.168442733438658, -0.8676354723774864, -0.520253626132579, -0.1440820680068029, 0.2417717050666024, 0.618275544096635, 0.9674929986127676, 1.2737805233952377, 1.5244528625305032, 1.7105045803181165, 1.8267593530010888, 1.8720239992867862, 1.8487424210846672, 1.7626592448045102, 1.622146780851315, 1.4377740364937726, 1.2230431882185204, 0.991149199932492, 0.7224489693395171, 0.43070798128711907, 0.21869309319728814, 0.07208303052439113, -0.04886137354128728, -0.15032842072702657, -0.2312948294214543, -0.29209515466797775, -0.3340791387412647, -0.3594383317983807, -0.3708321396052483, -0.3712047141388126, -0.363447301712311, -0.350274596300145, -0.3339844280295079, -0.3164296998230016, -0.29889683988127036, -0.2821745963778204, -0.2665376060582121, -0.2518860313865696, -0.23779721413590416, -0.22369511766577244, -0.20892353759783777, -0.1929023304702424, -0.17517891029715305, -0.15553776967771338, -0.1340002538245333, -0.11087203479532626, -0.08668065043415396, -0.06216804952256805, -0.0381751795320282, -0.015601633977656348, -0.00286331563434139, -0.040840288673504865, -0.09230621008882345, -0.08843518747457857, -0.09731351374460484, -0.12772281237600236, -0.16590665599450816, -0.18926989817598994, -0.201301038656867, -0.1911990231194265, -0.1663509630388873, -0.13334501796112086, -0.09403801339668139, -0.05025712496291579, -0.004377357200155529, 0.04080147516871335, 0.0824381557927758, 0.11768696642862952, 0.144051685446553, 0.15947520618899436, 0.16264092501401395, 0.15302368848496073, 0.13104556373175313, 0.09802874270945461, 0.05615678104608768, 0.008310982795400434, -0.042151789233252135, -0.09164159392839544, -0.13666680878845483, -0.1740708681551184, -0.2013598064637736, -0.2168351971749818, -0.21981021045493554, -0.21057154904793096, -0.19042649298305347, -0.1614905480200095, -0.1265804357601351, -0.0888912592867176, -0.05181048285328116, -0.01858574827519327, 0.007845425129539951, 0.025105149213757616, 0.0314605323647813, 0.025944546489273246, 0.008337731202912702, -0.020831081609626434, -0.060380742233534956, -0.10855417800102773, -0.1631482961366726, -0.22162102684517038, -0.28122117472013164, -0.339098091955385, -0.39241927593551873, -0.43847603745372243, -0.47479235383235974, -0.49922930761667406, -0.5100891038284052, -0.5062150434585322, -0.48708205631751134, -0.4528742580741292, -0.404537541596087, -0.3438043616665493, -0.273175709830225, -0.19586228459453436, -0.11566989078118906, -0.036842282250763914, 0.03615285552004388, 0.09886310881156679, 0.14713329137007847, 0.17737298909620747, 0.18684087013995687, 0.17385692039100709, 0.13800494377110206, 0.08019912365345921, 0.0027315636025769807, -0.0908696324283712, -0.19597505258865455, -0.3072068617591437, -0.4187126348224073, -0.5246572672141032, -0.6195247958664862, -0.6986208093609791, -0.7582592418109417, -0.7961390946839697, -0.8113007774771801, -0.8042936311564937, -0.7768690554835684, -0.7319482524673124, -0.6731214610149254, -0.6045130786401698, -0.5302273697301665, -0.45424460751392126, -0.37995805430664475, -0.3102023286230162, -0.24696672287499144, -0.1915784362061066, -0.14459210586576443, -0.10607321292288585, -0.07560185208382819, -0.052562096879475995, -0.03618629318832678, -0.025759341836308458, -0.0206836377389239, -0.021551423052383, -0.03485222857278103, -0.06549128474802757, -0.11159975488000029, -0.16770640687502159, -0.229031121748136, -0.27535181382876317, -0.31650106503417685, -0.3569977671924329, -0.39730764201912105, -0.43708542734516875, -0.4681453359340031, -0.43489158562299846, -0.35916122070334744, -0.3167348654442552, -0.2755019066379578, -0.22366817963393437, -0.16034775750781094, -0.08512494318009445, -0.053589047259121614, 0.048896702378083745, 0.16392009464368762, 0.29040899086269967, 0.42660537698657564, 0.5700471755619585, 0.7173602614453518, 0.8643160578127258, 1.0056912637003386, 1.1354949731452244, 1.247018587288654, 1.3333169226965964, 1.3875190206332562, 1.4295578610235182, 1.5070053595911848, 1.3674531826468765, 0.8048262659915988, 0.20547371425510974, -0.18939946669757823, -0.5046775443909155, -0.8040073185928378, -1.0714955864973206, -1.2912920932997158, -1.4494544391381448, -1.5350459459102535, -1.5411059286257913, -1.4652026386138512, -1.309784428867058, -1.0819592322399938, -0.793136915471198, -0.45810518817398815, -0.0941525793443958, 0.2802514303840731, 0.6464983101177797, 0.9871575231282339, 1.2868215845713902, 1.5330814754202962, 1.7169318136330558, 1.833220487014362, 1.8805446927947074, 1.8611664892392756, 1.7804896316866525, 1.646587625928552, 1.4697913731283796, 1.2647107953255192, 1.046488732251012, 0.769227913453431, 0.45997595585098416, 0.24522745153718795, 0.10187889092220281, -0.016460089337828165, -0.11615850605959643, -0.1962770433258303, -0.25710773432246903, -0.3000355441016289, -0.32717800130770325, -0.34120120539396304, -0.34494988883181765, -0.34128951936350127, -0.3328083087718001, -0.32174106680290926, -0.30978709087477085, -0.29813562026613205, -0.28740368334964117, -0.2777494956912179, -0.26890262105349727, -0.2603284640891861, -0.25130514174406393, -0.24109292997270781, -0.22900917256884057, -0.21456112144050543, -0.1974800503721248, -0.17779183129339948, -0.15579019764060043, -0.1320421033273398, -0.10730179087044167, -0.08246082974174485, -0.05849100428103782, -0.06253601944021181, -0.07024275957140347, -0.09445113411901129, -0.13001853724834422, -0.1739707017884502, -0.20317277745712303, -0.225509703960455, -0.2322952138103309, -0.23011486799077652, -0.21907630110424403, -0.19927021416008017, -0.1714356318794854, -0.13694138507845377, -0.0976114487787294, -0.05580248351067407, -0.014127558427307285, 0.024581583108834515, 0.057612840299126944, 0.08246984163169113, 0.09719385067708686, 0.1004533792239597, 0.09176320167510443, 0.0715004860588242, 0.04095369963009898, 0.0022255723222139867, -0.04190704474380125, -0.08819351360651928, -0.1331954038429206, -0.1735277544552023, -0.2061962496302887, -0.22878601829508804, -0.23973825334944432, -0.23840142347019455, -0.2251634374449143, -0.20132784419649563, -0.16907972055769505, -0.1312160949145028, -0.0909913192350229, -0.0517846388814327, -0.01691179901477663, 0.010672213577147982, 0.028511192205993963, 0.03483917339035847, 0.028622305885906196, 0.009624325918584864, -0.021645597786731807, -0.06396915449008045, -0.11553174955859324, -0.17401751268595245, -0.23674532961821537, -0.3007863654952496, -0.3631001510882568, -0.4206563017757814, -0.4705637652889192, -0.5101910991185301, -0.5372876584384225, -0.5500967894255093, -0.5474611304096348, -0.5289134533288791, -0.49474621689711107, -0.44605445057224635, -0.3847417148682032, -0.31348717737900367, -0.23566329610506703, -0.1552100713315503, -0.07645646937636119, -0.0039086925632842995, 0.058005098076411965, 0.10519387594072938, 0.13418531993304628, 0.1423636879497323, 0.12820462312426628, 0.091407912516097, 0.03301087836706662, -0.044656525062079844, -0.13802602993012147, -0.24254343808961498, -0.35288057033351317, -0.4633597098077251, -0.56824577098666, -0.6622433383108737, -0.7407423892460532, -0.8002563326460428, -0.8384919444224037, -0.854618499790329, -0.8490871470952968, -0.823693898514418, -0.781166792984707, -0.7250771915795626, -0.6593016357424015, -0.5878998575632202, -0.5145974983306738, -0.4427516158335978, -0.374972078994225, -0.31323772129226723, -0.25869888864016044, -0.21192754693303506, -0.17284702502126947, -0.14112369942884673, -0.11563324864736124, -0.0933321684777848, -0.07050810755932346, -0.060987617379967496, -0.06866211485823293, -0.09522552255534045, -0.1373718320655657, -0.18504221769559237, -0.2260430584657911, -0.26492284469246385, -0.3038019711117137, -0.3424773388278277, -0.3810354949641228, -0.41939263965326035, -0.45676842591779376, -0.4472267308502893, -0.46273996332862133, -0.4018121908009018, -0.37197019154167243, -0.33299085499872216, -0.28230446163235, -0.21913075158964812, -0.1429682185676846, -0.11922588857113858, -0.015177373584323917, 0.1026256850220566, 0.23307174210250636, 0.374389697940261, 0.5239713714536158, 0.6783623432398826, 0.8331066567188472, 0.9828634547952131, 1.1213842154565938, 1.2418492978407425, 1.3370791313365284, 1.4001297694947468, 1.4513060446004271, 1.5320967046797644, 1.4108695331026837, 0.8527531261336705, 0.2693317326603264, -0.11001560031196789, -0.41586809603550456, -0.7076607123150342, -0.9697815605138214, -1.1866325120278711, -1.3444310586371557, -1.432343954742871, -1.4433315287561008, -1.3748284268140374, -1.2289148661689744, -1.012319105250329, -0.7358390198714382, -0.4137228604643717, -0.06253661459148141, 0.29979835456958526, 0.6553344372983005, 0.9870426738134235, 1.2799687034443057, 1.5218586433445607, 1.7038806452436388, 1.8207766504395941, 1.8710522981312145, 1.8566642960314699, 1.7827370576502464, 1.6569470339777386, 1.4894569880885609, 1.296978149648523, 1.0967874335577896, 0.7986240910432096, 0.47393168217484494, 0.26229350434379306, 0.12431450321589921, 0.009980682918527606, -0.08663312906891285, -0.16459199270361502, -0.22425036374793095, -0.2669410283901499, -0.2948148900372969, -0.3104595033997537, -0.31672201593836746, -0.31636214679857844, -0.3119313766588485, -0.30552728419431396, -0.2987695976145961, -0.29268171861885595, -0.2877669891691941, -0.28400443605900527, -0.2809974745963597, -0.2780436121700749, -0.2743097829330896, -0.26892432389168963, -0.2611307634063351, -0.2503547669739872, -0.23630020140961605, -0.21895966661571897, -0.19862181501089982, -0.1756908765035039, -0.15119056479169757, -0.1261548695688397, -0.08325891750505754, -0.06314931968749349, -0.0896280307185009, -0.11919357642818618, -0.15184525595787068, -0.18276699735215196, -0.20864191166488233, -0.2282462415475166, -0.24024005021454453, -0.2437801321529367, -0.23845973944856524, -0.22431517555396407, -0.2020135269972858, -0.17274761838643826, -0.13832287707488167, -0.10094469552315743, -0.06320631018518164, -0.02779326585441222, 0.0026057357432405226, 0.025617639487196975, 0.03929719502240836, 0.04238727446039503, 0.034386519942413596, 0.015673988957585427, -0.012521580267954135, -0.048175637924539494, -0.08861161548856988, -0.13072084958075325, -0.17118272516454214, -0.20678155756562577, -0.23462434274620514, -0.252451228624339, -0.2587602711311019, -0.25301319627622987, -0.23560400983851304, -0.20790641766739448, -0.17208021892459624, -0.13097177308943142, -0.08781290332999103, -0.04604080744590888, -0.008979685037946383, 0.0203334601170862, 0.039399328683958235, 0.04635798945241576, 0.040124416438405586, 0.02039354436630414, -0.012339649680996878, -0.05685674379893779, -0.11128063429370849, -0.1732011325825602, -0.23978748151220097, -0.3079340590787871, -0.37439377325666845, -0.43592739801456526, -0.48944286527059777, -0.5321393098744185, -0.5616406241353111, -0.576122857911666, -0.5744249214691326, -0.5561396834258248, -0.5216772793160191, -0.4722942517257751, -0.41008349799163324, -0.33791863995231797, -0.25935376697792534, -0.17847401501130722, -0.09970788252220042, -0.027597567059367667, 0.03344701856824073, 0.07941856238334777, 0.10696098196225201, 0.11361903774824056, 0.09801612411858796, 0.060013858300844936, 0.0007463416860148397, -0.07736487353347998, -0.1707661286706461, -0.274915227493679, -0.3846213153257536, -0.4943021848988973, -0.5984421223241712, -0.6918622433229316, -0.7701831307519642, -0.8299818452566137, -0.8691403283526222, -0.8867874386262802, -0.883459863327289, -0.860800395223797, -0.8215399202317082, -0.7690146315802782, -0.7070567200187892, -0.6394589031287699, -0.5698960433241949, -0.5014718193832284, -0.43676559160474526, -0.37754255201370723, -0.3249268410418531, -0.27938039331038844, -0.23764045500086617, -0.18716777703050802, -0.13327886928086397, -0.08725083003944256, -0.06760067155700966, -0.07853650070443496, -0.10809319001751483, -0.1454057173710801, -0.1835802060486449, -0.22167031234270507, -0.2594175708847315, -0.29669254043219073, -0.3335755871873438, -0.3701712939212589, -0.4065091025830796, -0.4425166048070812, -0.4707704974274227, -0.4898702270561026, -0.47325194069559373, -0.45381241690522245, -0.429637550294653, -0.39405371970158587, -0.3459415156121688, -0.28446910908623746, -0.20900651467167997, -0.1938798431813975, -0.09009563721614278, 0.028617996185207772, 0.16118641456198723, 0.3057828538830343, 0.4597604431135931, 0.6195076038683425, 0.7804723283067787, 0.937097916483264, 1.0830257567344557, 1.211219839118133, 1.3144189587289947, 1.3855042631400423, 1.4432561113417997, 1.5255135928606993, 1.437705717877174, 0.8943925027459496, 0.3089095481883284, -0.058475038730549045, -0.3536702523745223, -0.6365252550154574, -0.8918861120583781, -1.1044585267255354, -1.26071559538883, -1.3499233350582225, -1.365070656328701, -1.3033851737221793, -1.1666854205922048, -0.961177306530745, -0.6971486825594244, -0.38811095076476576, -0.050009505947014254, 0.3000090709295211, 0.6445490065986803, 0.9672090589808287, 1.2533678208158348, 1.4911250977613468, 1.6716946471358431, 1.7898644789000713, 1.8439241162800784, 1.8356216750520682, 1.7696966623701371, 1.6534692039428025, 1.496976909976853, 1.3213230631602295, 1.136791570326107, 0.8107998376298644, 0.47644806511461724, 0.2717070284906171, 0.14013350053514984, 0.031143884866763116, -0.06096085739889112, -0.13538348594280158, -0.1924910683971408, -0.23371023040064998, -0.2611644067284855, -0.27746252198662624, -0.2853406436259087, -0.28753693063701125, -0.2864838739895337, -0.28422423962194543, -0.2822255902274087, -0.2814099916231294, -0.28210208309692053, -0.2841499503480982, -0.2869745144813294, -0.28974083868993716, -0.29145801660186343, -0.2911489173497195, -0.28793705414527615, -0.28110711844325387, -0.2700522170745021, -0.25547107816051806, -0.23759056066816253, -0.20171743638411854, -0.13770158200144422, -0.08925486436257479, -0.06323799091909876, -0.023095848602109115, -0.052253058197015534, -0.09203752583068514, -0.13050609397384427, -0.16601297479319221, -0.19698952596449004, -0.2219644795218212, -0.2396247916772989, -0.2490099115029505, -0.24954893078316953, -0.24123709476701727, -0.22459794441021153, -0.20079294371659184, -0.17148052991719442, -0.13883151920642334, -0.10528972542375659, -0.07349931879357818, -0.04600973073141423, -0.025155643882707412, -0.012778169497904113, -0.010119935828137194, -0.017642252530813973, -0.03499633018132253, -0.060995825897933065, -0.09369792968403323, -0.13054581780207863, -0.1685480035443998, -0.20454994447631214, -0.2354537242637449, -0.25853330183690604, -0.27160969202450014, -0.2733097283747947, -0.2631190350810191, -0.2415082603161136, -0.20982737839250343, -0.17027729016635895, -0.1256673566394534, -0.07927000023548403, -0.03451189277639266, 0.005212674416959218, 0.03683006091935859, 0.057738000978926785, 0.06600626580540514, 0.06044400848783704, 0.04068628158185916, 0.007169917671651316, -0.03888312209865452, -0.09556171478402664, -0.16035572150985544, -0.2302962761175884, -0.30208971951887653, -0.3722798367463427, -0.4374031927067268, -0.49415677665025726, -0.5395558402648213, -0.5710895199309522, -0.5868588610161254, -0.5856969536933812, -0.5672594784680571, -0.5320817993277562, -0.4815945301416549, -0.41809424400215, -0.34466654911647154, -0.26506123151916017, -0.1835243184401465, -0.10458950623163688, -0.03284425861538098, 0.027328051484518, 0.07200034556800361, 0.09795604283918635, 0.10289584243434136, 0.0856265555160296, 0.04615527639898365, -0.014241923876704865, -0.09309050681302056, -0.18679647287443668, -0.29089724115167126, -0.4002698435117211, -0.509525947915507, -0.613277507811584, -0.7065890739730918, -0.7851904011996811, -0.8458736032223282, -0.8865409663075288, -0.9064527452936302, -0.9060451050649525, -0.8869962068268324, -0.851830207539487, -0.8038494446995195, -0.7466198421806847, -0.6838751675954129, -0.6190170155356669, -0.5551015646430935, -0.49446490899263673, -0.43877778803277634, -0.384474215992769, -0.3101566579577444, -0.20993412293596236, -0.11651579072400953, -0.06338086961004574, -0.05468448573327045, -0.07876945595195739, -0.11180219113995982, -0.14777202059155758, -0.1847699333628272, -0.2219029576865017, -0.2586513008923488, -0.29474877797977594, -0.330093071292179, -0.36476891271973777, -0.3988950097942352, -0.4326480093423619, -0.46548702859808255, -0.4694283969235391, -0.5448099926278571, -0.5164153862336924, -0.5074439022639154, -0.4885010967510004, -0.45756449810863753, -0.4135086346165977, -0.35532945219841494, -0.28227528253350265, -0.2759231403603888, -0.17428726842416964, -0.05658601249027839, 0.07614691477129298, 0.222094172112957, 0.3785373230095299, 0.5418018149487391, 0.7071796854216661, 0.8690151572392484, 1.0207662251319078, 1.1553114198308787, 1.2652331713927172, 1.343369592847143, 1.4049652155439638, 1.4869694196461403, 1.430538117301765, 0.950520111196349, 0.33964764336443753, -0.03581317310639154, -0.31930655619008075, -0.5919585720807778, -0.8392422728301989, -1.0462534122010076, -1.1997389212153307, -1.2891732511839544, -1.307535395976152, -1.2519628918603356, -1.1239098926789355, -0.9291763918455453, -0.6773786669213546, -0.3814060860869386, -0.05638019488936141, 0.2812108788011942, 0.6147432835424658, 0.928322618065784, 1.2078703554344026, 1.4417155219139444, 1.6212938457280917, 1.7413182771130788, 1.7999893791313895, 1.798740873388729, 1.7419988109934712, 1.636672402189463, 1.4933176203949419, 1.3432852451270252, 1.148438527547988, 0.79994397186951, 0.4670410487341332, 0.2662628488340326, 0.13521944653011442, 0.029758530019298846, -0.05568588543642328, -0.12179509939410416, -0.17048302644404423, -0.20437106457910836, -0.2270526586057411, -0.24139690480170284, -0.24941061909805207, -0.25307837898330554, -0.25459060408181955, -0.2558184636035623, -0.2581228440476844, -0.2622239562133988, -0.2682910407403565, -0.2759664323862534, -0.28452962933412085, -0.2929986763704724, -0.3003086790390279, -0.30548756372282604, -0.3078114952459572, -0.3039329620249447, -0.2611714724701777, -0.20372429971992112, -0.14390634210272424, -0.08549481148454774, -0.04005331198321471, -0.013793758892925112, 0.01008595448661076, 0.023232497704407606, -0.016690983479032973, -0.0596404009102498, -0.10187503119955377, -0.1417254317579637, -0.17755124638830644, -0.20775483946567164, -0.23094902850582777, -0.24603918611967934, -0.252394991144433, -0.24987657825142673, -0.23895976156745657, -0.22066757806858028, -0.19661175737730296, -0.16881835923483202, -0.13967731200101996, -0.11168769253036803, -0.08734176294335327, -0.0688490180707757, -0.058008404424396254, -0.05598753725669203, -0.06324529383700028, -0.07943496155639473, -0.1034237235106581, -0.13335548842477185, -0.16677730397761348, -0.20084836530828398, -0.23253837110199105, -0.25892054933736985, -0.2773711705069388, -0.2858554800132833, -0.2830475304500788, -0.26852207032880393, -0.24273674849141058, -0.2070804775563928, -0.16370825389660687, -0.1154519147162823, -0.06555044493586298, -0.017477637927151624, 0.025356114640794847, 0.0597839305269493, 0.08313286830609812, 0.09334849456049055, 0.08914872481622083, 0.0700616290426943, 0.03647042433006398, -0.010434888204666759, -0.06870665187545466, -0.1357556122077277, -0.20846888392865948, -0.28337132511332586, -0.35678706155889817, -0.42502478955353507, -0.4845580507834155, -0.5322108263632064, -0.5653277839297286, -0.58193048766113, -0.5808436149317098, -0.5617883795370986, -0.5254314728069631, -0.4733876441080067, -0.408169695425203, -0.3330884723986065, -0.2521034044078799, -0.1696312197746157, -0.09032113480393655, -0.01880619764318503, 0.04055167247685154, 0.08391775448497052, 0.10821143693337354, 0.11131343448213116, 0.09220383583365233, 0.0510694082288663, -0.010698178086109955, -0.09052719519884711, -0.18483363621356208, -0.2891767937735654, -0.39857983237443095, -0.507770298310573, -0.611594265881247, -0.7052540574734874, -0.7847212988210615, -0.8468648397498182, -0.8897635070917964, -0.9126377215964192, -0.9159999763351596, -0.9013647708342996, -0.8712437681193035, -0.8286879948196852, -0.777203932255313, -0.7202418641186792, -0.6611419256956848, -0.6026831417552225, -0.5471553302619392, -0.4787186692416321, -0.3405642937996607, -0.1875489728750095, -0.08081233251903974, -0.04842173933797955, -0.060745199450242815, -0.08818327958964467, -0.11949331252899853, -0.15343010964904202, -0.18914262235976764, -0.2254531130309685, -0.2615150810650926, -0.29678974278683246, -0.33097992347292937, -0.364057808392543, -0.396126351891926, -0.42744918710620894, -0.4581772009232328, -0.48107078155001215, -0.5328332051612579, -0.557693560374064, -0.5615053726552901, -0.5596428138500684, -0.5469089544500774, -0.5219152193165204, -0.483341321274648, -0.43005966916919647, -0.36111764215279507, -0.3629343220335066, -0.26531249611312724, -0.15054608199552177, -0.01961163795261811, 0.12569660755629464, 0.2826385070231332, 0.44745892655173236, 0.6153716832311922, 0.7805849077937168, 0.9364722540999502, 1.0757830046620107, 1.1910535040753842, 1.2750364413931727, 1.3377788320216144, 1.4249080752537555, 1.3813244567618952, 0.9847267297455549, 0.3716906225224461, -0.03324613972449075, -0.31225474900791994, -0.5736065572849585, -0.811643574504691, -1.011878552349602, -1.1614361579042178, -1.2499844855566042, -1.270613208535332, -1.2203010230628983, -1.100263873909765, -0.9157709297927283, -0.6758930672223986, -0.3927253836779805, -0.08069044788961133, 0.24458367523760938, 0.5671211989473344, 0.8717420385599652, 1.1447886272827912, 1.3750081293487897, 1.5539425167607241, 1.676379516399244, 1.7403294346176255, 1.7470042997583866, 1.7004568129007662, 1.608588371343183, 1.4911535515166423, 1.3589129691124278, 1.1107225848307491, 0.7009621461332003, 0.32670420644845066, 0.11501599521591732, -0.01845204988982907, -0.11746415563604984, -0.18541308467255924, -0.22629553636729405, -0.24510718598244008, -0.2475304605802613, -0.23896851028976585, -0.22433900148190933, -0.20819417579921407, -0.19432768397952316, -0.18512006953652715, -0.18154991676428445, -0.18328125426721797, -0.18895958694926307, -0.1964365400663759, -0.20315909580863245, -0.2064969299180195, -0.2041372567059696, -0.1944017357340897, -0.17652419698376853, -0.15019199708208575, -0.10842461774363699, -0.059156003877635754, -0.015831725277378972, 0.022539109399128066, 0.038453868219568754, 0.01626159322799925, 0.005514096056243645, 0.06892450530870597, 0.0674599725363203, 0.023848629446794334, -0.02171085793058225, -0.06720773865400176, -0.11096885953690983, -0.15124843825599488, -0.1863599560588458, -0.21479484382190606, -0.23537924784301012, -0.24735750090825448, -0.25052458566043345, -0.24522841660615136, -0.2324334747355996, -0.21361665298158927, -0.19074127045025824, -0.16605542433308518, -0.1419887029583342, -0.12089772328656556, -0.10492832614370506, -0.09577730781973459, -0.09457896802374943, -0.10175507949688312, -0.11697921592517835, -0.13916559836532194, -0.16653787562951594, -0.19676683341156442, -0.2271303785236325, -0.2547628369187136, -0.27685395288646064, -0.29093529430076503, -0.29504386428107654, -0.28795893060662403, -0.2692613851715815, -0.23945362252527946, -0.1998792219156441, -0.15270264682679935, -0.10070222124230838, -0.047136812810669615, 0.004532631811804244, 0.050827404232095474, 0.08852752784953544, 0.11483860917210698, 0.12760347244273296, 0.12540193466604754, 0.10766316240049112, 0.0746777283112956, 0.027605550395157774, -0.03159680252725838, -0.10025898638603037, -0.17513889060594945, -0.2525744469768978, -0.32867373740777595, -0.399508860336927, -0.4613267087605952, -0.510750890518354, -0.544977203779839, -0.561942061403534, -0.5604609647639451, -0.5403210162613172, -0.5023252953076245, -0.44827895686619845, -0.3809205644151148, -0.30379551080043155, -0.2210826452076048, -0.13737775836322674, -0.05745054325942456, 0.014015367878528417, 0.07268297165515958, 0.11480688721740528, 0.13745544146177213, 0.13868282835491752, 0.11766445555279392, 0.0747488726856087, 0.011474832513871602, -0.06952544375192371, -0.16463389956836938, -0.2694922699485951, -0.3792072292005928, -0.4887088815849836, -0.5929890225738799, -0.6875006798036685, -0.7683373907980391, -0.8325829449136144, -0.878339039069969, -0.904948139319715, -0.9128142596326025, -0.9034714762270326, -0.8792100706044512, -0.8430306608956322, -0.7981574236869031, -0.747969626133651, -0.695503949307402, -0.6418439810960688, -0.5560614844071774, -0.35922898662327496, -0.16623204237336564, -0.07866556922447066, -0.0663672083925344, -0.08144503369450762, -0.10358259997647057, -0.13047130352513037, -0.16167587896333124, -0.19559405973517574, -0.23085317077005563, -0.2662900034207798, -0.30103686455316314, -0.33452244204009673, -0.36650106282721406, -0.3969487431900607, -0.42609948564194156, -0.45425462605543565, -0.48118871807401575, -0.4872090534371214, -0.5916337085635934, -0.5883013355633278, -0.6029193090574081, -0.6082906635601999, -0.6028010082636133, -0.5849145770718804, -0.5532137770862722, -0.5063280446789333, -0.44317046695077345, -0.45175553556163983, -0.359894220313147, -0.24991589522112534, -0.12267798492278459, 0.020047668427984888, 0.17552685222650943, 0.3399554847479571, 0.5084720021754325, 0.6752071009423091, 0.833440437976753, 0.9758701827734235, 1.094974458139676, 1.1835057948133265, 1.244967957822519, 1.3352623959829835, 1.3240548196857649, 0.9928876755381673, 0.39187847771302575, -0.05250856928200909, -0.3302077887759247, -0.5793870148962443, -0.8071755999088728, -0.9995988560256879, -1.1441549223150798, -1.2308233961769224, -1.2527596314405978, -1.2069135756207237, -1.0941698939243558, -0.9194009336765099, -0.6909927564281562, -0.4203790703515029, -0.12110828709748489, 0.19192300663527018, 0.5035802852349862, 0.7992762854172728, 1.0659635294193102, 1.292696596760818, 1.4712863954106066, 1.5965010357404932, 1.6663290059275413, 1.6825976174880601, 1.6543862597677688, 1.5937120955424908, 1.4643354404967361, 1.2659619287500647, 0.887715077083362, 0.3721111798965824, -0.0034621234379734744, -0.18209980634454936, -0.27986203703128787, -0.3366855894828298, -0.36307673242208516, -0.3651310759916626, -0.34673942692734006, -0.3125528935848578, -0.26717242813236375, -0.2158693746152469, -0.16428910264615126, -0.11684653141523071, -0.07629705807273268, -0.043877762808374854, -0.019623235042271148, -0.0024929651089049543, 0.009325342638563328, 0.018152910046568493, 0.026449977497620125, 0.03649865627471982, 0.05007446728327203, 0.06824888791939188, 0.09125006292654092, 0.11554341363016007, 0.10644461283730955, 0.08481937978725806, 0.06161845845771552, 0.037328786833877636, 0.011327710038951722, 0.044370126415872235, 0.13234963436281344, 0.11278679148316773, 0.06793026901033539, 0.020419987592703137, -0.02779028767637115, -0.07495437967559493, -0.11923032440567116, -0.15882889023402758, -0.1921453491938223, -0.21789257637910087, -0.23523149404656074, -0.2438404773900582, -0.2439955258797042, -0.2365387229417899, -0.22287641453833418, -0.2048399077582781, -0.18460044358515892, -0.16445167944166883, -0.14667232319614243, -0.13328940118332167, -0.12594112719071937, -0.12569168595861502, -0.13294993232795682, -0.14739542356973223, -0.1679910164606362, -0.1930485897176868, -0.2203406499248688, -0.2472917713080669, -0.27115664443565923, -0.2892832544524757, -0.29929585169501915, -0.2993524035296329, -0.2882626624682847, -0.2656651520691874, -0.2320281071978142, -0.18870046232267124, -0.13778157235626076, -0.0820452285237741, -0.024707448046171032, 0.03073605049164918, 0.0807842653541061, 0.12211768963413838, 0.15184872910205305, 0.1676733263184108, 0.1680464788129865, 0.15225917290549473, 0.12051307908358244, 0.07390673878266663, 0.014405857432866487, -0.05525918760943549, -0.13171577569370285, -0.2111255187417691, -0.2893761898149845, -0.36230562218554674, -0.42592759119566015, -0.4766633116189194, -0.5115534762230669, -0.5284472496643717, -0.5261474373640005, -0.5045078948868156, -0.4644683443010056, -0.40802886457279897, -0.33815684768961085, -0.2586386799881204, -0.1738762193286152, -0.08864960677481393, -0.007851250847696445, 0.06378335710048533, 0.1219408339605832, 0.1629694544994733, 0.18408264385424178, 0.18351861713022943, 0.16063594820407556, 0.11596297581443382, 0.051158855583325336, -0.031054812905321416, -0.127072158618458, -0.23257167497710984, -0.34281260117423606, -0.45285793943959884, -0.5579389146620617, -0.6536592980593783, -0.7363537937990436, -0.8031873202130786, -0.8524293080138872, -0.8833769826877038, -0.896495311631627, -0.8931417350602953, -0.8755765659996584, -0.8465330025756659, -0.8091615998615662, -0.766535335252684, -0.7198332768938638, -0.6315722652019602, -0.40117372303823395, -0.17892872845921826, -0.10646104967808623, -0.09980186472132946, -0.1085324045701972, -0.12306444526304094, -0.14459822366321173, -0.17174783436971186, -0.20296881060585825, -0.23659432521371038, -0.27116368788968614, -0.3054628126371721, -0.33858897628685014, -0.36999012924148644, -0.39940797668340267, -0.42692342860159105, -0.45279294553938954, -0.47743542693937346, -0.49305717119618464, -0.5465135578288711, -0.5904365324877539, -0.615518918461019, -0.6377546795721045, -0.6510131263592038, -0.6535989206645052, -0.6439177925390673, -0.6202882968437882, -0.5812192547284649, -0.5253555509854282, -0.5385472066983183, -0.45406526920043433, -0.3505459472087944, -0.22878396948913426, -0.09045352556879749, 0.06169676291312953, 0.22385959830383406, 0.39110934391800534, 0.5575266463747077, 0.7163343755743963, 0.8601996684241104, 0.9815962131460179, 1.0732954893356617, 1.132441315845928, 1.2131050182486227, 1.253116385944975, 1.0070077082974, 0.46283876818391256, -0.06806182890047885, -0.3689940126322413, -0.6055605652915839, -0.8223572682886764, -1.0061176591348762, -1.1448238128787525, -1.2287332116644798, -1.25119525055855, -1.2090608893428154, -1.1030206453146398, -0.9374398514141529, -0.720158310608153, -0.4618022563916062, -0.17517968597699873, 0.12571510322799728, 0.4264655369411221, 0.7132554706834418, 0.9735396962041674, 1.1968450432404008, 1.3751637594609365, 1.5034788536069703, 1.5814187523346677, 1.6197722269219135, 1.625882169692027, 1.5146662792105303, 1.2996855640713503, 0.9470729617185718, 0.45189589898788185, -0.014469772757397692, -0.25556222444904453, -0.34980453483060536, -0.3919782492649899, -0.4114517583394557, -0.4127976001612348, -0.3962274672258008, -0.36318651541768254, -0.3162439579183687, -0.25866220416943975, -0.19420433564648398, -0.12670113536925776, -0.05987406330738665, 0.0030023455610077576, 0.05919753474145395, 0.10671599437464785, 0.14428817997797871, 0.1714076040348047, 0.18822865738533778, 0.1954797490503264, 0.19430900066983803, 0.1861257613760099, 0.17244799044912895, 0.15472372264552448, 0.13414551739371738, 0.1110233816074917, 0.08627733329231368, 0.06041053448103817, 0.03362601650699304, 0.016337129302737452, 0.1193825617952804, 0.19677645802445465, 0.1595299903257672, 0.11397546809735815, 0.06514435448300482, 0.014803046035368972, -0.03520307304015802, -0.08295639460912341, -0.12656030825128983, -0.16431348329254725, -0.19482800378230403, -0.2171606522870002, -0.23090253341687106, -0.23622038269462786, -0.23387662275623322, -0.22515898325933525, -0.2118168495204169, -0.1958932445158208, -0.17959590333172537, -0.16507890679604142, -0.15429288523185214, -0.14878249215862782, -0.14957009036178226, -0.15703325876377783, -0.17086686932711026, -0.19008245554953662, -0.21306790686421428, -0.2377145643514158, -0.2615599798053063, -0.2820097972167174, -0.29651796505431594, -0.30284088043412305, -0.29919195985142055, -0.2844554057083989, -0.2582556220839084, -0.22107186619808317, -0.17418797388395618, -0.11968274401198958, -0.060263126858010885, 0.000854420420863089, 0.06018855349761032, 0.1141740621458629, 0.15942558592783937, 0.19292222368536083, 0.21223197466164334, 0.21564800733485323, 0.20233066042647585, 0.17236083618117926, 0.12677659869785174, 0.06752817239186637, -0.002595079678858525, -0.08010618358957, -0.16099016536147426, -0.24092256194826955, -0.3155041824143794, -0.3805176838347517, -0.4321772821937939, -0.46736744847817535, -0.4838451380754454, -0.48039902377062704, -0.4569455709385766, -0.4145610461193536, -0.3554372819346421, -0.28277191896864307, -0.2005894494670799, -0.11351680269478592, -0.026515293219606884, 0.05539835015929451, 0.1274395204877341, 0.18531808883474699, 0.22547566153201526, 0.245272405268945, 0.24312299636131174, 0.2185746918544622, 0.1723162119823043, 0.10614056829183349, 0.02282342215981714, -0.07401374687921702, -0.18014065374953026, -0.290919363971919, -0.40162212474771497, -0.5076409616582946, -0.604831102032839, -0.6896562601917928, -0.7594894706029995, -0.8126208284769882, -0.8484562038770846, -0.8673417351356854, -0.8706377261077654, -0.8603677431718042, -0.8391991452456296, -0.8099835011908239, -0.775248745215714, -0.7013286044506932, -0.4761288635032883, -0.23141606576007878, -0.14957975018282377, -0.13881706177524267, -0.14067340913146187, -0.14681563094706673, -0.16143880131133947, -0.18319359584187156, -0.21047403690212274, -0.24148866408708347, -0.27455120113009457, -0.3081278180142366, -0.3409689591422813, -0.37215900420714565, -0.40111848390776217, -0.4276605166061591, -0.45186829529479144, -0.4741629625141961, -0.49430721506091135, -0.4876428830846997, -0.5855695978426079, -0.5962066005595119, -0.6332237305217276, -0.6633855000109117, -0.6850043652191617, -0.6964224416000064, -0.6957831440605542, -0.6813188734838214, -0.6512381622849395, -0.6040560205879961, -0.619056498315615, -0.5432928749164931, -0.44773333171393137, -0.33298477199586696, -0.2007007047314726, -0.053552768066527534, 0.10460703128007154, 0.2688562269707866, 0.43321487887008026, 0.5909033977203659, 0.7345712838584646, 0.8567376117254399, 0.9502187571716503, 1.0087041127187, 1.0646223720698345, 1.1406366287033487, 0.9970255535938386, 0.6010920605813959, 0.0030821550142986487, -0.41001413977162926, -0.6470042000245368, -0.8523116508043884, -1.0268587700238885, -1.1590767253029313, -1.2396231799832913, -1.261982755701112, -1.2230428754218652, -1.1232111248908652, -0.9664864905493245, -0.7600430598440244, -0.5138373627744821, -0.23979195964686273, 0.048874584047745806, 0.3386230186820658, 0.6163005888570448, 0.8700212470447735, 1.0897010518281176, 1.2676923260998576, 1.3999440625992223, 1.4933084590519163, 1.5740562545537173, 1.5291329097323647, 1.3256986197328016, 0.974100115065951, 0.5313694781869764, 0.11504430581807457, -0.18778146058633016, -0.31946072154904437, -0.3695566404776258, -0.3979453320769508, -0.40980261392505835, -0.4040630624693815, -0.3810112556601055, -0.3422771764958217, -0.2904529993249092, -0.22894044103485278, -0.16149900395270933, -0.09204759013826624, -0.024261515657315158, 0.038577796353965965, 0.09385083471088684, 0.13964592535771736, 0.1748569700167586, 0.1991179066193709, 0.21274669616812503, 0.2166045593354493, 0.21194003677512718, 0.20023401490131398, 0.18301196679186305, 0.16173687160624972, 0.13764857615791115, 0.11174668281043232, 0.08468924026610125, 0.056872392674971906, 0.028894242250007807, 0.0530995539379262, 0.20090623976225963, 0.24508268162294833, 0.20571274492798253, 0.16015910950808987, 0.1106126145654347, 0.05876521748505681, 0.006498751781120582, -0.044158581958079424, -0.09123765792788241, -0.13292261942140415, -0.16773699997219405, -0.19463408880872768, -0.21310929894864383, -0.22323807635572113, -0.22567883376445597, -0.22163187476953183, -0.21273108583591505, -0.2009293834714656, -0.18831334616101048, -0.17695005570995948, -0.16868397504540678, -0.16499595258557687, -0.16684759986821673, -0.17460076464842067, -0.18796034699828656, -0.20598355250287803, -0.22714278968714585, -0.24942512137841588, -0.27050152882870937, -0.2878869762618669, -0.29917087955617094, -0.30218605881536786, -0.2952368503807188, -0.2772183923632806, -0.24777965128905532, -0.20734645535783602, -0.15717725809148309, -0.09927108964635428, -0.036307291542246545, 0.02854657756917428, 0.09178572308014266, 0.1498175490110965, 0.1991549854478615, 0.23666761221375016, 0.25976215561108795, 0.2665821707328363, 0.2561274158836069, 0.228361676498138, 0.1842372314287668, 0.12568770139450125, 0.055541995656901655, -0.022600860578925186, -0.10456220204130373, -0.18580627545295902, -0.26170354965078824, -0.32780403268408653, -0.38011671993062546, -0.4153658407368237, -0.4312147618578832, -0.4264319190069772, -0.4009934111145754, -0.35610415736184775, -0.29414426894463164, -0.21853219454820705, -0.13352740573908672, -0.0439716550228233, 0.04499439226352009, 0.1282389131645314, 0.20092769125392151, 0.25879905631684785, 0.2983848360981105, 0.31718952412749335, 0.31380016899507623, 0.2879393146933287, 0.24045548347506007, 0.17324848162603912, 0.08915814848801684, -0.008221462633060117, -0.11472195895809723, -0.22586990669651463, -0.3370903505099845, -0.4440198293492603, -0.5426757480293096, -0.6297601776267694, -0.7027293631811995, -0.7600316065064989, -0.8010211217327168, -0.8260913372771848, -0.8364130074962723, -0.8339653590762257, -0.8211316494176915, -0.8006358937799494, -0.7508792438245551, -0.5766561841748787, -0.319112113151931, -0.20750198056352653, -0.18287058242416854, -0.17659010036666345, -0.17437219693117756, -0.18091653086222403, -0.19585690122226573, -0.21775434174631503, -0.2448497423443583, -0.2753581525756914, -0.30750796271422853, -0.33974038828922204, -0.37076561270972874, -0.39963324631893826, -0.42579990251867006, -0.44906150081788443, -0.4696337716155572, -0.48788731659617834, -0.4944696862331739, -0.5166410661286456, -0.5533383787216586, -0.5944996015488897, -0.6388202902656541, -0.6769792032445263, -0.7073511959917571, -0.7280477920442818, -0.737176933374478, -0.732658454930732, -0.7125978147303895, -0.6751810904678859, -0.6887431352561562, -0.6228430463105807, -0.5364149723659182, -0.43001493476604935, -0.3051358966502047, -0.16447087419658768, -0.011806584437320744, 0.14787440472745228, 0.3086224911053268, 0.46362200957822886, 0.6055864179597572, 0.7270673920660382, 0.8210035621140079, 0.8811664405875108, 0.9152791354621943, 0.9827031984600825, 0.923495304153382, 0.6652190712819612, 0.2358812594144083, -0.317106895508918, -0.6674999598675582, -0.8894313895889985, -1.0562177462278184, -1.181643569946619, -1.258456802880361, -1.280402583425734, -1.244327061451644, -1.1504937364235186, -1.0024357840767344, -0.8068009638183895, -0.5727554686309855, -0.31146633696413595, -0.035239978425248175, 0.2431515480228521, 0.5113599040083727, 0.758076286221975, 0.97373500237053, 1.1511087447928294, 1.2901061447561957, 1.4197978782782381, 1.4814090891407137, 1.3550099493423855, 1.0177057591219323, 0.5833896523967415, 0.2394833577761637, -0.0728473285947615, -0.2713178670163754, -0.34413746984854, -0.37852882271741706, -0.3992640581809477, -0.40395479444312965, -0.39158381445905466, -0.3626218753064414, -0.31871810601143835, -0.26261761575941467, -0.19772189802004458, -0.1278996455438044, -0.0570396633692134, 0.011138525644206254, 0.07342952983207596, 0.12724948743703024, 0.17081325023074, 0.20312548986459866, 0.22398126702559296, 0.23385800807649737, 0.233779544338228, 0.2251637037636165, 0.20961777683319305, 0.18881005609630108, 0.16426644518733902, 0.13732264954177076, 0.10897094833759091, 0.0799187653231499, 0.050494690474195636, 0.020939069606697558, 0.10696141586112162, 0.2725632220754921, 0.28708578080908964, 0.24926796136847962, 0.20445291581207492, 0.15483493511307422, 0.10208497608537037, 0.04818764477441828, -0.004790151077631144, -0.05475762318623101, -0.09983191740033925, -0.13841846891547593, -0.16939031732870324, -0.192137875361718, -0.20664745154108788, -0.2134822404055421, -0.21374203313278928, -0.20896737893579664, -0.20100005778169594, -0.1918343615168503, -0.1834286754689094, -0.17754923611619366, -0.17559660131132726, -0.17849116602279835, -0.1865713776226352, -0.19955723095236855, -0.21655398709969076, -0.2361057234685049, -0.2563071366939923, -0.27493180236193016, -0.289624030250088, -0.29806314512897947, -0.2981848620203231, -0.28832977707717444, -0.26743517005214235, -0.2351172471057622, -0.1917825248864885, -0.13860984759652273, -0.07755356841065292, -0.011218450466037755, 0.05724259133540155, 0.12433864551084062, 0.18641762338781132, 0.23991756087066246, 0.2815691707527054, 0.3086344842497516, 0.31908096229389354, 0.31175542180104976, 0.28648100986689284, 0.24412516700814102, 0.18658481054235887, 0.11672556086074648, 0.03824260870570706, -0.04452532295231304, -0.12684215000128063, -0.20384999742246812, -0.270872010950832, -0.3237107087800699, -0.3589309681504349, -0.37409712465879563, -0.36795399840826715, -0.340527259550758, -0.2931438055525786, -0.2283575919065468, -0.14979953770039445, -0.061946744145552124, 0.030151633618555884, 0.12119283419562876, 0.20593329733473875, 0.2795021867188401, 0.3376632157668791, 0.37704295737255267, 0.39528095814102615, 0.39112963754729724, 0.36447544149249733, 0.31630658844446335, 0.24862392487756546, 0.16429733445970873, 0.06690301402838372, -0.03950239290150792, -0.15057576708650444, -0.2619639353563086, -0.36948210489734556, -0.4694027099853191, -0.558564577155682, -0.6346283734563478, -0.6960619089598019, -0.7423197227200786, -0.7736678938956176, -0.7912696472412959, -0.7968531623338224, -0.7927150526883526, -0.7730564178257406, -0.6809866314971922, -0.4459047953068995, -0.2782393467567479, -0.22994308391927287, -0.2149964804225386, -0.2050235496373869, -0.20280631842440344, -0.2097440834814861, -0.22483485956844285, -0.24653478156511355, -0.2731273766918667, -0.3027370964317626, -0.33359007798732243, -0.3640678156323469, -0.3928499974470334, -0.41899030782614766, -0.44191520066709167, -0.46151700076394775, -0.47800604424572146, -0.49110378986724346, -0.4604255897721634, -0.5137586688159974, -0.5236155507687954, -0.5782983019681245, -0.6296234364466358, -0.6757991872611404, -0.7149793630338621, -0.7453044101776793, -0.7645730590291997, -0.7706473314515403, -0.7612785707634266, -0.7345422412895939, -0.7432387591931455, -0.6879594161489617, -0.6116219668753953, -0.514540121486939, -0.39820430257876627, -0.26517301207268673, -0.11928710422117739, 0.03454104561558502, 0.19030706816024434, 0.34127431554272825, 0.48016238690915536, 0.5996626356081949, 0.6927949057490723, 0.7535139045345103, 0.7786610039154067, 0.8104102531570314, 0.8256616182843151, 0.6426607895219649, 0.37051752418034223, -0.022903662116165346, -0.46922130267534534, -0.8262255410122012, -1.0498589839163115, -1.1863875720486057, -1.2689972910690184, -1.296597122655962, -1.2667951333296639, -1.1798181659481592, -1.0408640884611202, -0.8563598374427723, -0.6349524289668693, -0.3869583984740075, -0.12392232171553275, 0.1422455813262271, 0.39991338335274573, 0.638490972156494, 0.8486965197905061, 1.0250144524491276, 1.1772397734148927, 1.3408954956452588, 1.3435841694140844, 1.0660904737568533, 0.60486753232232, 0.24992111944878692, -0.026210806912848827, -0.23586209735256114, -0.31927469710743805, -0.3561702999720766, -0.3832899785806796, -0.3970617533837766, -0.3951730071692676, -0.3768238494773648, -0.3425172911150929, -0.29407884805076456, -0.2342628876043964, -0.16660551411707836, -0.0949601504556874, -0.023290992790430565, 0.044737472739454276, 0.10592324171927459, 0.1577886632196268, 0.19863581281632925, 0.2276202319143632, 0.2446904994170005, 0.25049242604699806, 0.24623377861364304, 0.2334795248522905, 0.2140104493083932, 0.1895854631492746, 0.16186287018639334, 0.13219414703166343, 0.10165210402953839, 0.07088674428941921, 0.04027184916450999, 0.015107998250590171, 0.17308373139249333, 0.3397690441308443, 0.3241729557227053, 0.28823202308215023, 0.2447940564135873, 0.19568770292881332, 0.14268137770283307, 0.08775462651800225, 0.03309448184409103, -0.019171491071125146, -0.06703242437389134, -0.10883345548004897, -0.14332883796872498, -0.16983577649606607, -0.18823498216276446, -0.1990048221090277, -0.20314715018597407, -0.20210507097033048, -0.19762538326036494, -0.1915990230817899, -0.1858981472408996, -0.18219926453882507, -0.1818433364102423, -0.18570204019740522, -0.19410181596389575, -0.20677639086397748, -0.222875760465166, -0.24102090945515853, -0.25939408938157604, -0.27588302702206413, -0.2882262620917536, -0.29421051729765224, -0.2918289907852978, -0.27948150809223027, -0.256097898552321, -0.22128914303703584, -0.17539431983159126, -0.11954304398247839, -0.05560224524593371, 0.013867030811949621, 0.0857619332050471, 0.15657638330016366, 0.22262630539311312, 0.28024897305882335, 0.32605578267766067, 0.35714147489845194, 0.37130916298902056, 0.3672326314436179, 0.34459892348417687, 0.30417232796594096, 0.2478118476037392, 0.1784033052473073, 0.09973351393241803, 0.016287414322358806, -0.06700351138522853, -0.14506293551751082, -0.21298956703795957, -0.266384181193831, -0.30164975705430574, -0.31625037748163276, -0.30889795540374276, -0.2796605362518316, -0.2299703396930397, -0.16254335760954897, -0.08120022693126061, 0.009377467891095392, 0.10395839210555691, 0.19708729229782684, 0.28343110446703657, 0.35808360425020425, 0.4168474879493764, 0.4564347146787102, 0.474620924284036, 0.4703064439814586, 0.44352873765393674, 0.3953976309945715, 0.32798847804218045, 0.2441931569209066, 0.14752963421610144, 0.041955740855975865, -0.06837242799485876, -0.17928079697453203, -0.2868413395027911, -0.387503529455568, -0.47834848456349643, -0.5571253095924664, -0.6224589063959316, -0.6737496322241219, -0.7113071165280509, -0.7360955794805104, -0.749793759210557, -0.7540042827788218, -0.7247421277145829, -0.5696508149642465, -0.35975686641736404, -0.2784048725697734, -0.2541926625794195, -0.2375194068051365, -0.22652043943353095, -0.22477193903795423, -0.23192463664050145, -0.2468307994216934, -0.2680264523325395, -0.2937024708234315, -0.3220133081372172, -0.3511139265682779, -0.3793727308517596, -0.40544830514500596, -0.42836237117577536, -0.4476029464485718, -0.46303952369119994, -0.4749842234329096, -0.47114541010163613, -0.4360580111693366, -0.43533906898829056, -0.4845814982450358, -0.5452080553140979, -0.603280806764138, -0.6571530805915806, -0.705129247582863, -0.7450544161237307, -0.7747278229976597, -0.7916495744465459, -0.7934956627751095, -0.777958205436752, -0.778483511794068, -0.7343907230739326, -0.6686941188002642, -0.5816843234765363, -0.4746439692724307, -0.35017475438275625, -0.21199879177689063, -0.06509758551355738, 0.08462078085203206, 0.2303919414355926, 0.3650794896178535, 0.48143147471958514, 0.5726779594084013, 0.6328863290553124, 0.6575624386644798, 0.6522900130282534, 0.6651373751388108, 0.6158761023522408, 0.39303431828822877, 0.14468473894590872, -0.17149128083764875, -0.5109477676203396, -0.819349070214991, -1.034368707139386, -1.1708665532159355, -1.2417205325657363, -1.2501408333100965, -1.1914091066808297, -1.0737093368624944, -0.9090094191637643, -0.7069136273831145, -0.4776974127893112, -0.23233888526688062, 0.01756248343259692, 0.26057985170501397, 0.48807043199680145, 0.687131964034041, 0.8480160886322441, 0.9938035968540984, 1.1210689985113955, 0.9698840940122815, 0.5356017640384394, 0.13455815313676212, -0.09076614239239422, -0.23359095474738245, -0.2989789453634515, -0.334540589079781, -0.3648678357627906, -0.3854877074629195, -0.39294212008400287, -0.3851765293175262, -0.36144482339692896, -0.3224547758106189, -0.2700525618710925, -0.2071521647089316, -0.13728683982286238, -0.06441502204951366, 0.0075347784479813384, 0.07486712136830498, 0.13446292186266362, 0.18390042181248312, 0.2216143275110145, 0.24689585113023504, 0.25985762254213896, 0.2613320908762162, 0.25268705473836484, 0.23568407004182923, 0.21222033952405184, 0.18422322550075876, 0.15339523384512965, 0.12120613309624062, 0.08869261581302901, 0.05656573337371462, 0.025436177180619524, 0.032677064751821305, 0.23331290508011193, 0.3778370121914918, 0.35432167798986836, 0.3206198698825933, 0.27906519251888096, 0.23109203036202164, 0.17841042992692557, 0.12311038348681613, 0.06737538462910653, 0.013463643586109963, -0.036581029131097065, -0.08097408183466293, -0.11841578671440267, -0.14810617240620205, -0.16985760799891314, -0.18404357687437511, -0.1915838081285106, -0.19382376430866066, -0.19241735011122074, -0.18916540488192335, -0.18584955571878392, -0.1840751981069575, -0.18511846629299805, -0.1898177485856939, -0.1984844144577419, -0.21087093205126584, -0.22617242227223056, -0.24307715858813417, -0.2598593274691613, -0.2744963508369086, -0.28482996989873666, -0.2887184991983177, -0.2842269348251103, -0.2697728325343707, -0.24429852421055664, -0.2073682859352749, -0.15927843544534803, -0.10107191923297287, -0.034555312123021986, 0.03778574752507513, 0.112872085502288, 0.18720835784042622, 0.25705530888923644, 0.3186699244516582, 0.3685251385151924, 0.40356328413095266, 0.4214070874643366, 0.42056595889680537, 0.4005761130325094, 0.362100865784752, 0.30694660007623087, 0.23801602286596735, 0.15917296210947285, 0.07504220479005008, -0.009262407790652905, -0.08845205288484514, -0.15741019260469313, -0.21153761856122122, -0.24707841768375172, -0.2613905967266579, -0.25314841009701805, -0.22244673237577817, -0.17081076859013433, -0.10109344632071515, -0.017288058576710563, 0.07575066574897105, 0.1726253337358037, 0.2677595700953711, 0.35573904762508013, 0.4316462746820524, 0.491318121423171, 0.5315630942129643, 0.5502748037274523, 0.5464973487984568, 0.5203937521902413, 0.4731766717923849, 0.4069740283094885, 0.32466753649467117, 0.22971097853999467, 0.12591688965457237, 0.017275158697674264, -0.09228448875490436, -0.19903584412985165, -0.2996963478389958, -0.3914962650249896, -0.4723963976137435, -0.5410455510806296, -0.5969491225048982, -0.64028676832526, -0.6720180658151103, -0.6935590683909387, -0.7002100195163479, -0.6445932013114044, -0.4649010767608397, -0.3350868676144234, -0.2919237141763831, -0.2691396115238085, -0.2508836579351774, -0.2404886792224783, -0.23913286441549497, -0.24620739516960644, -0.2606715991135211, -0.2809639245480722, -0.3053409105597067, -0.3318790621746057, -0.3587488030774324, -0.38427985766066364, -0.40711038161885504, -0.4262939665322687, -0.44128867953882, -0.4520946055819568, -0.45752956206782347, -0.39618923605923495, -0.37017337731710764, -0.3635808162796206, -0.42810163150178404, -0.49358630060156994, -0.5577015729501369, -0.6189269551185372, -0.6753019120309709, -0.7247373736664153, -0.7646762398262785, -0.7925939468947174, -0.805760958041307, -0.8017882487825254, -0.7913020159975055, -0.7585361350572661, -0.7038501012211018, -0.6272531738110292, -0.5300572757812159, -0.41468825204946924, -0.28494445557769055, -0.14568642174631918, -0.00288359196580501, 0.1368426348307139, 0.2663717211107759, 0.37866579095793496, 0.46705645274365803, 0.5258700562488863, 0.5507249655487791, 0.5390643307118603, 0.5046566830135149, 0.4701627207136536, 0.38271564016362714, 0.1884435312380992, -0.034069144074277524, -0.2562390506782499, -0.5110534109225151, -0.7387869974760068, -0.9107996328931609, -1.0247078317189438, -1.0856226997024372, -1.0954130907491688, -1.0456084302408737, -0.9435518682445796, -0.7999585675048007, -0.6260596244570333, -0.4331814278798909, -0.2326513710068383, -0.03461091341574374, 0.1482002896388277, 0.3022618515092299, 0.42262050388886063, 0.5560222687729581, 0.5842787429384906, 0.3607586621488075, 0.01739258598899074, -0.18257476092143587, -0.2527845241769384, -0.2866160357984344, -0.31721384646232154, -0.3473135529671638, -0.37194064973459007, -0.3867806016152622, -0.38868249343558436, -0.3756776866117799, -0.34726109362064905, -0.3041784756334751, -0.24846276087265018, -0.18303691852741277, -0.11156674795531085, -0.03799113410037691, 0.033697302069708, 0.09986327526900496, 0.15740823043310925, 0.20401974254950517, 0.23824029523531465, 0.2595111338888092, 0.2681209888086151, 0.26506479604402244, 0.25191828581903586, 0.23057865249318432, 0.20314157708875413, 0.17160748813435767, 0.1378363918505201, 0.10328950737321918, 0.069107159224437, 0.035914907089679815, 0.004947092323845936, 0.05696479592770132, 0.2729569162005774, 0.3955120419921716, 0.3751002386842597, 0.3444311839366083, 0.3053105036826942, 0.2589909804797905, 0.20727251801391233, 0.15219189316250148, 0.09605751462150636, 0.04112380063091736, -0.010430622025801917, -0.056792605084753145, -0.09653509899089219, -0.12880877191723816, -0.15331252117251615, -0.17035410370561954, -0.18075146420471322, -0.18577044749977656, -0.18697260164047957, -0.18607370918528598, -0.18477801506142366, -0.18461858890581884, -0.18682350621317956, -0.19219471427601165, -0.20104020213289886, -0.21312826955929565, -0.22769941084241074, -0.24350769983933207, -0.25890560863547074, -0.2719614605080467, -0.28059443273994733, -0.2827400366761712, -0.27650203958429764, -0.26032726400549155, -0.23313599979655486, -0.19446357501858302, -0.14453189934156851, -0.08431955062578056, -0.015545868691792641, 0.05935540669154049, 0.13735125819411698, 0.21493596599541043, 0.28833430310791686, 0.35370640739984505, 0.4074030052165889, 0.4462017382350203, 0.46755718117695366, 0.4698041104149381, 0.45233443131397477, 0.4156995856453918, 0.3616532405667703, 0.29310203140142854, 0.21398108061772225, 0.1290406910695343, 0.04356877226959188, -0.036946494512446915, -0.10717969867319654, -0.16234003070333758, -0.19851226099771369, -0.21294861922754738, -0.2042744702803312, -0.17260206593600902, -0.11952590247899875, -0.04801807557840365, 0.03778959825039424, 0.1328900619762527, 0.23175843968673726, 0.3287129986590154, 0.41829273866534655, 0.4955717364127854, 0.5564438255805968, 0.5978002838805816, 0.6176593398563186, 0.6151816769953726, 0.5906462367441283, 0.5453377143011906, 0.4814126922995612, 0.4017216313127191, 0.30961670306234734, 0.20876655552721157, 0.1029408502215916, -0.004141627340073395, -0.10903398429517264, -0.2086505263572649, -0.30047984732545174, -0.3825826330295454, -0.453778560679285, -0.5135239167570278, -0.5620546297321898, -0.6001288421418174, -0.6290721826967767, -0.6366872273830779, -0.559915593593522, -0.4033684244202558, -0.327218294005851, -0.29704532984860066, -0.27396491036560366, -0.25585409867113906, -0.24617761509784675, -0.24499889158956778, -0.2518269661056477, -0.26550860116348873, -0.2845787469842791, -0.3072078008762469, -0.3315219047351765, -0.3556403297973101, -0.37789605852681074, -0.39693596546426857, -0.411789592114431, -0.4220134020331807, -0.4274883445669486, -0.4082782965922158, -0.2989740629661126, -0.23639945533038542, -0.2842441235671922, -0.35262177733770095, -0.42211311853630384, -0.4916275721947496, -0.5594840709361195, -0.6238547335811884, -0.6823092392602428, -0.7323269813944151, -0.7709710228596096, -0.7954690047596298, -0.8030000902739758, -0.7794511391927434, -0.7580320600971779, -0.7143107524936294, -0.6483118435098172, -0.5611075955690916, -0.4551992205500346, -0.3342286870462381, -0.20314484993892545, -0.06777216256494434, 0.06523648284358341, 0.1889638253427366, 0.2964368117397105, 0.3812608605390624, 0.437887376841811, 0.46220598049982753, 0.45173140390585464, 0.4060171590295545, 0.33473692617277706, 0.261889459525821, 0.13961984668898086, -0.015228486979386169, -0.19156909558393131, -0.38433920376866304, -0.5686550814356313, -0.7232172963212626, -0.8438139422079001, -0.9243299928830933, -0.9696578134757949, -0.9771187143627404, -0.942918869265096, -0.8701538393031072, -0.7665377747950934, -0.6407974045547835, -0.501812956271996, -0.3583928217020027, -0.22181077491540968, -0.09665033498852083, 0.021260157193683682, 0.16188879193078876, 0.19006212192379834, 0.05326845780142797, -0.15779838846834693, -0.2573624344467351, -0.2841038485860454, -0.3069100000085938, -0.33362560217971327, -0.35923850586004846, -0.3789741138417153, -0.38887619268853024, -0.38592070584878146, -0.36842477526738104, -0.33594795438353975, -0.28945534965792596, -0.23100382807693975, -0.16367598730146238, -0.09113161135805914, -0.017403822147974424, 0.05355543510645333, 0.118096177330969, 0.17320485066285052, 0.21664271428240411, 0.24708122139134936, 0.2641151666897237, 0.2681873780272337, 0.26049806333401193, 0.2427677248286706, 0.21711104285520832, 0.18572081436776067, 0.15078994576354532, 0.11419970135948354, 0.07755592545156631, 0.04193580255537377, 0.00806138637432241, -0.0226487003392144, 0.07247146243440383, 0.2958511750634685, 0.4011419208600877, 0.38505726361517034, 0.35794135021291495, 0.32167980895065185, 0.27759780371313525, 0.22738575285028606, 0.1731923742998891, 0.11727614471545733, 0.06202393174912091, 0.00960908635030977, -0.038022169770584924, -0.0794175338903127, -0.11360612174223506, -0.14023966246340813, -0.15951854902316875, -0.17219611638900334, -0.17944334969244158, -0.18274616098911123, -0.18373969893965836, -0.184055232681192, -0.1851687185433451, -0.18825814887189068, -0.1941053854410152, -0.2030099574623856, -0.21476520327659565, -0.22865072403742137, -0.24348359796746433, -0.25768885135788455, -0.2694105451023082, -0.27664241879273577, -0.2773732138667384, -0.2697480223076115, -0.25221566635542647, -0.22368399886661683, -0.18363374177659253, -0.13222853210119734, -0.07036096935691982, 0.00031711937796141676, 0.07744180702721404, 0.15800720083554554, 0.2385132675081385, 0.3151340520169974, 0.383948362091735, 0.44117532665123305, 0.4834422439818573, 0.508029672881964, 0.5131085221042597, 0.49792049685528794, 0.4629096708662046, 0.40976793128829114, 0.3414029952116777, 0.26180807935220773, 0.17585040631098758, 0.08897646239758283, 0.00686367936875687, -0.0649673761130618, -0.12154006022278407, -0.15878689280216562, -0.17384989108613724, -0.16530213190725473, -0.133254682416861, -0.07935671074109152, -0.006666695082405805, 0.0805671310123639, 0.17722767692627883, 0.2776841667575405, 0.3761926997152294, 0.46725696569994324, 0.5459771417256905, 0.6082981173416449, 0.6512129685609986, 0.6728409057769769, 0.6724606340949324, 0.6504330296044158, 0.608100344590355, 0.5476164810255608, 0.47177221048136286, 0.38380369796099867, 0.28719196997889407, 0.18550078399913872, 0.08217294090949157, -0.019573281200144343, -0.11694440441411569, -0.20759598465245954, -0.2898226037462308, -0.3624801838495939, -0.42515277307117305, -0.47795290213714026, -0.5216553436774554, -0.5554830054136879, -0.5570122221640803, -0.46777202307452725, -0.36485788487938287, -0.3203624828161251, -0.29271832576995216, -0.2691603789312955, -0.2521797325565358, -0.24310568944602684, -0.24205618816028052, -0.24839721288744654, -0.2610898964892556, -0.2785661483529044, -0.29907773700286466, -0.3206868341745217, -0.34154702386053604, -0.3599817081946899, -0.37463215979698106, -0.3845989983289222, -0.38941419046379355, -0.3843745509301053, -0.27993879962326673, -0.15326570512307391, -0.12251854710828525, -0.18816008608074508, -0.2579825434902858, -0.3305461558382152, -0.40446698253061086, -0.47828953994973045, -0.5498664643305009, -0.6168706982337371, -0.6763751110983653, -0.7254512077285229, -0.7608726148304488, -0.7797716998580775, -0.7422014936556636, -0.7317478665785391, -0.6988580406096983, -0.6432497253883085, -0.5660630320300726, -0.4695958510726932, -0.3575947778618591, -0.2348517562274779, -0.10726704326156877, 0.01869496110874147, 0.13613011333456804, 0.2383297565395348, 0.3190033366975542, 0.37290921131596955, 0.3960512515562029, 0.3861829233599974, 0.3428473247388828, 0.267643247329846, 0.16481903112890528, 0.04973870736239849, -0.0814039573225811, -0.22837605738626188, -0.384098719879411, -0.5377894549205582, -0.675512060821637, -0.7898646790673975, -0.8754884457294221, -0.9281850354119339, -0.9480803592227343, -0.9350043843781943, -0.8902657087724428, -0.8173423663971136, -0.7214575361257509, -0.6086730000882277, -0.4855056688304522, -0.358840497341264, -0.2342550242222483, -0.10928667450541596, 0.029320240075554338, 0.0850931306017273, -0.02778286207773384, -0.207957772294578, -0.28370271218788723, -0.30475903493937073, -0.32576364810619696, -0.34967404699086924, -0.37170309351301034, -0.38747631624630907, -0.393207122683227, -0.3862065348146966, -0.3648926177694014, -0.32908428253724664, -0.27979268872175433, -0.21926414183201537, -0.15058911746550319, -0.07754920369108831, -0.004152328288104634, 0.06560288295085925, 0.12812985681305644, 0.18045323866816787, 0.22043939705116244, 0.24688242058171994, 0.2595140695534077, 0.25896620467164944, 0.24658151800731254, 0.22430276473149924, 0.19435662491200567, 0.1591534298290398, 0.12093441110757475, 0.08176338060995114, 0.043212120994461145, 0.006491439263751175, -0.027790306086771466, -0.05805547828326141, 0.07326044023604616, 0.3033459193671284, 0.39451184484700264, 0.3828957916272451, 0.3596284784987418, 0.32672010861220535, 0.2853337248641825, 0.23725470371998725, 0.18452876779251337, 0.12953729521027357, 0.0746188578468514, 0.022079078897577098, -0.02614228292561771, -0.06846662130658587, -0.1038988547677171, -0.13197791271591086, -0.15285679639747118, -0.16719071778240746, -0.17608695180862666, -0.18094858267473923, -0.18334186440742972, -0.18483588805886242, -0.18684957695315751, -0.19052961386046702, -0.19663121677066242, -0.20546241790137532, -0.21683124993920333, -0.23006438208897362, -0.24402991065844148, -0.2572215331044707, -0.26784806324061106, -0.2739638030885254, -0.27360400301626453, -0.26493574922350216, -0.2464102428917786, -0.21690349475027837, -0.1758500023451055, -0.1233389256767139, -0.06019132478653777, 0.012021309765837707, 0.09098866292039531, 0.17374357074982205, 0.2567784596200755, 0.33622941971443154, 0.40808647890628835, 0.4684515983236561, 0.5137994829296038, 0.5412505654198485, 0.5488112627233019, 0.5355825947788759, 0.5018977079772271, 0.4493885697724127, 0.3809544245848433, 0.3006401282184661, 0.21341440336303608, 0.12487042063648324, 0.040857120797380464, -0.03292119162431484, -0.09131632412781476, -0.13011220463891005, -0.1463456018390339, -0.138526910865576, -0.10675826540755318, -0.05271626803209162, 0.020473399788861757, 0.10848769433579142, 0.20612344036979313, 0.3076922751253761, 0.4074065938041955, 0.49977939947988426, 0.5799402620105263, 0.6439168791039234, 0.6887879198635161, 0.7127877320439295, 0.715281209111692, 0.6967078616364177, 0.6584313181745634, 0.6025842801434023, 0.5318721243329696, 0.4493814742415805, 0.3584042776128855, 0.262245277506151, 0.16410395775999564, 0.06688836807561227, -0.02682760613682955, -0.11498666100467947, -0.1960012514546401, -0.2689293052003867, -0.33332054705045966, -0.38937646464643993, -0.43767793346991724, -0.4752359648412101, -0.4740967875482589, -0.40058868752055865, -0.34052270841832577, -0.3049015008869853, -0.277950012060753, -0.2556200425069255, -0.23980868744787376, -0.23142392071946327, -0.23039213341984333, -0.23619307388801314, -0.24765310152066178, -0.2633061646787034, -0.28131981797155636, -0.2998213012864932, -0.3169364865682782, -0.3310101531320355, -0.34073123005337536, -0.3451894772261932, -0.3438063994256062, -0.289548633811898, -0.09394533278182227, 0.029972475969977097, -0.009067292604926003, -0.07475944454974481, -0.14505741967405683, -0.2194646986144777, -0.29692369048161993, -0.3756863923999365, -0.4537768854720321, -0.5284779981742016, -0.5969315744426726, -0.6557477138929242, -0.7016901420726258, -0.7314179232632787, -0.6801849403508466, -0.6803074388709112, -0.6577442584450202, -0.6122697383194353, -0.5447639735613019, -0.45763413427916655, -0.35444417212434054, -0.24009581642504774, -0.12030964399760435, -0.001591829727389804, 0.10939582511136914, 0.2060039870262771, 0.28225228446478434, 0.3330173073441358, 0.35460387761633516, 0.3448285220057723, 0.30339679764234395, 0.2317836738625081, 0.13334971664941353, 0.012982853993358745, -0.12303981270785336, -0.2650086525691613, -0.4076455050326242, -0.545598033534894, -0.6711373678728378, -0.7774117762757662, -0.8589424927014591, -0.9119917608334358, -0.9345808700799658, -0.9267074655679988, -0.8898847404877781, -0.8270999786136493, -0.7425853687634856, -0.6415027926746202, -0.5295413517429353, -0.4125311718530025, -0.2961312858125815, -0.1778973275572575, -0.053252800990149396, 0.006812592708051568, -0.08977187119707253, -0.24299100517415528, -0.3046224938773303, -0.32401836901046455, -0.34436670441333206, -0.366452473183557, -0.3859072685165388, -0.3985592557748352, -0.4010017219874429, -0.3906880230274532, -0.36634130515072405, -0.3278577965314464, -0.276473480683499, -0.21446096235214096, -0.14506013174420263, -0.07204077541067377, 0.0005145919003384236, 0.06865393030232259, 0.12879621318712964, 0.17804909316251383, 0.21436746487392178, 0.23666069620808017, 0.24482296991499908, 0.23961629498451487, 0.2225956504792439, 0.19581921144037295, 0.16174217738849705, 0.12284244277174317, 0.08157308155724152, 0.03999224337173146, -0.00015549938092540572, -0.03774729013108491, -0.07204858718197471, -0.10171892613556466, 0.05534336868597478, 0.2923376228137258, 0.37467739279596657, 0.36753896227477334, 0.34849262829450733, 0.3192761844991887, 0.2811352480446754, 0.23569715950057368, 0.18511645542246935, 0.13167582082101825, 0.07783838726843584, 0.0258628467347366, -0.022185713886177183, -0.06473434024876634, -0.10067238698170944, -0.12951261921223245, -0.1513068955073803, -0.16666110301842008, -0.17659762243509702, -0.1824578466272847, -0.18574292206808007, -0.18796292247947183, -0.1904986298947628, -0.1944577307409559, -0.20059207811507218, -0.20920401503533026, -0.22013470538157776, -0.2327399867704194, -0.24594710977727807, -0.25829965820177714, -0.26806841775516277, -0.27335216023344755, -0.27222240353122484, -0.26285855159358107, -0.24370168437495288, -0.21359503288604076, -0.17191625029106006, -0.11868729927167321, -0.05465011918674012, 0.018692250985691494, 0.09908953755258798, 0.18360210094580953, 0.2687232630766152, 0.350545062987762, 0.42498107960627785, 0.48801638695399685, 0.5359881869441727, 0.5658608300336092, 0.5754900518081305, 0.5638388238283416, 0.5311369006377167, 0.47895251551688567, 0.4101744394301101, 0.3288866358852798, 0.24014831352990162, 0.14967997946498413, 0.06348685804151, -0.012563520555672891, -0.07316299995478825, -0.11396122380320639, -0.13188930461167558, -0.12539698124245113, -0.0945593183314477, -0.041068310590916646, 0.031919518532380176, 0.1200281990730141, 0.21801742683023506, 0.32016350748552225, 0.42068658257296265, 0.5141204492442895, 0.5956672358118769, 0.661430441044021, 0.708601766979569, 0.7355050649164627, 0.7416008763513409, 0.7273714295239562, 0.6941945976806565, 0.6441497336574353, 0.5798341789212325, 0.5041716778831236, 0.4202239807449608, 0.33105435312964593, 0.2395512522279768, 0.14836860166687504, 0.05975539406441088, -0.024419118338276036, -0.10283775006892437, -0.17461520474036174, -0.23947071049730884, -0.2975004594596964, -0.3493270390052139, -0.39059133476292285, -0.39355446437234143, -0.34965854353649917, -0.30983948229729563, -0.27992738463169786, -0.25448659977692323, -0.2337678526825826, -0.21934046881869307, -0.2116709654515203, -0.21077970001513302, -0.2159625699530019, -0.22615096534715096, -0.23976042974861977, -0.2550452349926041, -0.27008030263693805, -0.2830412878234767, -0.2922972188933337, -0.29654886519253054, -0.2950052120046429, -0.2702545493308923, -0.08620605325008679, 0.13559221865668825, 0.17518231706552445, 0.11674423794885413, 0.05379303706169747, -0.015620060169704963, -0.09086734721943213, -0.17067189267472305, -0.2535233461304749, -0.3370812252367994, -0.4187635157205456, -0.49525717471595154, -0.5632110620527158, -0.618892628302893, -0.6589491770643328, -0.5958667265027033, -0.6058282552200671, -0.5931149009704679, -0.5571784904938459, -0.4990031973130442, -0.42077359399918857, -0.32618330465868306, -0.21995015840875753, -0.1078844450484504, 0.0037274563183835596, 0.10822739013467153, 0.1992580240568529, 0.2709302174720274, 0.31844598862295204, 0.33820684788616484, 0.32828039685220034, 0.2883471277068175, 0.21993543190375675, 0.12615494389980864, 0.011684104131679085, -0.11769140408324485, -0.25528435228014956, -0.3940766703035177, -0.5270102378332631, -0.6475434384413727, -0.7499037885222304, -0.8295137762320373, -0.883110723648489, -0.9089696136952146, -0.9068518034860453, -0.8780109635947504, -0.8249897159955957, -0.7514426567068657, -0.6618387501790295, -0.5611611921025315, -0.4545897704855335, -0.34714575265794423, -0.23726616443665982, -0.12358524893545919, -0.05897946967750922, -0.13706728131320212, -0.26634579948254, -0.3218764304499473, -0.3427721484353494, -0.36347260576849205, -0.3847890879970741, -0.40256612289810656, -0.4130396311096738, -0.41298234141302403, -0.4001975674655349, -0.37352400504602334, -0.33312385166662595, -0.2802855335868484, -0.21746198739242972, -0.1478964598296333, -0.07545887280648422, -0.0041978889790765805, 0.06191233506745686, 0.1193566694307222, 0.16529912365443256, 0.19778870143723637, 0.21586546910875626, 0.21953524584751172, 0.20975019859593758, 0.18817318961016838, 0.15708635996297104, 0.11902062789976497, 0.07668138884508124, 0.03253821892094244, -0.011145966532954077, -0.05268610429868481, -0.09079285712829943, -0.12487088673295865, -0.15356612394204383, 0.01591689602579649, 0.2604619747042225, 0.3410230020326903, 0.3385589306763368, 0.3239217260790497, 0.2988352558744012, 0.26433813026791153, 0.22215261476432158, 0.17428107804049242, 0.12311810543571244, 0.07103180473933834, 0.020398616347858223, -0.026760235872044902, -0.06875860242919174, -0.10448723770656443, -0.13335712944917277, -0.15538899222732605, -0.17110235654508443, -0.18146778676315922, -0.18775959205976078, -0.19142128332484964, -0.19392076702009625, -0.1965920805029331, -0.20053193384785561, -0.20647056613513765, -0.21473304922093595, -0.22516972851027994, -0.23718646422665468, -0.2497431213374729, -0.26144314255758117, -0.2705937665867353, -0.27533879987211574, -0.2737657057572116, -0.264061894406445, -0.24464668521579336, -0.21432608532116482, -0.17241901171818474, -0.11887803126534857, -0.05437148272505743, 0.019667002086924512, 0.10103933712247537, 0.18683644608659922, 0.2735479294028229, 0.35723003534854847, 0.4337217889286089, 0.49890530782062426, 0.5489878650875526, 0.5807940885263112, 0.5920375734218704, 0.581556243394489, 0.5494796254722878, 0.49731626852766553, 0.42793746310681957, 0.34545895610544086, 0.2550126079918922, 0.1624300840885451, 0.07384852442094969, -0.004719133369351702, -0.06782779631111469, -0.11100264272290605, -0.13108246626463638, -0.1264496404606037, -0.09715071336324987, -0.044865929042797736, 0.02723260328132704, 0.11476086083306969, 0.21246301536151546, 0.3146339930756339, 0.4155183684670636, 0.5097224346674638, 0.5925225273974446, 0.6601377399294144, 0.7098554402727952, 0.7401118994223772, 0.7504315814515397, 0.7413450773257715, 0.7142104456997567, 0.6710430885478242, 0.614311152527486, 0.5467469505826174, 0.4711876041696358, 0.39040154387502135, 0.30700822380421977, 0.22331816152953232, 0.14133963472861355, 0.06261703992525725, -0.011672908509782864, -0.08089344000944454, -0.14475450642065724, -0.203493662675859, -0.2573476042773333, -0.3022077005936543, -0.3183673765809001, -0.303558821476722, -0.27394534000597304, -0.24670994885911135, -0.22322992159845345, -0.204610699632366, -0.19171483865208572, -0.18505625049560148, -0.1844078608111852, -0.18915373813497238, -0.19805529984512704, -0.20961990297555122, -0.22201178770877283, -0.2333767663783043, -0.24188531890745602, -0.24594364397634005, -0.24434382824353174, -0.23115591650999212, -0.09282648629619672, 0.19469341344568214, 0.3333115474503261, 0.3063602445403326, 0.2537667876903571, 0.1944979964735829, 0.1270710828635302, 0.05226294370340945, -0.0289486506465213, -0.1147225439403936, -0.2029217284243936, -0.2905288994240367, -0.37432773129083063, -0.45046387098773355, -0.5152260398992077, -0.5647570498825285, -0.49310809983799153, -0.5122738972284129, -0.5086157442660415, -0.4816784847199518, -0.4321724481397813, -0.36241767881493336, -0.27590367029394214, -0.17747239684015037, -0.07272761538698624, 0.031993414185935265, 0.1302980259307005, 0.21587429453987106, 0.2831543148947837, 0.32743495579489457, 0.3454183407829494, 0.33520903419128034, 0.296650010132264, 0.2311322473205788, 0.14169532313858646, 0.03264718839370495, -0.09054002870972067, -0.22174045237772155, -0.354400527900145, -0.4820784445931263, -0.5986848083180387, -0.6989427439374971, -0.7785478343085224, -0.8344679229644587, -0.8649675747272241, -0.8697134299256675, -0.8496583286692498, -0.8069634341248015, -0.7447769584297603, -0.6670138454258421, -0.5780854125380515, -0.4825905946106612, -0.3850603999413842, -0.28515853516321954, -0.18150763235140488, -0.11368011953431534, -0.17223006812624142, -0.2809762795153574, -0.33680222155892725, -0.36145357290119673, -0.3835371181320646, -0.40498532824077316, -0.4220492000554712, -0.43116509843574313, -0.4294892476654928, -0.4149787794549038, -0.38678118089101443, -0.34514491296709404, -0.29157465615452627, -0.2285475708110536, -0.15943348070648722, -0.08808029096031511, -0.01858207446128457, 0.045141417363894654, 0.09960460859724218, 0.1420492359851515, 0.17062398669889856, 0.18446119865273047, 0.1837276647537891, 0.16946828075443676, 0.14355156579440198, 0.10833199780161351, 0.06656755329338715, 0.02099188254259765, -0.025701754870258497, -0.07128591021779762, -0.11387536288680877, -0.15228946829915024, -0.18577117831445378, -0.2132031199880977, -0.04594976089288849, 0.20680893010730195, 0.2937251787104529, 0.29600243826309924, 0.2860691813303857, 0.26536534141996526, 0.2350170915618115, 0.19654434192740755, 0.15204786484420962, 0.1037752369667162, 0.054199492993445286, 0.005607194597192944, -0.03987599788864449, -0.08060094933513562, -0.1153607853930898, -0.14355944917171226, -0.16513215910824985, -0.18056008367745568, -0.19074570799563484, -0.1969097207148801, -0.20045094924846657, -0.20278594887435802, -0.20523319946193913, -0.20885563374381938, -0.21439957715471414, -0.22218217649771776, -0.23209707346510955, -0.24356544960545956, -0.25560418181179145, -0.2668414084180809, -0.2756344224365853, -0.2801406502863314, -0.27846941948354, -0.2687926820789026, -0.24951103845035627, -0.2193802792033348, -0.17766429191897481, -0.12424302965784983, -0.05971595037031774, 0.014550291039520769, 0.09640683007401529, 0.18297303753137362, 0.27073743590543264, 0.3557236715162695, 0.4337065784799492, 0.500475204928132, 0.5521233090758071, 0.5853491656359195, 0.5977412328824641, 0.5880226869023866, 0.5562333275688207, 0.5038224291865441, 0.4336424481760641, 0.3498278065142273, 0.2575691848750372, 0.16278457042276218, 0.07172195307212315, -0.009489821583657854, -0.0752872992271012, -0.12109565343780293, -0.1436667563053562, -0.14132685968281278, -0.11407884472600083, -0.06358648791575816, 0.006999080183810236, 0.09330201777225344, 0.19010277162669853, 0.29173254460449805, 0.39251663073563803, 0.48714159142777946, 0.5710077294092981, 0.6404404996386268, 0.6928587114222742, 0.7267856417682892, 0.7418287891674962, 0.7385346004097344, 0.7182438496310923, 0.6828826569538973, 0.6347748411328422, 0.5764579435026242, 0.5105061078967095, 0.4394232295120363, 0.3654876358704473, 0.2907376714982455, 0.21682217772735024, 0.14507701770083248, 0.07636270732203165, 0.011232014119078038, -0.05025212052850403, -0.10825282707747252, -0.1634676503681467, -0.21580712609028474, -0.25686518726784335, -0.25735886219706394, -0.23120252545954756, -0.20647363405628916, -0.18569555505272284, -0.16941918219249885, -0.1584931762442201, -0.15311417670339988, -0.153110218362567, -0.15762816641467303, -0.1655063042207039, -0.17510701836030984, -0.18467124283632197, -0.19229768587777096, -0.19621354381128553, -0.1948822889785845, -0.1868844655762314, -0.10103803099442166, 0.21747796120132, 0.4701961569028086, 0.4811789113750713, 0.4416757845870256, 0.3975029463768429, 0.3430153199806325, 0.27884770697726147, 0.20542323529444584, 0.12400931865520981, 0.03617672827949825, -0.05553385523505039, -0.14826601155953423, -0.23830954536305882, -0.3218760839267869, -0.39472803681701585, -0.45303033052907526, -0.37745069923763896, -0.4048762363934837, -0.40505221252513923, -0.3782157464135656, -0.33172700377901476, -0.26830985036413457, -0.19212237935761234, -0.10820490501033375, -0.0193704696501511, 0.07899417382914553, 0.1714721466617677, 0.2520525433020575, 0.31523529714321796, 0.3566343733185091, 0.37301464007647667, 0.3627159477502877, 0.32552753416217284, 0.2628895573093484, 0.1775863154153985, 0.07373858951803314, -0.04364465720398858, -0.1688198499458622, -0.295816525479097, -0.4186453376849304, -0.531768313571213, -0.6302711516674542, -0.7102140704167148, -0.7687059405940442, -0.8040893101137403, -0.8158946605312245, -0.8048531354035049, -0.7727465647884131, -0.7222715778366542, -0.6568246582606996, -0.580257366159799, -0.4966463172075102, -0.4099871848204977, -0.3212366725399818, -0.22756404103187222, -0.15862748106367341, -0.19784313672413134, -0.2898990196959348, -0.350311022181657, -0.3802123562183244, -0.4044998915791078, -0.42699598255202, -0.4441465735003023, -0.4527822521799889, -0.4502412354445684, -0.4348257673399827, -0.40580667982059415, -0.3636878593864381, -0.3100265518202394, -0.2474566302875154, -0.1793411017269646, -0.10959507576042982, -0.04226635901200959, 0.018734028890544874, 0.06998857470277287, 0.10881298509679205, 0.1334331157399138, 0.14311232649090577, 0.13809269565769888, 0.11959746097687685, 0.08955518331955759, 0.05053173597500127, 0.005313206732113329, -0.043140678479622, -0.09215765310431401, -0.13928881510897817, -0.18273199845832444, -0.22110640352604705, -0.25380777327715265, -0.2795185131702631, -0.12935368890817855, 0.13252281395128307, 0.23355835825088, 0.24079298708305164, 0.2356415491863828, 0.21967969176707225, 0.19379319518811933, 0.15959163959865208, 0.11897880572654396, 0.07429279640671904, 0.027866093909822975, -0.01792462231453862, -0.06103433474513853, -0.09972674041152363, -0.1328198139371627, -0.15963743999957414, -0.18009540290389592, -0.1946080696838577, -0.20403148198904753, -0.2095402891940601, -0.21247958251724153, -0.21424748771768776, -0.2161190457137946, -0.21916954800671878, -0.22412296626092426, -0.23133618671952322, -0.24070231545669785, -0.25169828291448093, -0.2633525669924335, -0.274347203736626, -0.283046545980166, -0.2876405637924351, -0.2862242682730778, -0.2769668971446204, -0.2582245476068139, -0.22871367021881106, -0.18762873111989053, -0.1347879649363204, -0.07071634821475437, 0.003277062757444771, 0.08509493749165031, 0.17188103482588968, 0.26012786423781353, 0.34583112482016665, 0.4247128609807267, 0.4924826778292526, 0.5451375809787042, 0.5792679699784822, 0.5923537424715382, 0.5830192393102225, 0.5512231154676395, 0.49836110274940504, 0.42726106692863297, 0.3420676091990109, 0.2480086981548384, 0.1510680559113471, 0.05757211296739273, -0.026258699117559292, -0.09477613751960368, -0.1433217165996754, -0.1685846309488106, -0.1688329767498442, -0.14403439963269848, -0.09581105851507576, -0.02728644231083477, 0.057217174287940153, 0.152530487977645, 0.253077507333773, 0.35327429037166125, 0.44794397313511425, 0.5326076655039866, 0.603743928590184, 0.6588840102607323, 0.6966703897792188, 0.7167645009885613, 0.7197448550329488, 0.7069081047845986, 0.6800901421901457, 0.6414607423040253, 0.593340032363546, 0.5380597164504879, 0.47780519797294596, 0.4145735130009104, 0.3500323266658105, 0.28557530171022893, 0.22217395631365733, 0.16052434731907494, 0.10087471140333015, 0.043262889126733484, -0.012691261295382006, -0.06894297860884624, -0.13494361190476845, -0.2057056153744412, -0.20699626906897794, -0.18266654098615565, -0.16115738519559386, -0.14341534754269425, -0.1300104127764241, -0.12144733683911646, -0.11793779590247144, -0.11899732518507733, -0.12381692813286538, -0.13101842998665436, -0.13902679287495356, -0.1459768509028625, -0.15002950432874407, -0.14942293110350724, -0.14262801742454811, -0.07861879288653117, 0.22559359237027676, 0.5572776738228704, 0.6302261360475674, 0.6080559023611931, 0.5799185990410072, 0.542763663747869, 0.494220035494636, 0.4341708029652942, 0.3632810339839363, 0.28248581210261126, 0.193717531345726, 0.099289482654763, 0.0025270316358181333, -0.09297985214308202, -0.18291281496599066, -0.26308530375840977, -0.329142323237944, -0.23501943633033662, -0.2656567228850353, -0.2699426934759277, -0.23395381839846907, -0.17533021254863024, -0.10973567342554857, -0.040816847021241554, 0.025399565403419144, 0.06966419576468041, 0.13906602726327355, 0.22640835483198973, 0.30253274511880557, 0.3622506458417942, 0.4012357627048999, 0.4165272469465129, 0.4064616824066034, 0.37096686847685234, 0.31132253648054053, 0.23024316649653898, 0.1314905237207089, 0.01979370789919166, -0.09961967939021221, -0.22118765174950106, -0.3394779693940908, -0.4493530154551557, -0.5463501334976311, -0.6267825732353671, -0.6879835834047388, -0.7283113298758899, -0.7472381730247104, -0.7452606932329005, -0.7238441168258163, -0.6852621799641021, -0.6324237314527128, -0.5686792053216827, -0.49756514697024556, -0.42262044336642646, -0.34573857373890426, -0.2626273633970815, -0.1950203875388734, -0.2165332011587182, -0.2958117431843963, -0.36302084929194844, -0.3987395398932527, -0.4259997452918878, -0.4502400855506403, -0.4682800998841641, -0.4771403519149624, -0.47452387365453674, -0.45888856201255734, -0.4297973944316853, -0.3878406679701958, -0.3347664884080519, -0.273223674240922, -0.2066662136678229, -0.13897192393927282, -0.07419689321598866, -0.016188172106071264, 0.03169221296198188, 0.0668294753638623, 0.08755540716225418, 0.09319467407761461, 0.08413791809755633, 0.06165231740600596, 0.0278511545651412, -0.014681874078247503, -0.06294885416859941, -0.11400871587357209, -0.16496331816956022, -0.21342989260891265, -0.25738235880268867, -0.2955624855072543, -0.32716068672436016, -0.3509493144917517, -0.23104510127099154, 0.04071198384520702, 0.1623292455315024, 0.1744617167469542, 0.17427593288748167, 0.16318206624660636, 0.1421609635087382, 0.11258448430216106, 0.07643622152861118, 0.03586391951887746, -0.006726497097497619, -0.04908811140510738, -0.08910517149885155, -0.12510637721294682, -0.15584138907893386, -0.1806410594561243, -0.19935997922683457, -0.2123780651278413, -0.22050598831829804, -0.22486468011944938, -0.22677895305826534, -0.22759527422100545, -0.22859891579888736, -0.23083001559955074, -0.23505139841494965, -0.24160521213899555, -0.2504418142233733, -0.26103705887797757, -0.2724784460071501, -0.28344656786293543, -0.29234807988801226, -0.29735579969771164, -0.2965760088203373, -0.28813525774719917, -0.27036544619861713, -0.241915850162139, -0.2019297822299344, -0.15014726544329537, -0.0870351607535973, -0.013835498401401747, 0.06739438617020488, 0.15383120197672007, 0.24196868488389311, 0.32778755790906056, 0.4069651332982689, 0.4751504854945945, 0.5282606173342455, 0.5627993914169602, 0.5761570591762073, 0.5668754154196036, 0.5348443245592995, 0.4814090584506898, 0.4093716370875313, 0.32287199866928695, 0.22715895014422172, 0.12825087373557453, 0.032526593684385485, -0.053740974366040195, -0.12484321294262157, -0.1760735804816882, -0.2040689165844185, -0.20706157707126982, -0.1849717588891595, -0.13938591938525757, -0.0733641898844315, 0.008830746081179175, 0.10213255857584924, 0.20106601722821926, 0.300196968077052, 0.3944846681638019, 0.4796259272102379, 0.5522381379296206, 0.6100087943758368, 0.6516739535800902, 0.6769785561431494, 0.68650609476573, 0.6815226525261435, 0.6637593985557988, 0.63522562841796, 0.5980361125643898, 0.5542450861906798, 0.505768758749108, 0.45424624907017985, 0.4010675329684724, 0.3472386018318909, 0.2935066568212563, 0.24020416777501108, 0.18746411432318633, 0.13503059626438763, 0.08225672734933465, 0.021628657788805405, -0.07619023765278143, -0.16095559805285298, -0.1521247369040024, -0.13033023591567172, -0.11253177444118645, -0.09836466393896348, -0.08828625619294606, -0.08280342216884318, -0.08174439211587803, -0.08462657304936982, -0.09034310996498096, -0.09754526812169839, -0.10447561830235141, -0.10931707337579244, -0.11017822106003372, -0.1043656115177456, -0.03998644912979743, 0.24765887742396742, 0.6062982772290475, 0.7379922932801599, 0.7391042532977647, 0.7290174599907946, 0.7126373744607086, 0.6837940680862067, 0.6418693334718082, 0.5869348281091975, 0.5192695574157309, 0.4401198708876617, 0.3511264857752554, 0.2550330957723279, 0.15498475050052551, 0.055087160184347006, -0.040434248548296026, -0.12682057594518348, -0.1926950808678196, -0.04539209928543553, -0.04870066835126474, -0.05447248488885137, -0.038127514007952, 0.010587015570024061, 0.06865767572283543, 0.1217897749125314, 0.18609182555010007, 0.21909927992670997, 0.2256193935548112, 0.2887704618439866, 0.3612999234756975, 0.4182687553628539, 0.45563859735024037, 0.4704667663139408, 0.46128685612029097, 0.42793411109525437, 0.37171473291548995, 0.29507854290186675, 0.20161172047138454, 0.09561045591424211, -0.01803430014439744, -0.13428492027516725, -0.24810248521985834, -0.35484090628254883, -0.4503575499867125, -0.531298315267863, -0.5951353640941548, -0.6403170520094914, -0.6662239671680616, -0.67318386834439, -0.6623596673094756, -0.6356464151153496, -0.5955171087081936, -0.5448272999874213, -0.4866507335731729, -0.4240241974554291, -0.35947520724839954, -0.28737124359278354, -0.2246588913090921, -0.23202858152055583, -0.30174271056808344, -0.37514866577421735, -0.41650319588975115, -0.4472275480232053, -0.47384634745851795, -0.49335201848455235, -0.5031243209949361, -0.5010403062347795, -0.4858759743104555, -0.45731436462245245, -0.4161715828841732, -0.3642392944334909, -0.30428511618210186, -0.2397397733422797, -0.17450630937668554, -0.1125791156072824, -0.05776220342499028, -0.01334819339168103, 0.018137133639804404, 0.03508071110068389, 0.036930067187987525, 0.024106063437934644, -0.0019704879450364032, -0.039184241639182105, -0.08476706507516951, -0.1357487648892608, -0.18897605072207035, -0.24161231408207406, -0.2910444334840623, -0.33534888781465, -0.37303538078743514, -0.40344038675240235, -0.4250649836058251, -0.34546149539031124, -0.05077309373317451, 0.0827969090442151, 0.09952879561169059, 0.10421353120231558, 0.09819572307533697, 0.08219181021430755, 0.05765232071613946, 0.02632847047016096, -0.00957248910855002, -0.0478239754978349, -0.08612804255481166, -0.12248052661825715, -0.1551600045571615, -0.18295795507591595, -0.20515585526113278, -0.22159274909854254, -0.23260768174723223, -0.23896141281686267, -0.24175417572282476, -0.24225217462465465, -0.24181055230473314, -0.2416670575804455, -0.24290114189929046, -0.24624747586116658, -0.252109511083072, -0.26042482657265276, -0.2707361911765612, -0.28212115811202265, -0.2933139485883598, -0.30269936642040873, -0.30847538341869374, -0.3087042099765802, -0.30150277189570085, -0.28513553745859754, -0.2582124572231197, -0.21979548190779186, -0.16957093620827113, -0.10792785099565405, -0.03606103080440182, 0.04402684641012744, 0.12953396101673453, 0.21697100247007883, 0.302303787353178, 0.38118546380311313, 0.4492162042967851, 0.5022575250864318, 0.5367452461171149, 0.5500025626495959, 0.5405055936474161, 0.5080874450491684, 0.4540491599483931, 0.38116106486486334, 0.29354882674594096, 0.19645643924617762, 0.09591337252945165, -0.0016892452531296342, -0.09005438477125072, -0.1634566149685801, -0.21716144358794853, -0.2477886020842046, -0.25353511769724557, -0.23429355847665434, -0.19159044338982767, -0.12842769616237426, -0.048962676823768536, 0.041843024329189404, 0.13867306905462318, 0.2362414386510654, 0.3297033552865125, 0.41491889501939383, 0.48869744642759905, 0.5488591048328484, 0.5942752459319207, 0.6247467226718095, 0.6408896788901322, 0.6439207324633784, 0.6354761617505114, 0.6174087165079474, 0.5916120863850871, 0.5599018015888868, 0.5238712168632966, 0.48488309339207125, 0.4439431462234455, 0.4017981626863306, 0.35879817545846304, 0.31508930520214484, 0.27044311178483316, 0.22453700244870944, 0.17484863551959684, 0.10044276605020741, -0.044223982610335, -0.10960864461617792, -0.09382042695477821, -0.07638835802121058, -0.0626434799114648, -0.052478236662983235, -0.04649222433456046, -0.044758245281333764, -0.04706714920930821, -0.05255916597587351, -0.060111867270183694, -0.06810617307785094, -0.07479864954914639, -0.07823589718618162, -0.06822489068670379, 0.00029143043572688043, 0.28782046163673014, 0.6435353036166019, 0.8002073607898397, 0.8250578337625603, 0.8336488174879366, 0.8404018825038992, 0.8342032615510142, 0.8140640482141226, 0.7794963236435439, 0.7301425460694295, 0.6665365994664381, 0.589575751692669, 0.501282055219809, 0.40415900991518416, 0.3018815055107975, 0.19867419528112062, 0.11699023827106991, 0.03588434916625616, -0.025733847294261203, 0.19218207226992234, 0.18666319831669398, 0.19347433488038357, 0.20422810110612422, 0.2217789535562451, 0.253008885905609, 0.28237388529309415, 0.2972970667307464, 0.33601646425343623, 0.3301212482460023, 0.357619700011818, 0.42185677660398, 0.47709918188181577, 0.5137265774280908, 0.5290263284671641, 0.5214812996409361, 0.49102434495837954, 0.4387726306380735, 0.3670933153702203, 0.27922309582809035, 0.17920443811419506, 0.0714600028489274, -0.039326612170391684, -0.14860826031708996, -0.2520834888994248, -0.34600877478463765, -0.42725529377721116, -0.4935048899863226, -0.5432387504463332, -0.5758106671300389, -0.591373455963744, -0.5908396020533004, -0.5757633079551265, -0.5482065909324092, -0.5106001053180549, -0.4655378946435871, -0.4156452937818962, -0.3633131802166485, -0.30428823827337226, -0.24869784137467654, -0.2441869634871896, -0.3076004921026847, -0.3859965072462934, -0.43258341984731885, -0.4671896294326192, -0.4965407031015232, -0.5180100668717564, -0.5291488494425751, -0.5281591737878069, -0.5139628232924824, -0.48649819851437925, -0.44665716696904756, -0.3963812175661916, -0.33843606086601774, -0.2762979287426388, -0.213813430213057, -0.15494390640904776, -0.10341947648584149, -0.06245249986939805, -0.03451046823062809, -0.02110054170713438, -0.022750888839790484, -0.038915212766407414, -0.06818545755472094, -0.10829592152824574, -0.15652262930729322, -0.20971227188854336, -0.26478123068859105, -0.31867561682084755, -0.3688774327039184, -0.4132218622454289, -0.4503457936954831, -0.47933104272332105, -0.4991412968401141, -0.47312126077956584, -0.17478744867823703, 0.005960149117318458, 0.019191882048058773, 0.02861483024895861, 0.027585646991035162, 0.016795503863189953, -0.0025663420610695376, -0.028694552648333982, -0.05960449828204273, -0.09303673417299096, -0.12685354681249428, -0.15902316888544443, -0.1879082530720555, -0.21226955924291135, -0.2314003200570791, -0.24510901123226136, -0.2536944937658021, -0.25789931238020825, -0.258760460222643, -0.25755171515770425, -0.25556818337521836, -0.25408732145910806, -0.25414643073112253, -0.2565467171474086, -0.26166740476237926, -0.26952365708136916, -0.2796406331067508, -0.2911641252238999, -0.3028020162270273, -0.31298051226220913, -0.31985086092153914, -0.32148125405169514, -0.31591872056366554, -0.3014010858865519, -0.27645250332588045, -0.2400883350746894, -0.19190788776744983, -0.13225162038835014, -0.06224300149661621, 0.01614862382004212, 0.10016376469419042, 0.186320198685467, 0.27059173634113964, 0.3486107193335908, 0.4159551177589127, 0.4684451390734585, 0.502475692210631, 0.5153208552571109, 0.5054109649779592, 0.47253447050622466, 0.41795216822837844, 0.3444009556381693, 0.2559751232223366, 0.15789616720534827, 0.05616819838035747, -0.04283316444927543, -0.1328337098537027, -0.208117136792481, -0.26396607277586703, -0.2969940687577415, -0.3053959432591071, -0.2890239960097727, -0.24936282242711183, -0.18931931759361564, -0.11295314255678157, -0.02506679283701274, 0.06917572186716647, 0.16469830266880958, 0.2568381750268802, 0.34167865612726, 0.41619695108652177, 0.47839786652386884, 0.5272584362097579, 0.5626761483325611, 0.5852756253674452, 0.5962495987755361, 0.5971345655184432, 0.5896301875271188, 0.5754363646197285, 0.5560996805983254, 0.5329595647795933, 0.5070234364811843, 0.47902861595290014, 0.4493198700126509, 0.4180149107923794, 0.3848562790915384, 0.3494683942441035, 0.3111390718731961, 0.2632139449944253, 0.15591145324505185, -0.022132222191222795, -0.05197575342032046, -0.0358745492685939, -0.022756986792194844, -0.01335980191116537, -0.007927751062212884, -0.00670321859709766, -0.009699052096630467, -0.016266584050537602, -0.025485754081553402, -0.035875538385954364, -0.04578272003341066, -0.052907901796110046, -0.0315797200866621, 0.06406040712918237, 0.3404235017747381, 0.6665193634353876, 0.8152051462539971, 0.857328848567118, 0.8860919506400275, 0.9161997235236945, 0.9342607011870592, 0.9382675356458998, 0.9272171537455822, 0.9001609749421933, 0.8569357836842402, 0.797679681162407, 0.7236164680793129, 0.6365405588539312, 0.5427060753363344, 0.46558424065413817, 0.36872260736040374, 0.3117568837240956, 0.2779349662385391, 0.2305330290040981, 0.44785013260388595, 0.4109383807089637, 0.3926939380268031, 0.3978714350836994, 0.4118059536292936, 0.41468478225742533, 0.4330854450016699, 0.4300435826307867, 0.41894343347534735, 0.40870641297298893, 0.4203713057476697, 0.47800760076574256, 0.5325725661495113, 0.5696034273490445, 0.5863587232187024, 0.5814675511568446, 0.5547287908593965, 0.5072522406974693, 0.4411291670131785, 0.3594233375023492, 0.26577392949481204, 0.16430678272035415, 0.059241227750057135, -0.045211238293175526, -0.1451766475536811, -0.23718534159615068, -0.3184024645922996, -0.3866388190434549, -0.440470753172594, -0.47919528580813164, -0.502844944636097, -0.5120997411390249, -0.5082103563878597, -0.4928840950675273, -0.468133045638055, -0.43615405367019733, -0.39912433216165866, -0.35910226601863116, -0.31424836327587435, -0.2664474453968566, -0.2525848815094811, -0.313443141925946, -0.394649626425263, -0.4459931052183812, -0.48462288364419415, -0.5169245592154521, -0.540575601113046, -0.5534350144312761, -0.5538614189809934, -0.5410488951350789, -0.5150414717827321, -0.47691116450166504, -0.42862538073861156, -0.37302027867573173, -0.3135278058549624, -0.2539733583021677, -0.19824026519720928, -0.14998193729395282, -0.11234186725524731, -0.087688372075581, -0.07749946490257642, -0.0821971487447355, -0.10125538394642941, -0.13314862449453013, -0.17567271016643637, -0.22595900909852507, -0.2809415844939469, -0.33735054417955457, -0.3922338319851626, -0.4428436342350741, -0.4871313754962303, -0.5234755435932579, -0.5510982128204116, -0.5693345055522414, -0.5712564937691722, -0.3526586148274342, -0.09554453041002908, -0.06297392097969201, -0.048910325920023645, -0.04500206019588404, -0.05069496336899704, -0.06474174904302599, -0.0855897915541941, -0.11123229563147485, -0.13961438555718786, -0.16859323607189547, -0.19626730271691262, -0.22099258172144642, -0.24157712685747001, -0.257300825550419, -0.26794959240803706, -0.27381143607481384, -0.27556541278625213, -0.274256453808172, -0.2710862395116864, -0.2673891638845738, -0.2643849060192258, -0.26318185651620085, -0.2645442304526402, -0.2689408363601513, -0.2763618140888433, -0.2864186612170403, -0.29822766106564336, -0.31055862501433706, -0.3217893089952337, -0.33009601359691154, -0.3334741313802163, -0.32995891205918637, -0.3176966330098008, -0.29517395520208556, -0.26130958531305337, -0.21565654642415, -0.1584694404243514, -0.0908329022983212, -0.01465357036210957, 0.067329995029207, 0.15166992770943333, 0.23434046571133482, 0.31098218520891896, 0.377156893841486, 0.4286737887383958, 0.46190165235088587, 0.47409147527406725, 0.46364253185672144, 0.43031185554836826, 0.37532515609387485, 0.30137897947714265, 0.21252624124948438, 0.1139369681821778, 0.0115665731285155, -0.0882702246366609, -0.1793492926793352, -0.25601400730721835, -0.3135820453862177, -0.3487047488191557, -0.3595721367032625, -0.3460270287269731, -0.3094846368392723, -0.25277569371043906, -0.17981340173694615, -0.09525556484532682, -0.004052527733731104, 0.08891087372771889, 0.17921830972386665, 0.26314877271405024, 0.3379077911281474, 0.40165083475873864, 0.4535128710650529, 0.49345670808439746, 0.5221557120935163, 0.5407633172231767, 0.550738207987707, 0.5536409111594072, 0.5509705319658744, 0.5440588260826904, 0.5339406381113414, 0.5213690649055673, 0.5067027023009942, 0.49003503448915364, 0.4710681920364812, 0.4493416966731876, 0.42406925173144283, 0.3932257763817395, 0.33446596604038614, 0.15183447036762665, 0.004816839077419921, 0.0068617109389439435, 0.02020440000733892, 0.028799179167060984, 0.033294170744584406, 0.03340605395525742, 0.028925647682185307, 0.020310926700043197, 0.008301036829111652, -0.006049428029791137, -0.02205423753439284, -0.027597568138363116, -0.0008683652069239045, 0.14502332296331932, 0.40111481381148106, 0.6425635936671625, 0.7678940894373087, 0.8297396218462705, 0.8804425955935415, 0.9334116845507305, 0.975858126388407, 1.0049042583101406, 1.0190748281067168, 1.016886159177485, 0.9975204206314592, 0.9603860930822421, 0.9059191137428311, 0.8347882357357888, 0.7789694022924118, 0.7064726844948686, 0.6811377961840392, 0.6515249807560819, 0.571259871255597, 0.5222087195891945, 0.4877808831736301, 0.5713291313647897, 0.522690979630172, 0.49205907041243213, 0.4854396494425819, 0.5142097726421848, 0.5467383756661286, 0.5450152328081855, 0.5302319052304456, 0.49223753015688554, 0.46607071778912323, 0.47003294923000993, 0.5240944065148092, 0.5792597268207671, 0.6178306088131138, 0.6372445127260988, 0.6360346506722898, 0.6140503443624743, 0.5721853785105644, 0.5124292053303279, 0.4375057621911065, 0.35082015054901383, 0.2560766658853657, 0.15718997299174475, 0.05794509664381309, -0.03807405985809531, -0.1277415242614648, -0.20841560061361442, -0.27809599175107635, -0.3354000212295478, -0.37962214317544607, -0.4106689743161436, -0.42903210254171675, -0.43569564692393215, -0.432035414969679, -0.41971368853070956, -0.4005203135701425, -0.37627347378976594, -0.34862691567460224, -0.3169800049388236, -0.28112202408463993, -0.2611816550534627, -0.3163971121649283, -0.3984537792688876, -0.45539784176625986, -0.49826471474244016, -0.5334234064781409, -0.5593273130302343, -0.5739838278938709, -0.5760225305652007, -0.5647641506784726, -0.5404567129002782, -0.5042285981506076, -0.45814569811027095, -0.40502032909571817, -0.3482800775401138, -0.29167367476165484, -0.2390108266040203, -0.19386270568808595, -0.15927213779495175, -0.1375631911492936, -0.13011493947529384, -0.13736536903190677, -0.15869523683866316, -0.19265169288257944, -0.23692542400353922, -0.28875623494145675, -0.34493534429589, -0.40231343168756784, -0.45774059649895626, -0.5085891065488353, -0.5525606351371382, -0.5881580787909195, -0.6143328587588099, -0.6308506969622938, -0.6365225001572377, -0.5227905649592994, -0.20048067449421314, -0.14110030328011725, -0.12407114840038114, -0.11564571066496399, -0.11636554982963876, -0.12528307925214754, -0.14082180249915255, -0.1612124011027838, -0.18441153645304686, -0.20845094841998035, -0.2314482091164889, -0.2518479225502994, -0.2684682936064384, -0.2805929362208692, -0.28801071483382823, -0.2909526548199981, -0.290109414824566, -0.2864440547276885, -0.2811966928926932, -0.27562668342655794, -0.27102717569399415, -0.2684538886158272, -0.26877160799461675, -0.27241518412083465, -0.27948116734950457, -0.2895492635186707, -0.30182290754021834, -0.31502405859758786, -0.32758018070997275, -0.3375937719956492, -0.34306789520623404, -0.3419408221258271, -0.3323334907872204, -0.3126255006968619, -0.2816942266431086, -0.23899224040346434, -0.18473393069883004, -0.11992317689374765, -0.04643841378526714, 0.033037666598997095, 0.11507090771085915, 0.195668991767862, 0.2704752788459661, 0.33506857567167536, 0.38525433967669187, 0.4174058130542524, 0.42876390787475094, 0.4177178654049283, 0.38400250624585386, 0.32881180746007743, 0.2547993788569749, 0.1659576721422673, 0.06738880439777217, -0.035040039455236816, -0.13509950472108567, -0.22666669149890328, -0.30416539603626447, -0.36299932186780204, -0.3998621882558355, -0.41298095465965945, -0.40216987623246503, -0.36880516432753474, -0.31559884093153423, -0.24634164414447923, -0.16548731273557182, -0.07779831293801731, 0.012098908445683065, 0.10000096088299859, 0.18244970269713434, 0.25683810974522103, 0.32153459937956264, 0.3757912747941017, 0.4196898587835385, 0.453924146543371, 0.47964762716105724, 0.49823916174049643, 0.5111356037788948, 0.5196715672972481, 0.5249415472807764, 0.5277587010658551, 0.5285451473579705, 0.5274143164201519, 0.5240624702954177, 0.5179608402198422, 0.5082207705444399, 0.4938016609327949, 0.46636260331707113, 0.35571012012968994, 0.11262209931138845, 0.05127355462775096, 0.0638753519368338, 0.07254109289056387, 0.07650817802535848, 0.0756784071590717, 0.0696525729558175, 0.05868211986355654, 0.04209235554200497, 0.01932880740728038, -0.002634622565068412, -0.012913835249230843, 0.03736351068181598, 0.19435790755741333, 0.40291499763416194, 0.5642613288188505, 0.663540274334407, 0.7418811456963321, 0.8145084477185698, 0.8893498030180713, 0.9547131208269279, 1.0081132363087666, 1.047638899867545, 1.0713251794986056, 1.0777532627386397, 1.0656552558519445, 1.0347931557594383, 1.0007192750671878, 0.9614433923226811, 0.976778594325217, 0.9847928430626176, 0.9342871796103633, 0.9015887855845777, 0.824005455711255, 0.7237069037963928, 0.6360879106148238, 0.6177918926771442, 0.5589669608833832, 0.5249502612593522, 0.5141058532318346, 0.5284999170245881, 0.5818123188557609, 0.6137685780068839, 0.5930578295751223, 0.5331164140983773, 0.4959147994029127, 0.5014863959689433, 0.5556569426216598, 0.6126283812867421, 0.6540368012672242, 0.6772511083914465, 0.6808996724306122, 0.6646633853804289, 0.6293939127213353, 0.5767976561099122, 0.5094247730820509, 0.43030678067815575, 0.3428853369190197, 0.2506686616737248, 0.1571590179680582, 0.0655756361605313, -0.021183534851714647, -0.10072953268899365, -0.17117515271863937, -0.23123136278155876, -0.2801600285855912, -0.31778836043593905, -0.3444335166454575, -0.36084692401573726, -0.3681228871868907, -0.3675846707098831, -0.36069023822322244, -0.34887654845687166, -0.33348227052189827, -0.3145381180969036, -0.2905701603716988, -0.2728613637510371, -0.3178741882086644, -0.396182436247722, -0.4596408564356498, -0.5068084230778389, -0.544555197457397, -0.5724860749965863, -0.5888578615164004, -0.5924342505269049, -0.5827517872830299, -0.5601424935861541, -0.525860380232773, -0.4819746147279318, -0.43131573731909967, -0.37724490573457015, -0.3234444535229395, -0.2736315074489326, -0.23127148640983375, -0.19934146683034193, -0.1800623794148346, -0.1748121039842876, -0.1839462440189643, -0.2069172275286384, -0.24219900869774724, -0.2876073560333188, -0.340286601473081, -0.39717359435344424, -0.45496895909873825, -0.5106613843695635, -0.5614041737320568, -0.6050223687355709, -0.6397451462705712, -0.6646479417482389, -0.6792366258310443, -0.6831100298388382, -0.6472325491705284, -0.3596814490577329, -0.20003506671041915, -0.19251708394719724, -0.18002174954653283, -0.1762346586450303, -0.1802611657507447, -0.1907799654021436, -0.2060381897366681, -0.22420275801552925, -0.24334659064427777, -0.26171823969044494, -0.2777994114339628, -0.290445757538357, -0.29896428198606917, -0.3031018066962794, -0.30310981826161254, -0.2995922119152339, -0.29355068953376984, -0.2861328210373215, -0.27867120205105045, -0.27238695706976435, -0.26844400570798244, -0.26766052609701063, -0.27059699675932025, -0.2773148613284788, -0.28750937260105536, -0.3003388525751398, -0.31460589958429885, -0.32866682214380827, -0.3406581718025046, -0.3484834207737597, -0.3500730797598606, -0.34343134218504945, -0.3269048786574662, -0.29925531473168343, -0.25989648287654443, -0.20894387214675758, -0.14737018811898528, -0.07697883148018114, -0.0004322590271570448, 0.07888919262488336, 0.15700695419064203, 0.22960441671325116, 0.2922731655085906, 0.3408494102135595, 0.3717174444328313, 0.3821353408944561, 0.3704913504644425, 0.33651068908802184, 0.2813581239044938, 0.2076359386567721, 0.11926696640956624, 0.0212547768007596, -0.0806405495825957, -0.1803222855609703, -0.27178837645792386, -0.3495965135271133, -0.40924464076494393, -0.4475183704470722, -0.46266877890371116, -0.4545221987704422, -0.42437898944160724, -0.37486645102960336, -0.3095960354197036, -0.23285171819718187, -0.1491393383812305, -0.06286818812541206, 0.02204398907344718, 0.10235224976322232, 0.17570810351595245, 0.24064044624285597, 0.2965841517693786, 0.34369608691606945, 0.3827458758403859, 0.41486606025291284, 0.4413923962449742, 0.4636529950986157, 0.4828229854449848, 0.49982035740308284, 0.515193702204324, 0.5291463872411555, 0.5414397799484405, 0.5515380995925634, 0.5584984570037503, 0.5611949230693771, 0.5558633507830951, 0.5070365214996233, 0.27878512345295947, 0.10376655647328947, 0.10496909757356843, 0.11528917243809289, 0.11983754285840575, 0.11901905315814965, 0.11223378405820839, 0.09647293885661057, 0.06977273031033882, 0.031820658444882355, -0.01573159870936003, -0.026679776390984955, 0.04303618696983058, 0.17272875924976638, 0.3026097406487285, 0.4099366184309652, 0.5100042959937454, 0.601594650897014, 0.6932518581641078, 0.7856849087899276, 0.8708737726602149, 0.9463213288174481, 1.0097142474107028, 1.0586533364379762, 1.091171546197447, 1.1053899983438953, 1.100295437344331, 1.1010257964984813, 1.1323249965815627, 1.2072974279041109, 1.2269365652149782, 1.2225154100577202, 1.1427381922220556, 1.030079118805105, 0.9223289853040102, 0.8077128948187813, 0.7025255045178982, 0.6343269027179281, 0.5767837910000964, 0.5421195666440082, 0.5301495031986434, 0.539809600840002, 0.58343046416072, 0.6318913060526588, 0.6181263222702233, 0.5366898162273241, 0.49303386707257424, 0.5112161677513427, 0.5694768427495167, 0.6295608878896077, 0.6749702925012677, 0.7032065146743594, 0.7127692062003619, 0.7033479191147243, 0.6755611367354506, 0.6309963675255297, 0.5718777008486828, 0.5010193260377438, 0.4214865173114726, 0.33652628940472606, 0.24927577179262883, 0.16271421489985904, 0.07944944420456768, 0.0017104044263422935, -0.06878074746771201, -0.13077622558339286, -0.18355201545182798, -0.22684590019338646, -0.26084011173071353, -0.28608123740163016, -0.3034070236670239, -0.31385855395227935, -0.31856305041740995, -0.31865191695708184, -0.31511874195878065, -0.3083029098282726, -0.2962138964521106, -0.2851773993610376, -0.3189064794382954, -0.393367329839732, -0.45925019085730767, -0.5091374897774834, -0.54891263630984, -0.5784731281904083, -0.5962026072969504, -0.6010771412526275, -0.5927370974855268, -0.5716614924990928, -0.5391374720658586, -0.49727879336242253, -0.44886934058546224, -0.39721806764579703, -0.34591251294783554, -0.2985609453078233, -0.2585411637618664, -0.2287154994379912, -0.2112762542150577, -0.20751517859240654, -0.21784339532994768, -0.24165782715741502, -0.27756237127929984, -0.3233189971831498, -0.3762409080580231, -0.4331701454499908, -0.4909741586470959, -0.5464728086348343, -0.5969587414520783, -0.640009726624938, -0.6739690359876169, -0.6976162726942565, -0.7105725625395047, -0.7126653827165503, -0.6998949635473721, -0.5582490825844748, -0.2860709939157049, -0.24657299718818848, -0.23393030541029303, -0.22619910330335147, -0.22589628917158433, -0.2317752225025116, -0.2423147425250849, -0.25573530963122204, -0.27027804826394997, -0.28425430910454796, -0.29622094835083934, -0.3050823319793561, -0.3101268923399987, -0.31113699319197385, -0.3082798266450886, -0.3022012270564509, -0.29379516741801814, -0.28428050444987707, -0.2748954889322419, -0.2669722789631874, -0.26161019717283995, -0.2597681772872007, -0.26196448666308547, -0.26840444817484976, -0.27874113288877966, -0.29224929691555923, -0.30766687052841135, -0.3234185867298258, -0.3375437844071767, -0.3479637716282262, -0.3524860011254569, -0.3490958726137361, -0.33600958660672386, -0.3119547772620552, -0.27622711323770943, -0.22891059627091348, -0.17088339335475045, -0.103926551446893, -0.030630788612023174, 0.045641127292008754, 0.12096857165959074, 0.19105591618677087, 0.25154677161547134, 0.2983038087076766, 0.3277549792965708, 0.33717956851745123, 0.32498532566023997, 0.29089161759415205, 0.23603586631490492, 0.1629654538115659, 0.07551333558643591, -0.021427873068132985, -0.1222451575289134, -0.22099007679133553, -0.31183305209235535, -0.38947409830871527, -0.4495587931791589, -0.488955386391118, -0.5059874985421726, -0.5004610289428268, -0.47364358774659854, -0.42802328346688956, -0.36707534430307653, -0.2948440030521091, -0.2156282301039827, -0.13354249106005867, -0.052278425550460916, 0.025211465193335947, 0.09677160915796623, 0.16116817509647863, 0.21795747096726004, 0.26744175662341974, 0.3104235895316201, 0.3480711518665194, 0.38166695085161084, 0.4124615311843076, 0.44150475345895845, 0.46952826358873434, 0.49690214113449027, 0.5235434986460445, 0.5490031734356955, 0.572370441535115, 0.5924627906995024, 0.6069275364924056, 0.5965839807798738, 0.4175810890180348, 0.1732859212504052, 0.14017108264130984, 0.15371158550739805, 0.16036512596131658, 0.16110403097821813, 0.15222308139724117, 0.127459707888125, 0.06646901420555729, -0.026106356796784524, -0.0911050819283421, -0.09722080979355141, -0.048930387690770516, 0.028935527617411694, 0.1198039961806554, 0.2201613525443733, 0.31884740015141055, 0.41916780405508636, 0.5241262765332335, 0.6285247580799416, 0.7289016719591896, 0.8225124368403534, 0.9066877317169615, 0.9786402260950666, 1.0359033304541967, 1.07604975855006, 1.0974204695151264, 1.1257944470530439, 1.229821073825005, 1.3590385190084655, 1.431514866707042, 1.3982455820958188, 1.3021966135395724, 1.1827483767801663, 1.0478476698869632, 0.921509269446966, 0.8098305514569986, 0.7131568493883855, 0.6089303680556197, 0.5530372008749338, 0.5195530644829489, 0.5087677121830017, 0.5192998248635634, 0.5585634428474848, 0.609454136752269, 0.6060135109418778, 0.5109881388280102, 0.45921942799152005, 0.4981534603529054, 0.5639826746577037, 0.6282799295941697, 0.6788632771779097, 0.7131421254429973, 0.7296709637224925, 0.7279520256777086, 0.7085354363669891, 0.672728386812083, 0.6225826513225448, 0.5605704664360411, 0.48952461053538787, 0.41233930158898247, 0.33191512651670774, 0.2509240359496676, 0.17178773752911702, 0.09652191349734451, 0.026754226207805765, -0.03635540939752868, -0.09206470498258312, -0.14006398761061778, -0.180405235250106, -0.21346381772940592, -0.23985656687507095, -0.2603604590488917, -0.27582983684930085, -0.2870855848912175, -0.2948473635092057, -0.2994512259122928, -0.29910114643487873, -0.29629309340714727, -0.32237221911445957, -0.39130527423882455, -0.453584996961931, -0.504296531271887, -0.5453804659004309, -0.5759178368904241, -0.5944862700240048, -0.6001749310237088, -0.5927828593212965, -0.5728501401829735, -0.5417349311739823, -0.5015315499018342, -0.4549930519829424, -0.4053423323185328, -0.356061602414087, -0.31065560611746523, -0.27237439976414635, -0.24401969030807802, -0.22768223761749518, -0.2246790777634553, -0.23536616947597144, -0.2592585890318011, -0.29493389549168647, -0.34033574008661827, -0.39273479663835786, -0.4491697126926515, -0.5064006964584724, -0.561416300085364, -0.6113110527535262, -0.6537872386152088, -0.6869111425419954, -0.7095599384903766, -0.721049838104749, -0.7214864305291697, -0.7104414314244525, -0.663702855482923, -0.4377835948311066, -0.27127171941074035, -0.2737519831245401, -0.26258594246645894, -0.2585673255368126, -0.2604692326581337, -0.26682055391842874, -0.27603564468829944, -0.28643718812510754, -0.2964481801136898, -0.3047007094683112, -0.310110620880766, -0.31202261925493135, -0.3101460162235199, -0.30469807695512907, -0.29620711094074914, -0.28563661916273775, -0.27408808184362643, -0.2629088400967401, -0.25334292730175845, -0.24663887942631124, -0.243699981335185, -0.24521255544380205, -0.251339660111336, -0.2618879684151616, -0.2760761045985163, -0.2927516482160053, -0.31025020141953785, -0.32666405809556576, -0.33979116515494034, -0.34744286386117196, -0.34746267308656487, -0.3380429067153732, -0.31777359422065077, -0.28592117681630347, -0.2424537335772965, -0.1882272422357545, -0.12493254127343079, -0.055143643909266515, 0.017849660752339958, 0.0901480618799142, 0.15752348563718988, 0.21565254169039338, 0.2604628938964737, 0.28842044183303606, 0.29685319270256505, 0.28418864946975875, 0.2501514475727977, 0.19585025750663076, 0.12376785176720562, 0.037640209263329005, -0.05778166503588533, -0.15704241187994894, -0.25438816688690835, -0.3441679723849962, -0.42127753451773753, -0.48150178305830416, -0.521844645519657, -0.5406723763132324, -0.5378207698572202, -0.5144718760571725, -0.4730256546039917, -0.416749844644813, -0.3495070254346424, -0.27530675773099755, -0.19803815820338544, -0.12107945414459387, -0.047169874561898695, 0.02181558909426151, 0.08480034597026087, 0.14154648965853056, 0.1924347062328291, 0.23837571354132514, 0.2805348034441826, 0.32019711641489135, 0.358538990935398, 0.39650692415792577, 0.43470112916577186, 0.4732845290141938, 0.5119969973333811, 0.5500893857583944, 0.5863265429604021, 0.617947350439207, 0.6276672637211074, 0.481722027099745, 0.24158019729508823, 0.1673203195873434, 0.18428633748731116, 0.19458743239536824, 0.19799646369102764, 0.1849042991797356, 0.11953874736173198, -0.021396543724617523, -0.15832072146687537, -0.23861446719459778, -0.2571578101294172, -0.22164644462468885, -0.15699540207930696, -0.07455739694117547, 0.013495064341883634, 0.1083138373724406, 0.2107863993715533, 0.31826108015768106, 0.428089119355354, 0.5376780309965703, 0.6441403072794003, 0.7445291201811219, 0.8357300860295926, 0.9148298222837128, 0.9789093765637276, 1.0257284676452492, 1.0741400470674982, 1.2279241527860054, 1.4100800567287792, 1.5091135166029352, 1.4740740778612298, 1.3749924830218987, 1.2514079507153113, 1.1278526466840737, 1.0061049162060072, 0.8885481857590691, 0.7801475789217709, 0.6856834893294086, 0.5381261292559847, 0.48537737336267206, 0.45507431854674607, 0.44734271169854134, 0.46104408750270776, 0.503060176149035, 0.5542395563472802, 0.5492261246651557, 0.4623670143261207, 0.4048964323203341, 0.4627737990218206, 0.5390409698775747, 0.608594166002749, 0.6652479635146373, 0.7065118931608296, 0.7307987630703452, 0.7375917275542179, 0.7272063456272511, 0.7008222881739226, 0.6601862691959388, 0.6075701710655332, 0.5454738410537816, 0.4765675832031304, 0.4034413012883684, 0.3285696499428701, 0.25413150264493556, 0.18201266487445356, 0.11369869492899021, 0.05031260476240895, -0.007428229641235795, -0.059149611979009364, -0.10481174347838174, -0.14463238813323454, -0.17903679374380577, -0.20857554170498283, -0.23384397348866415, -0.2554063712697996, -0.2737012652716935, -0.2889524406431274, -0.29979004340405346, -0.3061901774397846, -0.3280482494737864, -0.3887602496190308, -0.44179105024709386, -0.4916583154458891, -0.5331228324115003, -0.5638494663910301, -0.5825280019869794, -0.5884067715559418, -0.5813682247863365, -0.562045998984086, -0.5318096976793072, -0.4927492310391841, -0.44755125473329826, -0.39934588498361556, -0.3515066657868875, -0.30740230214332165, -0.2701927462492204, -0.242556994620708, -0.2265716212962925, -0.22348283568852878, -0.23373545086500114, -0.2568262386508713, -0.29151004663979263, -0.3357271591099127, -0.3869665934352762, -0.44222193799190146, -0.49845695457278794, -0.5525268758366235, -0.6016780857727144, -0.6433798392789347, -0.6757978244928693, -0.6975092955914826, -0.7079119626353387, -0.7068296700688799, -0.6947176697597535, -0.6694234872398315, -0.5731431927043562, -0.3622201863027614, -0.27628816712531323, -0.2821171133578573, -0.27528119977092147, -0.2739364943496081, -0.2768510705889793, -0.28252747145671164, -0.28942941834577685, -0.2960778744063586, -0.30114920875646245, -0.30363950812254714, -0.3028401195642014, -0.29852402381672083, -0.29078914629999963, -0.28023400863111947, -0.26768431651815194, -0.2543454166054946, -0.24144908144399535, -0.23038926832767403, -0.22233782888914355, -0.21838235442849774, -0.21916039343762295, -0.22502233210061062, -0.23572584715038625, -0.25064376908199026, -0.26854693202061064, -0.28786786438239886, -0.3065825838683951, -0.3225261657804426, -0.3333630700521435, -0.336931342233175, -0.3312687609723546, -0.3149426766532155, -0.28708077502311413, -0.24763064404892887, -0.19733685229090225, -0.13787640622622277, -0.07173484488121717, -0.0021856521430403397, 0.06695120577454405, 0.13147826319809885, 0.18715186489090252, 0.22994495076316968, 0.2563962768894674, 0.26387445644372853, 0.2508464037233784, 0.21703833768670355, 0.1635304933978432, 0.09273634563121425, 0.00827428049863732, -0.08525259728823587, -0.182585229201913, -0.2781671431360504, -0.36657603755718515, -0.44289414228094026, -0.5031001005875324, -0.544304607092732, -0.5649716183451399, -0.5649148642805026, -0.5452883163215785, -0.5083310568630912, -0.45716876518197225, -0.39539491412874783, -0.32680820971310043, -0.2549768415543636, -0.1830576214422912, -0.11347775052384357, -0.047930201760722824, 0.012763983915318633, 0.06848071293952795, 0.11977218679970392, 0.16758802802870854, 0.2131698962256401, 0.2577743327516018, 0.3025556553987645, 0.3483754161627832, 0.3957108356648531, 0.44459851356155955, 0.49447016040398406, 0.5439514848914353, 0.5895478234140081, 0.5952585969903224, 0.4563102949987623, 0.25929898843072796, 0.18372369043823705, 0.20411009550942638, 0.21904131933205906, 0.22616237485299528, 0.19890293460105424, 0.049834215046818287, -0.17084476037945429, -0.3386525613025668, -0.41563224272864385, -0.41542334403482784, -0.37907779921324547, -0.32444563479100275, -0.2618287511679842, -0.18867222988198762, -0.10489458018515307, -0.011605406365523763, 0.09001506103566648, 0.1979757895176526, 0.30981491077147627, 0.4226636349992523, 0.5334270795844356, 0.6387604066340273, 0.735377669461033, 0.8199284004494407, 0.8894711241380189, 0.9464054694622344, 1.1181089389247902, 1.3559308003007668, 1.4697364394168537, 1.4427821278426434, 1.3599569388772181, 1.2598050586486393, 1.1515247368469734, 1.0371649425243734, 0.9207236033911159, 0.8074009551809533, 0.702717315105899, 0.6115415463631253, 0.42382092542997496, 0.37598544855176286, 0.3504866355528655, 0.3476463176858062, 0.36618511632086426, 0.411424687899816, 0.46628191667243724, 0.4487834383090563, 0.3830486893562046, 0.3476901606146696, 0.41192858656028086, 0.4960845553610209, 0.5715906651812683, 0.6350647253064912, 0.6839226338891717, 0.7166091184274803, 0.7324214652699443, 0.7315944861376744, 0.7150431560506298, 0.6843489288328168, 0.6414760475935282, 0.5887187330064183, 0.5284423544947847, 0.46303804005603677, 0.3947215006307436, 0.3255197242717731, 0.257138530724335, 0.19098592731192898, 0.12810345430856707, 0.06921890256973118, 0.014729690799539341, -0.03522558551330768, -0.0807434366300317, -0.12207457167394331, -0.15957022782504016, -0.19360168016293144, -0.2244892893681376, -0.2524366122445496, -0.27745828902251546, -0.29874662830110843, -0.3145182157367401, -0.3337327257779865, -0.382491258349976, -0.42305056186468804, -0.47089142236581694, -0.5117207216556743, -0.5416954455856988, -0.5596551627197996, -0.5649468190689433, -0.5575623978156301, -0.5381776073590849, -0.5081857603336566, -0.4696385554975535, -0.4251511979869562, -0.3777528766207965, -0.3306819201121254, -0.28719640395464907, -0.25031370514144147, -0.2226572011340009, -0.20620623107029168, -0.20225257251941287, -0.21121078494882983, -0.23273038564587356, -0.265581549191646, -0.30792806782103543, -0.35726519889045605, -0.41082026831561436, -0.4654933201982874, -0.5183285607647266, -0.5664029324690434, -0.6073067625374193, -0.6389402173491314, -0.6599523479420508, -0.6694334847078567, -0.6672810195977794, -0.6537983120995232, -0.6295947631039276, -0.586892507545445, -0.47731651955038346, -0.3217661260827176, -0.2744826565282048, -0.2737186218580878, -0.27002958788338294, -0.270326611756444, -0.27327220017397114, -0.27744180378994066, -0.28143125779637734, -0.2840204815442393, -0.2841781525487004, -0.2812773782958189, -0.2749792716018271, -0.26545681401455856, -0.25315645037332124, -0.23900170077187388, -0.2240542104018779, -0.2096893913088289, -0.19719658982450294, -0.18793794848546197, -0.18293695241106933, -0.18304386427719876, -0.1885616890584969, -0.19944489681208388, -0.21500285167022648, -0.23415285938265518, -0.25522488649231123, -0.276275843935442, -0.29499747733676696, -0.30907801189945516, -0.3161900174888581, -0.3143623648792673, -0.30200181295161244, -0.2782199247074564, -0.2428286733067977, -0.1965621154393764, -0.14098993052529218, -0.0785884775098955, -0.012540253938012391, 0.05335651311924172, 0.11499382482990361, 0.1681704767351273, 0.20894901343376948, 0.23392008827139987, 0.2405214434828049, 0.22724867284292483, 0.19383948192311395, 0.1413393561651599, 0.07208186904318303, -0.010436603216026352, -0.10179068671556424, -0.1969177019730428, -0.290502891330946, -0.377341867782361, -0.4527561407344938, -0.51288915517787, -0.5550155270193695, -0.5776452538265966, -0.5806319416460135, -0.5650273167949367, -0.5329808492047925, -0.48738398790776705, -0.43164724282584443, -0.3692545304401733, -0.3035562785987267, -0.23737762193538225, -0.17294935038032477, -0.11166980370965973, -0.05422085073792893, -0.000502013726548789, 0.05010952531750146, 0.09870404172329117, 0.14653155624144, 0.19489965224718375, 0.24492098357325176, 0.29740146271865875, 0.3526195180612186, 0.410424714366707, 0.4688738576126168, 0.508195002983455, 0.4685456319816592, 0.35452521976185336, 0.22299622517238182, 0.18717271599398488, 0.21103361709049884, 0.23097184083804212, 0.2433287221479341, 0.19944484828676856, -0.04704996056265198, -0.32487486012677014, -0.4887692066997209, -0.5277356534717583, -0.5186265528093212, -0.4968144526970164, -0.4669896824982729, -0.42681558314966495, -0.37448252162677065, -0.3099666512317327, -0.2330350984069156, -0.14453857901933098, -0.045928836188840805, 0.0607024581375164, 0.17272154508964555, 0.28707463102550257, 0.4003357785549344, 0.5089627794895533, 0.60926392579929, 0.6976888139152511, 0.7654473850711683, 0.8987930770953905, 1.1814966501056787, 1.329923907843829, 1.3286850799265242, 1.2715910914286015, 1.1970373359015523, 1.1089313077677776, 1.0078390337553085, 0.8988515671217039, 0.7871875483635966, 0.6786752592809884, 0.5787222784500008, 0.4924306300243413, 0.27117659509960745, 0.2295438616301988, 0.21036281743548768, 0.2137614451342098, 0.2397956042786864, 0.2878584536928104, 0.33842047864075075, 0.31100253670152966, 0.26840984810669344, 0.27555590330949586, 0.3478612364735736, 0.43769262649445917, 0.519641869882542, 0.5902894236643306, 0.6471369800892304, 0.688497316881179, 0.7136381656644617, 0.7225758551479777, 0.7160997607272099, 0.6955150008425197, 0.6626034254825166, 0.6193671721828995, 0.5679779058685721, 0.5105611973108566, 0.4491679773449899, 0.38561965282328625, 0.3215150839231802, 0.2581380017197068, 0.19649740113403436, 0.13728800163191313, 0.08095483148648253, 0.02769452206063061, -0.022466035537686224, -0.06963879251692084, -0.1139914486623379, -0.15569825819811456, -0.19486419840949232, -0.23147228686988797, -0.26533123204735887, -0.2959532399431648, -0.32102031472369674, -0.33978080311047876, -0.37219363564434005, -0.39729245165947447, -0.4420297126871997, -0.4811441619778414, -0.5093811783350848, -0.525703709713568, -0.5295769789564506, -0.5210625868311496, -0.5008865776742084, -0.4704372231701548, -0.431722664438027, -0.3872771602979128, -0.3400064536869216, -0.29303087829698526, -0.2494535622522669, -0.212200521380991, -0.18376824910922274, -0.16613131222395872, -0.16052341820978988, -0.16746900580651802, -0.1866284780169547, -0.21697904248479372, -0.25672181801152805, -0.30360131953722025, -0.35484319168505074, -0.4075730185266009, -0.45873846220828973, -0.5055731029413, -0.5454590664642125, -0.5763808950595086, -0.5967015417740797, -0.6055613594397777, -0.6025654878505362, -0.5880983740051535, -0.5629101665788556, -0.5276382827919677, -0.4746867687432881, -0.37305337569490704, -0.28252022373916863, -0.2565812694366536, -0.24747588876357085, -0.2460384523611081, -0.24711889201307624, -0.24937377978011543, -0.2515205188983294, -0.25234016624970634, -0.25090323163672323, -0.24648729437293504, -0.2388380465800677, -0.22797103547642106, -0.2144262254753122, -0.19895870918641734, -0.18276279948312135, -0.1670772318391629, -0.15337708890160995, -0.14293583535205157, -0.13700304670102037, -0.136374226000044, -0.14158394020730203, -0.15253280819016446, -0.1687263125246954, -0.1889965029672065, -0.2118057844047314, -0.23507995380245594, -0.25657531757124996, -0.27381260859576084, -0.2844794279309335, -0.28642691490599503, -0.2780554448683312, -0.2583157216895198, -0.2270133141289472, -0.18475159705169286, -0.1330978550582982, -0.07442237137846952, -0.011897589919645402, 0.05077609043077791, 0.10952226969675172, 0.16023960648839508, 0.19904262038173837, 0.22261307845555223, 0.22843556163723844, 0.21505422492351123, 0.18220582651923256, 0.13090042588509454, 0.06338557758014463, -0.016984937569619607, -0.10596288550926625, -0.19871912492841481, -0.29016893909744335, -0.3753747253754356, -0.4498682564036356, -0.5100145418508868, -0.5532007264881353, -0.5780471154956048, -0.5843720400196424, -0.5732003279420721, -0.5464956755440338, -0.5070072445230993, -0.45785075939684905, -0.40230747466246486, -0.3433881898141813, -0.2837165347506252, -0.22519951152489703, -0.16907949599807282, -0.11577054875749404, -0.06507873240378004, -0.016188705359709843, 0.03202773717266805, 0.08093748165543069, 0.13183952249776798, 0.185843589348341, 0.24333544523634476, 0.2995582070888041, 0.33242904461852074, 0.3341952714970926, 0.29092088685907846, 0.22125989846944538, 0.16652002838110347, 0.17805755965327563, 0.2041696850026513, 0.22887491136924054, 0.24826468156818404, 0.2015388114778507, -0.10850720213530418, -0.42463727224972025, -0.553315131249684, -0.5722158088100837, -0.5794303859484957, -0.5821922373977308, -0.5769951482414646, -0.5614181911536082, -0.5338238852897863, -0.4929008881308654, -0.4379520616491952, -0.3690143708255871, -0.28678112083118634, -0.19272300659898178, -0.08898734983959145, 0.021654991171141447, 0.13590503093583628, 0.2501379968375286, 0.36045124176676246, 0.4629880396642063, 0.5524208912534831, 0.6322423591437225, 0.9011544186751408, 1.096503093392145, 1.1354460925817014, 1.1111181142191722, 1.0644753527697848, 0.999270745826311, 0.916684217081035, 0.8209130588074665, 0.7170539856640703, 0.6108357609814616, 0.5078949233580898, 0.4138531871437072, 0.3335585004288246, 0.08761325344495674, 0.053284614599964364, 0.04136996684451155, 0.052120133665826796, 0.08664575075348235, 0.14105567519044548, 0.18830883408318, 0.1589401567894999, 0.1318604949422295, 0.18478233238861685, 0.2718282322458716, 0.36751126760937414, 0.4559474041811695, 0.5338580819892575, 0.5986724662175975, 0.6487304693942786, 0.6831354843252315, 0.7018245975180717, 0.7053502141247474, 0.6948645382833245, 0.6718776976534393, 0.6382090277729597, 0.5957657230646434, 0.546502132146832, 0.4922470382987294, 0.4346933694251529, 0.37528358447091925, 0.3152347968243463, 0.2554777490488078, 0.196711482218201, 0.13938477770961377, 0.08377051307611172, 0.029977481874898793, -0.021965789526564805, -0.07208038100128711, -0.12035465287799951, -0.166707519420231, -0.210921352541817, -0.25261502197036556, -0.2913028441332486, -0.32519830771951064, -0.3463833188822818, -0.3588130065006574, -0.3652595650481061, -0.40551082922099724, -0.44180036295707126, -0.4672990018417966, -0.4810722140146204, -0.4826780766078347, -0.4722516009708251, -0.45054851226830195, -0.41894495300750023, -0.3793977458550941, -0.33433976575021696, -0.2865658824905051, -0.23904049534441185, -0.19475139713461864, -0.1564724056546325, -0.12664621474101523, -0.10715304921738156, -0.09928139265055513, -0.10354157041169376, -0.11976279380479049, -0.14696565154496355, -0.18359433035222716, -0.22743516587705503, -0.275964359597058, -0.3262804529587653, -0.3755272558487386, -0.4208010927154069, -0.4595983822602876, -0.4896638381274063, -0.5094116330440892, -0.5176959241324841, -0.5141625076894139, -0.49894477375553503, -0.47291707847122444, -0.4373086903852741, -0.393187064085168, -0.3343676018373567, -0.2593157537726627, -0.22740683677817675, -0.22300711711619736, -0.20377466616714734, -0.20382765122538282, -0.20502790516680192, -0.2061062198501522, -0.2059639754803222, -0.2035992955344652, -0.19838761062770693, -0.18992210661549525, -0.1783112230577646, -0.16390916469546069, -0.1475911671586041, -0.13038291268291635, -0.11369558212185327, -0.09888370613487218, -0.08744670615576666, -0.08056138920543265, -0.0792768321177082, -0.08407533358208141, -0.09509686837863907, -0.11177791964285788, -0.1331370247374739, -0.15752403231247492, -0.1829797073885615, -0.20710092444016492, -0.22745910108607514, -0.24155532537462499, -0.24725267561700548, -0.2427680726367707, -0.22705292259833731, -0.19975549977898632, -0.16148259373810436, -0.11367477179750551, -0.05870344085990298, 0.0003679272293610758, 0.05985551165255121, 0.11578992403954813, 0.16411214870302993, 0.20104199673265932, 0.22331455971348624, 0.22849283462687553, 0.2151466177361172, 0.18302151906579578, 0.13308025348339791, 0.06747329936470381, -0.010590024073436677, -0.0970678152745994, -0.18735372162838138, -0.27663645588619623, -0.3602169683224692, -0.433891570116681, -0.4941963354991361, -0.538695443190992, -0.5660443304786904, -0.5761036435527416, -0.5697725281497878, -0.548924800707292, -0.5160489410273446, -0.47408462299981524, -0.42597768508285383, -0.37454097681410303, -0.3220544805396033, -0.2702590871188404, -0.2200938349128272, -0.17186612960440417, -0.1251371891619968, -0.07897786325608447, -0.03191860550399195, 0.01883354875457055, 0.07631755138806007, 0.12668892745938898, 0.16315712765934087, 0.17817374129764385, 0.17095505260681776, 0.14674394293206738, 0.12089478835044343, 0.13327115971130432, 0.15713780900605112, 0.18430623980147676, 0.2128151584475395, 0.23931451675470283, 0.21941579199296202, -0.10258765949398363, -0.45105408798355995, -0.5497079951529482, -0.5774265705221131, -0.605835379933489, -0.6304387388610015, -0.6485475255447577, -0.6578797733765303, -0.6561730049942422, -0.6415604696169517, -0.6124983166714859, -0.5681178940907525, -0.5081948206284643, -0.4333577812846414, -0.34501523504957454, -0.24538454826585365, -0.13738135513619376, -0.024479445051767357, 0.08939811435972977, 0.20014944900947373, 0.3036178725751011, 0.3797134079482536, 0.5570171168339169, 0.8051981111859909, 0.8758435425248505, 0.8845104245616646, 0.8675674713222348, 0.8282829880035587, 0.7679283878922218, 0.6900727458106761, 0.599233229768112, 0.5007947508101784, 0.40033199561676547, 0.3036795236693708, 0.2162140290256609, 0.1428968236666659, -0.1172753214894744, -0.14381656057327374, -0.1478209222112885, -0.12924012284682052, -0.0859117653837771, -0.02374065370308509, 0.014265111080248527, 0.015091097885492122, 0.007182160780556224, 0.08793695909629307, 0.18849396493374737, 0.28973023338436654, 0.38439824247505605, 0.46920955600811265, 0.5416813732094132, 0.600051819885925, 0.6433992614950865, 0.6714733000522082, 0.6847111601927636, 0.6840230973150003, 0.6707543443108475, 0.6464689359651814, 0.6129022661896242, 0.571777519355662, 0.5247792397569797, 0.4734199467290394, 0.4190478013775283, 0.36276541235772886, 0.30547109394781113, 0.24782190026068918, 0.19030054460053414, 0.13321078024020316, 0.07675951082337207, 0.02107221167835238, -0.03372101710967801, -0.08746241561849022, -0.13988923702767053, -0.19061676780378178, -0.23908428441377882, -0.28471174695376966, -0.32630131516375727, -0.3503505729289653, -0.34000797891968126, -0.3270792064476886, -0.3620482984510929, -0.39448408682787495, -0.4163129786484596, -0.42667831785801624, -0.42523034396688075, -0.41216745927979126, -0.3882654251427038, -0.3548849474800644, -0.3139115390718903, -0.2676876159482955, -0.21886368669807865, -0.17027995014275632, -0.12475682004100541, -0.08497420220221663, -0.053244213270263074, -0.03144306545019937, -0.02080638208609109, -0.021958142191519592, -0.03475273989091665, -0.05842380846930206, -0.0914754981226924, -0.1319494631854905, -0.17734886449984, -0.22500039770848534, -0.271982773393205, -0.3155448066545814, -0.3530065486484468, -0.38218470678391103, -0.4012389318139902, -0.40905342492586483, -0.40501336426672063, -0.38929876028342214, -0.3625964504011874, -0.32627998863371266, -0.28206627042536025, -0.23148813756422548, -0.1736255024537614, -0.12981331230177418, -0.15457897600624215, -0.17291346219417136, -0.1442401919817704, -0.1451165522572324, -0.14592786436617722, -0.14550472162672157, -0.1429578137790597, -0.1375249619939769, -0.12889600168828874, -0.11698666554197956, -0.10226030091461169, -0.08539647094409375, -0.06757458104212333, -0.05005005950710917, -0.034390723936387424, -0.02199545039375561, -0.014301053143626064, -0.012295066799278054, -0.016729955081449255, -0.02768693347003115, -0.044838727187662464, -0.0671118960109931, -0.09302657265075531, -0.12048093164871476, -0.14716895831897148, -0.17047740786798027, -0.18794852960685127, -0.1972462309898848, -0.19660148753150297, -0.184781939139949, -0.16144557665192139, -0.1270465994107095, -0.08303566401755424, -0.03165824473689294, 0.024023602574010816, 0.08044153778852525, 0.13365282383397692, 0.1797128509866769, 0.21489008928833597, 0.23601940922176057, 0.24070494093514094, 0.2275640797963998, 0.1963295038298618, 0.1479158069674913, 0.08436841931397687, 0.008731595718030949, -0.07515201334728916, -0.16293566297506068, -0.25005583782842855, -0.3321021654659413, -0.40508716763515684, -0.4657807940945906, -0.5118504728806772, -0.542064742232681, -0.5562270676375034, -0.5552089259002182, -0.5406714721902042, -0.514965595372952, -0.48071311718651555, -0.44067452010126185, -0.39730880276009106, -0.3527250376509232, -0.30833372359576083, -0.26495313229136386, -0.22165435082746932, -0.17062789580991122, -0.09921078205707268, -0.02837285229815656, 0.0379242645259108, 0.08237372066242887, 0.09776418814497312, 0.09465834959264363, 0.082094457247198, 0.08161628477960026, 0.08981219804302665, 0.10493630506061269, 0.12676757031476615, 0.1539456315774519, 0.18446791254181427, 0.21593327122849804, 0.23009614087487806, -0.024701237556330025, -0.4055059152856634, -0.5112737679732978, -0.5520214560855738, -0.5965158505322536, -0.6394406792848475, -0.6783596909784553, -0.7109262261989135, -0.7345787851143042, -0.7468925111478546, -0.745575180479646, -0.7288679462454066, -0.69556263594869, -0.6452957877478998, -0.578525052313223, -0.4966522366447652, -0.4019317081825733, -0.29740729700339585, -0.1867732824221946, -0.07415651357389397, 0.03604809210953608, 0.13577843324402306, 0.20449788373454236, 0.45191232675062, 0.5671967406731047, 0.6080694422799162, 0.6181752510198013, 0.6062435593417783, 0.5707170438132616, 0.5142096336770443, 0.4405128625213406, 0.35444805310479754, 0.2612880733537475, 0.16680800624642256, 0.07663130799725337, -0.003768555362369419, -0.06971231212942897, -0.3326692299898246, -0.35129169045672937, -0.34741129105258306, -0.3209208968380688, -0.2693712041337477, -0.1988401789917802, -0.16963404550958883, -0.135475972334544, -0.09559965885582411, -0.00496049345837779, 0.10272952322011886, 0.20890457847762, 0.3090845532984643, 0.40013022877666504, 0.47952611343000306, 0.545546515831127, 0.5971427229190391, 0.6339965243069483, 0.6563445343642638, 0.6649590415095274, 0.6609490940600731, 0.6457133722086974, 0.6207550817775234, 0.5876427886973734, 0.5478636189180608, 0.502812933326167, 0.4536951861892704, 0.401548667955145, 0.3471911464481021, 0.291275574869557, 0.23427058563081804, 0.1765376586608225, 0.11833391783881808, 0.05989908958050094, 0.0014676232680432832, -0.05664730777872684, -0.1140454138263216, -0.1701718573691986, -0.22432544524331188, -0.2758051481696313, -0.3237130921373961, -0.34913774704993905, -0.31406270577596374, -0.2831277779183967, -0.31263229861938235, -0.34034681949970036, -0.3576964472764441, -0.3639153549538694, -0.3587482064734804, -0.3424442513917807, -0.31580266299934223, -0.2801480281816122, -0.23730632882123892, -0.1894986856089229, -0.13925813480550175, -0.08925553548711918, -0.04219141591919673, -0.000586299373910748, 0.03330550799710785, 0.057704260136898, 0.07132454712324421, 0.07355388564241405, 0.06437543605458451, 0.04450392995203334, 0.01519942094400406, -0.02163671623319896, -0.06375041879050913, -0.10846404813840316, -0.15304401172000848, -0.19463191854685302, -0.23065244725762257, -0.25871893089096965, -0.2770306475124067, -0.2842267073088096, -0.27971826814751566, -0.26347610927719867, -0.23625335281431292, -0.1993149005074244, -0.15453017131681634, -0.10406758420618822, -0.050129863400297126, 0.001566146652998035, 0.010571375253881632, -0.06790311400991511, -0.10459771972581011, -0.0715362678146203, -0.07260555610297814, -0.07259893938013606, -0.07041913893108553, -0.06540741202821199, -0.057065766670549856, -0.045411884321945095, -0.03069564180772666, -0.013730088096477466, 0.004494486350275828, 0.022531490324717574, 0.038947887352156485, 0.05209404295985198, 0.06061517462422028, 0.06323931474357103, 0.05927238461795081, 0.048358267645612685, 0.030898800772504842, 0.00774358148462273, -0.01950695936805502, -0.04890151647177454, -0.07796185944407341, -0.10415619599123538, -0.12482212751442567, -0.1376601536125719, -0.14069570282985078, -0.13271592705348167, -0.11319795000799981, -0.08261333198007614, -0.04226330829274927, 0.005595492415147341, 0.05803007171461383, 0.11148146476422927, 0.16212970780762048, 0.20606616649646015, 0.23967369535117244, 0.25983200097559045, 0.26422346609318303, 0.25147779151114835, 0.22132592792898365, 0.1746166156256943, 0.1132791845134764, 0.040193045990686294, -0.04102773496312029, -0.12627538405912286, -0.21127881591296216, -0.2918720208803691, -0.3643431168276017, -0.425625293590838, -0.47356569565566176, -0.5069479753457209, -0.5256166768823158, -0.5302912450139532, -0.5225455011524511, -0.5044448267494805, -0.47844872806399574, -0.44696502760452583, -0.412282478668069, -0.3761364919711354, -0.33841123699199516, -0.2852492049098836, -0.1875993530050013, -0.07061979667460783, 0.026770492018634684, 0.07875013513054085, 0.09605447390190136, 0.08715604240057395, 0.07408498727342128, 0.06400235163986423, 0.05978200160777192, 0.06270947493114765, 0.07335474086666771, 0.09154366216063803, 0.11653457375881171, 0.14689718923009654, 0.18067223896473905, 0.21228336934595315, 0.10087416135509164, -0.29742833948059344, -0.4453167743117503, -0.4959670155364728, -0.5526486728648283, -0.6100324608997958, -0.6661684010021096, -0.7188871292679746, -0.7655332110071251, -0.8033596957300073, -0.829519514571416, -0.8414897561176398, -0.8371238521381983, -0.815018540086923, -0.7745486479847976, -0.7160894775879303, -0.6409733308903327, -0.551520065455426, -0.45090431357285965, -0.3430041263685766, -0.2322176468773387, -0.1221702018915023, -0.04129704388942823, 0.06440810940122876, 0.22469313799245327, 0.29184772487119615, 0.331277753905721, 0.34732554392464277, 0.33795462257888254, 0.305052813390998, 0.2515300653903543, 0.18147068350414752, 0.09964621610120439, 0.011540903653900259, -0.0772243655956526, -0.16092841842421102, -0.23435383486111405, -0.29281058631807966, -0.5469184052298122, -0.5581588466722134, -0.5468441482094688, -0.5129158224497563, -0.45509254722608494, -0.38372485874595785, -0.3267347798082625, -0.27403077104284623, -0.1937313805614842, -0.09243299941863459, 0.019403747722576803, 0.1294495876423074, 0.2341222101136271, 0.3303210403291432, 0.4156316188539009, 0.4882711938630875, 0.5471799268606921, 0.591893103906596, 0.6225469923185036, 0.6397090484877266, 0.6443385131873693, 0.6376107085912945, 0.6208704251661894, 0.59547934219162, 0.5627892681712914, 0.5240289770800848, 0.4803105867925903, 0.43255926911375786, 0.3815540567843554, 0.32789434119417527, 0.2720682330864612, 0.2144443993759797, 0.15535664021256057, 0.09510759031375304, 0.034056223867512614, -0.027380100930053608, -0.08864895163460229, -0.14907479297444404, -0.2078058432590444, -0.2640746316796516, -0.31687858018220894, -0.3395345757654038, -0.2761443732280693, -0.23372257578008693, -0.25849831559238723, -0.2808314037425177, -0.293060332708027, -0.294570754969099, -0.28518613256129655, -0.2652181084437615, -0.23546721085075895, -0.19723652395481217, -0.15226286660266197, -0.10267049055836708, -0.05083479157223891, 0.0007028343599042586, 0.04941771850873167, 0.09288913639799645, 0.12899915268662632, 0.15598157531384693, 0.1726088859270849, 0.1781699064732445, 0.17262654837949665, 0.15649999844956097, 0.13099023024296041, 0.09776424592647714, 0.0590407153878294, 0.017287811528918784, -0.024716136051206483, -0.06425138634046945, -0.09859986017970623, -0.12543823302724455, -0.14275629382992383, -0.14921747719420297, -0.1440238501774962, -0.12718563568359453, -0.09931860879731746, -0.06178168152752539, -0.016421173568818892, 0.03443187660432945, 0.08821176986952284, 0.14172547125951562, 0.18225097642725618, 0.14497188456016907, 0.023720666561105386, -0.0168799018598782, 0.01096433950866249, 0.010284119232395472, 0.011534032825380347, 0.01572851714390655, 0.023267753102770072, 0.03435302507838678, 0.04861909005656173, 0.06546826126588012, 0.08374630118833704, 0.10217702996308464, 0.11909908933099889, 0.13297425375136118, 0.14216690773150553, 0.14547455936053666, 0.14190591605855207, 0.1311697703434449, 0.11339951757411626, 0.08954308353220597, 0.06099609867429834, 0.029861552964740135, -0.001512520673580653, -0.03039578869718529, -0.054195437207782415, -0.07039362155776496, -0.07705189628799669, -0.07275042917120977, -0.056991755554762547, -0.030070016607541827, 0.006692959843140889, 0.05119000592303391, 0.10048219280847093, 0.15114516843810222, 0.19937864477430078, 0.24139997598805207, 0.2736309353022577, 0.29305248401006767, 0.29737336931025826, 0.28526164283576283, 0.2564157543989696, 0.21161881863756005, 0.15267423279267645, 0.08227585828666095, 0.0038220236933872442, -0.07885649151234553, -0.16174296286019807, -0.2409701667869193, -0.31303631241041696, -0.3751109233497818, -0.4251266712363968, -0.4619788274742662, -0.4854300938965057, -0.4961733139979483, -0.49554460341422635, -0.48548218277247024, -0.4681081869700201, -0.4456686300754602, -0.42003794732344835, -0.3838806312969043, -0.2953954340813749, -0.14194613616473895, 0.008829853348421679, 0.09113135949442164, 0.10813434185454174, 0.09854193609126582, 0.08059436410296872, 0.06352392715491906, 0.04953708739114937, 0.040317290540623496, 0.03756783261087726, 0.04239269017439895, 0.05529962112908926, 0.07615553033155553, 0.10410872738230026, 0.13768448472067085, 0.174435250748874, 0.18385962433407066, -0.13059335203344435, -0.35616128149646187, -0.4131721024699506, -0.4777228445732882, -0.5452465889588697, -0.6142632756841135, -0.6829318078271558, -0.7487576642779437, -0.8089428640512164, -0.8603442418704592, -0.8998945129086788, -0.9246637620097857, -0.9322781864038898, -0.9210058143979314, -0.8900740966133824, -0.8396918347018136, -0.7711866892108308, -0.6869135782744848, -0.5901895164054078, -0.4851001471603791, -0.37622941713890423, -0.2672444047114757, -0.21587954301601986, -0.08355140964572438, -0.03283136814992016, 0.02635757204666689, 0.06809521781793304, 0.08495407062577698, 0.07688033056194055, 0.0455941603470551, -0.005714320077485624, -0.0729498364108272, -0.1511177030617521, -0.2348154401371909, -0.31830858389830397, -0.39607872813995737, -0.4629051401088278, -0.5143797029397215, -0.7485786335552826, -0.753389326477143, -0.7357489217106847, -0.6948182632680062, -0.633150010020715, -0.5655555630554003, -0.45446112644333114, -0.3793984771247727, -0.2795373458582491, -0.17102284015839953, -0.05711179018672041, 0.05546517193977252, 0.1632317020091394, 0.2632510316125627, 0.3531275277739159, 0.43113068778168895, 0.4961203838393793, 0.5475801538592728, 0.585486635579918, 0.610284088467016, 0.6227294825969594, 0.6238446430340296, 0.6147673975872254, 0.5967119161695194, 0.5708475316607178, 0.5382867229868169, 0.5000016054091643, 0.4568470085813088, 0.40951389668511773, 0.3585849127169416, 0.30451612497181557, 0.24771540623168242, 0.18853947442159935, 0.1273816299176902, 0.06466978581819127, 0.000949023968230378, -0.06313237889357737, -0.12675876005756237, -0.18898799433907598, -0.24891501167801433, -0.30497120733931915, -0.3198740161654463, -0.22577098599118628, -0.18080972326897182, -0.20114696746141902, -0.21758655720605447, -0.22427205288354557, -0.22071369566221932, -0.20683397541914772, -0.18298339217148651, -0.14998482968332638, -0.1090715343920845, -0.06192462650369812, -0.010577371055923379, 0.04275612531533213, 0.0957244604869647, 0.1459149118499603, 0.191072888294757, 0.22914882251057023, 0.2584813045474368, 0.27781174950913456, 0.2864520159132944, 0.2842291793574292, 0.27162526179544644, 0.24963740908562881, 0.21988298024792785, 0.1843696466212994, 0.14556470663272414, 0.10608276442987519, 0.06872771094089192, 0.0361255543723642, 0.010761523832232722, -0.005391549367721016, -0.010806976729006657, -0.004715403843420951, 0.013022691878671111, 0.041725451378688216, 0.08008862566486341, 0.12614427876514567, 0.17750514361731273, 0.23146092857003875, 0.28512776717722077, 0.33406744054607906, 0.35383585557878505, 0.24955273240431497, 0.10871718318830315, 0.08833988891902811, 0.09950516283385191, 0.09965315962833765, 0.1026135831378232, 0.10911143845755955, 0.11924706432493704, 0.13288531060348951, 0.1492921881762559, 0.16751513126622974, 0.186080868121544, 0.2034731819778779, 0.2178928733693013, 0.22779521986274442, 0.2316771285641952, 0.2286130601710088, 0.21801385801216622, 0.20009379717132525, 0.1755480379311356, 0.14589963422902663, 0.11306936728526384, 0.07958728548084704, 0.048071987297322316, 0.021335736390590387, 0.0018345821016358954, -0.008267051722127938, -0.007586988123452265, 0.00457790578452677, 0.027904879876715416, 0.06124772655426136, 0.10248157999883933, 0.14881998345019065, 0.1968424196456402, 0.24288741387584734, 0.28319961614421674, 0.31432017955403113, 0.33326021962521724, 0.3377996279676194, 0.3265982588333163, 0.29933628714181015, 0.25670847811220554, 0.20038195223902022, 0.13286735749760314, 0.05731718988008616, -0.022685331085490645, -0.10342588892121451, -0.18127775908520238, -0.25301715432659044, -0.3159617290527432, -0.36822229755027447, -0.40868713347601826, -0.4371603158051487, -0.4541590954643535, -0.46094041626859594, -0.4591370342562682, -0.45072872042783674, -0.43754421261548426, -0.4037125521346159, -0.28267345814009226, -0.09815007824805755, 0.05538230160076463, 0.10737787596322423, 0.10621806723640237, 0.09103405637615047, 0.07363557056302206, 0.055471725740240174, 0.03846868609506959, 0.02481034995142828, 0.01648475626131507, 0.015091768631578795, 0.021746833778635732, 0.03694184415422086, 0.06047730267436968, 0.09147830105593435, 0.1283198102452774, 0.16678543375489507, 0.056923059134533105, -0.23891937170885935, -0.3078581786699788, -0.3761617063006484, -0.4494816052031618, -0.5267043786278214, -0.6064852994120473, -0.686709737728562, -0.7647931639294416, -0.8375800754603695, -0.9017386602093067, -0.9537988273280913, -0.9905962844962639, -1.0093864373095904, -1.0082426212117745, -0.9861444766877483, -0.9432277106479816, -0.8807598524555367, -0.8011813573274953, -0.7079404865055388, -0.6053345564347481, -0.4971113166094918, -0.3976866868195872, -0.3741979709518306, -0.2909793078687182, -0.2657101829740718, -0.2138430966512308, -0.1720904099037952, -0.1550094211371711, -0.1628020608170173, -0.19334491346169624, -0.24338950503379397, -0.3086148886284521, -0.38403202206830134, -0.464101583738338, -0.5432176319203448, -0.6158458540100371, -0.6770045121659285, -0.7223512065633777, -0.9269376449378748, -0.9268557058870961, -0.9044115939447668, -0.8588870277475933, -0.7910565561446732, -0.6990222721392239, -0.5551525362029457, -0.452694127798563, -0.3486878870109953, -0.23748980322732205, -0.12310406181420053, -0.00965224986334512, 0.0996064337619389, 0.20182984486500644, 0.29473961174567, 0.3766002333871974, 0.44627759163709246, 0.5031546458558607, 0.5471233734759573, 0.5784610615304011, 0.5977870016718096, 0.6059278144326123, 0.6038697405655897, 0.592637391730523, 0.5732652501862585, 0.546705419897775, 0.513831636316568, 0.47538129967879383, 0.43199469177656313, 0.38418717047623785, 0.3324172463412518, 0.2770778830608682, 0.2185808364707693, 0.15735252612927386, 0.09391931347062332, 0.02889371934263707, -0.03695377050936699, -0.10272871618085055, -0.16737500265876992, -0.2298596365340746, -0.2877498802933385, -0.2909293522714549, -0.16839423129802888, -0.1266984636757975, -0.14214272582123755, -0.15242967624487136, -0.15341367837068276, -0.14473019979274682, -0.12635689740235279, -0.09872755614382633, -0.06250620532896001, -0.018717427761881567, 0.031119610626033634, 0.08483986766409046, 0.13994226714861213, 0.19474726097733353, 0.24661195939388314, 0.2929444312003149, 0.3313923336085933, 0.36017714005501844, 0.38145890588162246, 0.39260415983377683, 0.3932012024146836, 0.38357902043716363, 0.36469501324414866, 0.3379758270055895, 0.30540504001828594, 0.2692774789040784, 0.23224528353256257, 0.19699608961207282, 0.1662681781625266, 0.14248898327918003, 0.1277895994308258, 0.12366554335562041, 0.13103247643361504, 0.14998024475118354, 0.1799023484661606, 0.21939648415718715, 0.26646781510612794, 0.3185884525124385, 0.37293159422667355, 0.42654880155389985, 0.476341749408435, 0.5157703961614108, 0.4999916526739421, 0.31749593860140335, 0.17751795126412206, 0.19133187073313795, 0.18969899505867627, 0.19130409323150932, 0.19648703035920434, 0.20558069191508288, 0.21833767402817106, 0.23424718184176285, 0.252194275740214, 0.2708831362124098, 0.28856865771543116, 0.30357063937434337, 0.3140587798737098, 0.31860722308941014, 0.31598181422439087, 0.30566527671701405, 0.2875841530717329, 0.26253803926551367, 0.231819265124245, 0.19750705858371198, 0.16197241274994134, 0.12804247678618674, 0.09843296915386324, 0.07583387531216834, 0.06235256673394529, 0.05960009045917225, 0.06824118104374644, 0.08815694881214609, 0.11817444318544257, 0.15634502889308455, 0.19987310909976297, 0.24549407882353003, 0.28956056760835747, 0.32845360767052023, 0.35874102323831525, 0.3775320648560925, 0.38261320779828534, 0.37266796566730864, 0.3473203253688162, 0.30717925904732457, 0.2537650633648125, 0.18938470460323842, 0.11696337030143322, 0.0397964827835926, -0.03865503607818077, -0.115065993905624, -0.18641039396386194, -0.25024057659789545, -0.30473365026282817, -0.34888935772185903, -0.3824090401728135, -0.4057902692117663, -0.420033951727921, -0.4266631817661266, -0.4272787196378003, -0.40492511265920195, -0.28557252793408816, -0.0887975736813984, 0.053680974642711266, 0.10236654797479439, 0.09689365573068143, 0.08256553374877695, 0.06738890703874434, 0.049503070162365326, 0.03104388543385994, 0.014142933687104176, 0.0010589306812187615, -0.006239131938824194, -0.006111896960101504, 0.0025283104569853165, 0.020151635398337753, 0.046546584367486155, 0.0807382801616292, 0.12101848908521795, 0.15439610177848184, -0.07372770088169833, -0.18516208141856172, -0.2530121742443061, -0.32796923386320964, -0.40874970111051123, -0.4946068929679548, -0.5839629796422287, -0.6746689308243621, -0.7638246803949347, -0.8481323386346364, -0.923877104687373, -0.9873700641366057, -1.0350562629718487, -1.0639704769655989, -1.0718756757266235, -1.057619541035507, -1.0211889626179698, -0.9638723312257831, -0.8881570338246689, -0.7976668574576697, -0.6969048733007925, -0.5857114129821719, -0.5022787935064521, -0.5101862572966045, -0.5151549481409763, -0.4705881112911383, -0.41651980948977974, -0.37581865831826056, -0.35954589503691414, -0.3678898274029905, -0.39862997179615434, -0.44830813499091793, -0.5125427395930489, -0.5861878983158997, -0.6637490218110838, -0.7395780361130528, -0.8083116779390824, -0.8650311802770281, -0.9056424572908179, -1.0729051405688979, -1.0698071820604547, -1.0444899665468865, -0.9972531189524445, -0.9200643483492419, -0.7438339062688986, -0.6111218290845186, -0.5027578230977241, -0.39903833936805366, -0.28888287209657904, -0.17585038566242872, -0.06331262720348274, 0.04563413219829737, 0.14832464056672734, 0.24255447873780778, 0.3266568498399378, 0.39946770870792037, 0.460334804597351, 0.5090332359073848, 0.5457306640082651, 0.5708769321282441, 0.5851534065748298, 0.5893608762485321, 0.584378061019156, 0.5710669658351151, 0.5502582907082245, 0.5226851430709529, 0.4890035446618719, 0.4497559117803145, 0.4054249022409748, 0.35641927973747967, 0.30315086964176574, 0.2460293304641752, 0.18554686843064427, 0.12226664411116772, 0.056899321827803995, -0.009727261316401226, -0.07661185397100034, -0.14264512802855478, -0.20664616813262615, -0.26536166519824267, -0.25184635767794816, -0.10531514442324763, -0.07270309881702275, -0.08320259381426887, -0.08752749757307754, -0.08316799725590585, -0.06982227051784307, -0.04768130178070429, -0.016859191394559048, 0.022289107662151864, 0.06814725997075399, 0.11957751389869742, 0.17598608096278667, 0.23391470745178822, 0.2895502848823934, 0.3439625653783711, 0.39367037934440496, 0.4362996874066294, 0.46772847195082257, 0.4860055222442696, 0.4945655970141347, 0.4936355679138238, 0.4863048839213602, 0.4698231744003696, 0.4455922370880412, 0.41543346122367053, 0.38165067957041376, 0.3467674734299222, 0.3135411914830821, 0.2846327342307333, 0.2625909551335561, 0.24950506653242943, 0.24700134704079657, 0.2559516741144219, 0.27653048874022734, 0.30805070518187727, 0.3491074366022533, 0.3975796689618004, 0.450843687466397, 0.5059282016883784, 0.5597347841858682, 0.609271457513173, 0.6513536237438338, 0.6758665538507902, 0.5680342403155874, 0.35084796985348765, 0.26308894939107663, 0.2767573686455753, 0.2769789584608793, 0.28087065448985715, 0.28877983964046017, 0.3006906624007426, 0.3159629436176701, 0.33368418604513295, 0.3523684594322978, 0.3704191079265833, 0.3859004507264956, 0.39707906757998845, 0.40222934277549527, 0.400189850970353, 0.3901383597327692, 0.3720884440756871, 0.3465708321728087, 0.31501033048607674, 0.27928061347802036, 0.2419404725452412, 0.20567932733943328, 0.17344198764949992, 0.14783362416739365, 0.13120379463741738, 0.125110214547687, 0.130446520004726, 0.14705804178581905, 0.1739748024100678, 0.20922898820094082, 0.2502029629641688, 0.29363438190670443, 0.3360312709865143, 0.37379429882054027, 0.4036134657929291, 0.4226116259532757, 0.4286354823791805, 0.42033732891999254, 0.39730373063875124, 0.3600325984384618, 0.30988885806073263, 0.24898149167601957, 0.17997758675433406, 0.10592265188942385, 0.0299716598293136, -0.044781271370008646, -0.11558637137615779, -0.18012757336087049, -0.23675934880065785, -0.284456500591336, -0.3229678442210666, -0.3526000655106678, -0.3742910592240358, -0.3892416832055483, -0.38772080219766947, -0.30970529956148285, -0.11672365692222986, 0.03417857561679738, 0.08697681439039373, 0.08509904895105924, 0.07396410444439905, 0.061538029167490294, 0.04538729696341459, 0.02699893766007877, 0.00840161225823799, -0.00810626479741483, -0.020353499710819456, -0.026310528795699284, -0.024384058141557752, -0.013476405481947396, 0.006870174261157658, 0.03638520151847935, 0.07409540097563116, 0.11964191359066056, 0.10150800743673738, -0.05730514207198478, -0.11385487708678266, -0.1864701155472428, -0.2664303448647143, -0.3534622859161094, -0.44660840459079854, -0.5443112423305625, -0.6441447655488064, -0.7431217231235607, -0.8375887576175547, -0.9236463825868526, -0.9972121613355007, -1.054506546672517, -1.0922100644140116, -1.1079101592690366, -1.1002277473868283, -1.0691059666143214, -1.0157927215264984, -0.9428977934178944, -0.8541863417290187, -0.7543701365085003, -0.64012377732457, -0.5761854325361666, -0.5992751310538491, -0.6787284445099218, -0.6317317999569729, -0.5721097658970447, -0.5322927460985492, -0.5175221076636638, -0.5272231531831553, -0.5590053092918623, -0.6093051213038994, -0.6735783426265334, -0.7466445623071314, -0.8229376036992075, -0.8968976617627336, -0.9632033503144886, -1.0171289515764679, -1.054690914608039, -1.1794418055148985, -1.175562410483554, -1.1498786752445018, -1.0995800540670153, -0.9612797594915166, -0.7464465645820102, -0.627679935281988, -0.5303576758858668, -0.43020357223891015, -0.3234828620461583, -0.21367694642114898, -0.10394142013586105, 0.0028506070228582203, 0.10418317740574423, 0.19798180164715617, 0.2826273055190862, 0.35697747493308096, 0.4203265799226097, 0.472380081989928, 0.5131769709324234, 0.5430402232976999, 0.5624832610036159, 0.5721597353324879, 0.5727742883384357, 0.5650515476178244, 0.5496662494054823, 0.5272442422937944, 0.4983190165533036, 0.4633681493958046, 0.42279388900174686, 0.37698865179908037, 0.32632893126074025, 0.2712558156144911, 0.2122668991739296, 0.14999480918693386, 0.08518275913418716, 0.018746674071990377, -0.04827389284838279, -0.11468453481810759, -0.17924267813693984, -0.23837376655218545, -0.19216410530944827, -0.0367364964693202, -0.020538785480857413, -0.024400220255483163, -0.02081244304227603, -0.009326048254322927, 0.009375505499829018, 0.03501166853668103, 0.06831874564867135, 0.10457468301210326, 0.1407510889096084, 0.18007294456585932, 0.22752579649066007, 0.28575596984889806, 0.3430948669714162, 0.39466235442029607, 0.44811661270061975, 0.5018544390947559, 0.5541735801710814, 0.5803987175141581, 0.5928049083933855, 0.5910862508609975, 0.5771185933414111, 0.5593874193076673, 0.536860195856387, 0.5085092331801397, 0.47651274739279037, 0.44343460186387595, 0.41194268474438767, 0.38478513906333056, 0.3644564746641974, 0.35315459133313576, 0.35246063318172216, 0.36333050529687094, 0.38586927064151655, 0.4194053475542511, 0.46242187897348064, 0.5127258012331717, 0.5675510556621055, 0.623782957195987, 0.6781929679649399, 0.7276371880743522, 0.769313189915839, 0.7994075350116976, 0.7804975675381174, 0.5559943862413959, 0.3547257451855055, 0.35561661461493177, 0.3544485772846997, 0.35703962740689654, 0.3639087273925039, 0.3749436277073075, 0.3897193202066189, 0.40717268911616245, 0.42599107331431796, 0.4443621524973711, 0.4604704093881642, 0.4723086712339697, 0.4782335912805138, 0.4767811930823225, 0.46720699883953287, 0.4492334474479289, 0.42350002642958184, 0.39118704000379356, 0.3543293317114413, 0.31530532412792267, 0.27701670263437395, 0.24228864586707122, 0.21396889769431993, 0.19433146158195913, 0.185179392429202, 0.1873580643346, 0.20094055708743963, 0.22492853767381837, 0.2575570338213983, 0.2962009659333047, 0.33777558914254713, 0.37880097796116075, 0.41582382807033613, 0.445549874492682, 0.46519503774014836, 0.47259295881832397, 0.4664034515787314, 0.44613436875509693, 0.41217882155097385, 0.36573783880789, 0.3087030588730926, 0.24350873848188748, 0.17290797464823981, 0.0998090339050659, 0.027006477401693374, -0.04293333524661591, -0.10792708004156548, -0.1663799505308452, -0.21738309516992338, -0.2605705776627145, -0.29624472790481704, -0.3250800263522562, -0.3454920432164581, -0.32042302678146894, -0.15955378836862755, 0.0070461099692717966, 0.0697193821489055, 0.07310438236861594, 0.06520602528947705, 0.056052645873674756, 0.04259677962911734, 0.025691532471936007, 0.007009692502637943, -0.011306955904179627, -0.027078542242745307, -0.03805982391730112, -0.0422938729048532, -0.038155875468580014, -0.02457338666172415, -0.0011173711475125359, 0.031947465816227094, 0.073763963778946, 0.14339842483577492, 0.07160127336130895, 0.03481833022348724, -0.031191664068058067, -0.10631330303506825, -0.1899650442718146, -0.2817854646383484, -0.3808899329322104, -0.4854758321000219, -0.5930901837885423, -0.7004194567422316, -0.803674130958433, -0.8985696062624786, -0.9808155111240482, -1.0462505364364674, -1.0913547855531975, -1.113423894372426, -1.1109775350606856, -1.0838324321662371, -1.0332957309021538, -0.9620414713072716, -0.8740510192239972, -0.7732205629642568, -0.6548332334070954, -0.6281406012024338, -0.6806385634668617, -0.7635978439616102, -0.7302859678144618, -0.6714500757004389, -0.633256440818057, -0.6205769501560674, -0.6323242368921766, -0.6659864928133175, -0.7178538937703953, -0.783286286096188, -0.8570106740783574, -0.9334652486836807, -1.0071019350960206, -1.072718602136768, -1.1256903377888303, -1.1622185555661408, -1.2420808232343972, -1.2398095944215326, -1.2152250308471344, -1.1201220578482531, -0.883231173064281, -0.7221403407377185, -0.6255877100082583, -0.5373580964804887, -0.44224091373509555, -0.3407999352946245, -0.2360761834579117, -0.13097663224069223, -0.028161385223546276, 0.07003549175006807, 0.16166474803972974, 0.2451880674063327, 0.3194825537627404, 0.3838223148054132, 0.4378390988426428, 0.4814757224057784, 0.5149193941181545, 0.5385467161234048, 0.5528482604551428, 0.558384520605054, 0.5557187009242237, 0.5453991615990388, 0.527912128878528, 0.5036988657771011, 0.4731315724142413, 0.4365637305914629, 0.39432283460768724, 0.34678278044172295, 0.29435965949833687, 0.2375892238763586, 0.17711002935249365, 0.1137293461869735, 0.04838249673192063, -0.01782320981911667, -0.0836779412410813, -0.14803741131260484, -0.1998180481855103, -0.09077611379055028, 0.03011222313455164, 0.04379690443174589, 0.07947542037010003, 0.10898049944125532, 0.1322659878151864, 0.15143680315456365, 0.17379167896788417, 0.19032941509563273, 0.1906219377005467, 0.18454203172845673, 0.18035834051548072, 0.18460938087385692, 0.20895588384792418, 0.25565456132065023, 0.3076116213144715, 0.36566962247809, 0.43723669824950484, 0.5312956852073034, 0.5989145523832811, 0.6412501370896919, 0.6651113857965854, 0.656601629636353, 0.6349399434349925, 0.6070326608934948, 0.5796944537795077, 0.5488824318547914, 0.517069953423122, 0.4869860908732737, 0.461315906525968, 0.44263971127862956, 0.43310592901407596, 0.4343724938123963, 0.4473321844749707, 0.47211728162231625, 0.5079572118876292, 0.5532861002755195, 0.6057761762558812, 0.6625382745439374, 0.7203161908031677, 0.7757160720352356, 0.8254949511139502, 0.8667206564102825, 0.8968375492381293, 0.9086379640811173, 0.7371932916477704, 0.49688797654190076, 0.42109814342992635, 0.41814553113480635, 0.4196707818558689, 0.4255864427320173, 0.4359863158605908, 0.4503297486157969, 0.4677415534067588, 0.48673658214399396, 0.5056439715450622, 0.5224127782584524, 0.5351329248805623, 0.5418793079522874, 0.5412647701706668, 0.5322503149113631, 0.5146491753659408, 0.48883093635782604, 0.4561092743875861, 0.41830087005262806, 0.3779707215081407, 0.3378628706386402, 0.3010320683810783, 0.2702211159575587, 0.24795316505652476, 0.23596432104497345, 0.2353449198421007, 0.24612810801211116, 0.26754169365199587, 0.29780427887115546, 0.33449234386828963, 0.37452626878162465, 0.414597110142223, 0.45126716903260156, 0.48136632822220227, 0.5021105005364737, 0.5113826281865022, 0.5077918031774962, 0.4907914758889649, 0.46064634232781465, 0.4183879663976642, 0.36570230454776986, 0.3047599930427243, 0.23806867659488073, 0.1682329624887675, 0.0978293094608107, 0.02915160713437981, -0.03583403628429771, -0.09571280843444008, -0.14954122562720418, -0.19701475111209632, -0.2382416560261822, -0.2738499216024213, -0.2870711826053549, -0.20239292766763928, -0.0374376504176821, 0.044720416964222576, 0.06224759866582108, 0.057873537834890465, 0.051123103812811266, 0.04082425182612426, 0.0264029731226606, 0.00902919513769418, -0.009486745832867793, -0.02714740180086972, -0.041685261857717926, -0.05095732484086124, -0.052960353382602854, -0.046117561375119465, -0.02936447598509151, -0.002274263936388188, 0.0348105372239198, 0.08583157120870943, 0.17526811338983173, 0.16139463875397198, 0.13107195534714933, 0.06456859573605289, -0.011594994712233131, -0.09738559172080041, -0.19259719868083636, -0.2961251067801207, -0.40620304361751725, -0.5200793380762878, -0.6343639905261795, -0.7448974553955754, -0.8472224932306176, -0.9366527918471523, -1.0088220291317809, -1.0598669426994327, -1.0869373147593269, -1.088345798209816, -1.063902767889723, -1.0148944189525473, -0.9441566213098644, -0.8558213761677695, -0.7518855380306979, -0.6280425108138292, -0.6236505717390743, -0.7392269798399402, -0.8052934599809207, -0.7669280458667784, -0.7095802796087582, -0.6737410212938699, -0.6636331457980806, -0.6780419176204808, -0.7143500847923443, -0.7687176827991555, -0.8364091272654361, -0.9120847822695453, -0.9901669040504846, -1.0651468686788936, -1.1319003266767629, -1.1859285000227082, -1.2235606681538078, -1.2590783341807135, -1.2594702051534843, -1.1979964935636889, -0.9838173819085174, -0.7696722204023692, -0.6769539302253378, -0.6035255903719974, -0.5242130054607217, -0.4360317757222534, -0.3415772592647226, -0.24364235693633507, -0.1448761587650509, -0.04772200782230307, 0.04568091387951334, 0.13351793371006337, 0.21434606862384342, 0.2870765015906498, 0.35097563424942635, 0.40562034874994346, 0.45086417583243676, 0.486779978911684, 0.5136061843455284, 0.5316933578855627, 0.5414468307688658, 0.5432930147472845, 0.5376328924140585, 0.5248396881778596, 0.5052316647115949, 0.47910456894968867, 0.44672281155515225, 0.40837981842348503, 0.3643971917342381, 0.315197639099686, 0.2612964545564651, 0.20336898554886584, 0.14222058672705096, 0.07883502803179887, 0.014320002414828892, -0.049047650660780207, -0.11156852431868725, -0.12435178043967277, 0.07829504560311573, 0.18711487550500117, 0.25451195415262706, 0.31019918174781225, 0.33023021730396707, 0.33554635869478133, 0.32724995530816514, 0.3080953436392164, 0.28027517873534435, 0.2473582006312931, 0.21339173192703598, 0.1810371728277449, 0.15283007825471628, 0.13347936015760276, 0.1316156655542624, 0.15053937185151867, 0.18615785775286398, 0.24061086940841037, 0.3373380347925128, 0.4596149541790222, 0.5638340985004611, 0.6504879160816883, 0.6877517857762641, 0.6854369075662112, 0.6593080191542593, 0.6255129895415577, 0.5951319063601437, 0.564019862669229, 0.5348410475597225, 0.5103469765284738, 0.49306501008523895, 0.48520993984280403, 0.48837988881210426, 0.5035009422758014, 0.5306177030734535, 0.5689312813593728, 0.6167527400373936, 0.6716559264683705, 0.7306094564652541, 0.7902071798794437, 0.8469323505647663, 0.8973796714528746, 0.9385654733369329, 0.9680425468726206, 0.9820470333766016, 0.8911233622361596, 0.6386950838076606, 0.4593598533702181, 0.4627034094033453, 0.46337384884538135, 0.46866156092839706, 0.47859494430956584, 0.4928215536627505, 0.5103339783010359, 0.5298021544077329, 0.5493640848101187, 0.5670811299091945, 0.5807966240123825, 0.5886676080558377, 0.5890278858502489, 0.580918602928338, 0.5638752384641936, 0.5383760331359113, 0.505489798010907, 0.4671897711662325, 0.42584778981377314, 0.3844132713696564, 0.34580223587320225, 0.3129962604812966, 0.2884258421210095, 0.2740770485151731, 0.2709832540460062, 0.27941999576903975, 0.29858749592500655, 0.3269278253233088, 0.3620154380319096, 0.40096676305387047, 0.44048733441694754, 0.4772939281545874, 0.5082262267309483, 0.5305889513206514, 0.5422383430786071, 0.5417782497376589, 0.5285685394848434, 0.5027562821276783, 0.46520113771685256, 0.417366056175533, 0.3611921141584036, 0.29889742701454836, 0.23285238177077172, 0.16534004597593377, 0.09848551535820427, 0.0340230541138995, -0.02667406303358355, -0.08278975394857824, -0.13390448407520417, -0.18014632684888987, -0.2181431205703266, -0.21173336646747298, -0.09094526535242853, 0.01614310312972922, 0.053280149146467615, 0.053035457085831794, 0.04751616823980531, 0.04014666364612873, 0.02862823423984695, 0.013496112738636823, -0.0038949607119365126, -0.02189006631801993, -0.0383845872769486, -0.05123884625941333, -0.05824994855137078, -0.05749041453733472, -0.047376852786797485, -0.026865348287586244, 0.0044111446005423716, 0.046524863475768896, 0.14609381680399736, 0.24316396342873148, 0.28911472412230665, 0.23849409051454806, 0.17365938530980962, 0.09809595700957274, 0.011602684461063717, -0.08541961307958701, -0.19196803769949078, -0.30600287447606345, -0.42476469952540263, -0.544512608998291, -0.6609665480007747, -0.7692700208972061, -0.864548151352976, -0.9420531347073848, -0.9977487170918566, -1.0285055494437163, -1.03256946006747, -1.0096413343943924, -0.9611024338318019, -0.8898632306348588, -0.8003031284365134, -0.6925452706878996, -0.5592549471205714, -0.5627882707893086, -0.7176951099616389, -0.7857604063117485, -0.7421622921336133, -0.6856021822644252, -0.6524101142219463, -0.6452490391442569, -0.6628602024785448, -0.702492103768952, -0.7602295483956425, -0.8312230882217948, -0.9101025767577262, -0.9912577075326627, -1.0692318734384694, -1.1389586801767493, -1.1960569429091326, -1.236960820126261, -1.2260398514766893, -1.1827574034954655, -0.99709435203662, -0.7670827303755368, -0.6779403808669513, -0.6255330523471851, -0.5644527550050542, -0.4934397082831943, -0.41365045779564724, -0.32765576000377283, -0.2379692249397074, -0.14701152975778786, -0.05697723250140374, 0.030169687933968348, 0.11278142493222187, 0.18950151581175856, 0.25930508307995215, 0.32145173833131224, 0.3754874115469864, 0.42118480973921013, 0.45851733535271944, 0.4875991827053907, 0.5086448892072273, 0.5219227798108821, 0.5277149613975567, 0.526296928006595, 0.5179101268326227, 0.50277520731114, 0.4810817996626233, 0.4530334719636442, 0.41884919799369724, 0.3788279773737968, 0.33334825866553963, 0.28293424487426044, 0.22823779546025413, 0.17013696621468632, 0.11122674903112895, 0.0503600881246733, 0.020835456853616208, 0.010032004242503945, 0.09794098587083955, 0.31914124050568393, 0.39530121297145904, 0.4259582995378999, 0.42150389845400316, 0.41229656709347573, 0.39818039761012614, 0.3787644401443142, 0.35409589021517895, 0.3248579693527951, 0.29262124231721565, 0.259128315561993, 0.22609493024455674, 0.19532082989224442, 0.1686977548093953, 0.14920521505595463, 0.13989547594560747, 0.1411107895342152, 0.15354162491615142, 0.18394481047127975, 0.26232639103933053, 0.3688520158723314, 0.49779403804349753, 0.6164260303924416, 0.6724382534315283, 0.6784642622063886, 0.6485281466467541, 0.6133203800555687, 0.5822192346673916, 0.5534200807054281, 0.5296213428770975, 0.513406011937906, 0.5069314139716341, 0.5118305702467729, 0.5289513599567166, 0.5583270099809722, 0.5990493511007569, 0.6493575988671647, 0.7066916219438689, 0.76789434110068, 0.829427551536783, 0.8876226522370942, 0.9389843865070286, 0.980389964636242, 1.0093750189666024, 1.0227314227630782, 0.9849989977043085, 0.7349536430730694, 0.49316666811860355, 0.48307939322938864, 0.48340675359940466, 0.48831310242553183, 0.49816354560719844, 0.512506448577132, 0.530490723671937, 0.5506386375158119, 0.5712106318494605, 0.5900650061525177, 0.6051349362750997, 0.6143297761925233, 0.61605947895419, 0.6090983329536046, 0.5930716452235654, 0.5682020092365541, 0.535685242700743, 0.4972746964855803, 0.45551641589258685, 0.41318791082276274, 0.37342075510527484, 0.33907296569716827, 0.3128154233377507, 0.29655330137149116, 0.29156664351674966, 0.2980869815688041, 0.31555273355707847, 0.3423940628797142, 0.3764033772920783, 0.4147088460973558, 0.4541991807224197, 0.4916084312901443, 0.5239026758308811, 0.5483807810820336, 0.5629413166921946, 0.5661278239429341, 0.557236139649663, 0.5362790547087508, 0.5039422287862783, 0.46148659693285143, 0.4105936171467217, 0.3532490649975255, 0.2915287259367165, 0.2275138686843352, 0.16306273613335964, 0.09980323895205423, 0.03892240538107927, -0.01872934163698048, -0.07281535748835477, -0.1232787062071985, -0.15947012554294648, -0.12632257022613036, -0.015886390610592827, 0.041051053496096834, 0.05102761242472287, 0.04685048313500273, 0.041094139793940165, 0.032262622876458646, 0.019705816852388924, 0.0042646520432094714, -0.012854732339520503, -0.02986077207333704, -0.044791245814135294, -0.05542810645294827, -0.0596701200242995, -0.0555696627045732, -0.04158842521130346, -0.016728884126109733, 0.019384019438829725, 0.07546382432455623, 0.25561021369671977, 0.39427375088292216, 0.4076205758853746, 0.35727348963675887, 0.29563472866809803, 0.22211971126522556, 0.13652497443323952, 0.039082722194415, -0.06895444684268259, -0.18561499840328022, -0.3078108244170883, -0.43174781456445777, -0.5527528542864679, -0.6658186281395166, -0.7656642570162904, -0.8473629958714453, -0.9065388096871363, -0.9399474056966075, -0.945638509407341, -0.9233375327723357, -0.8744122470405138, -0.8019591789508693, -0.7105029465407213, -0.5990900196016664, -0.45601745025267704, -0.44550588341568176, -0.6211943159032804, -0.7004961929036497, -0.6569832411716874, -0.6019727443454126, -0.5715996007406932, -0.56771163347288, -0.5889379621891933, -0.6324937126704384, -0.6943315436231092, -0.769576695904961, -0.8527739512434982, -0.9383471807564607, -1.0208329982694666, -1.0952657715451926, -1.1573168112446464, -1.2035310619707564, -1.06886606205638, -0.8933842432658703, -0.6891434548401452, -0.6155963766112018, -0.598058632985504, -0.5612131510047647, -0.5101746093208872, -0.4483943931397203, -0.37815563378584693, -0.3017524959850646, -0.22148442071383556, -0.1394908855706518, -0.05777034263509773, 0.021939259237440112, 0.09811987952434187, 0.16954917998286856, 0.2352446199677205, 0.29450042757925665, 0.3468232158733944, 0.3919368303669071, 0.4297171155394599, 0.4601742136510967, 0.48339629171858833, 0.49952211490467135, 0.5087052849303193, 0.5110906713865635, 0.5068088666196449, 0.49596571770471964, 0.4786696767663421, 0.45503452803532074, 0.4252320627952928, 0.38949806310880586, 0.34819513050462225, 0.3021190054587968, 0.2530465451364181, 0.1997797713820182, 0.17514159391951178, 0.1562324520446996, 0.15236957029668297, 0.1730096263748253, 0.3037442146725411, 0.4013760694948427, 0.4136150197320081, 0.4199658139945308, 0.42090270417452746, 0.41696515526709454, 0.4077639795407402, 0.39322278789587806, 0.373653448021642, 0.34974997948314623, 0.32259495372471747, 0.29358914599318986, 0.2643918563578369, 0.2367895525059014, 0.21259195911706996, 0.193469039015846, 0.1808473233512684, 0.17576127907629058, 0.17880175644427165, 0.1900256508349214, 0.21808882191974055, 0.26139196322308145, 0.3338938510008327, 0.45443254241125186, 0.5676120703490188, 0.6353822804873177, 0.6368533397696634, 0.6045108254212423, 0.5713910038300711, 0.542338214712565, 0.5187251094744798, 0.5030799839311983, 0.4975932987896228, 0.5038274466042576, 0.522630909558873, 0.5539413417453044, 0.596803768482234, 0.6493376505739497, 0.7088870319767909, 0.7721668180276351, 0.8355096939144195, 0.8951406816288259, 0.9474315420121622, 0.9892093596886327, 1.0179025635203884, 1.0310798968137065, 1.0148595829373912, 0.7808786940704078, 0.5154522971462976, 0.47584441715177217, 0.4758558253528866, 0.4807937004812253, 0.4908559603701379, 0.5057366092544413, 0.524473386618622, 0.5457110468717747, 0.5675518637542654, 0.5879491330320699, 0.6046301695776481, 0.6155804754603711, 0.6189709558040333, 0.6136535841692492, 0.5990055309270437, 0.5753512370712244, 0.5436541967537467, 0.5058090109255295, 0.4641634716676293, 0.4216784423332012, 0.38133019477757957, 0.3461936029377638, 0.3188288953964389, 0.30137734843541375, 0.29505149956671173, 0.3003237120802753, 0.316604924345393, 0.34255728263141716, 0.37597838916919546, 0.4142037465670736, 0.4541438469057111, 0.49269372653155674, 0.5268315133103694, 0.5539438420551739, 0.5719002882517286, 0.5792341456022583, 0.5751464125092021, 0.5595302484042106, 0.5329054019357526, 0.496315647181631, 0.4512279036709632, 0.39935072769849356, 0.34254498859791216, 0.28260974789110893, 0.22124910791011576, 0.15985957266609674, 0.09958876348318046, 0.0411434118073295, -0.015037205289337052, -0.06788597183155165, -0.09752100697653177, -0.04278282589740101, 0.02862300647295246, 0.0521709773649226, 0.050139087728629406, 0.04461463146930855, 0.03764250538267344, 0.027382416608148663, 0.014114258065009544, -0.0014446439137005829, -0.017911043198057253, -0.033634498896822795, -0.04654620576674251, -0.054546818937120545, -0.05549664392163445, -0.04751774800773756, -0.029104820686180588, 0.0007270078849623829, 0.0427312812411218, 0.17499727648964836, 0.41929998304394545, 0.5522562309964965, 0.5301007988073465, 0.4857745166008538, 0.42886849075503086, 0.358987248531081, 0.2756407880534262, 0.17928745634014653, 0.07103091729984268, -0.04685383635310458, -0.1713057301067593, -0.2981527364557839, -0.42262945646649097, -0.5393121896001647, -0.6427591529296932, -0.7276576897900906, -0.7894877622974437, -0.8247300304938308, -0.8313938105287075, -0.8090975649905188, -0.7593210520484539, -0.6852259273841126, -0.5915876927299948, -0.4776231953652754, -0.3255011308355078, -0.2783768249075145, -0.4540480545614969, -0.5545598659605839, -0.5171653817002833, -0.4645706802676317, -0.4371852191463206, -0.4367605129954426, -0.4619484282298192, -0.5098409299659461, -0.5763911844103013, -0.6566131355047182, -0.745083579369509, -0.8361659660773322, -0.9244870036244959, -1.0049437483987722, -1.0724875977562798, -1.0968859015828425, -0.6695368921009783, -0.5276357387696349, -0.5038469095957949, -0.5267663802771905, -0.5158336253058158, -0.48647889102997377, -0.4449435624698519, -0.3931909546376344, -0.3332505278222544, -0.2672405032655836, -0.19717032734330076, -0.12498589750042788, -0.052419207831386316, 0.01894890586248632, 0.08779563850730909, 0.15298442285624247, 0.21363380991134218, 0.2690433653850386, 0.31872945457936463, 0.3623535183842437, 0.3997305946465928, 0.4307653828550708, 0.4554427571178046, 0.47377984547988117, 0.4858111334791877, 0.4915661048593032, 0.49106087451918956, 0.4843073233824131, 0.47131664472228296, 0.4521372079399595, 0.42686758515454404, 0.39664469405019, 0.361011697554257, 0.3218438705925917, 0.29992777117909686, 0.2651347870371028, 0.24121972787665502, 0.24762197115747142, 0.22759483579727124, 0.22608479315687013, 0.3325572805600956, 0.3728767349232811, 0.38733528555481644, 0.39777387210017334, 0.40436006228487287, 0.406260264646253, 0.4028938857726301, 0.3940329940982359, 0.3798331066909588, 0.3608758117578068, 0.33814040814187685, 0.3129750283635646, 0.2869966645370132, 0.26199855184667875, 0.2397964365359222, 0.2221083268868025, 0.21038965362957018, 0.20573891771293606, 0.20877290212749422, 0.21960822160118987, 0.23781359722434559, 0.26249184362620026, 0.29708897513738597, 0.3494841396380983, 0.43628682494445403, 0.5252850432995504, 0.5754320247116556, 0.56288707870771, 0.5308598716170896, 0.5029784916386395, 0.47894422536617354, 0.463335666958939, 0.4582784288524253, 0.46534182240323285, 0.48529031793069344, 0.5180349436586988, 0.5625171811734695, 0.6167913575446505, 0.6780870596042584, 0.7430216488591068, 0.8078216147530555, 0.8686000521835071, 0.9216574196872656, 0.9637194960953965, 0.9922268568096118, 1.0056097201966385, 1.0026268529443252, 0.7899571646987571, 0.5217014144343466, 0.46505082528735375, 0.4685476836080005, 0.4739207901562503, 0.481225286869158, 0.4900821196279548, 0.5023325060989698, 0.5179953909291966, 0.5375426792098477, 0.5585680605255305, 0.577152904755871, 0.590177117273778, 0.5957299349956866, 0.5924403776229656, 0.5797689019923791, 0.5578129415422275, 0.5276473944562694, 0.4909551296540431, 0.4502315702727562, 0.40825578598390755, 0.3681869850564986, 0.33295762067241386, 0.30533874638431224, 0.28737410684072096, 0.2805045022458925, 0.2851515584041233, 0.30095962304099766, 0.32658287340868686, 0.3600415176953038, 0.3986923010022072, 0.43963549364629273, 0.47979218703539095, 0.5162700281337891, 0.5464553287903682, 0.568259819432539, 0.5801616124825637, 0.5812991650504422, 0.5714415192148055, 0.5509427857717943, 0.5206629566882768, 0.4818250835713265, 0.43592876592744645, 0.384557391137033, 0.32932837780679414, 0.27168750982074563, 0.2129324006387554, 0.15401598081535717, 0.09566910433473197, 0.038220975672759394, -0.014188492666233898, -0.032618210438049466, 0.019398296734563836, 0.052723860193135685, 0.05741880935060273, 0.05205019542789735, 0.0454369994998256, 0.03669545309730182, 0.025249451643458265, 0.011349746672631333, -0.004060981839901334, -0.019722509608946504, -0.033838016561388296, -0.044460160168027785, -0.049423085494196384, -0.04667472165571818, -0.03435137318338066, -0.010982594057197481, 0.024317752702146755, 0.09167371222318099, 0.36324879079758077, 0.6331731175268684, 0.6839739834721001, 0.6586631890366164, 0.621474306636614, 0.5708649201144134, 0.5058818137496921, 0.42623663209263185, 0.3321567743049396, 0.2250212781774188, 0.10698856216747288, -0.01852584987088779, -0.1473349015962171, -0.27426094206476126, -0.3937626281783011, -0.4999835195593665, -0.5874625464005874, -0.6513393210236655, -0.6880042048354285, -0.6952688072504611, -0.6727876703788231, -0.6220132162060561, -0.5462862184694623, -0.45049536573615034, -0.33614667449080615, -0.1770303834347513, -0.06351245586824872, -0.2063388829416204, -0.3536902216576072, -0.33123825345847835, -0.2823425553058314, -0.25801760325832146, -0.2612086905318247, -0.29049838174289944, -0.3430202367966082, -0.414616309074324, -0.5003178615147017, -0.5942971946408604, -0.6910509306458263, -0.7812722659328695, -0.8367325628136175, -0.8678826168825404, -0.824273016174057, -0.3081975863563198, -0.36366198804974603, -0.41897713351922405, -0.4323364040925868, -0.42536300823603934, -0.4052548643868845, -0.37363817161585144, -0.3322581520697363, -0.2830240380754008, -0.22777662336887872, -0.16835721506817114, -0.1064267845189164, -0.043553075326002944, 0.018923802893981545, 0.07979813779874867, 0.13809479731911534, 0.19297954763754177, 0.24382286145007548, 0.2901183373776606, 0.3315179058370221, 0.36776043822348337, 0.39868373903500043, 0.42416723354757835, 0.4441303797869596, 0.45849652025269005, 0.46718993359137695, 0.4701278964500011, 0.4672270105078691, 0.45898962715976444, 0.44585262027551487, 0.4246394992452287, 0.4052167063122196, 0.3871435730286432, 0.34340373026060966, 0.3095058625063922, 0.30717436782046903, 0.2781884925138698, 0.24717978377955951, 0.21649162497591767, 0.2450883395456298, 0.31120219432525786, 0.3351484349598284, 0.35282615476117574, 0.3676797839726591, 0.3790278356950534, 0.38586513284933055, 0.38746142512800485, 0.3834286046621376, 0.37379517144993546, 0.35902141742985716, 0.34000730419569436, 0.318033234572181, 0.29469205352051375, 0.27175885271063827, 0.25107036555927476, 0.23435759869812856, 0.2231218563295725, 0.21848286785590165, 0.22110845627161835, 0.2311274693816756, 0.24815374062265905, 0.2712868515787228, 0.29923606389481705, 0.33039360196009127, 0.37239517696536506, 0.426920038912465, 0.4822168501504438, 0.4896636319200236, 0.45983329859578825, 0.43250805284018035, 0.4132076409495282, 0.3970184350777173, 0.3917950569279197, 0.39903089490200394, 0.41947656537541267, 0.45295377155936545, 0.49836509513132454, 0.5536680240286025, 0.6160291146059245, 0.6819722664663844, 0.747644405075443, 0.8090846968072821, 0.8625546630391095, 0.9057325048570399, 0.9433775410574659, 0.9849363655263272, 1.0091512515439152, 0.8252475465654276, 0.5420555590284613, 0.4706722397801917, 0.4726529815853935, 0.48204744094387575, 0.4989342923025335, 0.5227970996452056, 0.5457269178034698, 0.5605978073664062, 0.5606980303595144, 0.5489895481538305, 0.5433315497285811, 0.5436530868395204, 0.5466191275666095, 0.544974061047844, 0.534743901084251, 0.5151718492999957, 0.4871249205256891, 0.4524001233122561, 0.4132963198664824, 0.3727368725473079, 0.33371073539466256, 0.2993245097438646, 0.27221854482797303, 0.2546368981014848, 0.24793888869563663, 0.25276520982718864, 0.26873038736862886, 0.2947131087974233, 0.3287465207277265, 0.36839606472451614, 0.41079600951579565, 0.4530321244268447, 0.492236252113746, 0.5258856691513185, 0.5518751116292266, 0.5686773781823726, 0.5753516348552425, 0.5715583990545561, 0.5575083479718206, 0.5338633737936664, 0.501660167639427, 0.4621439640837579, 0.4167099794593261, 0.36671068413006047, 0.3134528522681377, 0.2580042407003038, 0.2012740912153408, 0.14383026069315186, 0.0860808978607217, 0.03464823887734081, 0.02475209638010689, 0.05418090095464745, 0.06674751532138501, 0.06377589788030047, 0.05655598996359412, 0.04812816842926537, 0.037726943044666506, 0.02506804677372676, 0.010678962284380145, -0.0045891554022401415, -0.019280619528705634, -0.03170649673759074, -0.03981278724284054, -0.041526794176888204, -0.03478175749355161, -0.01776634660249332, 0.010910656527920892, 0.058049213373607245, 0.25881618869438494, 0.6151307124467333, 0.7940841927092164, 0.8051841035352165, 0.7896221071458278, 0.7610177512293479, 0.7178188015036664, 0.6590758758787771, 0.584191019450909, 0.4936367031076401, 0.38858193636430904, 0.2715092090131055, 0.14575750213245353, 0.015908148413886103, -0.11281073552484733, -0.234433598108017, -0.34297922625635424, -0.4325999381706842, -0.4983185872724294, -0.5362484338581042, -0.5441711557798499, -0.5216189290608497, -0.47014258990987434, -0.3931111472501656, -0.29562712599358987, -0.18374065000427375, -0.03456500321245182, 0.1582465371637385, 0.14978060683992278, -0.04781571225027825, -0.09942371923811533, -0.06524716762565153, -0.04404983716250732, -0.05081376174265362, -0.08415045824969836, -0.14108635745954246, -0.21324283847122727, -0.28857323429627124, -0.3629556472014226, -0.43653265624503845, -0.5044800050093476, -0.5088803519139131, -0.4416500484225958, -0.35963006456977764, -0.21338660220858952, -0.28290911654351536, -0.31684412399192996, -0.3320464346620702, -0.3336077805964486, -0.32279368882134185, -0.30105141425132653, -0.27006954337829514, -0.23150767185836907, -0.18708183532236422, -0.1383510427868231, -0.08682565767082995, -0.03380672976989452, 0.019497406126664174, 0.07209034387189917, 0.1230774100954104, 0.17175272764589433, 0.217503106005692, 0.25986738194841497, 0.2984557108738417, 0.3329839162092805, 0.3632082343783889, 0.38894044358283075, 0.41000115986278907, 0.4262275464284033, 0.4388118724025496, 0.44681586152245245, 0.44807798700333556, 0.44506834178923516, 0.4466785788858587, 0.42846484278786345, 0.3892698688949521, 0.3654478781410866, 0.35237526193222557, 0.32132231071201645, 0.2922526491998454, 0.2605402098879397, 0.22826827560022878, 0.20779436099262938, 0.24089687977966534, 0.27049206967881734, 0.2924026950449914, 0.31263995878702566, 0.33100072305403394, 0.3461878145339341, 0.3570561824573044, 0.3627244103621843, 0.3626739544726254, 0.3568047790299431, 0.34548076334278033, 0.32951616391004634, 0.31014172063049017, 0.2889101141169963, 0.26759042024800106, 0.24801318699071206, 0.23193262639826795, 0.22085941651425722, 0.21594866951737668, 0.21787690010780292, 0.22680872985147982, 0.2423576138344401, 0.2636557487041695, 0.2894024271943907, 0.3180217776382943, 0.3477640999926672, 0.37958125992246505, 0.41262324043972476, 0.42650108106586093, 0.3857606488226972, 0.33519207665142203, 0.3152804351012255, 0.30828858898513944, 0.30236585552688444, 0.30909769785736896, 0.3292760943463784, 0.3627013281743112, 0.408195120882614, 0.4636825411869576, 0.5262554156610442, 0.5923952514455857, 0.6581874755918689, 0.7197423732876176, 0.775956779505594, 0.8416262161579631, 0.9238663949027712, 0.9582004912940416, 0.9174981247635974, 0.652228028594044, 0.2994459851160567, 0.22705379263009462, 0.22126538433928467, 0.23125605735090016, 0.2575240848367413, 0.2991562821174796, 0.3531718142000724, 0.42146184974679723, 0.49755626710780376, 0.5605363180045133, 0.5737093890199496, 0.5455293559971865, 0.5044636427707703, 0.48064593491618934, 0.4661768898538323, 0.4484859337360758, 0.4232942935761639, 0.3911869266670809, 0.35457011076922285, 0.31617989177805117, 0.27913714087130237, 0.24638724242902432, 0.22073066323363655, 0.2042947685103882, 0.1986274717410197, 0.20430902947959417, 0.22116388452622537, 0.24806545001484803, 0.28326034844432524, 0.3243471583794424, 0.3686494459316041, 0.4132951151949067, 0.4555490226171406, 0.4929059647077052, 0.523309790535115, 0.545199189778371, 0.5575840206712481, 0.560027813065016, 0.5525973085039224, 0.5358037728574665, 0.5104677660049743, 0.47765921260256494, 0.43852150134781454, 0.39424963782609, 0.3459047876378367, 0.29446064124233295, 0.24062334539720798, 0.18496597130056003, 0.12822121116883167, 0.07969020721994013, 0.07276599536013872, 0.08096322243520682, 0.07947348896306128, 0.07144448148395188, 0.0622514544930155, 0.051907262802233234, 0.03973022453500086, 0.025887931583143065, 0.01085409813463567, -0.004272707055602343, -0.018117053292707297, -0.02883266707997545, -0.034448970766917664, -0.03283689333774542, -0.02198910114724062, -0.00014283726915964579, 0.0343461496137869, 0.15427462875583497, 0.5362551473895838, 0.8555565295912277, 0.9172018606419661, 0.9232873939047384, 0.9187676806465799, 0.8997987460856489, 0.8651629446749265, 0.8135309861292388, 0.7445184569268388, 0.6582971484499005, 0.5563252373422225, 0.440909670501898, 0.3157542365197017, 0.18540427119654446, 0.055502714984476675, -0.0679117543007477, -0.17844766017607583, -0.27014329657316205, -0.3376842910976916, -0.3771088079909375, -0.38598950176977054, -0.3638807891962561, -0.31226953917663725, -0.23465820328591303, -0.13620016050961237, -0.02344999961180072, 0.10082986372759328, 0.2829464698320774, 0.4679249958806452, 0.42954222735158776, 0.2983409110576759, 0.2540853742560769, 0.25459177039600567, 0.2491920176292326, 0.2211154376459632, 0.16798778418615878, 0.09738847583649735, 0.038601543024729956, 0.003863746260710954, -0.013777880562488853, -0.01626192222384093, -0.03486193419333672, -0.0459518696818364, -0.10508977370018169, -0.12664782424690602, -0.1769524626444423, -0.21330072416076584, -0.23594724070500006, -0.24575093440671614, -0.24383331281177711, -0.23164631543020064, -0.21066373076576128, -0.18247342148899093, -0.14852814073119913, -0.11026712739063926, -0.06892785534125778, -0.025682886036610952, 0.018499956053369626, 0.06272492399003537, 0.10627362456802558, 0.14848999376726457, 0.18885896945286795, 0.22691303261596785, 0.26228683924615925, 0.29464416814409855, 0.3243266848901447, 0.35288681799131716, 0.37741329546961655, 0.396011543366412, 0.4163863353161208, 0.43782844264422405, 0.44764403235988315, 0.4306062685708145, 0.41192464718087685, 0.40488063397042673, 0.3851314106939743, 0.35770136088017956, 0.3306061936396354, 0.29997343752203065, 0.26816951895673213, 0.23603311071697242, 0.20484728173234945, 0.19085037149220518, 0.2018918355399304, 0.22340308277688958, 0.2459325888977162, 0.2683148722020814, 0.2892801115150272, 0.30740630603331986, 0.32141375879181133, 0.3302966558524538, 0.3334110072092189, 0.3305534135846404, 0.321993381558654, 0.30847809317971375, 0.29118191462097265, 0.2716285404027037, 0.2515626888988596, 0.23281489644474362, 0.2171334618493974, 0.20604473130032241, 0.2007027298294357, 0.201804800945371, 0.20951110729999778, 0.22345669828776327, 0.24276392588453155, 0.26615488300382184, 0.2920396484488885, 0.31869434919488127, 0.3443754619669226, 0.3676892254311033, 0.38473187183090674, 0.3580620300026427, 0.2712884277734582, 0.1980302901153086, 0.1849724657238705, 0.19300414944775657, 0.20091949607428106, 0.2200865292487073, 0.2526158602939752, 0.2973176176648793, 0.3520597086440884, 0.4139255228402896, 0.4793553129976875, 0.5445126135603946, 0.607343848365427, 0.6770068191183443, 0.7647901443133942, 0.7505261866289252, 0.6149509575815713, 0.502214692918634, 0.16271463802341835, -0.16167973970701865, -0.20361366078225007, -0.21124583861762147, -0.20542109312808243, -0.18569540545581997, -0.15230522289194948, -0.09980724328847934, -0.024718137097665682, 0.07820675449779468, 0.21764745516724204, 0.36641632485833586, 0.49019078015046036, 0.5172905327112489, 0.44868604656577826, 0.39641747708160535, 0.3641142129499022, 0.338874183957824, 0.3101118250736834, 0.27662862485209616, 0.2412518738169389, 0.2069204900657815, 0.17669349745363894, 0.15322063033781896, 0.13877421625440078, 0.13480502681203976, 0.14207163993539318, 0.1603647656514493, 0.18875885509445123, 0.225521744734678, 0.2684512927111724, 0.31492169403750125, 0.36222523281634267, 0.4076723251505898, 0.44885499057417366, 0.4837255767013655, 0.5107311429592185, 0.5288335467204233, 0.5375107297642066, 0.5367236130582125, 0.5268164111623355, 0.50846332366255, 0.4825126083320077, 0.44995290995353443, 0.41173802691314343, 0.368806022736214, 0.3219051911638253, 0.27168866142671266, 0.21854701870494342, 0.1642364459013379, 0.12064624029421722, 0.1039507254171621, 0.09813905389834421, 0.08990813717118584, 0.079465369711607, 0.06820534536366019, 0.055646993921032895, 0.04163676970394281, 0.026334309166484715, 0.010506342991204676, -0.0047934697662173065, -0.01797696361139378, -0.0272575126618686, -0.030554777368910324, -0.025792312916514404, -0.010967010123469345, 0.015660587188523367, 0.09885893820341929, 0.43749365979021615, 0.8394251097199827, 0.9852816577191152, 1.0158095148885815, 1.0345483846292591, 1.041148074426781, 1.032682953425569, 1.0072117774382257, 0.9635868675185453, 0.9010422457092133, 0.8200022940885567, 0.7216518523985718, 0.6086256615447523, 0.48449370910033007, 0.3541907306511458, 0.22335748037440428, 0.0984434134993446, -0.014079455784324235, -0.10787679952256779, -0.1775429408161009, -0.21883892262580407, -0.2293011241126126, -0.2083332383011669, -0.15747497413757117, -0.08019552003946107, 0.01821664318628624, 0.1311666869544459, 0.25113466997361567, 0.37850689056471776, 0.5577602946782008, 0.7350374253362572, 0.7777162612411739, 0.7318530068262095, 0.6907958384082358, 0.6744806795274654, 0.6562155847799986, 0.6253656185381935, 0.5701164187938836, 0.49186106152302056, 0.41317642975863844, 0.34753982871424416, 0.29440213588270225, 0.19359460289985986, 0.05725624141007657, -0.054475641304170264, -0.02117204136182327, -0.07683220622025688, -0.11921922182697609, -0.14871238950009236, -0.1660532173354472, -0.1724190953976965, -0.16908145278031217, -0.15749569292345678, -0.13901477744995283, -0.11501284434775072, -0.0866664605857077, -0.05510349259421621, -0.021242514944302737, 0.014054689103791596, 0.05010291121148569, 0.08625740621930689, 0.12200621559347669, 0.15686017899497262, 0.19101497144868151, 0.227738564719429, 0.26244414736957644, 0.29635156453918476, 0.338505177566371, 0.3771179240071163, 0.4035185098626455, 0.4144576682141121, 0.42305359884206073, 0.4301086416047948, 0.42443355599666255, 0.40551891128759276, 0.3858213668092496, 0.3618371759574526, 0.3336664822425117, 0.30326413659093987, 0.27161776122443637, 0.23945971043787662, 0.20750989306996104, 0.17641831015064202, 0.1505168052224617, 0.15436948957114005, 0.174715978160779, 0.197838123649138, 0.22152702277329084, 0.24424508960414393, 0.2644542591077945, 0.2807644309794499, 0.2920557996161097, 0.29758285505745175, 0.2970484496391821, 0.2906465994373315, 0.27905988797041736, 0.26341762107579436, 0.24520564055916916, 0.22614868155302048, 0.208056607346649, 0.1926731228855032, 0.1815106665147086, 0.17572594440687928, 0.17600270890843484, 0.18250758512879384, 0.1948606840515037, 0.21219471482337993, 0.2332158983065713, 0.256349105628656, 0.2798531211958777, 0.30200285665178406, 0.32120091054017297, 0.3361209737191255, 0.337156362218871, 0.28219448075839937, 0.1578909664150725, 0.05904277721429119, 0.048831161826425884, 0.07179172560003977, 0.09783045836296056, 0.12906912308247076, 0.17212204102199014, 0.2252391365421822, 0.28548228877731807, 0.34933123771195795, 0.41312976321639594, 0.47567114279280354, 0.5522982092108935, 0.5181701666499245, 0.317881806467438, 0.20695065866762707, 0.10756669267045904, -0.29642168412703507, -0.4985406728309578, -0.5134750685028799, -0.517728542318098, -0.514285336149352, -0.5030503965741078, -0.4844237350209406, -0.4565550422738536, -0.41975431031412036, -0.37235840601975223, -0.30138211570639495, -0.17543408178621878, 0.020140166662963033, 0.26513481481066936, 0.40825399284147634, 0.34671045280245627, 0.2866361811133369, 0.24316503778132903, 0.21336559744236117, 0.18365473697018775, 0.15184965198896716, 0.12095773586708303, 0.09386168940059836, 0.07330539350316467, 0.06142661862463772, 0.0598086135810858, 0.06913979134257087, 0.08938157835379013, 0.11960601867109766, 0.15827252882594767, 0.20322623260447248, 0.25202242122336926, 0.302017463139852, 0.3506568469552329, 0.3955779132688013, 0.4347936426705079, 0.46675100472483866, 0.49038453588293773, 0.5051159624708017, 0.5107943461433333, 0.507658216509947, 0.49620306034452355, 0.47714347404807267, 0.45124951905386634, 0.41934495952388673, 0.3821399884694401, 0.34029193340146513, 0.2942449480056224, 0.24436938842916422, 0.1928018333484296, 0.15317394068465884, 0.12392505160431977, 0.11092641242473533, 0.09947503750727993, 0.08684124904689039, 0.0731535111785222, 0.05825914313284564, 0.04205981686941662, 0.025038009744929646, 0.007949797848121776, -0.007887406658193541, -0.020912717254012225, -0.029169983073356942, -0.030611166249866262, -0.02310679078938449, -0.004672274044831282, 0.06827522814223386, 0.365057080302128, 0.7736768864898158, 0.9887595733297863, 1.0595188669606834, 1.1005546894423661, 1.132925832479966, 1.1514165067243383, 1.153698957367709, 1.1379814516439843, 1.102669537682134, 1.0472139987626061, 0.9716781984123699, 0.8775349050619194, 0.7671861460385596, 0.6445550840845113, 0.5144838172814747, 0.3830043415165436, 0.25658605385072697, 0.1420827224555965, 0.045903929420983314, -0.026225274427280842, -0.06999904920344191, -0.08273384236800085, -0.06382020347160111, -0.014683653177239187, 0.06115238796031486, 0.15843271173690088, 0.2704559739149377, 0.38969715219276546, 0.5082685409221044, 0.6220699706690656, 0.7471538422455983, 0.8726873811296407, 0.9536649084961972, 0.9719219178590581, 0.9529801437689978, 0.9163000461312203, 0.8703238958828425, 0.8152994889942873, 0.7310860097955549, 0.6141016098848349, 0.4770474723786924, 0.33604897198205386, 0.2219392941059537, 0.1279951023068131, 0.04742212248270672, 0.06919922060666828, 0.00917514267554953, -0.0383830057097434, -0.07375603876612447, -0.09777887149247988, -0.11147748804631807, -0.11615092273671013, -0.1130504372674328, -0.1034936596034568, -0.08861295743473874, -0.06950431938513602, -0.04704372620812336, -0.02205177365990063, 0.004839315260535493, 0.03303023867154575, 0.062055643394697046, 0.0925267717457503, 0.12986585147581486, 0.1709473559189365, 0.2276113057218141, 0.2807125152078034, 0.3274510911908708, 0.3651336168379551, 0.39455769551507114, 0.41821638669553973, 0.426016010880244, 0.42330892149433286, 0.4163640475361383, 0.4037725670772625, 0.38446208139280635, 0.3606751894654474, 0.3333723676467679, 0.3033589110688819, 0.27159101328560276, 0.23905342144387376, 0.20657920006895747, 0.17424613544318746, 0.1353054811553056, 0.09695214207166813, 0.10642942145445033, 0.12668279909607882, 0.14982160082010232, 0.1740421401746337, 0.19772643562161463, 0.21923556789665533, 0.23708251786717138, 0.25005394291462135, 0.2573188370909749, 0.25850412585202864, 0.25373931195632204, 0.24365389327715858, 0.2293328501125318, 0.21222819252957592, 0.1940332819466759, 0.17653607961784212, 0.16145406472266322, 0.15028401948444503, 0.14415752419816275, 0.1437474398723213, 0.14919652405168127, 0.1601201433840932, 0.17562974502565998, 0.19443370718596198, 0.214937301502241, 0.23540634667412186, 0.25409421774199026, 0.2694124611979709, 0.28002625658999913, 0.28493555306061946, 0.2728184746213753, 0.20849314567569488, 0.06841766410359851, -0.05495488778390367, -0.08415611354148345, -0.05557056102008229, -0.007553953234403998, 0.04036520662666776, 0.0913112530936453, 0.14828342395181693, 0.20976360445514164, 0.27170828172770056, 0.3338130143556577, 0.33981023539773325, 0.13700376039429818, -0.014329174633818331, -0.01998737318511523, -0.28490427921758377, -0.6500163605443237, -0.7242867362359502, -0.7326766093033257, -0.7348500286414903, -0.7304596978738989, -0.7195509552599271, -0.702623057162044, -0.6805533949562332, -0.6547298376214155, -0.6266919990683402, -0.5963792874806533, -0.5515427036069815, -0.47765748226206783, -0.3100654830467082, 0.021376130999462895, 0.24393821538279914, 0.19990793206838298, 0.1484498651920354, 0.10964922187136894, 0.08096903929945043, 0.05319635968189518, 0.026121705886112068, 0.002671816244498082, -0.014574848184683908, -0.023402313744857572, -0.02233693000052739, -0.010565347434559058, 0.011837917434318612, 0.0441102363461896, 0.0847421041268781, 0.13175879580623917, 0.1827861286628707, 0.2353393045050609, 0.28693696356670007, 0.3353199705076504, 0.37854446024148025, 0.4150840707776631, 0.44386731494936615, 0.46426059246625684, 0.4760548806162195, 0.4793606914532669, 0.47457489473463177, 0.4622303586334935, 0.44298018346186474, 0.4174366053594545, 0.3862032686433068, 0.3497210925526293, 0.30836868028639763, 0.26238029876235736, 0.21335906989559117, 0.16910631365793893, 0.13816583546501704, 0.12157956957142524, 0.10747225230484858, 0.09235119088534205, 0.07606648198120602, 0.05844736636683123, 0.03973924190940181, 0.020438280047155644, 0.0016007825102111184, -0.015450550705389254, -0.028928097872962688, -0.036878715866972556, -0.03713613331195775, -0.026263434990833723, 0.04033146845674174, 0.31501931136019845, 0.6987489350994718, 0.9460659054260825, 1.0516603803624345, 1.1120966529175194, 1.1687066958413235, 1.2135522458018722, 1.2437396008469932, 1.2569603522503208, 1.250930364503251, 1.2242380380313609, 1.175903023882384, 1.1062380140691808, 1.016393706988211, 0.9090846698249546, 0.7880472825956488, 0.6584815387604976, 0.5263603659341447, 0.3985208053129865, 0.28184626267724733, 0.18307949337012364, 0.10801010945078704, 0.06120662783659325, 0.045405026457819186, 0.06139307784271564, 0.1077596545085826, 0.1810862735595089, 0.27609056695410095, 0.3861293764805733, 0.5036185788380707, 0.6207100629048035, 0.7297717292874686, 0.8240360311051964, 0.9007708049925349, 0.9592095943572652, 0.9931568852616905, 0.9941470560512062, 0.9626890292943484, 0.9013221020801065, 0.818034836049109, 0.7246479809263358, 0.6251449962158606, 0.5218633053008066, 0.4182356616234788, 0.31818696249192513, 0.2250593049730094, 0.14149813726869098, 0.14174086072822512, 0.0784556849063831, 0.026912290465351596, -0.013288568506809373, -0.04285387338312496, -0.0628718215584847, -0.07446574798062278, -0.07888989656369017, -0.07724564393861577, -0.07061709451702836, -0.05986164065221289, -0.04577472000148741, -0.0289424580672466, -0.009909873529741153, 0.010932617629900943, 0.039786316794798715, 0.08348575015526949, 0.15340108900863925, 0.22702666299579555, 0.2913728566619742, 0.33622955975706903, 0.374029940421166, 0.3930630910447719, 0.4054081309392634, 0.41283820524421877, 0.4136887415634316, 0.40726011654219985, 0.39537768003377494, 0.3783529333880624, 0.35646258280296994, 0.33028106414464453, 0.30078797032856386, 0.2689773338620576, 0.23587756827442163, 0.2025081156273707, 0.16958713996375074, 0.13263490993190796, 0.07308352632208326, 0.05002144269576636, 0.06175038937699817, 0.08106639711404906, 0.10355215646144256, 0.12762247896782153, 0.15157347775616614, 0.17368619050097145, 0.19239105521003141, 0.20640246440609822, 0.2148185117821484, 0.2172085854572332, 0.2136483529244142, 0.2047241112508731, 0.19148059395524974, 0.17533420369212616, 0.1579448286528451, 0.14106568965748512, 0.12638320794377522, 0.11535816581119951, 0.10909414554795815, 0.1082294403101478, 0.11288565606074896, 0.12264879891090708, 0.1366185570143703, 0.15347949799100213, 0.1716326752282893, 0.18932117381220137, 0.20479663103657453, 0.21644337046974882, 0.22292472319123946, 0.22325342654874714, 0.2168716235578656, 0.19604891765798715, 0.13529480110632575, 0.014741248111297178, -0.11115391861595247, -0.1752551051115292, -0.16778085001845078, -0.11677767887171431, -0.0506476354826475, 0.01813876575409168, 0.08714556270084284, 0.15101239803500555, 0.21058802083533568, 0.12049826503729166, -0.11777434643475893, -0.1952696732428243, -0.3873260596760115, -0.7383871317249286, -0.896094772739612, -0.9173561402781774, -0.9251346530758635, -0.925949270436166, -0.9195334683253229, -0.9060122029919517, -0.8859239636618934, -0.8602998566250646, -0.8305982319911189, -0.7986608126300379, -0.7665709703756418, -0.7363459639536929, -0.7093457806280146, -0.6697782283119169, -0.5300218167022148, -0.14183243861526362, 0.09476490358450462, 0.05528848015496335, 0.006492874991542941, -0.02426557804061913, -0.04870795787523807, -0.07176646325212666, -0.0914559251032454, -0.10517445395775127, -0.11085110430552536, -0.1069430867671528, -0.0927120647935098, -0.06811006169111256, -0.03389642357980005, 0.008579793961066784, 0.05740746850365053, 0.11037799092392397, 0.16509588746992954, 0.21921320690415858, 0.2705492291407543, 0.3172325369567357, 0.35777761124040275, 0.3911110455341582, 0.4165909786530868, 0.433933643673047, 0.4431947982031188, 0.4446354836987503, 0.43870047656518185, 0.425862954118557, 0.4066341726226703, 0.38141297192127865, 0.3505516367383148, 0.31421890308836087, 0.2729430904617649, 0.22911867532544328, 0.1727877299281717, 0.14622769756863097, 0.12941726913326868, 0.11288621178061042, 0.09509393967502078, 0.07582009450415583, 0.05514544313837355, 0.03334012588133284, 0.011213964442573499, -0.010147704153021131, -0.02915134484247961, -0.043981936691131374, -0.052503718697077595, -0.04422641120445636, 0.01990663797617742, 0.2899267966935515, 0.6374801484137549, 0.8643724709977596, 0.9907352360919386, 1.0692139578489495, 1.1452938089413993, 1.2144471410827364, 1.2711765502739043, 1.3127793089149336, 1.3364302659098977, 1.3399958615893572, 1.3215854986107676, 1.2804331370093687, 1.2164585445399636, 1.131085719768981, 1.0267567627878798, 0.9075266909839854, 0.778453037641281, 0.6458414776109169, 0.5164958876267427, 0.3976208148554732, 0.29598833548887704, 0.2176638744960946, 0.16727471442548802, 0.1477720989386988, 0.16000158611666082, 0.20271161803042714, 0.2725252709475723, 0.3642804259273644, 0.47135331492103116, 0.5862550526197259, 0.7011285805801024, 0.8084188374227039, 0.9013127230949034, 0.9742873000486689, 1.0233089123273569, 1.0461361521844128, 1.042203751681745, 1.0126678004158185, 0.9600166214222385, 0.887941100460619, 0.8007922407452472, 0.7034054942804433, 0.6005440900614971, 0.49679737106346256, 0.3961180794838377, 0.30186696486824616, 0.2164941663876636, 0.19516358916062249, 0.12998141882015446, 0.07566336587733069, 0.031916922750479415, -0.002050586552315714, -0.02717665862921681, -0.04461688190295243, -0.05543501639942039, -0.06071359098413631, -0.061317656315139635, -0.05804544121229005, -0.051464036546514214, -0.042079217543866565, -0.030207269736107323, -0.0031974853788794277, 0.05945654187262939, 0.1601135660537656, 0.24627343031915583, 0.3042763519547753, 0.3374011048395684, 0.35956288009865167, 0.37779923337168686, 0.3877094300764554, 0.39346481646632014, 0.39500732830355556, 0.39177705198376955, 0.3830912099827426, 0.36879699525193743, 0.3491755903387661, 0.3247555303332783, 0.29626052754079524, 0.264666992719194, 0.23107728695832286, 0.19664612208012677, 0.16247818474368714, 0.12894505170670012, 0.08607229524266913, 0.015982343916958186, 0.009686869327119929, 0.021763595401465885, 0.03935518755074696, 0.06060597954243274, 0.08393821274878999, 0.10755594134206925, 0.12966900504637557, 0.14865105980902404, 0.16315288558987362, 0.17222631682551182, 0.17539102153183617, 0.17268697066128968, 0.16466065372496042, 0.15232419312446854, 0.13705608131900382, 0.12047914621967615, 0.10430569088165642, 0.09017891055632932, 0.07951740178593902, 0.07338021588973187, 0.07236864389965048, 0.07656554379619762, 0.08553073912906384, 0.0983342419820954, 0.11364524832416789, 0.1298406014248994, 0.14515296809074774, 0.15780740127135107, 0.16617645032721007, 0.16888991863213132, 0.16494873877188088, 0.15376643063772222, 0.13522118824659835, 0.1068796550800446, 0.054228327688466305, -0.027898513401381386, -0.11967318371788593, -0.18771451780660353, -0.20904214070932703, -0.17838801020295847, -0.11930516524384238, -0.050453097408543535, 0.02938124939728759, 0.05941521179743248, -0.16808033404551548, -0.4627339017795502, -0.632577335952277, -0.8727997780784786, -1.0273446826137, -1.0655534403445208, -1.0791580828526204, -1.0856107764353542, -1.0844653592409337, -1.0755806106271235, -1.059134074914624, -1.035769015273047, -1.0065417166333486, -0.9729756914367487, -0.9369161656779372, -0.9004702998155985, -0.8657918849740582, -0.8349301041537949, -0.8095135525316062, -0.7881023964350637, -0.6284800830008814, -0.2168925261346879, -0.05921833756467354, -0.08733268733287947, -0.12368142335198495, -0.14719690203607882, -0.16652286368810643, -0.18257783690249152, -0.19297625514308514, -0.19563619458134962, -0.18912801831612036, -0.17264548965014725, -0.14617313934627507, -0.11034690124374613, -0.06647189502974005, -0.016305231150230526, 0.038036803544322595, 0.0943062665114267, 0.15025824056040626, 0.2038186613683628, 0.2531971459822673, 0.2969526719964879, 0.3340514469346463, 0.3638280267260079, 0.3859914803639555, 0.4005112283825536, 0.4075995682790339, 0.40756305393875003, 0.4007967734243776, 0.3876348330743209, 0.3683863183050038, 0.3432019336163732, 0.31217139326052745, 0.27582362711010244, 0.23862337062894845, 0.1764742845025582, 0.15163047494411774, 0.1339115826582109, 0.11494575639439297, 0.09416668684470153, 0.07159863934697341, 0.04731114489513466, 0.021874181892803435, -0.003865437731314536, -0.028529986950484698, -0.05047603457836125, -0.06731226173147586, -0.05435693649736528, 0.02500933051330101, 0.27053276501212453, 0.5754551161298744, 0.7508452402129884, 0.8785086874713355, 0.9714316937474319, 1.0632547386044995, 1.1532296128969497, 1.2336201375920872, 1.3014406543116426, 1.3534687904964073, 1.386998193751408, 1.399392196918325, 1.3889430486922416, 1.3544449340216351, 1.2960572233316876, 1.2148670306639202, 1.113579811895221, 0.9960533722592428, 0.8678178416839906, 0.7345820992069045, 0.6036513828289447, 0.48239504346841944, 0.3778724721638347, 0.29613326586514566, 0.24198713370334168, 0.2183230112815191, 0.22621977873834087, 0.264557148401249, 0.33012037212211087, 0.41783589562283563, 0.5212301259738332, 0.6328852543766077, 0.7450730253311364, 0.8502665017833089, 0.9417461973636985, 1.013952160441593, 1.0628977104996062, 1.0862300400070568, 1.0833839595224672, 1.0553375307104993, 1.0045450655210137, 0.9344739983411054, 0.8494281656932934, 0.7540006323920636, 0.6529158764822256, 0.5505259896801231, 0.4507701028673381, 0.3567947214296101, 0.27107189241270113, 0.22972994887082443, 0.16398341590676413, 0.10827665559967237, 0.06221544660250977, 0.025133962990941505, -0.00395742451332648, -0.02604839161028183, -0.04220657571605635, -0.05331750685199732, -0.06020734068996725, -0.06345943418699806, -0.0635716239224941, -0.060820316069026936, -0.04262051613718165, 0.0417716072058788, 0.15855467018772185, 0.25436178352210415, 0.29601924246458733, 0.32233523991332547, 0.3369731566120042, 0.3485124444888017, 0.3586433180485251, 0.3666917564420209, 0.37129347429437853, 0.37140230928700824, 0.3663198151211109, 0.3556114649469322, 0.3391325643251939, 0.3171687886891066, 0.29032844057657226, 0.2595044770179964, 0.2257927706339009, 0.19042772394218765, 0.15466948419812176, 0.11964485531606428, 0.08221311204234283, 0.020953369798074384, -0.02090867100281102, -0.022326052419010978, -0.012615587243711701, 0.0027855012518021027, 0.02236572025148309, 0.04447752619363321, 0.06725725555997242, 0.08887376942373715, 0.10764376527354269, 0.12218448083601219, 0.13150371087884993, 0.13509676564044382, 0.13296879645238713, 0.1256428854812195, 0.11409554805052702, 0.09967301610881973, 0.08395432424569971, 0.06860728613734546, 0.05522399759380092, 0.04517188610400913, 0.039459836537980575, 0.038641578597281345, 0.04276003458299771, 0.05133853858082227, 0.06342083210874017, 0.07764986896703374, 0.09238500699181862, 0.10583452089616419, 0.11620578399512405, 0.12183990391045874, 0.12134452083420455, 0.11368212928727095, 0.09824800538177092, 0.0748833436323122, 0.04388497132744584, 0.005671930625572585, -0.042457134480916814, -0.10243033116594447, -0.16597061582069728, -0.21724937099478758, -0.23974371240973547, -0.23990498107411717, -0.22932339759586373, -0.21753141696370104, -0.30922790690965396, -0.6447584210209838, -0.9086103243857053, -1.0334643475278193, -1.1283997092561178, -1.1674564877771356, -1.1867961836492218, -1.1988729267301528, -1.203184450495928, -1.1994483931419957, -1.187597277670907, -1.1679638854179126, -1.141234319184803, -1.1085752867919965, -1.07150485643173, -1.0319214686692373, -0.9918911703046609, -0.9535784892413988, -0.9189948771038026, -0.8898734625330134, -0.8674751519735979, -0.8375106972913455, -0.587417834254869, -0.23994696796622783, -0.19053147750727373, -0.21323561876533947, -0.23522231733312715, -0.2518183157060978, -0.2647997206708599, -0.2723583801361178, -0.27255524346319504, -0.26395208607755194, -0.24581332055153915, -0.21805043991377815, -0.18128511807779013, -0.13669747868747528, -0.08596240310686554, -0.031051645184632548, 0.025902251258655085, 0.08278121318003429, 0.13762319725848116, 0.18871872503469334, 0.23470899395568257, 0.2745818927551582, 0.30771174174874094, 0.3337694622028087, 0.3527201637431734, 0.3646840531768696, 0.36992446178513383, 0.36869800614589376, 0.36126658001559075, 0.3477627473616183, 0.32825119582537, 0.3026936302210972, 0.2708088722326174, 0.22272581641816735, 0.17753298562091402, 0.15435877060098768, 0.13474493746005223, 0.11302946575379025, 0.08903090914038625, 0.06268616900104096, 0.034319780820444734, 0.00452807064015559, -0.025556388004240205, -0.05744678656849089, -0.07349627071348053, -0.06494011743300732, 0.05483795118906265, 0.2526101504947107, 0.4551844011987969, 0.6093734396907244, 0.7208611615730363, 0.823219821772031, 0.9271814711983126, 1.0331473624866634, 1.1328783815437644, 1.2232089831605713, 1.3006519817938518, 1.3620717714727837, 1.4042575449162467, 1.4247257082435247, 1.42130926844536, 1.3930080313417053, 1.3396264522039818, 1.2628135986258835, 1.1633403126491597, 1.0495171376773662, 0.9388328937898862, 0.8215089412431515, 0.696957199641048, 0.5716302888066114, 0.45397815583618817, 0.35343031762185495, 0.28233237725463933, 0.25262922929516196, 0.25603405597722384, 0.2896259602371596, 0.35046820118500266, 0.4336847135730606, 0.5329444011393765, 0.6410103463374766, 0.7502669683698082, 0.8533324063041821, 0.9435281457851765, 1.0153763821344737, 1.0648337948266153, 1.0895558808205235, 1.0888227952293041, 1.0635583640838462, 1.0159878262473994, 0.94949020981114, 0.8681026731215624, 0.7763295056552204, 0.6786276591494609, 0.5792882133044781, 0.48200930192895264, 0.3899208960370171, 0.3052959213665076, 0.2468210343820676, 0.18196074068829837, 0.12615588955317136, 0.07911204636542202, 0.04009799714145412, 0.008265168473656104, -0.017395349374324187, -0.03777730305463978, -0.05374325183761908, -0.065922417129058, -0.07484041646543393, -0.08078262088842103, -0.07777536831535109, -0.0006712337814127611, 0.13623713294219908, 0.23600013315891744, 0.27883659171409625, 0.2921161411910731, 0.30194718155067557, 0.31267415301955026, 0.3238578755535446, 0.334082867392854, 0.342042629300904, 0.3461334432264902, 0.34527669529955674, 0.33875721135602177, 0.3262009109258921, 0.30761039773875787, 0.2833544730815367, 0.2541567648325662, 0.22102722554939191, 0.18520760382239843, 0.1480559767538585, 0.11097052695875043, 0.07589217975599016, 0.040340661284226975, -0.03190668867942392, -0.047216696975842076, -0.04712207263670187, -0.040440514619144885, -0.027622781478582326, -0.010057676460746734, 0.01044383482908362, 0.03199299697299196, 0.052706014495424114, 0.07087800541411937, 0.08508622919769815, 0.09432626847425363, 0.09806476911155393, 0.09629641722128612, 0.08951558209782373, 0.07867765209462352, 0.06508899318553851, 0.05028993343559329, 0.035895001777394464, 0.023443984585047373, 0.01424568019260386, 0.009255256190449312, 0.00897490505985532, 0.013404415107079348, 0.02203062179732007, 0.03386837975098733, 0.04753723366667506, 0.061375078274475525, 0.07356997277876687, 0.08230351070539488, 0.08589042638541522, 0.08290183371642268, 0.07226895366932728, 0.05334742627728106, 0.025959398804820122, -0.009617975477912655, -0.052674116925155445, -0.10209095315589245, -0.15662210631587037, -0.21466703162177936, -0.2731425364618403, -0.32646775648224846, -0.3745804538467272, -0.41764861070306125, -0.4633127634257672, -0.6247040930752847, -0.9482671323254994, -1.1297853287141368, -1.1822313799610482, -1.2161660419159794, -1.2409053432063817, -1.2582608542627622, -1.267752381080987, -1.2690631223758553, -1.2620047795641236, -1.2467118733058937, -1.223590521727279, -1.193491548453463, -1.1575955876947095, -1.1175156526248538, -1.0750993131861764, -1.032439443373212, -0.9916144161949934, -0.954625488707296, -0.9231345350023012, -0.898379142101791, -0.8806095522331456, -0.7992505017209828, -0.44002906527793595, -0.2771741367745326, -0.2861051819387228, -0.3068904992307555, -0.32176422674313265, -0.33251090682606055, -0.3381095334937534, -0.3366683514042741, -0.32685346679805427, -0.3079138674093205, -0.2797818889347301, -0.2429976381237271, -0.19868036601990724, -0.14838019882779463, -0.09395369861392844, -0.037401670066254056, 0.019290082308037526, 0.07426480785806522, 0.1259302889793732, 0.17298613251111394, 0.21450299184114385, 0.2498601956061437, 0.2787692764259342, 0.30114871405716137, 0.31711670648431234, 0.32684199964946625, 0.3305399501145745, 0.3283329641283119, 0.32028053461908357, 0.3062673380101266, 0.2866298817749433, 0.26524701168341736, 0.198228965427524, 0.17398006480739792, 0.15348297578388337, 0.13153561198794872, 0.1069002611377119, 0.07930157248917169, 0.048818441000674895, 0.014517437868048155, -0.02643697833255576, -0.05761144357404202, -0.09384867649680295, -0.05975313576029606, 0.050935358381059004, 0.17825607569136714, 0.30399817190795453, 0.42373521774267964, 0.527786794334403, 0.633901699316874, 0.7455976502392321, 0.8615813867740463, 0.9750664257436177, 1.0828116766574631, 1.1811889132425315, 1.2667662379420457, 1.335922860682301, 1.3855706564908932, 1.4127704097229614, 1.4156021834030046, 1.3928365327339831, 1.3437367199878967, 1.3131384159435804, 1.262893342662867, 1.1621555525727354, 1.063629137760704, 0.9801444432373874, 0.8885141758582007, 0.7812319112947876, 0.6600058939921025, 0.5196912461335108, 0.3611031519195351, 0.2606019227737446, 0.24786225117871963, 0.2763479784509779, 0.3323424794701406, 0.4109102089717793, 0.5059197171082284, 0.6103246926391548, 0.7167085215504112, 0.8178217460750088, 0.907121488422002, 0.9791555367711595, 1.0299234676905873, 1.0569812617102081, 1.0595591479258943, 1.0383726331547969, 0.9955321785539866, 0.9341408955954584, 0.8580992719547007, 0.7716169498959404, 0.6790338894121453, 0.5843686367407273, 0.49125045189630345, 0.4025835758775189, 0.3206319279012808, 0.2488565705582122, 0.18619900609772255, 0.13164091969821, 0.08481149945017652, 0.04509210652998252, 0.011604935245522086, -0.016510087108158267, -0.0401345407199738, -0.05995523172889694, -0.0765530710771718, -0.0902620339066269, -0.10062740996777553, -0.06508613611002212, 0.07740269508280084, 0.20012196815985817, 0.24793246268320912, 0.2544254033867708, 0.26137939722919723, 0.27140104419455535, 0.28393426761026963, 0.2966463957780161, 0.3077340347760167, 0.3157666523402134, 0.31947233435700406, 0.3178193996945744, 0.31008742921697596, 0.295933276838686, 0.2754120763561323, 0.24898994696128085, 0.2174986780461996, 0.18209637483590502, 0.14415931631357104, 0.1052079098506642, 0.06675907440342943, 0.030678779399005762, -0.003941248902094685, -0.047260411878966124, -0.061248410142563436, -0.06484710417512218, -0.061318310651055974, -0.0511974176241452, -0.03591502405412683, -0.01729870937758049, 0.002712012041211409, 0.022222152598851075, 0.03948718838221987, 0.05308258394486076, 0.06197909363415821, 0.06564641629068513, 0.06405862918000271, 0.05770414417858705, 0.047507324443668564, 0.03474818539495894, 0.020918387738136257, 0.007585744697820251, -0.003770931256219523, -0.01189811719942968, -0.015900070617191897, -0.0153227538396139, -0.01021171326350001, -0.0011119759441569066, 0.010962733033620609, 0.02461334099828627, 0.03815732319292242, 0.04976494936133058, 0.057592622886529554, 0.05992617804755063, 0.05530066558218061, 0.042606865742611966, 0.021162902621602253, -0.00924449512209069, -0.04835166086651377, -0.09544905537980686, -0.14942982102483526, -0.20887931362187473, -0.27208804849799506, -0.3372942666510914, -0.4024344945469398, -0.46622167378523294, -0.5267697784174823, -0.5870567426666238, -0.7563284718168264, -1.0313211420600057, -1.1721698922184238, -1.2084287176063242, -1.2379262176036763, -1.2599890677044456, -1.2740778053392203, -1.2798983153626535, -1.2772388469278582, -1.2661464586747098, -1.246862873608653, -1.2200139521373154, -1.1865018865865276, -1.147657347655584, -1.1050599740989213, -1.0606186352041052, -1.0163212421215722, -0.9742396752529539, -0.9362470640906118, -0.9039783953912703, -0.8785808702788875, -0.860775801812006, -0.8381136260064368, -0.6276220644413559, -0.38267219046892986, -0.3431328981663757, -0.3570921240787781, -0.3711052256500693, -0.380881830362771, -0.3856450710091668, -0.38372062697631293, -0.3738167078477268, -0.3552378850606104, -0.32788787082837345, -0.29227514049730985, -0.24942868939493934, -0.20079522965836638, -0.14810999486658716, -0.09323253528566866, -0.03803199682764813, 0.0157783162119145, 0.06669130601263973, 0.11352641065078029, 0.15539512978871528, 0.1917595789706974, 0.2223257032426149, 0.247052717073462, 0.266007988144497, 0.2793575542639495, 0.28722036746632806, 0.2896735819137195, 0.2866332808396752, 0.27790253668193365, 0.2635573867936305, 0.24864355738650445, 0.19091274924735835, 0.16952464792053146, 0.1485966171821147, 0.12428775496992905, 0.09649039326175401, 0.060816587982087, 0.019193329296854245, -0.02902217088058201, -0.10600101431780651, -0.11618461805281122, -0.078651987606289, -0.03682929276941138, 0.03889148298781642, 0.12564102885186923, 0.21754774640327135, 0.31374839450755765, 0.4164409903318287, 0.5304744463298818, 0.6496797019820373, 0.7703456187987676, 0.8892732916017052, 1.0028182291201913, 1.1073793560494898, 1.1990774563483209, 1.2743823215024195, 1.329768746768612, 1.3628605053809428, 1.3707994307633475, 1.4089252640184071, 1.3985016254402485, 1.4192863890002956, 1.4783812321188554, 1.4679298298987513, 1.3455406790807336, 1.2088578302562567, 1.0899714306157229, 0.9879598958328333, 0.9058632442145043, 0.8277461877948956, 0.6535916869728213, 0.3754852438972067, 0.2261174058759372, 0.2261422029064084, 0.2767024452231559, 0.3507816468642817, 0.4417157424435727, 0.5426770742621816, 0.6464698592487692, 0.746039595921778, 0.834968071510001, 0.9079019617125672, 0.9608260242109989, 0.9912785414143919, 0.9983340167566954, 0.9825911747011133, 0.9459001843686856, 0.8911933469836191, 0.8220624874627092, 0.7425454764383126, 0.6566801046895652, 0.5683551580562929, 0.48094271572196323, 0.3972825406848086, 0.3194437766496412, 0.23878571823788342, 0.17965053087555116, 0.12752616033238695, 0.08211865172825483, 0.042772016106200184, 0.00872787256048646, -0.020868754916485877, -0.04674863412931618, -0.06955696680537926, -0.08970177019326986, -0.10744949165670414, -0.11401760631762281, -0.018012991138554924, 0.14120183913210038, 0.20488337782927912, 0.21221317962767394, 0.2161138608896218, 0.22640661451374677, 0.2397378889630235, 0.2541282023253464, 0.2680796061844961, 0.28007340876009845, 0.28862753602971125, 0.2924149273248937, 0.29036386660821467, 0.2817487777373735, 0.26624783008191955, 0.2439831810597095, 0.21550879786836052, 0.18179233234497083, 0.14412609075298022, 0.10406113238628478, 0.06325788251984488, 0.024654607566295006, -0.005565071239246322, -0.04161003945083408, -0.05264710919144466, -0.06669583241369637, -0.07508801758503214, -0.07500253041974769, -0.06768527934861801, -0.05483824278025207, -0.038307033781245, -0.020032750790847764, -0.0019538012744897415, 0.014190951459568613, 0.026951082460847875, 0.035311593975409394, 0.038727164135787806, 0.03718193127360414, 0.031143808767211567, 0.02152776152726532, 0.009575060087861686, -0.003257102133599865, -0.01545775714242037, -0.02559897671385869, -0.03248954647606106, -0.03528369166811984, -0.03357917933252397, -0.027456024659994416, -0.017492382368764048, -0.00471843082553991, 0.009447285301683817, 0.023313266582092318, 0.035029702304891996, 0.04273594868008668, 0.044684584847876074, 0.039377207148125315, 0.025658678808607505, 0.0028053174925881663, -0.029436146199282476, -0.07082730046102625, -0.12066103054910471, -0.17780708981060833, -0.24078478148480098, -0.30785768976590866, -0.3771287051302856, -0.4466546588324656, -0.5145290253818953, -0.5789617977706047, -0.6418308168085298, -0.7956832143222998, -1.0201052271161268, -1.1439710079733247, -1.1783057258681238, -1.2042011443296774, -1.22213433158604, -1.231692843943835, -1.2326795124178185, -1.2251296357656463, -1.2092242076264457, -1.1854696726556115, -1.1545889511170584, -1.1176950076392718, -1.0761258860177199, -1.0315744510615925, -0.9858562807840148, -0.9409764412042199, -0.8988485035923279, -0.8613085925925752, -0.8298335224760933, -0.8055386856806006, -0.788958907784493, -0.7765609553553263, -0.6816473897334552, -0.44921826644008167, -0.37753218891892715, -0.38280172095427645, -0.39600976314166303, -0.40609455270217687, -0.41138664951473913, -0.41031827102110263, -0.4016814624952989, -0.38480850749012063, -0.359604129845291, -0.32653223001078047, -0.28653959471684765, -0.24097616273671463, -0.19143784362124094, -0.1396693388529222, -0.08737952560970008, -0.03618045689511007, 0.012570811877590238, 0.05776216270479484, 0.0986255890810801, 0.13465222573720048, 0.16562975210958975, 0.19150630997838824, 0.2123876403060283, 0.22838689575117854, 0.23961452122994586, 0.24604793052917007, 0.24754657371433808, 0.24411046753741417, 0.24033710398892882, 0.2062716543304166, 0.18479861867685354, 0.16316496125843827, 0.1400432548290942, 0.1077745405881192, 0.0706293513967804, -0.009569602097043273, -0.10188318807384888, -0.14697270935907625, -0.1743053674754904, -0.19594537051113647, -0.1655933515693473, -0.12119852330630465, -0.06173908278904072, 0.01089466416390561, 0.09409296230347497, 0.1892411621584209, 0.29636941414324003, 0.4116089654841728, 0.5322813602269378, 0.6553694084063482, 0.7773493331221988, 0.8945830847143292, 1.0030773286809422, 1.099010811479903, 1.1784536936379664, 1.2382412101667413, 1.2999388780589367, 1.3606622677710751, 1.5016691082801543, 1.6602491853130648, 1.6474156872827264, 1.580166903910495, 1.5288818605501802, 1.4346217887161767, 1.2891882811550275, 1.1332557109796824, 0.9907540274853646, 0.8757342914975121, 0.8234882407776616, 0.8285001913600725, 0.6260451416242718, 0.28232712895902123, 0.15652216915045236, 0.18688635277489452, 0.2565954457417745, 0.34387167978655775, 0.4418203859405856, 0.5434902938062289, 0.6420520047866087, 0.7312525570604205, 0.8058292474313076, 0.8618061859207269, 0.8966499292509447, 0.9093453541306378, 0.9002777666880077, 0.8711160130588764, 0.8244923841571232, 0.7637843082947056, 0.692708552804608, 0.6151122605346497, 0.5345960122254354, 0.45440329979470295, 0.3771493534479644, 0.30485119127436455, 0.21993499762465518, 0.1654625552496709, 0.11692913408470673, 0.07399367501880683, 0.03608317515371873, 0.002438415386405879, -0.027675074053966853, -0.05495134263411394, -0.07988728181775251, -0.10282267595955386, -0.12384038389051799, -0.10686264170068194, 0.0322743645921153, 0.14585444814758097, 0.16517228859209565, 0.16820596738726934, 0.17811219328721906, 0.1915185315137542, 0.20711616385003218, 0.2235497202378256, 0.23928810551953883, 0.252722496351623, 0.2622888536051833, 0.2665917720167612, 0.2645156337668597, 0.25532040025709524, 0.2387109536279297, 0.21486630451091848, 0.18444870149404125, 0.14854620235657912, 0.10862249840801219, 0.06637873952651585, 0.023667001358511186, -0.012517245781409336, -0.019676849169474764, -0.04140099021670096, -0.05002638517147773, -0.0663592888514648, -0.07838402905682873, -0.0816701851313626, -0.07722228432340117, -0.06690213000194589, -0.05254596364823483, -0.036144736356782836, -0.019626231357384505, -0.004762065673036275, 0.0070186961361988764, 0.014686047562796567, 0.017718400674260337, 0.016087797077557253, 0.010271276609538749, 0.0011574187732774632, -0.010029553798511559, -0.021879673356184348, -0.032922153400295695, -0.04178864006079275, -0.047335114684059265, -0.0487706773034724, -0.045728722091659124, -0.038326066603252995, -0.027155990117158524, -0.01326706557340529, 0.0019213769526240654, 0.016704925029678463, 0.02923078119212419, 0.037613774424682944, 0.040086333384117934, 0.03510552540882106, 0.021477571300107634, -0.0015763519252085523, -0.03434921825324899, -0.07664134757289176, -0.12775537525716896, -0.18654890306846017, -0.251490433188561, -0.32075512552260843, -0.39232187151158016, -0.46408281911148386, -0.5339531781072395, -0.599960227037938, -0.662919324636956, -0.7876886236410661, -0.9545397857855908, -1.0633000934668244, -1.0949605739586286, -1.1158048641695268, -1.1282540387999695, -1.1320138598588398, -1.1271138659474387, -1.1137343282472711, -1.0923454816289766, -1.0635926866696526, -1.0284646452260295, -0.9881360096613268, -0.9441207133889975, -0.8980579520124596, -0.8518249984733046, -0.807270942694819, -0.7662826297366969, -0.7304957452283087, -0.7013319081347955, -0.6797369884392861, -0.6662249842060808, -0.6597295356855941, -0.6197526700718461, -0.43768967963502714, -0.3755299386400228, -0.37990635631740943, -0.39385256078409014, -0.40564420228038855, -0.4129258597828134, -0.4141767453338687, -0.408269801195134, -0.39456936817518695, -0.3729878309748642, -0.3439345143012531, -0.30829598150932114, -0.26729470082191575, -0.2224262700119901, -0.1752677386489907, -0.1274212410317439, -0.08032572121802506, -0.035250432363316264, 0.0068457463550331, 0.04525159253704292, 0.07957772295166343, 0.10963461796107321, 0.1354489949264135, 0.15711356248427855, 0.17477328247937152, 0.18848367553938772, 0.1982012885340776, 0.20367957650087387, 0.20543952466411053, 0.2232616715035629, 0.1787881557355666, 0.17324129283390022, 0.14905637983538522, 0.11815826095807846, 0.014145174547083528, -0.07988935487179027, -0.15691566273373425, -0.23652075026070207, -0.29344328472980763, -0.2961954582287323, -0.2918673360104389, -0.2685316007804346, -0.2301024293385865, -0.17888123454315874, -0.11342259759268991, -0.0335889099563893, 0.05926303852976034, 0.16347618172510803, 0.2768556578827024, 0.39672682283479155, 0.5198422522222748, 0.6426752370175532, 0.7612664936851696, 0.871650903580242, 0.9696583268951642, 1.0517191900051546, 1.1356725538240071, 1.2852038425310388, 1.534591246740952, 1.6511868902003854, 1.7160173910931205, 1.6892944709060425, 1.5614471010291808, 1.4005863010477944, 1.2537666573591038, 1.1133242384108053, 0.9768057293537957, 0.8494614523093473, 0.7379889439602434, 0.6533761210056397, 0.6587916764284263, 0.6327024461892744, 0.32799313771950755, 0.08382034980839204, 0.07000239652071749, 0.13342416680364222, 0.21762555634976466, 0.3131072342629062, 0.41321933673963374, 0.5113595338658072, 0.6014775758164761, 0.6784227543401768, 0.7382560802884774, 0.7784096572279084, 0.7977343360582392, 0.7964532375954922, 0.7759735512956865, 0.7386926530877727, 0.687667660796702, 0.6263738684188338, 0.5583471253744943, 0.4869939533778398, 0.4153024443698303, 0.3457702459537302, 0.28023446948667097, 0.19558322439974152, 0.14683689708519143, 0.10288560475261121, 0.06342604706533184, 0.027876884704825855, -0.0044379864814168, -0.03422114466796344, -0.06204951231003619, -0.08835480694312103, -0.1133335097794097, -0.13585368192450265, -0.09256428509912862, 0.05518700937047116, 0.11465259697968877, 0.1190931121106018, 0.12762853935783647, 0.1405938491285117, 0.15682834767844234, 0.17515346252813235, 0.1941372832329119, 0.21215294990532252, 0.22749081611571365, 0.23849650708031844, 0.2436945271797306, 0.24191911769630403, 0.23241128363464236, 0.21489419135726529, 0.18961428497681343, 0.15732699094801283, 0.11927076942450121, 0.0770548935313995, 0.032580007428784086, -0.012149380435722001, -0.04618733341813819, -0.02961085757376658, -0.01424407504409686, -0.03545524102591102, -0.05986175534245142, -0.07565844169566383, -0.08196398224804202, -0.0803750990179255, -0.07256488696290386, -0.060425630159947286, -0.04593313723441517, -0.03105954452850268, -0.01755215515903963, -0.006862150486965035, 0.000013214133069539002, 0.0025430816815164015, 0.0007253971001721649, -0.004978050905576903, -0.013675763826388687, -0.02417792644709016, -0.03509857977525144, -0.045018555824101414, -0.05260855301601475, -0.05677831715846793, -0.05677102642779874, -0.052259063995921284, -0.043373455536882544, -0.0307252455353344, -0.015357276115904428, 0.0013055623833746477, 0.01756995838969866, 0.03157087021683491, 0.04142031396512125, 0.04531575349947525, 0.04168715680185375, 0.029282163652005533, 0.007278512657014069, -0.024679909796022415, -0.06642712612738055, -0.11730010235239607, -0.1761465757599856, -0.24140711130641357, -0.311178585233157, -0.3833335323873168, -0.45561812853303074, -0.5257774315578825, -0.5916603575736366, -0.6524657924123636, -0.7409944619815754, -0.8441986042202556, -0.933754804938113, -0.9622311353224458, -0.9769103489813267, -0.9826224258782972, -0.9795096102315508, -0.9677344076012053, -0.9477632994620544, -0.9202324206398469, -0.8860900444658402, -0.846441321845945, -0.8026987504303253, -0.7563811279518085, -0.7092494178773308, -0.6630589178006847, -0.6196654909943211, -0.580746276080256, -0.5478778705205327, -0.5222593712074932, -0.5047824163936845, -0.4958016661833531, -0.4954554954453654, -0.4891222897845591, -0.374504767634658, -0.33692731947715515, -0.34685734432425974, -0.36351672472202523, -0.37846493089771194, -0.38918140284784997, -0.39421794658825426, -0.39250414501107755, -0.38346556718165736, -0.3669905372235558, -0.343473755380165, -0.3136946271174068, -0.2788017219402903, -0.24012501218615157, -0.1991399661376576, -0.1572599264892549, -0.11582466859218421, -0.07592233942566473, -0.038433498478585904, -0.003915468879093886, 0.027293153735055142, 0.055119336010071684, 0.07961102514173568, 0.10093297747421737, 0.11921674094237034, 0.13453784202480268, 0.1467931961129043, 0.15585486213637711, 0.1663735293173607, 0.18188904517255722, 0.1786022803232168, 0.14664215356914134, 0.04902287311035547, -0.03964075575468229, -0.13296516195239239, -0.24526866486673438, -0.30882829303360815, -0.34397716154004243, -0.3714584451235545, -0.3819402834183272, -0.3804768987545444, -0.36672603184979735, -0.3385884666421841, -0.29563177166770416, -0.23763566615179776, -0.16477826531216166, -0.07797331936015794, 0.02122030093408256, 0.1306410927797126, 0.24748930652148182, 0.36851875753635177, 0.4899664636572707, 0.6078789188190581, 0.7180030032386733, 0.8164716483494487, 0.9099593836940918, 1.1048687716757177, 1.3873240596270437, 1.579755808441789, 1.6243512284898474, 1.5338691161468292, 1.4342942656693713, 1.3324909993037952, 1.2159707852231145, 1.0876125983219764, 0.9545039606953223, 0.8233151873533822, 0.7008439527422499, 0.5935836270674242, 0.507298169058416, 0.4842594614519389, 0.494922663133595, 0.26174536852316876, -0.01827933631630141, -0.06805113569686183, -0.012092351117958922, 0.06952582045417266, 0.16313243375701614, 0.26221910776091284, 0.360488105686362, 0.45207569027569816, 0.5319889988624696, 0.5963306222660991, 0.6425059411251288, 0.6692532032305851, 0.6766047403472544, 0.6657414200909635, 0.638768198287798, 0.5984696915056489, 0.5480029769738337, 0.490652011088593, 0.4295420846915139, 0.36747557375858975, 0.3067410679633378, 0.24907352423573315, 0.16882904443470537, 0.126694960574385, 0.08823022267690028, 0.053112197933197436, 0.02079722457127886, -0.00936547558055345, -0.037999960023284984, -0.06562270168245554, -0.09255431284651383, -0.11892446738194096, -0.13783302340948067, -0.07232281781764893, 0.047729395214421544, 0.069811543951523, 0.0766855192495175, 0.08874883726159855, 0.10498244027257475, 0.1244378768295864, 0.14589637888266505, 0.16783716984970476, 0.1885239663887206, 0.20614471981446347, 0.21893656653774718, 0.2253434977997406, 0.22413588753061875, 0.21453186923748024, 0.19627262569167092, 0.16965977227001794, 0.13556180557998943, 0.09534265390920815, 0.05079994464088422, 0.0039932453721318595, -0.03834417862854256, -0.048364098019543, -0.021480961856544134, 0.006348814920863255, -0.017793420519160108, -0.047984341005888886, -0.06759029264166028, -0.07688179505703019, -0.07803495775181535, -0.07268536898089994, -0.06270309578876576, -0.050121836472580394, -0.03688895952868343, -0.02478767832755624, -0.015232834658743144, -0.009235901930897183, -0.007289576412546017, -0.00940489452861959, -0.01509782915358615, -0.023498510427041874, -0.033421473904240995, -0.043520742054413475, -0.052402802845283314, -0.05878665084106249, -0.06161074212391737, -0.06015715100736174, -0.054111002923493245, -0.043620876478923876, -0.029287591237153743, -0.012153460156269391, 0.0063799467623220085, 0.024620323006563583, 0.04071848931890565, 0.05276664602913961, 0.05895283635964077, 0.057655459257310415, 0.0475851028376133, 0.027845007792545395, -0.001967568223342653, -0.041755985024984454, -0.09088075233672743, -0.148217069401249, -0.21217317456658513, -0.2808029588303729, -0.35187555475929244, -0.42301973843876617, -0.4918222749989738, -0.5559698557832062, -0.6131416587412248, -0.6653475411088285, -0.6897484965146052, -0.7598787403359868, -0.7866072591777975, -0.7946632387627153, -0.7927019608890316, -0.7818117829142643, -0.7624360949056292, -0.7352124539933378, -0.7010896415145851, -0.661174546877211, -0.6168580774468246, -0.5696215091552101, -0.5211700449991046, -0.47320041278205593, -0.42752766976020595, -0.3858226186842577, -0.34972346685839106, -0.3205629996291348, -0.29946930684075124, -0.2871143483506069, -0.28382118566977255, -0.2900346654938648, -0.30500939160465546, -0.27254749483538987, -0.2666501282258338, -0.2845557937284724, -0.30555625252243956, -0.32496623195718755, -0.34044610065956604, -0.3505935977818524, -0.35444917041501434, -0.35144395710589293, -0.34150273342953064, -0.32493994496713974, -0.30249817639464105, -0.2751718108076542, -0.2442053023216353, -0.2108777069346477, -0.17650002015786193, -0.14220807889026155, -0.10899568098819401, -0.07755785419964312, -0.04837783707493326, -0.02164186159834003, 0.0026271776222914767, 0.02457961010600762, 0.044420621476637834, 0.062332388081696166, 0.07838410972634247, 0.09246285827188405, 0.10475282961288723, 0.15096103697232355, 0.13572240166424798, 0.09751817605680024, 0.026885628150363772, -0.06805518949791889, -0.1937086326398303, -0.2535409203691934, -0.31060262548689543, -0.36019801876663315, -0.39985236085303555, -0.4311376000788787, -0.4529136596093135, -0.4627575704408642, -0.4597175944620844, -0.4423004135340882, -0.40952898859850784, -0.3609513280648642, -0.29673499525403635, -0.21768044354666216, -0.12527645438761859, -0.021701702362419084, 0.09026267868408944, 0.20722949084218456, 0.3254302925368511, 0.44068851116284957, 0.5488041107064077, 0.649085089857576, 0.828739661326126, 1.15119292219826, 1.359389373567709, 1.3708738255621244, 1.328132211408318, 1.2772065170525582, 1.2045102779084487, 1.110619592170612, 0.9999560672723504, 0.877817505110035, 0.7506095824338512, 0.6250958396713753, 0.5080319096146688, 0.4057509470684455, 0.32370299251635914, 0.2900823044141543, 0.30109593599634676, 0.1183852068777318, -0.15337651669423247, -0.2213959345243306, -0.17230227055451097, -0.09292104674644852, -0.0007258913290311142, 0.09778332194869654, 0.1965561869446648, 0.2900041952457123, 0.37326087881845293, 0.4425271425872739, 0.4951708904100798, 0.52984055178948, 0.5463824478238872, 0.5457441251217787, 0.5297544902947959, 0.5008965679255746, 0.46203458485427884, 0.41615769578873874, 0.3661424976594718, 0.3145554612351722, 0.2635141888534376, 0.21459782604808897, 0.14234532457407578, 0.10757447358395211, 0.0753579721613491, 0.0453576668106237, 0.017045677294213135, -0.010196384533471381, -0.03693906809404979, -0.06362745389435176, -0.09049777076416454, -0.11756338013965006, -0.13187781730004655, -0.05992631791859093, 0.016144313934337795, 0.026999662954966475, 0.03802011393176841, 0.05362850880206471, 0.07337034844966395, 0.09633196618963602, 0.12122363824625237, 0.14641768122365661, 0.17007514584736205, 0.1902587947435086, 0.2051047136247347, 0.21295518280554382, 0.21251983840748467, 0.20298345787728422, 0.18409855590363033, 0.15623044212862158, 0.12033918697608126, 0.07794705804102531, 0.031000240174276605, -0.018224516351975417, -0.05491180885705482, -0.023807678475459504, 0.0250263544595839, 0.03329727484383049, 0.000951633795696516, -0.03281975726264097, -0.05549297288490518, -0.06765873394331567, -0.07142068814358815, -0.06837957239029402, -0.06047501268909983, -0.04971504251285408, -0.03810105474343395, -0.02738076406096357, -0.018996315442836087, -0.013914791618277356, -0.012639225361263384, -0.015142776177141881, -0.0209538590627667, -0.02918659428200604, -0.03868273262794125, -0.04810446502839655, -0.056097448753558765, -0.06139961521551551, -0.06298530242416778, -0.06014604877419005, -0.052584134756643364, -0.04043496202694041, -0.024294679082051296, -0.005173098351379579, 0.015541157027757047, 0.03618905634985592, 0.05491925889010152, 0.06983543737133857, 0.0790890291047539, 0.0810360079460839, 0.0743135493109226, 0.05797657557097047, 0.03153157423083641, -0.004971472825240575, -0.050965929838689306, -0.10533582056965685, -0.16650784446644895, -0.2324792664545665, -0.3009632924382295, -0.3694643895710783, -0.4354492021111085, -0.4964447269045511, -0.5496307282182684, -0.5796557432745306, -0.5325688309304617, -0.5474809719097298, -0.5758322938565881, -0.5786252257100193, -0.5685340933796046, -0.5493139774731128, -0.5218164433590848, -0.486971418863714, -0.44590645274166363, -0.400036540908264, -0.3508762261707421, -0.30014850251846337, -0.24956252172455695, -0.2009372643598768, -0.15595484036911955, -0.11628935786214267, -0.08334823590478813, -0.058399620615873005, -0.04232020295179684, -0.035723933559754784, -0.03874177195848283, -0.05218772993338394, -0.08156309913151727, -0.12448087123022145, -0.1676628480109823, -0.19566879308476182, -0.2220743186038483, -0.24701057325359166, -0.2682938012363767, -0.2846736809077335, -0.29522133753363633, -0.2994569033002481, -0.29725610190974905, -0.2889426053860191, -0.27512557108165225, -0.2567412769382109, -0.2348394984484763, -0.21060302626061045, -0.1851222161861692, -0.15944673335746629, -0.1343889241597651, -0.11046418279745396, -0.08796766743693674, -0.06702143134020755, -0.047539897033614054, -0.02932551938001371, -0.011956950492894691, 0.004615849797610316, 0.02047267223148186, 0.03560028955618755, 0.04409367786972318, 0.08732256076019596, 0.1062240446532563, 0.03648834728912487, -0.07648328652571301, -0.1428351463660693, -0.21160042362890952, -0.2753830702228637, -0.33514786650821726, -0.39068791542981707, -0.4403695488314945, -0.48232961775300787, -0.515028711684451, -0.536457608533567, -0.5448464167950604, -0.5387166624748527, -0.516915001934338, -0.47883992508967665, -0.4244645988719977, -0.3544816283426613, -0.2702947911334359, -0.17403636500856567, -0.06852829965380725, 0.04283879912041755, 0.15615725949151393, 0.26706230173958767, 0.3687018923109364, 0.5051464367436531, 0.8288638401367514, 1.0464208529513552, 1.079637450262119, 1.0763272917400695, 1.0562920391523605, 1.0123026694660804, 0.944198095341723, 0.8550878996224665, 0.7494941080291389, 0.6329271169205302, 0.5116021642287096, 0.39208505166052054, 0.2809322668809493, 0.1842206402365143, 0.10724622196662903, 0.07523506615987108, 0.07300829781230878, -0.07969466505615896, -0.31939416085294914, -0.38581499338984804, -0.33947172607970444, -0.26176833752862994, -0.17065786732487354, -0.0725355536110932, 0.02692054100450214, 0.1223269962918927, 0.20904405163307793, 0.28332575251052344, 0.34257346336782, 0.3853190532554154, 0.41126551897265884, 0.42111247943669117, 0.41643251437376305, 0.39939973895925984, 0.3725893446166193, 0.3386924698110958, 0.3003313379012731, 0.2598355317536454, 0.21914067378619606, 0.17967045724684017, 0.11829309734649396, 0.09148602260943228, 0.06614404323524425, 0.04193181981131211, 0.01830110278092434, -0.005322550494334166, -0.029485325851256405, -0.05455577257347599, -0.08070638245082584, -0.10780450280428511, -0.1213755435052759, -0.05788032920497255, -0.01998700257764341, -0.009626502467237508, 0.004888914297020985, 0.02411174027514784, 0.04752544608666831, 0.07417978790473212, 0.1026907667355359, 0.13133916824457126, 0.15815744212663008, 0.18109930313196798, 0.19817341793660626, 0.20763218053489185, 0.20810574785896363, 0.19874682885852568, 0.17931693206759958, 0.15022977278865168, 0.11255836245056328, 0.06794697676710548, 0.01853930833222428, -0.033229936804668014, -0.06316704498055437, 0.012048128026673766, 0.08938724240807971, 0.0671925549029675, 0.021478428805972172, -0.01599511107965501, -0.04093354435001739, -0.055763978126356584, -0.06189608746464126, -0.06100618515288314, -0.055003511928322535, -0.045968813529555064, -0.03587072702297012, -0.02650385136867839, -0.01926558176875859, -0.015143512615778398, -0.014592995648877949, -0.017597145322840957, -0.02365032222212543, -0.0318831294625857, -0.04112601290360146, -0.05006922099442396, -0.057363422350190096, -0.06177637832018301, -0.062285632898785526, -0.058198383684958443, -0.04920113118176417, -0.035422204200359575, -0.017419260538190207, 0.0038200050539143326, 0.026954443680979212, 0.05034006541822489, 0.07215803958390254, 0.09049507231361265, 0.10350022881534837, 0.10946751334452198, 0.10699411067309494, 0.09503657886776384, 0.07304309260653508, 0.040958478023206624, -0.0006921744111911821, -0.050865281100208826, -0.10797653538971641, -0.17003058796870008, -0.2346587968116598, -0.2992998591570295, -0.3612808523714923, -0.4180148224996296, -0.4669831028884621, -0.49307171228534763, -0.4159895172504413, -0.32325564377843374, -0.33916314876266895, -0.33975178762490543, -0.3221247969315173, -0.29435279991758634, -0.25858068914947996, -0.21594321370629999, -0.16786630703586436, -0.11592296595194362, -0.06190249210475951, -0.007595314527581998, 0.04510894780082175, 0.09445713082138063, 0.13870807118012607, 0.1763758309672081, 0.20608833159909512, 0.22682784870540917, 0.23778163745142233, 0.23856668493260536, 0.22918776735963586, 0.20827907019701364, 0.16696386802589291, 0.058321224657968074, -0.0449319008521778, -0.08295085428126825, -0.11181068296587782, -0.1414829999646372, -0.1695465256308264, -0.19400576421463533, -0.21351007859079374, -0.22721648294441543, -0.23488129831779858, -0.23665909690386755, -0.2331467012095434, -0.2251423397139476, -0.21367352677436102, -0.1997491564533327, -0.1844308137890458, -0.16876311917015663, -0.15298209153797693, -0.13757148555075105, -0.12284400457206068, -0.1087284402612525, -0.09533188818153882, -0.08091928601448473, -0.06652071420624495, -0.05076414315169053, -0.03306900919744926, -0.010549186512115227, 0.0696454084907625, 0.09543796213949385, 0.06878502794785302, 0.001881408539897933, -0.06936494559092843, -0.13977889216426398, -0.20993918650480037, -0.27938268421539814, -0.3467435270337331, -0.4107275066656335, -0.46979534574075466, -0.5220523560651866, -0.5655483892312905, -0.5982385726690413, -0.6182064166374843, -0.623706513051367, -0.6134200330095432, -0.5864946796987365, -0.5427627616623472, -0.4827434136120896, -0.40776025411214256, -0.31988771245741354, -0.22193601769689852, -0.11734938126084948, -0.010040708329628778, 0.09221468858712889, 0.18463446003054207, 0.4261246410635571, 0.6862876118980559, 0.748336535868134, 0.7760129805554454, 0.7856146588533326, 0.7694625152398871, 0.7279095120282415, 0.6628764064161574, 0.5776864842304112, 0.47680242997705946, 0.3656205655053548, 0.2501640864452348, 0.13680521347705854, 0.031806633825600894, -0.05895222408901968, -0.13047056794920087, -0.1568397914247086, -0.1765121619432084, -0.3064032232286453, -0.5000174281376268, -0.5520222659560203, -0.5053847995808507, -0.42895633190661897, -0.33893519304203057, -0.24123316555966312, -0.14126565178522021, -0.04407395867851882, 0.04584770902657498, 0.12492003361353965, 0.19051866036857035, 0.2411477262019902, 0.27632175718401575, 0.29655951629417254, 0.30313896441656185, 0.29797598868130937, 0.28332011075235597, 0.26160448754708776, 0.23515906276944554, 0.20611017269283316, 0.17617140119759966, 0.14664008358960245, 0.09827401559769378, 0.07984561579595173, 0.06189303470258434, 0.04400300079279784, 0.025659122518586486, 0.006258581622203607, -0.014679040248884334, -0.037505897064161076, -0.06229948279853037, -0.08887077633011575, -0.10844209763714208, -0.06652005559839402, -0.05233248305533866, -0.03932376907816604, -0.02127481544268317, 0.001607917230832534, 0.028774211412141426, 0.05919957861226477, 0.09142862683482278, 0.12362228169128509, 0.15370867529263643, 0.17950317075271505, 0.19890779077935128, 0.2100607967415402, 0.21152351656612833, 0.2024054482903741, 0.18247038970859952, 0.1521906120063341, 0.11272208549243645, 0.0658687276808374, 0.013915401904438962, -0.03177957383845431, -0.02031318003299365, 0.06660668994372543, 0.12609715758590045, 0.09455146961821548, 0.04247748775919735, 0.0018037556327916704, -0.02551248063697198, -0.04268771641072355, -0.05095898938732857, -0.05196089601240894, -0.04769044288878721, -0.04019688007902822, -0.03151849170563725, -0.023408833582626354, -0.017304086463633572, -0.014140937360150652, -0.014390847299460052, -0.01798974564181377, -0.024442948990510693, -0.03285100223763687, -0.042061816335590974, -0.05075381475094232, -0.05759912122923205, -0.061358847136573635, -0.06102281054806702, -0.05587863919999103, -0.04560416159368613, -0.030285520180846404, -0.010452215409391452, 0.01296565459276422, 0.038656514312354506, 0.06502746848537355, 0.0902636225670217, 0.1124715515040755, 0.12975701259256045, 0.14038999578172007, 0.1428741914152769, 0.13610733257156138, 0.11941451060934227, 0.09267689257085365, 0.05630476842734744, 0.011312580228374003, -0.04078191791887775, -0.0979471531322531, -0.15780894361955866, -0.21769921166306538, -0.2748734533737007, -0.3265966942283729, -0.37036467129980544, -0.3943898540710622, -0.306606993931676, -0.10988782236810746, -0.08873223156286425, -0.08938645333508877, -0.06640939030163384, -0.03048170032357067, 0.013433576380333712, 0.0636886467238007, 0.11869094527439028, 0.17659035904496356, 0.23548423552056796, 0.293361473296323, 0.34833126067815723, 0.398525183220638, 0.44232912403961855, 0.47824711230797856, 0.5051267085685032, 0.5219981968375755, 0.5282894765536277, 0.523948848093605, 0.5112099513294748, 0.48528253886244777, 0.4537089641078653, 0.27963897731091336, 0.13258595755825908, 0.09462529258522245, 0.0493361487212276, 0.0018241998755552657, -0.04160210614256954, -0.0795922738439998, -0.11141669592296566, -0.13682413029516738, -0.15586301688490067, -0.16898759573835953, -0.1768381510346817, -0.18031419282919536, -0.18032948968523677, -0.17803295035303002, -0.17459815948772395, -0.16904093360923156, -0.16150999176584335, -0.15413327167267, -0.14708369228324258, -0.14051349740442642, -0.12964028050545728, -0.1020367462538001, -0.08346725485615103, -0.025426031223673817, 0.028262610615975348, 0.019694037094989625, 0.08669425092931338, 0.1359154081042453, 0.0899322512945826, 0.021240166096823998, -0.050263547404099995, -0.12361570593801918, -0.19803751027031513, -0.2727139424633185, -0.34651865811306237, -0.41806781802838344, -0.4856823744541323, -0.5474570260903295, -0.601264233290097, -0.6449337845472236, -0.6762967290963147, -0.6934409373614674, -0.6947676841350567, -0.6792599106326502, -0.6465077915814703, -0.5969154984227742, -0.531658224728746, -0.452772717646722, -0.3630345421384362, -0.265915989781246, -0.16510723592171317, -0.07559132144983138, 0.032021341865611674, 0.2990039638531754, 0.38950406459871, 0.4485735835406821, 0.48336582994321464, 0.49306871562568055, 0.47739032648032076, 0.4371442600275479, 0.37444056050197094, 0.2925864109220617, 0.1959898199221568, 0.08988349152213981, -0.01986083617190726, -0.1271684142072167, -0.22598278032502428, -0.31077598497941095, -0.37671283667161504, -0.3960127073370443, -0.4321260046753963, -0.5411387766301452, -0.6815452754587206, -0.7112353575699846, -0.6620353861332404, -0.5868658871867352, -0.49817756481179165, -0.4013214741036837, -0.3012840509790702, -0.2028818791039817, -0.1103148043859945, -0.027087631426961467, 0.04427864484610744, 0.10218517427670659, 0.14606844766935745, 0.1761989430531985, 0.19365534844578547, 0.20002822001170673, 0.19732627203193953, 0.187653173750292, 0.1731249056073092, 0.15558697540143385, 0.13660463066292028, 0.11726631510311591, 0.08326549195314215, 0.07351384908815195, 0.0632797764796198, 0.052167705210583115, 0.039576671604240055, 0.02495710660685102, 0.007792273904044578, -0.012187865359002181, -0.03504983625425062, -0.06053804853874922, -0.09446833043291392, -0.08387955479414266, -0.07746870278436369, -0.061112758677311696, -0.03953698383525328, -0.013004402998262776, 0.017897277948137003, 0.05209808728932552, 0.08804017090423422, 0.12379525567191285, 0.157156601406105, 0.18582960406752091, 0.207582817971119, 0.22046023354763689, 0.222937511194074, 0.21408412515476205, 0.1936671373925336, 0.16219623439497322, 0.1209366267045402, 0.071801493957238, 0.017273509497889528, -0.01869787361684061, 0.047974568224298686, 0.14964168516296272, 0.16380292781657158, 0.11598813048733758, 0.06101278013884048, 0.018815621806273608, -0.010726396908383062, -0.029944161977217387, -0.04001382507654716, -0.042665584610634966, -0.039861430349871885, -0.03374196030133958, -0.02630917482772399, -0.01937922632626332, -0.01433986194784298, -0.012158937105183343, -0.013254079859791046, -0.017574346206425395, -0.02457973361812138, -0.03338111966426638, -0.04279697733114152, -0.05151815220064693, -0.05819697141613428, -0.06160135198144262, -0.06069523077289751, -0.05475553401099731, -0.04341486191105637, -0.026727580955832053, -0.005159141488170205, 0.020400763994263382, 0.04870622623173437, 0.07818759992688484, 0.10707126853895499, 0.1334428002604855, 0.15540448902273685, 0.17114748846348027, 0.1791256725808541, 0.17810970662263426, 0.16735025624348054, 0.1465851552792774, 0.11616401470359605, 0.07698447785526863, 0.030556488367436963, -0.021142904750275804, -0.07567332776801905, -0.13034729590573946, -0.1822906976912737, -0.2286961845207891, -0.26691098759697773, -0.2885793106420911, -0.20206013173866388, 0.07780291915216786, 0.15950215669872847, 0.16412607033835425, 0.18644256236976808, 0.22854033963116294, 0.2800536165709051, 0.3375204897751347, 0.39906907534305525, 0.46271498042341985, 0.5263225053209579, 0.5878261297393905, 0.6451769930069764, 0.6965685655526661, 0.7403270538916393, 0.7751248703655929, 0.7998247470962845, 0.8136792851018386, 0.8164819008538657, 0.8136178774577711, 0.8130802397961245, 0.8218999517258547, 0.7639613269088956, 0.48247100439595414, 0.30968576738250775, 0.2366204309665747, 0.16260748747495946, 0.1044818567943917, 0.05551135065371149, 0.014379935147108114, -0.019838783411481486, -0.04792470749468691, -0.07070725713825432, -0.08891961185740449, -0.10338153557441743, -0.11482427365954706, -0.1242169981867729, -0.13168281110931268, -0.1348863430021794, -0.13089982836588732, -0.12343117962842065, -0.11512196728917345, -0.10571876355282583, -0.09422769648021756, -0.043234687110973447, 0.0133612715491358, 0.028609371579976006, 0.028275402437532904, 0.007890018085976891, 0.04537969789384544, 0.13512633983144529, 0.17850038009040503, 0.11766015756528247, 0.0489483628606493, -0.023132302407326222, -0.0980911157844293, -0.17529669326683273, -0.2539311778286395, -0.3329085120202091, -0.4108317622104085, -0.48599698390908586, -0.5563829181298523, -0.619768302201436, -0.6737674180397129, -0.7160572205765394, -0.7444432921349637, -0.7571498705659945, -0.7528724852387096, -0.7310550125401942, -0.6918763591291341, -0.636440817044182, -0.5666645738333411, -0.4853385143620468, -0.395852510266419, -0.3067557984626639, -0.23225595733099968, -0.06972115958012193, 0.050173930536162814, 0.11666255821799787, 0.16980183735795773, 0.20196963083626418, 0.21016451283304693, 0.19398117972975282, 0.1543246983821387, 0.09330550226271139, 0.014249314969216442, -0.07856089674687183, -0.17997769211471315, -0.2844020813818311, -0.38593846799350384, -0.47890189994312404, -0.5579606015846847, -0.6185791405404442, -0.6341112134639282, -0.6781322036118449, -0.7579423395120584, -0.8455179971979181, -0.8534238696328238, -0.8021012044151643, -0.7285482871602342, -0.6418458640645346, -0.5465104214031866, -0.4472514655177626, -0.34848486399951817, -0.25424078919234194, -0.16778788901397634, -0.09164857758427525, -0.02737716442637894, 0.02429003118035844, 0.06351070031932149, 0.09106991084801042, 0.10835959393046779, 0.11704672231967517, 0.11902658759259932, 0.11609040077870647, 0.10992015399033139, 0.10181267158705509, 0.09276056390878251, 0.0737390524186079, 0.07272983900104046, 0.0704603405787596, 0.06639335089044796, 0.0599677523654929, 0.05054258766276476, 0.0376693249039004, 0.02103635107952151, 0.000660198966876635, -0.023998662904682888, -0.07630819944369982, -0.10363603254083387, -0.09416780665987812, -0.07453508210472304, -0.049529066372802966, -0.019443937950950563, 0.015117847798668649, 0.05300522640817018, 0.09259247805718385, 0.13183118898811852, 0.1684130144552456, 0.1999065436294023, 0.22397401718515808, 0.23854615434207305, 0.24202569851496114, 0.2334372520830268, 0.21254026384611435, 0.1798986693943323, 0.13684523056811115, 0.08544768612101006, 0.03183673775418594, 0.019372722802843523, 0.12863950308481575, 0.22900149678894932, 0.20215406945693148, 0.1342897928927056, 0.07589070615284399, 0.033400599086767624, 0.0020063106483685367, -0.018832645727423714, -0.030386685850469775, -0.03434047796026407, -0.03276383726507626, -0.027763449739853785, -0.021429367377218345, -0.01553515943278072, -0.011522111752471087, -0.010304207294745127, -0.012323252122312112, -0.017473427751366066, -0.02522417326913662, -0.03464120502891799, -0.04454818653764492, -0.053601122274195334, -0.06045235846538488, -0.0638345298985099, -0.06269747785239144, -0.05626870415433999, -0.04414644352551811, -0.02631674808140494, -0.0031972623868393724, 0.024398346343559973, 0.05526342931525119, 0.08788804389388849, 0.1205002205741601, 0.15120402932975718, 0.17804394339275298, 0.1991772460886252, 0.21293877784758752, 0.218024720053843, 0.2135284079593074, 0.19910592451385956, 0.17495212752472966, 0.1419183579150971, 0.10140544050752087, 0.055413120067675514, 0.006344949815257017, -0.04301268984235129, -0.08975328958167061, -0.13092143208215923, -0.16379699908131862, -0.18568950734987233, -0.14738098644860642, 0.14910941563034275, 0.3940931642635257, 0.4154341756076607, 0.42741127581289984, 0.47016448172794245, 0.5277837277231754, 0.5917239319464294, 0.6592809942411053, 0.7282396396040527, 0.7963788128796345, 0.8614562162555597, 0.9214294678488306, 0.9743917825512449, 1.0187792366049022, 1.0532397995914673, 1.07681946866885, 1.0889182109681812, 1.0954544937885657, 1.1215042767956342, 1.123315487501653, 1.1094607042750324, 0.9055148705602329, 0.5043534721169696, 0.28267055313457234, 0.17036087211848283, 0.10262189134664013, 0.05716290869808027, 0.025101942435068025, 0.0035105911556172487, -0.010046764016122367, -0.017894176656371386, -0.021959350193208493, -0.023895851814550895, -0.0248706723672818, -0.025759915152294255, -0.02623707836991329, -0.024720716159716716, -0.01818506430826261, -0.0074465757876964744, 0.003403895631723941, 0.014421679031615398, 0.026378093085561716, 0.03801249071210755, 0.04833510095389926, 0.03631236982283603, 0.017212520420503807, -0.0038346456979976296, -0.02020879632036543, 0.10077599584166741, 0.22268751482188875, 0.21012110235358872, 0.15010344473517723, 0.08338716613826591, 0.012331899195620721, -0.06266407019281228, -0.14108374857248318, -0.22217182545072767, -0.3048911253856943, -0.38786029020000967, -0.4693282311857665, -0.5472186426962082, -0.6191486517627656, -0.6826029347605083, -0.7349976675346852, -0.7739616249698482, -0.7974108322621554, -0.8038702110951466, -0.792499390923302, -0.7633700483600041, -0.7173869653334126, -0.6564546360392978, -0.5832690582282929, -0.5000002970759665, -0.42782275332138564, -0.3802086966018461, -0.23275115610552355, -0.19676238091185239, -0.13447699143977587, -0.08527325900158811, -0.05616296181691194, -0.050071677872508324, -0.06728575410716164, -0.1069041352094473, -0.1667328603427798, -0.24353562832653797, -0.3330379552342837, -0.4303225175048544, -0.5299135699192954, -0.626273307351696, -0.713906932651784, -0.7878840776449465, -0.8427635591451481, -0.8620191524064689, -0.8953688319062909, -0.9419001491503805, -0.979124085856629, -0.9697291449607244, -0.9189678254428921, -0.8482329904084898, -0.7643762636007674, -0.671621748174899, -0.5742070157541548, -0.47630267324147724, -0.38158377487530526, -0.2932160473748979, -0.21354683833684307, -0.1442063343084441, -0.08593471527349839, -0.03880552195811693, -0.0021638482671338943, 0.02505782573399684, 0.04434485665301646, 0.0572454684312218, 0.06538421177162479, 0.07012713645938629, 0.07265819083884306, 0.07371168066148215, 0.0695750447831589, 0.07729191190411555, 0.08299950105792142, 0.0861868592001489, 0.0861469410373914, 0.08229331512218785, 0.07408224062581681, 0.06127935279594432, 0.043799933637866495, 0.014132340773379326, -0.0586932386547625, -0.11878943374861706, -0.10260326393825103, -0.0797521005173083, -0.05148479654848259, -0.01798687129279042, 0.020077871647739443, 0.06151317354787533, 0.10459411483591197, 0.14718677698819693, 0.1868561952269987, 0.22106510777758182, 0.24735164200137394, 0.26355332487056593, 0.2679933470036753, 0.25965057537240277, 0.23828769938120664, 0.20449163072412668, 0.15969827421485872, 0.10606260939644563, 0.0661949609018484, 0.12128745870166524, 0.23231358714540518, 0.26458951526712315, 0.21626498401396166, 0.14676985036033718, 0.08837156867589924, 0.04433071902261965, 0.01158618478067952, -0.01048661159378339, -0.02309474401278999, -0.02803894262476536, -0.027352186258461142, -0.02325194608720893, -0.0177917015569643, -0.012825023857598872, -0.009744475120537777, -0.009507609554737506, -0.012498586678538759, -0.018628316387347965, -0.027309859328469854, -0.03761149687340348, -0.048307435024573575, -0.05804741288771709, -0.06543660306166377, -0.06918871921295366, -0.06819755550140227, -0.06165326704098978, -0.04908170368194964, -0.0304158746372033, -0.005990156719684725, 0.023433435704445227, 0.056722564011105536, 0.09238961919883515, 0.1287019531388376, 0.16372972005455022, 0.19550340916990905, 0.2220783431488047, 0.24172371916851265, 0.2529779720066241, 0.2548425703772894, 0.24679498035386516, 0.22895373138260666, 0.20201616537283495, 0.16736393012179018, 0.1269052067795151, 0.0831041036337421, 0.03873133595128664, -0.0031756282692017024, -0.03961931867092705, -0.06771967984438465, -0.08501839203905348, -0.0777645900715882, 0.11979984424831969, 0.5145072688091568, 0.6332036146750277, 0.6597875793254042, 0.688163128652973, 0.7451009301884604, 0.8140371308925181, 0.8867830453840213, 0.9605242497508666, 1.0328532481328985, 1.1014884612111793, 1.164265188351961, 1.2193340559243255, 1.2650725757740489, 1.3002636974966535, 1.3239460306714532, 1.338269327582573, 1.3760624633002445, 1.3740978023164265, 1.2976537063371838, 1.153055217026707, 0.7374326222576553, 0.2649482138260728, 0.06264395619807939, -0.0065606522647083665, -0.03920483304440836, -0.05363725369516814, -0.05479023816301698, -0.046076757241353405, -0.030869505190285196, -0.012124539428254977, 0.007583810319918172, 0.02637448676488674, 0.04290781363560825, 0.05656812071297601, 0.06737297054038294, 0.07524729256527962, 0.07972783476318668, 0.07904636861930925, 0.07288920976930768, 0.06284234618976647, 0.04967147463130672, 0.03399422748556091, 0.016328239744435535, -0.0033968339984138396, -0.02281078851544649, -0.04149418846848363, -0.00004743985404864759, 0.17039897954534045, 0.2868017988299236, 0.24489400232014003, 0.1873417792341705, 0.12429561448940873, 0.05599291784858984, -0.017333008059105204, -0.09526386491592653, -0.17715915189201503, -0.2620392620568648, -0.34854796654044407, -0.43492270884364714, -0.5189913076000572, -0.5982755000604332, -0.6700406801711747, -0.731538764621904, -0.7800931496485486, -0.8134344982173953, -0.8297648182686306, -0.8281012398301613, -0.8082480081695085, -0.771061102737157, -0.7182776703724247, -0.6525637973420118, -0.57747953062559, -0.5170718234862148, -0.5015092207172795, -0.4531773066793825, -0.4090415752370622, -0.35170541522000764, -0.3055910506798396, -0.2797565237320878, -0.27596075044020374, -0.2945151405075741, -0.33438908925449784, -0.3934571242024205, -0.46841890889372007, -0.5551832463957371, -0.6488838994680624, -0.7443644189845795, -0.8362391226945078, -0.9194169812119113, -0.9891420866843528, -1.0388340603359585, -1.0743245596971271, -1.0552575145387486, -1.0740457627123083, -1.0793133134423831, -1.0575287336012362, -1.0083380274475378, -0.9414068511835803, -0.8615934703463539, -0.7726231057845476, -0.6784439686391623, -0.5827811795716027, -0.48911434810899834, -0.40031018652564754, -0.3186852473578248, -0.2457517696158158, -0.18239350142334354, -0.12872216487441546, -0.08435917956250716, -0.04836799922487611, -0.019605598110159606, 0.003323519647744577, 0.021698888906140468, 0.036764983214550906, 0.04939937652205684, 0.060269442691270214, 0.0702993597648538, 0.08645827860435329, 0.100099982948465, 0.11051626014438698, 0.1170421059736868, 0.11894374672673536, 0.11574057299598195, 0.10710505739367893, 0.09281702437237804, 0.044569122161474795, -0.05363412662237543, -0.12359348584136853, -0.10331002356507923, -0.07748798217903818, -0.04615157926456881, -0.00945221016134834, 0.03192101469903719, 0.07669405988470857, 0.12307534461944769, 0.16882321210773021, 0.21140636675363744, 0.2481678282455695, 0.27654502110187007, 0.2942779158121036, 0.29961704605282424, 0.2915048258982298, 0.26968641168810836, 0.23480101613223847, 0.1883306331386143, 0.1370640519580748, 0.127601737503372, 0.23531979029698946, 0.33045835690492154, 0.30135224852690623, 0.2241139067443818, 0.1522768148349889, 0.09578842224496587, 0.05077830083711188, 0.017145566855070626, -0.005647903331541748, -0.018924229555053573, -0.024437630572837987, -0.024348089808210016, -0.020839406558229023, -0.01607141525858402, -0.01185661328163834, -0.009656546531944254, -0.010374707643007186, -0.01442792942846216, -0.021665914296264965, -0.031508736387724, -0.042963805305544556, -0.05479588834240989, -0.06559500733908241, -0.07394229297876942, -0.0784862341071253, -0.07807917929202735, -0.07183329086609824, -0.05921668339249897, -0.04007306584807435, -0.014675476484653283, 0.01629973831721987, 0.051760344966336636, 0.09027632982359934, 0.1301051518348344, 0.1693240782295793, 0.20588437043737606, 0.23779090268760106, 0.26316601623498626, 0.280456294861553, 0.28847496048481336, 0.2866032556620528, 0.274773428630815, 0.2536272441977472, 0.22440642749179673, 0.1890385869332123, 0.1499214865304772, 0.1099275997227469, 0.07209963650353934, 0.0395933300313116, 0.015334743844359622, 0.0019459020820171702, 0.0019137234982191664, 0.078777120191456, 0.4558586466002974, 0.787117780495445, 0.858333118023535, 0.8876357997823225, 0.929265111977772, 0.9958007546863819, 1.0716680484715928, 1.1491979026717347, 1.2253114584899683, 1.297369121479834, 1.3631955381584167, 1.4208702500458337, 1.4688613232383894, 1.5059044096614898, 1.531375112377809, 1.5625106341823516, 1.5799222429433675, 1.463158034892695, 1.281510428398204, 0.9298725077494643, 0.40308347902994246, 0.041108889149210626, -0.042743462097094564, -0.06007072965217919, -0.06284396580456875, -0.05550583832382294, -0.040604811683772724, -0.020797890293771104, 0.0014713261809351508, 0.023892921381147403, 0.04460794871323159, 0.06205979187631527, 0.07523372998027611, 0.08344100209386696, 0.08648666029293395, 0.0842684258855293, 0.07700065246666199, 0.06500450187429507, 0.04923921994756242, 0.03084104117828801, 0.010912299198732711, -0.009496523397155343, -0.029367119526174434, -0.04790163041730011, -0.06489109553598382, -0.07237827355295856, 0.06629130407913486, 0.2607798525723988, 0.31858996270379336, 0.28006063777428736, 0.22859946570695833, 0.17099982018686433, 0.10723718610807609, 0.037406715950537794, -0.03825248353858246, -0.11920193809389623, -0.20456086509270666, -0.2930093033295691, -0.38276251218533375, -0.4715953195837539, -0.5568677056715181, -0.6357051015230422, -0.7050785446483498, -0.7621226124614182, -0.8042277669458322, -0.8294232227291154, -0.8364051691723535, -0.8248860983883102, -0.7954843450591476, -0.7499602193525048, -0.6892444548441601, -0.6268342269048421, -0.5900514704742292, -0.5999094268631575, -0.6295428066841584, -0.5791435453374758, -0.5250064802299539, -0.4825077906809092, -0.45972229712839674, -0.4581810839674869, -0.4780441924113008, -0.5183505852155017, -0.5768550667545673, -0.6504029985846467, -0.7348808596937069, -0.8256917087542979, -0.9177719012069208, -1.00611226187657, -1.085781144531599, -1.1524262602001158, -1.1967802891764405, -1.2370708945357727, -1.1711935333004369, -1.1486717999730525, -1.1387121288220579, -1.1128561599765279, -1.0670755151320916, -1.0052014781324026, -0.930681996505716, -0.8469473308042108, -0.7574497780283682, -0.6656516128748304, -0.5746310321117507, -0.4871215837243055, -0.4052001931144855, -0.330419580698615, -0.2635934245633669, -0.2050342071919653, -0.1544205683873745, -0.11112393190557102, -0.07411937318533035, -0.04236137884030755, -0.014687580635604713, 0.009807721944241399, 0.03192392585309989, 0.052030730731698505, 0.07495023735774842, 0.09922465215570009, 0.12049212554799515, 0.13807565230664975, 0.15111532147041373, 0.1589281967148093, 0.16089014826948933, 0.15674186271086832, 0.14597367411412243, 0.06432302054773853, -0.06507821066412234, -0.11987866532783986, -0.09737735207615028, -0.06889673577477051, -0.034746494471729505, 0.004917207664652423, 0.04934519593663911, 0.09721365842195162, 0.14664498627559652, 0.195314836681459, 0.240587473327742, 0.2797077464119031, 0.31001380524324773, 0.32915852682062585, 0.3353321328470882, 0.3274283422592159, 0.3052024727894782, 0.26929988655665094, 0.22129829967904824, 0.19105338250118553, 0.27125872068173584, 0.3694850866175683, 0.3640221502319547, 0.3027676530555705, 0.2239262452773405, 0.1543080611192187, 0.09763481401876417, 0.05219057639611724, 0.018263818302505896, -0.00478977369211897, -0.018230021188353263, -0.02394563234381919, -0.024060340464369778, -0.020886305670537952, -0.016549136214674687, -0.012958009326621833, -0.01152840242555353, -0.01321975967403799, -0.01838981060810485, -0.026908167045200382, -0.038128308488813434, -0.05105091923248706, -0.06437058457551403, -0.07665014577884077, -0.0863950831103577, -0.09220773954280459, -0.09285462800951017, -0.08738487988257249, -0.07517056627310847, -0.0559855354100276, -0.03000745371832947, 0.0021426921975211677, 0.039445979836412626, 0.0804851009631653, 0.12354510787120887, 0.16664940996922795, 0.20771772291444401, 0.24462722576338614, 0.27541670449783817, 0.29834771381386727, 0.3121277663917619, 0.3159334070596369, 0.309613160127749, 0.29363071339562286, 0.26920786052282786, 0.23815785809069467, 0.20294379654695938, 0.1664002043390429, 0.13171052805519246, 0.10205210738524251, 0.08052805098799887, 0.0698033579390005, 0.07204851092857023, 0.09445906339746024, 0.2709503303753358, 0.6946447267136886, 0.9751003928735851, 1.0607263841315389, 1.101357781107628, 1.1449782168256228, 1.2118223382152582, 1.289249604704417, 1.367830219967069, 1.442835028518597, 1.5116784108292975, 1.5725832772534414, 1.6239947681801246, 1.6646455002591711, 1.69581118716168, 1.7406106306667999, 1.6558848910065391, 1.4214787467263656, 1.0949158415744273, 0.6594673720310507, 0.22688306559022298, 0.04351776508175753, 0.01716779330391649, 0.00899604771751683, 0.009476236226436008, 0.01680555991264221, 0.028866334476836286, 0.043601476268035455, 0.05892191868834118, 0.07304823600454924, 0.08437584717859714, 0.09176528849808108, 0.09435712266281904, 0.09180118421605599, 0.08403160852280855, 0.07143765196186003, 0.05462040785726252, 0.03451258895874609, 0.012141782255184808, -0.01129394021834429, -0.03463343927612961, -0.05671611201426252, -0.07654537149339191, -0.09347243392044646, -0.10877625745683694, -0.08371394800849608, 0.13992060173255005, 0.3484071546299248, 0.35185800928089783, 0.31632228607379975, 0.272729863183482, 0.222355231361842, 0.16499188117228591, 0.10049269634711244, 0.02894652719480817, -0.04928133409365021, -0.13339859323760273, -0.22214224494079104, -0.313724435398143, -0.4058284377571315, -0.49570984039328714, -0.5802570012690218, -0.6562612587982155, -0.7205212070670708, -0.7702327921962713, -0.80306790743197, -0.8175870799088045, -0.8132021377565071, -0.7905089525223676, -0.7510683829416607, -0.6929261225082133, -0.6382030309577482, -0.64133590046593, -0.6883292967407444, -0.7467918319036739, -0.7025333104716833, -0.6493551657974601, -0.6100815365057279, -0.5899016686276717, -0.5901860347256829, -0.6111885656159606, -0.6517970442235299, -0.7098934281991305, -0.7822397905333913, -0.8649445982233503, -0.953437240719766, -1.042985559403741, -1.1286999829099793, -1.2060412630377146, -1.2707626945129826, -1.3242191206854574, -1.289156724784724, -1.209797537210306, -1.1714303844661078, -1.1587947366067217, -1.1345749274385355, -1.093891930121468, -1.0382840584468322, -0.9704657338738532, -0.8933665470221461, -0.8101431725998793, -0.7237883983080193, -0.6371631440127761, -0.5526542708334681, -0.4722736603497637, -0.3973906040203996, -0.3289243864120617, -0.26715289753380356, -0.2120002116304609, -0.1628997557509939, -0.11915394480245922, -0.07981291387551126, -0.04406431861763871, -0.0110822863571709, 0.01960232442355625, 0.048319273027148224, 0.0823932622434469, 0.11417714300221071, 0.14274064662703845, 0.16717116105934737, 0.1866506730347477, 0.20030869546597385, 0.20757297183384082, 0.2079939567522917, 0.20007861705856733, 0.06895931411086131, -0.09046032665878556, -0.11115857549736141, -0.0863421710972121, -0.05550499927500496, -0.01881140208218568, 0.023532119161811416, 0.0707385796376796, 0.12141725976231132, 0.17362061769153403, 0.22494009156033634, 0.2726496830805223, 0.3139058786565272, 0.34595595311694716, 0.3663852889093304, 0.3733160309315875, 0.36562433537451744, 0.3430390335774991, 0.3062694758951521, 0.27767242751128274, 0.33230302190639693, 0.41822608324948973, 0.4302850077050637, 0.378397522173171, 0.2955854079610658, 0.21688909971114922, 0.1502381267661579, 0.09370128357985563, 0.04849073952171734, 0.01480184389657535, -0.007928383132715933, -0.02109304061532069, -0.02653589250233268, -0.026523488196975142, -0.023336799395637486, -0.019223731507272968, -0.016056730789609786, -0.015334781005788, -0.017966151770984484, -0.024349494937486726, -0.034289209929108666, -0.047142747149782394, -0.06183512253690582, -0.07703548646437175, -0.0912219194632663, -0.10285035872212156, -0.11042806141990114, -0.11265265095033172, -0.10846870242647855, -0.09716974740163886, -0.07842434430446477, -0.05234080676307662, -0.01945250597297221, 0.019255337471905776, 0.06241231692168103, 0.10827560624766264, 0.15485760980524965, 0.19997471696347757, 0.24143479783804755, 0.2771051826346014, 0.30514165032031126, 0.32404205841079126, 0.3328807350278371, 0.3313024983728816, 0.31971726220914487, 0.29919167506588984, 0.2715656620798921, 0.2392202161308683, 0.20510185726046704, 0.172381858762245, 0.1444092339995433, 0.12431697157237753, 0.1149552378703409, 0.11852727530795049, 0.1365692923389601, 0.1896565247153743, 0.41922763907407656, 0.8031382492544097, 1.0814699563202073, 1.2098982841186068, 1.2813699687110898, 1.339151163770203, 1.4005706847438768, 1.4719864570803942, 1.5454256565970672, 1.6155518292002302, 1.680513973372638, 1.739087281879507, 1.790006105246273, 1.8424441800426754, 1.85459274455095, 1.608865399478982, 1.2326399977098905, 0.8620192080615761, 0.4663171025797821, 0.18735187823327237, 0.12378275693976626, 0.10326690900432034, 0.09214758950770374, 0.08883299343555873, 0.09133101889949025, 0.09759733349309307, 0.10545391792395087, 0.11296556557735116, 0.11832378924970222, 0.12017756255441725, 0.11746193779251612, 0.10966176603620426, 0.09658729411169986, 0.07856848749581147, 0.056197878594336004, 0.03046467749635795, 0.0024938406396266544, -0.026367797814966565, -0.05478747062384848, -0.08139866755500158, -0.1049892416534366, -0.12455536244693377, -0.14017571048055544, -0.147890974484838, -0.03679999833882519, 0.22064006337421915, 0.38303735089459323, 0.3793905740890384, 0.3522076881784155, 0.31815700706163064, 0.27680425849885104, 0.227639860727475, 0.17031400263406926, 0.10466782182729162, 0.030920787958002016, -0.05027481293753766, -0.13771012562333595, -0.2295860303993411, -0.3235280123137567, -0.4166153820447338, -0.5055794873636543, -0.5869009753956043, -0.6571740112174282, -0.7132201398173503, -0.7525359073652371, -0.7733293955144163, -0.7749366912517655, -0.7576885314703263, -0.7232018262947717, -0.6655214294817, -0.6175289152909915, -0.642054628852252, -0.7472911428953224, -0.8124275312709393, -0.7746018390513538, -0.7224880345730211, -0.6856132979364418, -0.6672025933822878, -0.6687629272807412, -0.690390752932931, -0.7311054438304936, -0.7886663346567611, -0.8600244456826012, -0.9412548838198829, -1.02806967114042, -1.1158041069137994, -1.1999277192168938, -1.276024299344558, -1.3399323804908323, -1.3740862381511065, -1.2539533556527438, -1.1727473671803548, -1.146528738702389, -1.1410421464785667, -1.1231603109637556, -1.0891363847428677, -1.0410649624880293, -0.9811995173701353, -0.9121796115070584, -0.8366668012338074, -0.7573819946299807, -0.6767604006446675, -0.5970297958165656, -0.519913615226141, -0.4467835911616591, -0.37842371570912325, -0.3152726074113712, -0.25724190333079244, -0.2040421449229992, -0.1550309574302613, -0.10959469644982378, -0.06698901895214748, -0.026732464740805706, 0.011599606501339899, 0.04801715002502194, 0.09113849867488277, 0.12983190742205664, 0.16509276534883432, 0.19604452197683786, 0.22164583222214596, 0.24107236387341002, 0.25357736370158435, 0.25832685451104265, 0.23852740920137272, 0.04523407755263875, -0.11629247131555243, -0.0989577760867908, -0.07194667311042924, -0.03905360758665655, -0.0001232665127153254, 0.04460327097568406, 0.0942845842287765, 0.14746813645611923, 0.20214134479424306, 0.25581342406937946, 0.3056877423780566, 0.3488325509548371, 0.3824343380773989, 0.4040019690049954, 0.41162881715035127, 0.40414261860533784, 0.38186902242166854, 0.36620849272917866, 0.4259908587720409, 0.4988496394697963, 0.4959418421271611, 0.4441099472126657, 0.3619565975444856, 0.2796172647694335, 0.205770799459414, 0.1399354581403367, 0.08426012843712716, 0.039876179679153134, 0.007078009262127427, -0.01482315574377746, -0.027162198123604764, -0.03193134419897348, -0.03136343101707739, -0.02788133925335501, -0.023703546043440937, -0.020813612034364826, -0.020670468070332904, -0.024250171106074414, -0.031894391143866274, -0.04343076634727161, -0.058142714828743336, -0.07493909780237351, -0.09239966280917822, -0.10895376894909659, -0.12295396291099203, -0.13283376247325573, -0.1371764161005069, -0.13483886807746104, -0.12499801508490793, -0.10723905342737283, -0.08156814832849801, -0.04846473520830985, -0.00884834374744603, 0.035908598986142515, 0.08407344777570236, 0.13358249422703317, 0.1822008988544983, 0.22758609503478766, 0.26750716139636577, 0.2999169072389649, 0.3232020835083418, 0.336220777504856, 0.338538152015353, 0.33037861508768973, 0.31279910000760935, 0.2875173338784922, 0.2569915379381351, 0.22411821489965522, 0.19222061816335856, 0.1646532091795434, 0.14473916695205702, 0.1353573154912775, 0.1388940103243559, 0.15690377052645377, 0.1901419758090912, 0.26506417740503885, 0.4677032506459482, 0.7885865439637842, 1.0648034673334612, 1.2514269601917096, 1.3704404580396083, 1.4643127421543518, 1.5366136333485683, 1.609860585527791, 1.6853443255043894, 1.7540106790647139, 1.8142626094607053, 1.864102665723375, 1.9121109029436054, 1.7550834862845033, 1.3401131308581462, 0.9439013330360901, 0.6116070666191753, 0.32570258447158196, 0.22150533385745597, 0.19049970620570633, 0.16994680132211837, 0.15797501971422445, 0.15280824013279304, 0.152483530330616, 0.1547744573726222, 0.1575939444954093, 0.158899566834096, 0.15706697745602938, 0.15074285071272975, 0.13915236222962513, 0.12188867029404449, 0.09914071158707927, 0.0714321257892081, 0.03977489635173903, 0.005387096186410645, -0.030211905084286172, -0.06546997664388599, -0.09874892201566254, -0.12854862175713855, -0.15348423114360976, -0.1727959207997145, -0.18712036944897292, -0.1783128398055922, 0.02465208287228826, 0.3005894473593571, 0.4015898921548935, 0.40178470293733426, 0.38585034938385476, 0.36297471422329153, 0.33231302126142737, 0.2930979108992018, 0.2446585022505392, 0.18662769716915673, 0.11899929083553662, 0.04230679583761354, -0.042317958197441996, -0.13307549795858975, -0.22749060648352604, -0.3225224880539379, -0.4146373183422991, -0.5001159301210389, -0.5751819498830688, -0.636451220867503, -0.6810312785296038, -0.7069998837098126, -0.7133667077045942, -0.7004622658220248, -0.6696418972767901, -0.6113490920020901, -0.5676033580675144, -0.6058190657040656, -0.753878291895627, -0.8300531989478279, -0.7960276620556703, -0.7451591178192567, -0.7094878293914313, -0.6919427629586501, -0.6938872750987164, -0.7155744111727156, -0.7558861038250697, -0.8127581573742164, -0.8830656808244823, -0.9631261810423002, -1.0486678752186513, -1.135342501886445, -1.2187103735461902, -1.2947038744513844, -1.344758673097707, -1.2595213282615818, -1.1397322543522659, -1.0935807453149957, -1.0918551019389158, -1.0927964754335546, -1.0812029148887978, -1.054900472659087, -1.0153906874124425, -0.9646780172221296, -0.9049254329313596, -0.8385038142671046, -0.767667118006, -0.6946211683787142, -0.6212219613231396, -0.5490975247920398, -0.4793867184250358, -0.41293737267768194, -0.35009009377514344, -0.2909601558631061, -0.23525553856440906, -0.18263029415744914, -0.13251115296137517, -0.08449007752254456, -0.038124586663848214, 0.006675994196693846, 0.04990812946795736, 0.09970561684059795, 0.1444481621061956, 0.18583059402450175, 0.22272694523313064, 0.2541388156672495, 0.27903602820473017, 0.29670343144609745, 0.30544469861056545, 0.21810124043441803, -0.00959029290144997, -0.10776993893736009, -0.08469417011732983, -0.05603606249075721, -0.0214081809231903, 0.01945274620002202, 0.06625475005395032, 0.11809629542863487, 0.1734733474168424, 0.2302949130577252, 0.2860176999463242, 0.33776055794299076, 0.38254604783552004, 0.4174516344174206, 0.4399860946229639, 0.44847125164947155, 0.4471143469849199, 0.4682150544514778, 0.533088183338609, 0.5816392708337692, 0.5597103439278726, 0.49538331334878927, 0.4174261649480031, 0.3378421170587469, 0.26055667866108045, 0.18828129031632335, 0.12401607878135934, 0.06983580905180409, 0.02698216263090658, -0.004366743418250163, -0.024827164320465167, -0.03588042900036781, -0.039477191504332376, -0.03800339214210635, -0.03385507611388405, -0.02938509263516731, -0.026547735822524232, -0.02689854648113832, -0.03136959088159419, -0.04035217765009369, -0.05360922194153073, -0.07042620576921399, -0.08962515676746163, -0.10974521447535135, -0.1291082986834613, -0.14599226246523866, -0.15870729024262675, -0.16574082325953587, -0.1658206340995616, -0.15802584652487717, -0.14182354107423012, -0.11714538278979747, -0.0843855208933193, -0.044439382009441086, 0.0013528165948848425, 0.051211176087233135, 0.10304138537626528, 0.15448409024390886, 0.20311159617018015, 0.2465057254384555, 0.2825076797982553, 0.3092874363409912, 0.3256063808493366, 0.3308256960859546, 0.3251292983112162, 0.30941978171374096, 0.28545633412950533, 0.2556105086186107, 0.2229019641629253, 0.19062871517821156, 0.16232416386039183, 0.14132301297024452, 0.13069896954348303, 0.13285798838317542, 0.14952882893497788, 0.18147352196811717, 0.22858643323197247, 0.30463051563411625, 0.4537667639194525, 0.6817802643204249, 0.9211155086094118, 1.1204784105398344, 1.2862071734498155, 1.418806199704326, 1.5225058971527297, 1.6051530848515885, 1.6748928349549592, 1.726187423410555, 1.7580138577153814, 1.7205985385811484, 1.3878891232575494, 0.933985574121138, 0.6374097882981675, 0.41439288270249053, 0.3031800488808636, 0.263171467464705, 0.23548052603710312, 0.2169417546136838, 0.20610284636257248, 0.20118329727204198, 0.19999106325663263, 0.20033548211888608, 0.1999497742936125, 0.19690178532597535, 0.18947739993543955, 0.1765375765826782, 0.1573356043637304, 0.13179034032267722, 0.1002365178338529, 0.06360897781753039, 0.02314934357520393, -0.019484936902713912, -0.06251996070315613, -0.10400935682645418, -0.14210035392430953, -0.1750106170554666, -0.20123575877897615, -0.22047100141882225, -0.2354964630227716, -0.18802309579535859, 0.08561644943050162, 0.35677794088197956, 0.4131730344865012, 0.41843223437400034, 0.41516727410776433, 0.40490963535488156, 0.3865026429869438, 0.3587888539456259, 0.32082327234833663, 0.27192674478054535, 0.2119029286121208, 0.1411140639910764, 0.06062458677022242, -0.027753400829791275, -0.12147575990480597, -0.21730090053297246, -0.31151620639549016, -0.4000576879867399, -0.4789267600341631, -0.5443325548909632, -0.5932030980215561, -0.6232382496546558, -0.6333833265259381, -0.6236837620740117, -0.5949095537731983, -0.5377946907898057, -0.48945246610547155, -0.5271276034468242, -0.6933045754643761, -0.8034887689704369, -0.7717124766431174, -0.7209468249215494, -0.6852979061512503, -0.6674111338251905, -0.668844467789695, -0.6897198432399918, -0.7291037325690608, -0.7848352081021446, -0.8540081982376053, -0.932916791818946, -1.017566020502474, -1.1036617804088928, -1.1870821039769925, -1.2395451175144152, -1.1940394528444682, -1.0535318313918518, -0.9898366731209602, -0.9882832342323544, -1.0071276076944824, -1.0166964890129728, -1.0124330080998645, -0.9946037346409407, -0.9645508315970508, -0.9238595848685422, -0.8744192515324691, -0.8181343262795684, -0.7569909715250684, -0.6927722001248142, -0.6271586399583837, -0.5614636583080799, -0.4967931958517262, -0.4338106953269243, -0.3729720357453479, -0.3143202360468158, -0.25779688206802254, -0.2030534594469957, -0.14982119759577195, -0.09771309096580172, -0.046615312837120504, 0.0035515272628221517, 0.05246552128711279, 0.10640934692210058, 0.15640323576984794, 0.20309093573773745, 0.24539044203607108, 0.2820777403573198, 0.3121623761732373, 0.33442261112042715, 0.33722013305588083, 0.1398953382227872, -0.07970249929893036, -0.09435345491489677, -0.07030756207355537, -0.04047408979574918, -0.004416588875727712, 0.038075098852877076, 0.08664532002134084, 0.14034672439155038, 0.19759415797522006, 0.2562572006613948, 0.313519657973929, 0.36670977260018045, 0.4126250686931652, 0.4449659881528625, 0.46451802591386926, 0.505045314597556, 0.5734392201554979, 0.6230641650513444, 0.6233503245160836, 0.5843075753580562, 0.5269658440863534, 0.4600804009275514, 0.38653563626284737, 0.31027457586311114, 0.23533028404265544, 0.16536973385515275, 0.10331669420610012, 0.051356903820324984, 0.010622449020532443, -0.01862541306297083, -0.03714303980588096, -0.046359392973051694, -0.048380875758394115, -0.04556345702980691, -0.040453058606419345, -0.03538029942827814, -0.03242218759580018, -0.03310451404286707, -0.03843907050484485, -0.04876793463017559, -0.06388261669593442, -0.08299284368894766, -0.10489756476008427, -0.12803193476138286, -0.1506495379768893, -0.170900226664791, -0.18699398333771988, -0.1972773844985758, -0.2003667944997667, -0.19520593645379059, -0.18116609410954032, -0.15807213137380138, -0.1262668517465122, -0.08658958890803126, -0.040397333694472515, 0.010522422421047395, 0.06398012777248674, 0.11754858614656971, 0.16863499797377868, 0.21471572402811123, 0.2534244166458035, 0.2828255739086738, 0.3014696091965545, 0.3086537478331919, 0.3043855662567796, 0.28957636536951004, 0.26586757860412424, 0.2357212651688636, 0.2021002154516336, 0.16845892118057115, 0.1383178146748767, 0.11520121850302045, 0.10218906354033941, 0.10187539153651559, 0.11599632728073461, 0.14547788801692896, 0.19021679617619824, 0.2492470958022519, 0.32350878189518806, 0.4315860044992963, 0.5735045188770664, 0.740682822825617, 0.8985275930134078, 1.0527265431207482, 1.1813837109983165, 1.2756060915548417, 1.3471321331689694, 1.396503169033517, 1.4176352008828328, 1.3106679359157596, 0.9341696219442284, 0.5938108836949052, 0.4486876320770161, 0.36016435216370546, 0.3156974132604571, 0.28311219933284093, 0.2600016948894752, 0.24534279718509922, 0.23765613353202886, 0.23490278544290977, 0.2348853429725306, 0.23517686580706876, 0.23355466748509812, 0.22791305976970389, 0.21666827249991094, 0.1986136805521852, 0.17324810685557956, 0.1405548839020927, 0.10123122318185196, 0.056400895231952575, 0.007748812390374837, -0.0427992099809309, -0.09301408225839225, -0.1406715590876786, -0.18353358520526086, -0.21960199788874668, -0.24722023656922332, -0.26774225330934875, -0.2783021468926261, -0.15908904744706476, 0.14105800617099362, 0.3649650523127157, 0.41132717460709856, 0.4273176102498315, 0.43784956574651623, 0.4414947777239142, 0.43664738431844974, 0.4218103554133048, 0.395642806989736, 0.35719918111085747, 0.3060141854013594, 0.24230579655746887, 0.16705310755383262, 0.08207241929680276, -0.009972494682814137, -0.10569937656466344, -0.20109819748170032, -0.2918833990603362, -0.373653611476505, -0.4424008361277352, -0.4946389117400054, -0.5279398036979632, -0.5409038873264498, -0.5335892711499808, -0.506142326193987, -0.447008535057031, -0.3938355585096751, -0.4121315766527127, -0.5401231478574928, -0.7100790044089398, -0.7081219699707408, -0.656191895467491, -0.6191438492414294, -0.5997779233808131, -0.5995404711136647, -0.6187609906326603, -0.6564085186319435, -0.7105361156200738, -0.7781921398757623, -0.8559199059959477, -0.9397443118432234, -1.0092682954146674, -1.0671554734223747, -1.01860284911616, -0.9014481752628094, -0.8390209700261888, -0.8417294096898287, -0.8734032069957398, -0.9016380890978177, -0.9181661978975528, -0.9216749494667376, -0.9128876958389238, -0.8928124096940575, -0.8628069180371538, -0.8243337620256757, -0.779025457864063, -0.728432286479709, -0.6741091185232317, -0.6173667210008178, -0.5594012134369075, -0.5010585234946037, -0.44302514967978723, -0.3856116860187946, -0.3290157473013844, -0.2731219841764583, -0.21783282872156695, -0.16287001187195438, -0.10814889279513373, -0.053555673567548645, 0.0006755404531666453, 0.054236454523141964, 0.10975111344071276, 0.16398597990967811, 0.2152359660728853, 0.26218421753368193, 0.30365293797195014, 0.3383487856112948, 0.3616719018776646, 0.2757720622633908, 0.013986790743690136, -0.10314071975761818, -0.08252224795450847, -0.0577152962772578, -0.027009423218117057, 0.010193514627024669, 0.05402973069582817, 0.10409594313183135, 0.15896844138990218, 0.21742251727456807, 0.27587162894469763, 0.3178036600150014, 0.3468034543935419, 0.3908401278630578, 0.46905113375546215, 0.5465936105008558, 0.5873765439534173, 0.6014373777757838, 0.5969772400044162, 0.5755389116532852, 0.5371915372597886, 0.48442263705512323, 0.4208091905434239, 0.3503499917006949, 0.27712711589986716, 0.20520692040715938, 0.138168453899707, 0.07903483947563794, 0.02988216941490318, -0.008071855901610636, -0.034699988498924306, -0.05069655855938704, -0.05764267506925691, -0.05760708979821416, -0.05310202951931986, -0.04665229335296672, -0.040730356498244635, -0.03739496806066667, -0.0382806258070717, -0.04436819143023574, -0.05606026170627554, -0.07309131495974452, -0.09467511418415897, -0.11951958411412789, -0.1460079987137265, -0.17226926871602166, -0.19635615931735395, -0.2163304894311049, -0.2304174395899432, -0.23708132271744198, -0.23514911956787454, -0.2238619240926938, -0.20296450752964557, -0.1727168183608878, -0.13394221915292182, -0.08797912918110384, -0.03667800027801027, 0.017724819015636495, 0.0726638273601048, 0.1254520855806045, 0.1733748331014624, 0.21395829850518888, 0.24505862695509872, 0.26514615539205133, 0.27333008984386487, 0.26959935279893976, 0.2547246877236269, 0.23040604842630596, 0.19902068812250295, 0.16365961914535632, 0.1277377680153442, 0.09494777982739233, 0.06879937928014035, 0.052557618947282614, 0.04881019346709703, 0.05946861609351095, 0.08545727045918516, 0.12683101980491251, 0.1826379485212133, 0.2511554036525192, 0.32982046988862557, 0.41899197140202116, 0.5229417435440755, 0.6283339863903183, 0.7347681936451878, 0.8360067801261124, 0.9295007646890614, 1.002755099369244, 1.0562697973234911, 1.0828668271333246, 0.9626508985601347, 0.633354175715958, 0.45358756058141125, 0.38946631138552235, 0.3448380571512808, 0.30942779539175547, 0.28352539832712154, 0.2666174403503456, 0.25763915427033446, 0.25484032906127796, 0.25615109359864485, 0.25910274844462977, 0.26126273900952945, 0.26016764521868385, 0.2537644904598624, 0.24030671929836167, 0.21874016462506596, 0.18852565772437657, 0.14992718832473884, 0.1037515006346279, 0.0515250715424429, -0.00482862804574502, -0.06290875131030305, -0.12017844067334948, -0.17394902348338448, -0.22168814401226555, -0.26103404933482466, -0.29078028736605077, -0.31245007166839933, -0.3067918184004714, -0.12011269441467576, 0.17785397418048632, 0.34618824918512914, 0.3963235998229617, 0.42630955724326114, 0.4515636767528317, 0.4700913215560938, 0.47988839246190906, 0.4789858588102298, 0.4656988318222357, 0.4387151755057097, 0.39734149176335176, 0.34160564029908436, 0.2724142765195854, 0.19160825048929464, 0.10193743451383241, 0.007013893347160405, -0.08895015375833193, -0.18129316792914807, -0.2653753332013675, -0.336757874396695, -0.3917713219004879, -0.4275934804893753, -0.44276598586895943, -0.4370484503017522, -0.4117679284884783, -0.3518329102510762, -0.28153085933680444, -0.28132282422125066, -0.3478649220720249, -0.5104849723891105, -0.5888646768822223, -0.5589860353445006, -0.5193755885939328, -0.4971917295035766, -0.4942186223393703, -0.5107008020677872, -0.5458313006462934, -0.5975003850590417, -0.6558987418566415, -0.7161556599847785, -0.7771295554513751, -0.8006951515888536, -0.7459869249636268, -0.6581805317212002, -0.6158860119181244, -0.6421673826293537, -0.6968146433530711, -0.7450830866492226, -0.7799755615994735, -0.8030967541045868, -0.8146343586823197, -0.8150751409484949, -0.8052637379325658, -0.7862010571530291, -0.7591037340308535, -0.725192686589029, -0.6857685865837082, -0.641994446039373, -0.5950016792145387, -0.5456718946943067, -0.4947895669505389, -0.4428296667901037, -0.39017179955578474, -0.33689773398021927, -0.28307325825045204, -0.2285508840590631, -0.17330875081261032, -0.11724157707466043, -0.06052614733321171, -0.00337575077863006, 0.05361086097427159, 0.10819646853141851, 0.1657806880453685, 0.22066348759473675, 0.27158369025887874, 0.31707962600319284, 0.3531094891647615, 0.33695531577436055, 0.10228407605976964, -0.09515682663937364, -0.09333039615736816, -0.07360020836161807, -0.04851021725978555, -0.017191992188835492, 0.020830641345508383, 0.0649695526076437, 0.1132152512763911, 0.1400002126317661, 0.14503246233886813, 0.17206907538494498, 0.23164041788432144, 0.30430067387552295, 0.3692075749289714, 0.4282021053469709, 0.48130257451132596, 0.5197764794682156, 0.5393373254193197, 0.539428831052045, 0.5210110101635634, 0.48583995470523433, 0.43652211476857206, 0.3764864236886616, 0.30958708597330586, 0.2399700232813886, 0.17159562929593042, 0.10812013758171135, 0.05244870623805298, 0.006734708577386783, -0.027936672009265973, -0.051372193245629916, -0.06441259117967268, -0.06859235686739429, -0.06613493593533959, -0.059526536629481264, -0.051443429074442326, -0.04434531097729377, -0.04042255618506441, -0.04129538668332233, -0.04803771552699676, -0.06101833871602347, -0.08001014007835705, -0.10415812242483835, -0.1321458469047383, -0.16224593535145726, -0.19250425817714367, -0.22082665984242666, -0.2451512512752787, -0.2635388157913132, -0.27431920859793557, -0.2761658241402287, -0.2682103896000485, -0.2500851205728365, -0.22199856457958234, -0.18472517772431285, -0.13963052865849113, -0.08858642161903996, -0.03393662608047432, 0.021675176296862997, 0.0753926070343689, 0.12439692586719708, 0.16601574147591114, 0.19801520572493203, 0.2186747200522836, 0.22706340230861288, 0.22301572051669227, 0.20733249639901086, 0.18160770446634, 0.14831755194733032, 0.11048953969642317, 0.07168669241565406, 0.03556395732884077, 0.00580115502636902, -0.014363540448644518, -0.02217164937904914, -0.015730872897115944, 0.00604703969347975, 0.043215606475222046, 0.09498370810156409, 0.1596603572832862, 0.2349432027766989, 0.31800021022135283, 0.4057880743082105, 0.4951068466095947, 0.582918048940515, 0.6676881266189909, 0.7494812435127436, 0.8214419484760196, 0.8817251236557944, 0.9186767769110666, 0.7828741968963087, 0.5016867989691942, 0.394734777909421, 0.34977189669308295, 0.3133570271195376, 0.28617403453748524, 0.26825726477009626, 0.25904121282579373, 0.25719081533335597, 0.2609119971091798, 0.2678502907691609, 0.27550144157352463, 0.2811496468064707, 0.28232429590647, 0.2767303173778197, 0.26268393569728765, 0.23898644400211477, 0.20527861695114424, 0.16182710566807224, 0.10976158133835945, 0.05077378561037982, -0.012765450623620112, -0.07816197443959538, -0.14237476494167822, -0.20237201432065888, -0.2551589134044221, -0.29807628414407006, -0.3306479980490984, -0.3536548815044327, -0.33032640934799673, -0.09508439604933727, 0.1963466668935876, 0.3157539110067482, 0.3688595757708448, 0.4134222175268256, 0.4539913073344781, 0.4881300542103393, 0.5133012291870394, 0.5271184882749047, 0.5274376351892336, 0.512630973782727, 0.4817071431685642, 0.4345354527946501, 0.3719415990846855, 0.29578336397203575, 0.20895542285140944, 0.11523422403645611, 0.019158947316347152, -0.07436798175197712, -0.16028174460106026, -0.23391895110185867, -0.2911833441239251, -0.3291268038732582, -0.3459374814584244, -0.34139125550058047, -0.31656646334226846, -0.26314354370316195, -0.1810451075627273, -0.1406546180375059, -0.15794338114679252, -0.22343362080925422, -0.34228952276935853, -0.38511197178015744, -0.3685888335504326, -0.3455109358079054, -0.3382229637689842, -0.3473383491906934, -0.3690564391450408, -0.4054694993314616, -0.43846031367899085, -0.4549780154677263, -0.44195859638728496, -0.4055370014427302, -0.3445160936871612, -0.35910908738294767, -0.41910341659422645, -0.49426388109580577, -0.5581638198621737, -0.6081688085562169, -0.6481497110100807, -0.6778488941772673, -0.697312642799452, -0.7069328515079016, -0.7072839440478127, -0.6991680171836299, -0.6834449576701394, -0.6610940703046255, -0.6330363274608102, -0.6002208075911755, -0.5634379861356535, -0.5234409412559238, -0.4807526512232583, -0.43583543191245333, -0.38889811572399147, -0.3401257132251523, -0.2894891069487153, -0.23703596647566183, -0.1826955570403319, -0.12661324958672626, -0.06893177306400178, -0.010133634046689544, 0.049223027482947046, 0.1005646487636529, 0.1604602278617544, 0.2181619742387746, 0.2720496170037847, 0.31622193373232965, 0.3206909551164101, 0.13360850913152922, -0.0800455514075551, -0.10408945541230885, -0.08847086757005895, -0.06911650897609345, -0.044010220503413855, -0.013382266307778501, 0.015981688668228244, -0.0045988339240548015, -0.04923865533354377, -0.06817200625885889, -0.0378658729920236, 0.024066831385988863, 0.10536841197175306, 0.19765022651320585, 0.28246731918965207, 0.35482968539641213, 0.4122872916706797, 0.45269505614282224, 0.4746585101358196, 0.4777276685049543, 0.46258585992753787, 0.43088057624697385, 0.38525570949683763, 0.32902742932773243, 0.2660895234142904, 0.20046296450355894, 0.1361577189245573, 0.07669709595014584, 0.025044762394940356, -0.016784093466888805, -0.047643506801541946, -0.06748337291741802, -0.07709199475834927, -0.07815251288426706, -0.0728537425648692, -0.06383342358891442, -0.05375314544074361, -0.04521735706276986, -0.04041289342391485, -0.0410806053710272, -0.048283555461378636, -0.06246591370161758, -0.08336058517152134, -0.11012513302411375, -0.14135771260415086, -0.17527468455036965, -0.20978820703719103, -0.24268984297416418, -0.2717498523581092, -0.2948843796076974, -0.31025004433569014, -0.3163839020817454, -0.31227418812028596, -0.29746437745556786, -0.27207932436977966, -0.23688071497333052, -0.19322448747002685, -0.14305437666456688, -0.08877111670113536, -0.033161597550182886, 0.02082203950101169, 0.07017719039412418, 0.11213633201220308, 0.14427804081249818, 0.16482519420446806, 0.1726861142795002, 0.1677013450713889, 0.15055223784769955, 0.12290465769772552, 0.08715328326882332, 0.0464478291455408, 0.0042930275017341035, -0.035507754298647276, -0.06932383176241896, -0.09376218052567498, -0.10610704561871143, -0.10431161234397113, -0.08731242245704207, -0.054896293727390244, -0.00784256389137461, 0.05233063818673145, 0.12338195940454444, 0.202663925030647, 0.287235368210796, 0.37415929138697734, 0.4606386797990112, 0.5442230326427744, 0.6229139019583236, 0.6952418578800597, 0.7595461696328538, 0.7968286690464552, 0.640779026102468, 0.40732772581985266, 0.33202370829288963, 0.2959885724185316, 0.2687598829245621, 0.2507604971565547, 0.2419635298796785, 0.24154196270711026, 0.24811135115472727, 0.25959708482078225, 0.2735966424258085, 0.28730642684729313, 0.29796687639997277, 0.30281277369052484, 0.29953967755817246, 0.28622633430588973, 0.26175205780411304, 0.225643326795538, 0.17838401251955638, 0.12116153096912718, 0.056042255334176616, -0.014371505598319345, -0.086890737747229, -0.15812566858617316, -0.22451885627362067, -0.28270814983646986, -0.3295953263687519, -0.3659643282542575, -0.3942262605745608, -0.32944293759432064, -0.07912329153923991, 0.16937091639522706, 0.2663592301133839, 0.3275553141312759, 0.3868659904731313, 0.4430788157677341, 0.4931867106863521, 0.5341738101267648, 0.563113144205218, 0.5774587272177136, 0.5751785402551484, 0.5550302590246385, 0.5166902235976849, 0.4609199106788111, 0.3896231955083618, 0.3058047570930791, 0.21349926122521978, 0.11747015659288529, 0.02301647737900403, -0.06454861368946574, -0.14012281059816978, -0.19942787657357108, -0.2391202988197616, -0.2573329093986718, -0.25353916591376047, -0.22890220661036498, -0.18199794291666427, -0.09682454488976733, -0.010905019993394438, 0.013053480469929601, 0.024642579156284983, 0.0010501047486290993, -0.05001374111583701, -0.08229010878433618, -0.07670805709046524, -0.0656026636067879, -0.062198080413308876, -0.060276565641262714, -0.05514268411078049, -0.05610245232558331, -0.04978859749368647, -0.02894402759638348, -0.037326156368262975, -0.10244794652786693, -0.19089891527520386, -0.27955624447116767, -0.3531073032305003, -0.41445100471814555, -0.4678562956385477, -0.5126931321424817, -0.5486435971350634, -0.5757197935021328, -0.5941327757700026, -0.6043142550465688, -0.6067836722683255, -0.6021896347513644, -0.591173175779848, -0.5744341140910985, -0.5525841998836238, -0.5262416449071674, -0.49587106019920224, -0.46191421080211725, -0.42461994709301454, -0.38422356717641737, -0.34077249918748276, -0.2943630156375141, -0.24496209247063216, -0.19269620825102507, -0.13765876582928094, -0.08022649031049989, -0.02083317507565452, 0.03972481509265835, 0.08580934635836446, 0.14695715340057536, 0.20497178561736717, 0.2522909220963705, 0.24527929875323018, 0.09284099455014694, -0.0862086415862176, -0.11421299225012377, -0.1024420518213679, -0.08886611462933858, -0.07024846219551861, -0.050787803886722216, -0.08443026865889669, -0.20888554658396252, -0.30806684323081157, -0.31996982020728826, -0.26080098868559354, -0.16369751326694182, -0.064565841636127, 0.03282411416716702, 0.12574216247974057, 0.21055368340071468, 0.2838860101588274, 0.34278944211987117, 0.38505550383256004, 0.4092564566235435, 0.4150114885524947, 0.4029118200251256, 0.3746392539040926, 0.33272116484281966, 0.28049820248297186, 0.2217259511258436, 0.1604492710800769, 0.1005281660516717, 0.04551900403921816, -0.0017652345529266533, -0.03926395982238895, -0.06597705580476032, -0.08180348034880947, -0.08767435543701363, -0.08522996594608445, -0.07680380563284817, -0.06501079845586233, -0.05265929690312232, -0.04235231038973297, -0.0364150643682879, -0.03659502367140122, -0.04406414394497882, -0.05925693891447453, -0.08196082520952752, -0.11128214429928085, -0.14580144126046224, -0.18362790868130685, -0.22258328748671374, -0.2603009178099873, -0.2944084730740024, -0.3226379543268303, -0.34298947700797067, -0.35382816673220496, -0.35401690993801127, -0.3429776288480375, -0.3207787817759735, -0.2881352249258273, -0.24643383827401655, -0.19764744938251066, -0.14428860437148927, -0.08922630363208484, -0.03557760063282567, 0.013558701992384403, 0.05523486221725493, 0.08696001977978529, 0.10679490515453338, 0.11363353537276444, 0.10718992194281185, 0.0881935831826679, 0.058217868413140694, 0.019755454597303324, -0.024116924008488194, -0.06976941665422232, -0.11346699026444385, -0.15144599464297082, -0.18038052645516212, -0.197420102423834, -0.20057138340756042, -0.1886267939729951, -0.1613906382258552, -0.1194763757684516, -0.06436458741839779, 0.0018951634868145106, 0.07675101110480753, 0.15746671515218402, 0.2412416909103321, 0.3254688387208535, 0.4078446185637361, 0.4865133356834921, 0.5601343611131995, 0.6269410661977446, 0.6591308449749231, 0.4998823427166599, 0.31262655476343326, 0.2602750744625393, 0.23385834581844378, 0.2164397750250764, 0.20840278201985907, 0.20947252362012136, 0.21876938324408357, 0.2346434542741025, 0.254970918144215, 0.27705616144967316, 0.2980375571226892, 0.31483921393518965, 0.32464032096420903, 0.32483353401821446, 0.31348920933964397, 0.2892648584611486, 0.2517908693298203, 0.2014839093841161, 0.13979959578029977, 0.06893301151298559, -0.008078072346524579, -0.08774002880202048, -0.1661228211461534, -0.23927169047238372, -0.3032925261651265, -0.35482959967406025, -0.39741343509214033, -0.42208391517050003, -0.319920153033074, -0.086598524383394, 0.10736792844051024, 0.19846009158561806, 0.2713105588037532, 0.3452845565431737, 0.41711026751044855, 0.4832619159796767, 0.5401212821761252, 0.5842811405503419, 0.6126919917467699, 0.6229761656030153, 0.613584092342542, 0.5840377040833449, 0.5350361457044315, 0.4685249990911684, 0.38768238938289556, 0.2967333091948854, 0.2007888841700023, 0.10540199204376854, 0.016315264462724244, -0.06114622752502186, -0.12228487474755223, -0.16363836995862968, -0.18299335259913097, -0.17983906819625295, -0.1550871257641866, -0.1112961234952996, -0.040760700850722476, 0.06225525489061523, 0.1562961437269743, 0.20730701313668431, 0.2502762807423293, 0.2774898630594316, 0.2796081367794554, 0.28258291407391933, 0.2954986310753558, 0.3089506443578607, 0.31344289780356327, 0.31598120275351427, 0.3053879917700044, 0.2714395432254433, 0.20596477196333396, 0.1166699207114128, 0.021503964558450495, -0.06581967150742152, -0.14235546884857864, -0.21095559320570567, -0.27394062227654414, -0.330353160114194, -0.37956410730055845, -0.4212665924424932, -0.4553721103859276, -0.4820025846515956, -0.5013874363605275, -0.5138772135226439, -0.5198435304220497, -0.5197211945540943, -0.5139029926131569, -0.5028090771319054, -0.4867676825615943, -0.4661127792527182, -0.44104826301660083, -0.411782092158667, -0.3783783961538463, -0.3409395067768841, -0.29945084788127296, -0.2540151556748729, -0.20468723245974907, -0.15174817825750253, -0.09551648834815207, -0.0366325216002803, 0.024171481215119694, 0.062477271777073184, 0.11740482917890649, 0.15470578431445725, 0.11969427563610635, -0.007004271413928009, -0.11078323827707659, -0.12192210658788372, -0.11523182179731362, -0.1074924367725421, -0.09573654282300492, -0.09386754790553509, -0.22480662177061062, -0.42899976120218675, -0.5344535498809786, -0.4932398985225235, -0.41025292194760965, -0.3215583405095419, -0.22729244524738856, -0.13026929931753894, -0.03383539920289014, 0.05843227083954616, 0.1430265537751847, 0.21657571310141233, 0.2762279220724366, 0.31971841486344754, 0.34569760080087164, 0.35371256164268594, 0.3444088398594394, 0.3193635272121744, 0.2811302453871778, 0.2329097983147279, 0.1784656328016916, 0.12167980511313625, 0.06641969228316502, 0.016075036139779453, -0.026519064916082025, -0.059457600986114745, -0.08170064134962729, -0.09328869793566708, -0.09510684363180233, -0.08893083841523208, -0.07706051480035025, -0.062250065403389176, -0.047299703927065284, -0.034956057142040975, -0.027558845097837126, -0.026988549228948444, -0.034433307027213755, -0.0504227491733914, -0.07473122729158421, -0.10649409038767654, -0.14422300672092003, -0.1859751474369593, -0.2294390806437394, -0.27212351177111715, -0.3114747825898112, -0.3450603212177161, -0.37068767905905053, -0.38656530826930435, -0.39139713136628895, -0.38450357418995607, -0.3658636733155056, -0.33617654781106365, -0.29682237217223006, -0.24984787100663652, -0.19782685509135867, -0.14376934474151826, -0.09088489525742638, -0.04244218771845398, -0.0014686778843913117, 0.029383690616928693, 0.048142945122235936, 0.053573192770369094, 0.04541542152694822, 0.024301446148880412, -0.008118633992781898, -0.04943267170962318, -0.09646013724851354, -0.14565216148722515, -0.19316350001648308, -0.23531812799628682, -0.26868029003611094, -0.2904819060249588, -0.2986108802890799, -0.29191144810624614, -0.27004322880090914, -0.23361523368725123, -0.1839263664317805, -0.12295401315500065, -0.053037367862661, 0.023216885232598017, 0.10322690437959636, 0.18454403704603806, 0.26505447672155213, 0.3430562584343999, 0.4173386889014097, 0.4862093759252364, 0.5153082961747408, 0.3703447416713157, 0.2195116057470301, 0.1853371535347339, 0.16889602006786042, 0.16174408741773583, 0.16408583972257418, 0.17558993645281618, 0.1951316508184009, 0.22101508840593365, 0.2508444687665068, 0.281867977495041, 0.31091371728495565, 0.33483095273043606, 0.3504649460635685, 0.35514063178757294, 0.3466254319366726, 0.3235788049203334, 0.285442241264672, 0.23277848761983932, 0.16704331674351636, 0.09076620999950435, 0.007198455411687732, -0.07966503955555382, -0.1655170032104234, -0.24582737133390076, -0.31627296395997107, -0.37407533049805863, -0.4204041608150959, -0.4358676389135425, -0.32082164500980603, -0.123551551190614, 0.022713024814608573, 0.11411869437378108, 0.199583101916339, 0.2878159172406214, 0.3749674416714406, 0.4568767413563837, 0.5293828531584222, 0.588490115871382, 0.6307116255093703, 0.6532506841338055, 0.6543072484830947, 0.6332266268337694, 0.5906701121394065, 0.5286598884448663, 0.45051576592320686, 0.36074456748815553, 0.26470015730760643, 0.16833559313893787, 0.07764083653682174, -0.00163528990755335, -0.06462552619531081, -0.10749300288736574, -0.1279768458932713, -0.12527537350536244, -0.10037582921148802, -0.05562804713473268, 0.005158252778517003, 0.08835694787508941, 0.19289656918478082, 0.2926142108493388, 0.3780064352911374, 0.4470263050031207, 0.4968787585790868, 0.5252701772759139, 0.539163618477188, 0.542987994698918, 0.5312216965939838, 0.49682442454898545, 0.4453411956673339, 0.3753740133112302, 0.2930996243331121, 0.21181093217439706, 0.13517416303378216, 0.062142497156595145, -0.009450751365850163, -0.07794142059986697, -0.1420667933272728, -0.20091204089810488, -0.2538870613027153, -0.3006486090209535, -0.3410620919594689, -0.3751224344318089, -0.4029341473513317, -0.42464051147158877, -0.44043551781516754, -0.4504962974317044, -0.45502553331844275, -0.45417514098799616, -0.4481142468724588, -0.4369353311983257, -0.42074916937666806, -0.3995730908834627, -0.37346207080346705, -0.34238428455244563, -0.30639779748860274, -0.2655159005006267, -0.21992808339490466, -0.16984831704565373, -0.11575928782752687, -0.058151158872449926, 0.0019234976790611924, 0.01845134542471083, 0.024119528199980422, -0.030604732063788553, -0.09650350703355581, -0.12435906927416163, -0.1265497145137866, -0.12614229897885743, -0.12435768473213504, -0.1193693553239571, -0.13236243508511217, -0.33364224985623114, -0.5863068327343965, -0.6606880368053702, -0.6034274538801196, -0.5363360155311776, -0.459240293964275, -0.3735735495021366, -0.2818523978278922, -0.1869887236817629, -0.0923490511894105, -0.0014158731025073479, 0.08224528672807274, 0.15537638652353358, 0.21508828835765925, 0.25923078305371394, 0.2864096357808297, 0.2962603316638628, 0.2893490382447079, 0.2672991958343509, 0.23253790604988023, 0.18827347487661106, 0.13810406209336246, 0.08590067216582264, 0.03535028291229958, -0.010161197765148788, -0.047968991187864685, -0.0761484004724009, -0.09380680047452716, -0.10094406690733093, -0.09857423568339718, -0.08843073593150419, -0.07293983371690005, -0.05483473971165087, -0.03705231972578793, -0.022350337158338784, -0.013212059512907104, -0.011550036621055249, -0.01867985267526151, -0.03515353888108175, -0.06082257038934602, -0.09479876974637236, -0.13559153370204657, -0.18116468165124955, -0.22911722277510727, -0.2767964960508076, -0.3214929658275536, -0.3605743976389699, -0.3916713858617009, -0.4128018883835738, -0.42252611147863695, -0.42003010898437854, -0.4052263499003388, -0.3787635260999056, -0.34205026886743584, -0.2971645053462826, -0.24679033679038875, -0.19401970033896898, -0.14221789441113009, -0.09474034648223517, -0.05477345626478858, -0.025019502527398707, -0.007583060272492448, -0.0036936119919965815, -0.013710247062515002, -0.03694352013928759, -0.07182548416458678, -0.11585808694796773, -0.165946500884101, -0.2184515067433893, -0.2696285173671762, -0.31571650688735353, -0.3533865507364782, -0.379781713898097, -0.39287621189007504, -0.3914005124966584, -0.3750483649516747, -0.3442716519262703, -0.30033075359421524, -0.2450001291417614, -0.1805092330360818, -0.10923470665631285, -0.03360072537707559, 0.044167124188394524, 0.12212592145657375, 0.19875358334059712, 0.2729923795261904, 0.34332247849829756, 0.3739899503922448, 0.24755329837433315, 0.12987609379071507, 0.11243565712732462, 0.10616354557333985, 0.1094134780324989, 0.12238521374091604, 0.14452442319377656, 0.17466271126221322, 0.2108604260095106, 0.25067514190246465, 0.29107074169698866, 0.3288027730514238, 0.3603889014889865, 0.38257833147591636, 0.39234861388385855, 0.3873934061166162, 0.36608451858650426, 0.3278922367497099, 0.2732459906822431, 0.20380979002339217, 0.12220098019798442, 0.03208411157977764, -0.06224023859229355, -0.15590103411287082, -0.24392966961588947, -0.3214134914078599, -0.38615348038968555, -0.43573720106295966, -0.445921606326813, -0.34701893017432894, -0.18806629003753983, -0.07750865227053438, 0.015030341909273659, 0.11243100026025665, 0.2143127960940614, 0.3161957413204153, 0.4133390078935655, 0.5009310657223924, 0.5744567938200795, 0.6299067338597748, 0.6641354854214843, 0.6750499572516109, 0.6618690253115531, 0.6252250816497025, 0.5672210058920442, 0.4913795886317853, 0.4024253273148872, 0.30606676552327805, 0.20851430940218307, 0.11616802827019157, 0.034983630575380786, -0.029786098254991344, -0.07420379594610971, -0.09569179339284095, -0.09346688286228622, -0.068276082123507, -0.02258548733451704, 0.039972877649938066, 0.11461536472567868, 0.19960724592650436, 0.2922403483194085, 0.38210214094011263, 0.46364302737741525, 0.5308219917911936, 0.577257890796484, 0.6005570291046416, 0.6003571561905376, 0.5808027712361543, 0.5456026317021854, 0.4981028994672183, 0.4431320533019676, 0.3831492305725961, 0.31817499005287253, 0.24945748500964982, 0.17923864947310886, 0.10944311545202146, 0.04162367449818083, -0.023026370670908847, -0.08364532949414794, -0.13965376954816766, -0.19069198087986727, -0.23656138580579977, -0.27716980007801695, -0.3124822436869388, -0.34249757168553074, -0.3672108199515356, -0.38662463895064736, -0.40071243328628636, -0.40945726639389957, -0.4128024779053461, -0.4107125246570229, -0.40310434648289295, -0.38993354320467954, -0.37110823217601663, -0.34661020106628193, -0.3163869274751363, -0.28006750901752575, -0.23692956972114843, -0.18827132058486384, -0.13630168005605015, -0.08244889502751551, -0.029081638283535938, -0.09054666691545066, -0.10270090904580531, -0.11691783209899231, -0.12368842450836048, -0.12883422740495742, -0.13423536057166308, -0.1384792688364378, -0.1398923537139325, -0.1550505046900088, -0.36344482650257004, -0.6547273571777208, -0.7239177865543438, -0.6830875586679765, -0.6323078232517809, -0.5697600753750185, -0.49632093041940273, -0.41397525385681977, -0.32517988275083365, -0.23295685898558105, -0.1405854094221386, -0.05161307224554701, 0.0305242885626118, 0.10254220244195622, 0.16169883222440395, 0.2058266292505624, 0.23366079467316192, 0.2447916991281991, 0.23986755309404062, 0.22041342729037838, 0.18888188459066857, 0.1483280518290404, 0.10233440265758054, 0.054586133195667186, 0.008744702305154117, -0.03198942896610135, -0.06495719182256554, -0.08839354430433066, -0.10138036391836303, -0.10404651263659681, -0.09736188261448175, -0.08317365397309695, -0.06387292830450841, -0.04231385122577058, -0.021431297945167183, -0.004122355250692877, 0.00709500401451163, 0.01016243394811589, 0.0037159245163509436, -0.012915567134083594, -0.039605371107201526, -0.07551788803383785, -0.11911967727397088, -0.16833504338576333, -0.22063928842827352, -0.2732518486709399, -0.3232745693175514, -0.36789465014558553, -0.4045329027619782, -0.4310302337651546, -0.44577044624732975, -0.4478218753056522, -0.4369971324523698, -0.4139209387013647, -0.3799927815211519, -0.3373613248235072, -0.288772267066697, -0.23745294787220494, -0.186856820832912, -0.14049433800478361, -0.10161877551915088, -0.07306887859210875, -0.05696446157051738, -0.05463816603440441, -0.06641066841290844, -0.09167357531859865, -0.12878831738764585, -0.17534044850825448, -0.22816008896193163, -0.28371265741731744, -0.33818945864431416, -0.38795256466923034, -0.429613540968413, -0.46043180127992533, -0.4783033315205518, -0.48203213324043404, -0.4711895577405256, -0.44622896782755284, -0.4082324209686572, -0.3588952434005721, -0.3002229720148364, -0.23444812974796037, -0.16375521034780327, -0.09019299053956864, -0.015486883713819566, 0.05901552959065626, 0.13241981597817443, 0.20343662576119392, 0.2362283162251977, 0.13480454154840693, 0.05150450527213124, 0.04604185586891596, 0.049807091273716964, 0.06345031770451115, 0.08697989761764191, 0.1197968497230022, 0.16051844187081343, 0.20716818191521824, 0.2570557171659571, 0.30708709698575554, 0.3537145384616238, 0.39335860666236444, 0.42241515816863595, 0.4377459701056914, 0.43669526955981697, 0.41756930393496106, 0.37958850616163, 0.3232604222657951, 0.25019658503322617, 0.16330445993289544, 0.06643982436275664, -0.03559939304251891, -0.13754784561928624, -0.23382571205013392, -0.3190433050851258, -0.39069450990769283, -0.4442531133527261, -0.4526686591008442, -0.3985976003063314, -0.29127626945023977, -0.19607198280178295, -0.09779961333614651, 0.010677946580955222, 0.12537215236564947, 0.24122059807647211, 0.352801908598396, 0.45472111001178916, 0.5418524824529385, 0.6097424161752016, 0.6548380918374281, 0.6748244664285501, 0.6687800029136248, 0.6373457866772103, 0.5827388545407981, 0.5086628133261337, 0.4201391365755418, 0.32313205343806395, 0.2242342624388889, 0.1300782971244976, 0.04700060317568733, -0.019603719704938793, -0.06547032152862386, -0.0879917328612616, -0.08612567309723151, -0.060687393650474264, -0.0139420036430562, 0.05034343255020657, 0.12754257726183438, 0.2122658708001226, 0.2990806014328795, 0.3826191754811803, 0.45821074764237846, 0.5219336096269949, 0.5708541905769353, 0.6031557023805441, 0.6182210828649151, 0.6162916314937981, 0.598528120006983, 0.5666925885457132, 0.5230334053282659, 0.46999000700009486, 0.41006338611682747, 0.3456151133174261, 0.2787743849429143, 0.21135483124061238, 0.1448211221078326, 0.08030655924032537, 0.01862900835823078, -0.039633851906784034, -0.09410692729693315, -0.1445327435797671, -0.1907384601006369, -0.23257538070874928, -0.269902386189107, -0.3025622606041334, -0.33037658832758954, -0.3531538565816694, -0.37068168195586004, -0.3827565823691277, -0.3891611483323292, -0.38971161806630894, -0.38419716191128117, -0.37048018042436226, -0.3466891966974579, -0.3176427371043964, -0.281246305242961, -0.23359404501047099, -0.17889125110987614, -0.12738427290544685, -0.09167428337302397, -0.0848413808861661, -0.10178211905084922, -0.10916319464533597, -0.11746829762866273, -0.12755578462833483, -0.13843723897607596, -0.14865858459733516, -0.15660948323979174, -0.17008040511514588, -0.31872473935072065, -0.6354590246329395, -0.7482885155923364, -0.7273964662412078, -0.6943262265034563, -0.6484390702419721, -0.5899330981616213, -0.5202375929021619, -0.4413067052425541, -0.3557288613438505, -0.26645327391317775, -0.17684228189356954, -0.09031368720541, -0.010331303859586694, 0.05998899895397436, 0.11790818399112135, 0.1614274195786356, 0.18927317717380054, 0.20116287379088593, 0.19768569424294302, 0.18042705700033634, 0.15171412861592537, 0.11459931633943965, 0.07248721898898058, 0.02902688296651834, -0.012315281457171867, -0.04836918857937089, -0.07665107350620914, -0.09539330145982294, -0.10381463016164982, -0.10200769961873646, -0.09104874198348056, -0.07273977774215645, -0.04957398171746663, -0.024384937851231192, -0.00023020954312091835, 0.019969059662242716, 0.033547603774020884, 0.03838708409711511, 0.0329759664880116, 0.016583773106965904, -0.010767126598076882, -0.04825248335288279, -0.09435869704907263, -0.14693862798159563, -0.20338609870521207, -0.2607630710065183, -0.3160077972899993, -0.36609641969098083, -0.40825470996692026, -0.44011481593564206, -0.45989727775367495, -0.4665201916432702, -0.45971571191013094, -0.44004983891338734, -0.4089436848510073, -0.36857514870109576, -0.3217957683021293, -0.2719132216739579, -0.22252753294626615, -0.17722908522267966, -0.1394123215787384, -0.111954166993816, -0.09708394205096016, -0.09611750111850903, -0.10945679972431677, -0.13643798361659942, -0.17550046469565206, -0.2241661511594718, -0.27936558790468435, -0.3375150386052266, -0.3949351697117911, -0.44795324120869795, -0.4933190551623028, -0.5282489757072986, -0.5507483467377892, -0.5595388927606262, -0.5542355261755674, -0.5351488735101517, -0.5033198216419787, -0.4602410814262292, -0.40779866277214083, -0.3479857300407314, -0.28281609388586126, -0.21409886388617494, -0.1433732194687991, -0.07178289653442071, -0.000050918372352271035, 0.07083546873607816, 0.10768217153338355, 0.0388038417383072, -0.014611729958051711, -0.010595158192682419, 0.0029931617743308436, 0.02674679759297227, 0.060625279647858576, 0.10384278647638112, 0.1549851202992718, 0.211866404110177, 0.2717562131016482, 0.3313008816172962, 0.3868728040979428, 0.43456577694316323, 0.4706505989631835, 0.4916202432940402, 0.49469335645788926, 0.477844430631551, 0.44025867258880336, 0.3822591820761643, 0.3056098574582782, 0.21326963769093865, 0.10948046104739717, -0.0006593781825117162, -0.11130979703002808, -0.21642544282357612, -0.3099404950349154, -0.38702844013517534, -0.44348730997315755, -0.477890377870704, -0.4810830694314099, -0.4181399712850009, -0.3282021617812525, -0.22266655474849983, -0.1040954093759261, 0.02248759578626114, 0.15135055743202486, 0.2764521257355952, 0.391722880439092, 0.49150705839092623, 0.5708367840612887, 0.6258376301116328, 0.6539390514323395, 0.654145595483465, 0.6271153281298405, 0.5751980365305664, 0.5023272550949089, 0.41376905186786583, 0.31583235358665007, 0.21535962737758174, 0.11934794054482012, 0.03430919146152611, -0.0340381215474721, -0.08136104092123508, -0.10478903011848506, -0.10330850118985963, -0.07752301534621209, -0.029793467491495917, 0.036288235831669624, 0.11596124357110327, 0.2039792763137358, 0.2947514919151022, 0.383013604134268, 0.46391678039061013, 0.533543775443631, 0.5888633081586434, 0.6280199773875754, 0.650143851402321, 0.6554225686557631, 0.6448180204644043, 0.6199866923497392, 0.5829855978137264, 0.5361284023195543, 0.4817568949927411, 0.42210801494786043, 0.35919492575444156, 0.2947268462445969, 0.23010207175939534, 0.166385377739505, 0.104380952347229, 0.04464557105371103, -0.012406361238041619, -0.06648401138864146, -0.11732557182307357, -0.16469526006432922, -0.20832247520316827, -0.24791878934025524, -0.2831525844208247, -0.3136755670660867, -0.33912227070524414, -0.3591307769423375, -0.3733350437380367, -0.3756022612935377, -0.36711324237795484, -0.3414152138406381, -0.2945531482209658, -0.24789047502087502, -0.20095176688427507, -0.16205730532978624, -0.13309565588666938, -0.11090928810687206, -0.10100199822696432, -0.09870276653612287, -0.09604447329124088, -0.10797895401064928, -0.12222756012856095, -0.13790650810296246, -0.1537029343587779, -0.16816718390428242, -0.18254758168338459, -0.2506355968203069, -0.5359060632220554, -0.7314055646270576, -0.7350907566263938, -0.7203944698667584, -0.6924336415990324, -0.6507470946953702, -0.596157097280789, -0.5300983488099211, -0.454677300394559, -0.3724340666150314, -0.2864273757206721, -0.19990624247557154, -0.11633166749128288, -0.038994356855846846, 0.02900014701448983, 0.08511061771467254, 0.12736059124534949, 0.1546494903426816, 0.16668000310460807, 0.16414836337658945, 0.14855567337645414, 0.1222570544865893, 0.08815066965704921, 0.04961022721870434, 0.010091142409977216, -0.026987798504043203, -0.05864552328074124, -0.08242167941316403, -0.09669962889034678, -0.10067959293525153, -0.09456156753010625, -0.07937534590655926, -0.05700916167042558, -0.02991760453883241, -0.001033190836544351, 0.026582995889954553, 0.049877004500449906, 0.06612828403291537, 0.07306053894455827, 0.06907972072098234, 0.053310855048705474, 0.025715689034256917, -0.012961713112864093, -0.06119661686771316, -0.11682064367453115, -0.1771196662932768, -0.2390303701651968, -0.29930022219780117, -0.35471298358919334, -0.4022698004213856, -0.43940665167551796, -0.46414931365908085, -0.47528032357277095, -0.472418132984914, -0.4560933467088608, -0.4277115108585532, -0.389515403033343, -0.34441628093261833, -0.2958514688231406, -0.24750636276688764, -0.20311525630725535, -0.16613292381040257, -0.13955573852768843, -0.12562123039897832, -0.12573144710955875, -0.14025082886103546, -0.16858879645203773, -0.2091311889101526, -0.25949106253719534, -0.3165591328725681, -0.3768777146076765, -0.43675033844894307, -0.49265411743570375, -0.5413264506001134, -0.5801217116142015, -0.607003776719302, -0.6207780881099891, -0.6209590707105948, -0.6078577568617245, -0.5823455139985834, -0.5458282585184167, -0.49996808625170175, -0.4466043848352399, -0.3875051032387855, -0.32429222616728737, -0.2582744574819973, -0.19040849302981933, -0.12123233213960383, -0.05135523995325464, -0.0077814992255369475, -0.04182201899773652, -0.06828658041159308, -0.05531443087705412, -0.03233390839175776, 0.0011318147835375214, 0.04487999423543876, 0.09809271384562557, 0.15918164346846453, 0.22593453698989574, 0.2954097686924948, 0.3641986718516801, 0.4283951392349774, 0.4839835426122385, 0.5268854940989052, 0.553445346505798, 0.560512336102694, 0.5459445975207766, 0.5086401867220971, 0.4489446405922859, 0.3685312552707041, 0.27060765825964594, 0.1595864908590201, 0.04105142554347552, -0.07875632722503667, -0.19316074355292123, -0.2949695143239559, -0.3731861448246683, -0.4434910727339485, -0.5315727232064518, -0.593388468552309, -0.5587198390992185, -0.4694362348015382, -0.35716171456379087, -0.2294704807136565, -0.09200167249757207, 0.04889275910840851, 0.1864668253281323, 0.3140533877328444, 0.425390458476798, 0.5150893651334911, 0.5789048307233546, 0.6140996237332201, 0.6195903759471966, 0.5961074804404696, 0.5461550849077961, 0.47389098184285317, 0.38488162888196165, 0.285697496067133, 0.1835230977225546, 0.08555960198005064, -0.0013700501537761145, -0.07144634422339702, -0.1200819880647852, -0.1444045089242188, -0.14319296458836583, -0.11711640132504741, -0.06835579738606246, -0.0006040383936993798, 0.08153820844844395, 0.17270388795617286, 0.2674322632192361, 0.3603180517151241, 0.44659258785025013, 0.5221718732268172, 0.5840394678671865, 0.6301483060020008, 0.6595767141572306, 0.6723076223563611, 0.6691985173333919, 0.6517079141282167, 0.6217591182987539, 0.5814952557944189, 0.5331201330852631, 0.47874305426967023, 0.4202558899219593, 0.3592909046816972, 0.2971565528732869, 0.2348925871046621, 0.17325399090377847, 0.11282201750530829, 0.05400745736128254, -0.0028289479448231347, -0.05738244839329942, -0.10930792304671699, -0.15824965285210768, -0.20378067062229976, -0.2454535430070406, -0.2827688767320371, -0.3152294692980795, -0.3411967442495456, -0.3452279225728301, -0.3158676105215714, -0.264698019362104, -0.20223788091434747, -0.15506461481138878, -0.1224909191760446, -0.09599969244664219, -0.08315730440132096, -0.07876155894213888, -0.07758900284222747, -0.08040318514519385, -0.08685512162454678, -0.09550490829172986, -0.11266376527316702, -0.13209017988408078, -0.15268035069151775, -0.17307223892259316, -0.19190881327540765, -0.22244391813565123, -0.3926984921706804, -0.6518590746865058, -0.7075283782814519, -0.7104054017425332, -0.7007725030486143, -0.6770331891378494, -0.6392272085399788, -0.5882663566623298, -0.5257513463291654, -0.45376886810628414, -0.37499779307002257, -0.29241348507887555, -0.2093351728718862, -0.12906496063230666, -0.05489103688677677, 0.010291276214075662, 0.0639825117176831, 0.10441718835817948, 0.13052181083181624, 0.14215694003134294, 0.13998359561775797, 0.125575600322968, 0.10117226760954079, 0.06966368653094934, 0.03424592754267264, -0.0016774371290690926, -0.03488273800492703, -0.06243527435939922, -0.08204189359604008, -0.09209192422823476, -0.09190265177234636, -0.08163718847840751, -0.06240358466272411, -0.03603993241145864, -0.0050756636357438545, 0.02757764280187902, 0.05875208417135003, 0.08535739232250705, 0.10452364246090573, 0.11388722090410996, 0.11168744347714893, 0.09695254995863734, 0.06951208425075173, 0.030061779471576733, -0.019918527626002103, -0.07821482443682193, -0.1420441918578743, -0.2081943348635713, -0.27324618424602454, -0.33376464637094383, -0.3865409981238672, -0.4287853833485489, -0.4583415268619664, -0.473824301233281, -0.47475634149027846, -0.4615979373446173, -0.43576721914181293, -0.3995312508688169, -0.3559019198329141, -0.3083950606530643, -0.26083620145811715, -0.21703705407773155, -0.18058294202012282, -0.1545054093950169, -0.14113902197807893, -0.14187087773525897, -0.15713901771765015, -0.1863113633324449, -0.2278551261973043, -0.27934956214479545, -0.3378012240374706, -0.399745684005373, -0.46163753394289664, -0.5199648154345171, -0.5716220831367531, -0.6139596275838515, -0.6450599567285273, -0.6636727013866279, -0.6693544611743683, -0.6622879304946903, -0.6432954527076866, -0.6135867656097238, -0.5746955272855896, -0.5282236258475681, -0.4757609526718394, -0.41868697936433463, -0.3581170375599001, -0.294793511556259, -0.22907318541214572, -0.16116035573764798, -0.10902440599934593, -0.10814259846038965, -0.10863439633145333, -0.08717701316939852, -0.055332270959613794, -0.012773750304978293, 0.04025774249089764, 0.1027995054769395, 0.17324275147458934, 0.24920942313930716, 0.3277258255564295, 0.40516253699810534, 0.47753320857575865, 0.5405215465716404, 0.5899089449292427, 0.6216770173569175, 0.6325166123158936, 0.6199392084870284, 0.5827622332234697, 0.521119378352382, 0.43679169939771434, 0.3330135921609134, 0.2145559396193235, 0.08729449236291309, -0.04195687536152093, -0.16604205877793277, -0.2737604260111226, -0.3526285629630195, -0.4482891221998777, -0.6289126126464986, -0.739101748843936, -0.7093624982160769, -0.6162783800288345, -0.49816220646741094, -0.3622879214304593, -0.21487208838029304, -0.06295921956543715, 0.08606723305306474, 0.22486598053660956, 0.3466626191685407, 0.4455873581170877, 0.5171272472102313, 0.5583454282427791, 0.5681561342786265, 0.5473590334358933, 0.4986505891383084, 0.42643844154124366, 0.33655713117692887, 0.23589417060136375, 0.13186599995921044, 0.03196988462670647, -0.056839043449558035, -0.12850268663372327, -0.17840656609120764, -0.2034880780543924, -0.20257096378155448, -0.17615559134447745, -0.1265002484156641, -0.05713435168780823, 0.027252866319715796, 0.12144515429079483, 0.21988066862802214, 0.3172673590673307, 0.40871023246743743, 0.4901753384459475, 0.558486356450155, 0.6115716665213773, 0.6483217457310282, 0.668628474358937, 0.6731525590867484, 0.6632181016105436, 0.6405675525770516, 0.6071949092792348, 0.5651606690242694, 0.5164355999162789, 0.46281845559312185, 0.40583079869375993, 0.3467411467638595, 0.28651540899045, 0.22591833122927607, 0.16549756107099256, 0.10571759781760104, 0.04694611055492137, -0.010420216547050831, -0.06599109369619227, -0.11928729130313831, -0.16980504595437984, -0.21695257313494054, -0.2601257210783554, -0.2952042484249724, -0.2985286497459976, -0.22555794634051818, -0.1464610498154344, -0.08894199118289636, -0.05798502874607969, -0.053895311452468064, -0.05062347038308079, -0.050625574722626965, -0.054202217402580466, -0.057546579075936855, -0.06265584615002062, -0.07042203931885105, -0.08130794526694185, -0.09915468679950834, -0.12098887622655852, -0.14517100365632718, -0.17045451361619257, -0.1952910483737469, -0.22022884613165683, -0.2844136777512505, -0.5021114912525428, -0.6413967505592657, -0.6658678223776824, -0.6742797273021477, -0.6688501119123922, -0.648802783396772, -0.6144469276697515, -0.566861609527455, -0.5076534201893337, -0.43907311055673603, -0.3637539112611854, -0.28477531793517863, -0.20532879299034934, -0.12873649296450518, -0.05808401097934057, 0.003778665325187891, 0.05458577264869291, 0.09263115948913136, 0.11704546173717101, 0.1277041502574523, 0.12539329661369059, 0.11162024607297549, 0.08865475067563289, 0.05924055808073092, 0.026533864231467752, -0.006250820483598485, -0.03595009416947481, -0.05980934369729052, -0.07556757441160933, -0.08174696642063228, -0.07764739349443728, -0.06351249650851443, -0.04039924628170122, -0.010202562520272296, 0.024590545291498234, 0.060992254113147126, 0.09582618998678955, 0.1258771466213362, 0.1482011239045553, 0.16026676030092474, 0.16019929776899605, 0.14685927173502944, 0.11997861419743028, 0.08014588912434228, 0.028820102876110143, -0.03178361738640323, -0.0987925902795106, -0.1688756725599565, -0.23842428313630615, -0.3038033361487793, -0.3615673162900568, -0.4087139933841826, -0.4428744813311649, -0.46251096402878966, -0.4670166313871782, -0.4568038682981803, -0.4332656800220427, -0.3987269622559415, -0.3562553355870235, -0.3094915934981981, -0.2623452516216038, -0.2187660764404924, -0.1823995294799734, -0.1563892860576177, -0.14308170373844842, -0.14394510186767906, -0.1593927483349411, -0.18886829637340685, -0.23081132568558416, -0.28290410067662575, -0.3421512952156507, -0.4052322645820059, -0.4686275568987739, -0.528991265617992, -0.5832447201234632, -0.6288841308662496, -0.6639794555559932, -0.6873616291072784, -0.6985045930342935, -0.6975821243220439, -0.6852573970095026, -0.6626430528767049, -0.6310558754959512, -0.5919368801411302, -0.5466349199013454, -0.4963384567129676, -0.4419322430732393, -0.38396779049588936, -0.32260776530277546, -0.2576397267002477, -0.1959955255133483, -0.16028901905677628, -0.1356781667973248, -0.10629298343891591, -0.06628737150776409, -0.015343858653825038, 0.04617478230007421, 0.11728285472671729, 0.19624324720815522, 0.28066065523081285, 0.3673972568601087, 0.45277472863697366, 0.5325702581989997, 0.6023562454180169, 0.6575941639569898, 0.6941020893763192, 0.7082122092233538, 0.6972905459775006, 0.659860174774344, 0.5960398863779415, 0.5075033708592933, 0.3977000127623178, 0.2715574909511371, 0.1354185020480596, -0.003504195842541691, -0.13730984489689213, -0.24531604182067923, -0.31978732455823433, -0.49818903120466373, -0.7804368096479859, -0.9017655444109707, -0.8623517139931387, -0.7651690178106989, -0.6419114441800442, -0.4972033739857302, -0.3379852638120546, -0.1710105816624381, -0.0037861179275857637, 0.15603474965223008, 0.29726064581959477, 0.41260313328688447, 0.49636383729924116, 0.5448570846481733, 0.5565425473006984, 0.5321655343669569, 0.4746476656242393, 0.3893692025314919, 0.28471755538565535, 0.17090196793568513, 0.06495385920082253, -0.036901700790251124, -0.12748641653019116, -0.2006890584905524, -0.2517289472976685, -0.27757320583680656, -0.2769023284387431, -0.2502812364338669, -0.19981873335960643, -0.1291112991251846, -0.04269037602094361, 0.05416179801692156, 0.15602473554761254, 0.257524597064263, 0.3538567766227363, 0.440871012372976, 0.5154060396561526, 0.575234291666332, 0.6191832207201964, 0.6469621779118029, 0.6591089233110878, 0.6567637866652039, 0.6415161199614214, 0.6152018641085286, 0.5797282642164365, 0.5369531676949411, 0.48854407025884505, 0.43596275983304267, 0.38038026741966924, 0.3227542097384424, 0.2637891866830975, 0.20406963317783067, 0.1440366036526446, 0.08413305392906123, 0.024766761988684216, -0.03356363948325991, -0.09033733139288125, -0.1449159251679779, -0.19663902034864067, -0.2419992592818666, -0.2434900102828359, -0.1414120327301136, -0.039596715210620026, -0.010326262735408598, -0.008228552190338245, -0.01714845531050191, -0.026068504338197407, -0.032050638118588104, -0.03683579346186061, -0.04099370138297065, -0.04647639682889171, -0.05443277649519995, -0.06564148259994251, -0.08055163431938084, -0.10529513629210285, -0.13144139770953878, -0.16009637398611432, -0.18983772787600017, -0.2189345527275819, -0.25133309809873605, -0.3459656653257639, -0.5249686186288152, -0.58962722661661, -0.6153862436058386, -0.6278253832355101, -0.6258734654690628, -0.6089891648278813, -0.5777092766445786, -0.5331351155442419, -0.4770521189257191, -0.41170352616097516, -0.33986074920042975, -0.26451848591168003, -0.18892180610674703, -0.11621756503068048, -0.04945925599063283, 0.008739505535760639, 0.05618964433789442, 0.09142280617934917, 0.11362839096453703, 0.12285872409460508, 0.11988756955097024, 0.10630198696140458, 0.08426976526230007, 0.056522965500130695, 0.02604926584504308, -0.003997500769003293, -0.030638394954419335, -0.0511728967476901, -0.06349008578428661, -0.06612047412056432, -0.058456221787090534, -0.04070086030575282, -0.013960610942344354, 0.019924596463352595, 0.05841916182051854, 0.09855619843647884, 0.13706822757836584, 0.17069303366207234, 0.19633739186185256, 0.21135930099640204, 0.21370239450257061, 0.20209811602284966, 0.17612233546938416, 0.13628216499341983, 0.08396848644453025, 0.021417346890134414, -0.04844376658028171, -0.12214490451995585, -0.19591170777225342, -0.2658854375277997, -0.32840015434276726, -0.3802129943550203, -0.41875720184127996, -0.44230991182410495, -0.45015388794160405, -0.4426172548723506, -0.42109570114498274, -0.3879301807279272, -0.34628329605982344, -0.29987090044633335, -0.2527387477051446, -0.20891399937773691, -0.17216917178523305, -0.14568746416963885, -0.1319107639881828, -0.13230464039864787, -0.14735977920934118, -0.17650171891369082, -0.21826235441230457, -0.2703245069453768, -0.3298244514160604, -0.3934750825748816, -0.4579226208864777, -0.519870515175064, -0.5764044114475979, -0.6250465842782322, -0.6639825838711415, -0.6920075258448453, -0.708626726649527, -0.7138982652752945, -0.7084236483629649, -0.6931292003723968, -0.6691943310143937, -0.6378321629838659, -0.6002101606680217, -0.5572820961928286, -0.5097393930965275, -0.4579208723524708, -0.4018075080776917, -0.34077871334048737, -0.2692450023121964, -0.19894295672169982, -0.15036260051975248, -0.11374466437376896, -0.06635485090274962, -0.007895665449836997, 0.06123754243501267, 0.13995847216772006, 0.22651690289439586, 0.31840157564963434, 0.41245047959534453, 0.5048158470384418, 0.5912003308224616, 0.6669221538981356, 0.7273016495606193, 0.7678285607496145, 0.7846649272681416, 0.774847486549459, 0.7367955902514849, 0.6704173130230626, 0.577465010675903, 0.46140671969296676, 0.32750253669668883, 0.18237898658225404, 0.03380636001364934, -0.10798695636008837, -0.1991297029250596, -0.3150194676992175, -0.6204801284681842, -0.9534765225356896, -1.0590872986970332, -1.009417515545401, -0.9055584031290618, -0.7732204548564088, -0.6068690921686652, -0.4155961666167478, -0.20852182273433506, 0.005683255944301635, 0.22543976179790803, 0.42564518927406425, 0.5867423871300321, 0.7005652897028707, 0.7620297180145332, 0.7692808445605497, 0.7235092365323545, 0.6281066592941693, 0.4901531456679207, 0.3258740033575731, 0.1395262922217142, -0.01168031828434335, -0.11547010617213166, -0.20781761977274188, -0.2824677048528311, -0.33465363227382516, -0.3612326829738941, -0.360944780535732, -0.3342356058603948, -0.2832721704478778, -0.2115045159022526, -0.12350599135760554, -0.024402415201266514, 0.08034487184807837, 0.18548969015226824, 0.2861606028031085, 0.3782691462189254, 0.4585431815160268, 0.5247337973626482, 0.5755156400008508, 0.6105014934078365, 0.6300551205921963, 0.6351716001314394, 0.627274305614498, 0.6080380417462772, 0.5792380366704224, 0.5425829018055648, 0.499657167346359, 0.45180216586126765, 0.40015810444735234, 0.3455971170210077, 0.2888402845774545, 0.2304211460946881, 0.17083757570646796, 0.11051365584167794, 0.04994888063974079, -0.010348072128578245, -0.06973435168081843, -0.12753807524810834, -0.18247323137970817, -0.20011332078699895, -0.0930462092876646, 0.02376372847399666, 0.036922089172042316, 0.021332493566959876, 0.0036819923463413673, -0.009564562118893782, -0.017744479150702208, -0.023263083347246916, -0.027651597437349018, -0.03266203777399301, -0.03975131508407159, -0.050030910844284904, -0.06423233150555951, -0.08269738448859965, -0.11249474253956215, -0.14257022470722003, -0.17538196576308085, -0.20931061485556235, -0.24250378597416766, -0.28212981646167634, -0.38469899881809333, -0.4837400267847638, -0.5272653186358465, -0.5569353426430776, -0.5727913389966668, -0.5736611551912203, -0.5594901899692255, -0.5308401715139679, -0.4889905872017699, -0.4357505282774654, -0.373528339350339, -0.30505817792827594, -0.23342667493038904, -0.16174664502553893, -0.09316058166873442, -0.030504234735387548, 0.023685351681971056, 0.06747203623713882, 0.09947760969515862, 0.11911145969857306, 0.126465643378469, 0.1224467091514746, 0.10859258517939552, 0.08710077731251126, 0.06056952576006558, 0.03194080706257485, 0.004191877258276078, -0.019764786669173473, -0.03739202354255233, -0.04661392260823649, -0.046071131513327535, -0.035136808545473075, -0.014067945586296315, 0.016084375620624425, 0.05345017633333338, 0.09553844526439204, 0.13932637068477882, 0.18153325534981524, 0.21878043474222408, 0.2478856567904495, 0.26603372412181714, 0.27102954815646774, 0.261420077275551, 0.2366540902537448, 0.19711011597800243, 0.14413152482895475, 0.07993764316364049, 0.007529034509124122, -0.06951359666666024, -0.14722949732492108, -0.22155670440175257, -0.2885834990757168, -0.3448432152537655, -0.3875407100635657, -0.41478634358836697, -0.4257170460941664, -0.42060101585543785, -0.4007960151694925, -0.3686927491729928, -0.32750170106403065, -0.28105895565647976, -0.2334913050586085, -0.1889616861579737, -0.15130545611470314, -0.12381873806116817, -0.10896591933906297, -0.10829958261807104, -0.12230680211316458, -0.1505006856843989, -0.19141702621028078, -0.24285752055996124, -0.30199443182717145, -0.36569917778317684, -0.4306814018245455, -0.4938183515677683, -0.5522533033742221, -0.6036519934347035, -0.6462090510499507, -0.6787896814111454, -0.7008308023625149, -0.7123670028464346, -0.7138519643252623, -0.7061032930611386, -0.6900955897435921, -0.6668761778785779, -0.6373843647635464, -0.6023841873145201, -0.5623465335362674, -0.5174232604654403, -0.4674034070056834, -0.4112850214429997, -0.32970920302766693, -0.22524494218199465, -0.15439840075169542, -0.11130679029199264, -0.05742781468736524, 0.007618906393169311, 0.08335555412841167, 0.1686766497871357, 0.2617520063294574, 0.36005933589032146, 0.4603269931771692, 0.5586662187659304, 0.650599695261949, 0.7313415471387916, 0.7959444037868586, 0.8397367254044878, 0.8585626358282585, 0.8493065728186866, 0.8101177605018384, 0.7408724502127138, 0.6432233295786669, 0.520830197691057, 0.3791061420461963, 0.22512156455379895, 0.06720651764197427, -0.0700773603105489, -0.15850901980043552, -0.3578471132609735, -0.7965302702336814, -1.1513928747973772, -1.2263718629406064, -1.156170871055469, -1.0243640541726027, -0.8354545145873313, -0.5934798164310227, -0.31255590954959267, -0.016230948630372666, 0.2682820621857349, 0.5258479121365855, 0.7544828263525041, 0.9345769919550992, 1.0541864957894047, 1.1088686602091116, 1.0977139711196795, 1.0233715347347685, 0.8878429562830581, 0.6956692854345086, 0.4787168688352992, 0.2455805471427277, -0.02806254459299662, -0.1976319947099528, -0.29173055090211397, -0.36788000009926725, -0.421236149955474, -0.4487114812545352, -0.4489674775569301, -0.42250944077621266, -0.3713878239854642, -0.2990846531412541, -0.21002056264664315, -0.10933187205688633, -0.002326548406347939, 0.10573017585504552, 0.21007475278816656, 0.3065609486884471, 0.39194615136418953, 0.46387283128100965, 0.520960045207552, 0.5626719654735606, 0.5892497097513356, 0.6015265091871909, 0.6007678530700993, 0.5885035388738951, 0.5663478607683148, 0.5359037173679928, 0.49861470398231234, 0.45576569916323884, 0.40838698538849183, 0.35734273680731476, 0.3032769021936428, 0.24675775373331188, 0.1882365101885739, 0.1282092343871728, 0.06715639007306473, 0.005692374167769909, -0.05553487019304093, -0.11571103932220006, -0.16218912257840845, -0.08494061888062998, 0.04607758931278483, 0.06668567537433934, 0.04101343705054916, 0.01827273363998727, 0.002494140136590106, -0.0073477496946141585, -0.013587083559687851, -0.018005673244076092, -0.022234042538326726, -0.027782424335968336, -0.03606251472243649, -0.048158525185803214, -0.06482795774429029, -0.08633786964735801, -0.11923928644264237, -0.15286655191722343, -0.18949280622488196, -0.22733914543337796, -0.2627615795848808, -0.29326032009676517, -0.36589191755996, -0.414918887204343, -0.4599844559103392, -0.49296371814938134, -0.5113460904039036, -0.5145550773378353, -0.5026146496713215, -0.47624636926384634, -0.4367717112130629, -0.3861784581771883, -0.32688188709738175, -0.26174381132302993, -0.19377079639839034, -0.12610841624881175, -0.06171897494216916, -0.0033786517642877545, 0.04662218250292138, 0.08645242141984288, 0.11498153469148342, 0.13170195139213803, 0.13688767992892736, 0.13145134149910592, 0.11700984527306518, 0.09567290800421091, 0.0700225414886102, 0.04284585890746018, 0.017054409255296332, -0.0046072245749507745, -0.019658807866000716, -0.026153495099961233, -0.022739976053542277, -0.008859142418492838, 0.015274527389675052, 0.048585848259248166, 0.08926181207187045, 0.13478438691969918, 0.18214994342445112, 0.2280004187835769, 0.2689016929268053, 0.30152529581300946, 0.3229290633502263, 0.33072844176651006, 0.32331881445456856, 0.2999774819490628, 0.2609776113948692, 0.2075774022061344, 0.14199791689961283, 0.06728213151560647, -0.012859869720064587, -0.0943053366036577, -0.1727666681155049, -0.24410678003287511, -0.3046072061055747, -0.35126442515108725, -0.3819879900091765, -0.395792533008283, -0.39284618975735164, -0.37449922789830437, -0.3431455481813144, -0.3020833886408292, -0.2552156582679208, -0.20680158572644314, -0.16107961226349254, -0.12201276997764476, -0.0929435933701982, -0.07643856266755511, -0.07406531930405635, -0.0864013627833089, -0.11297025609358036, -0.15241734893830516, -0.20258057194249535, -0.26078025627719015, -0.32395793860939515, -0.38899883331480245, -0.4528609739984364, -0.5128516486548298, -0.5666858195991056, -0.6126637425608044, -0.64963066428278, -0.6770398361264531, -0.6948226445828842, -0.7033573725591262, -0.7032885933432595, -0.6954461524778965, -0.6806651072276306, -0.6597037513847201, -0.633107157701172, -0.6011587172170643, -0.5638085807808721, -0.5206714777433508, -0.47039200017964156, -0.3784442399241552, -0.24058144827169947, -0.14997871516633765, -0.10125951430703317, -0.041830735434526645, 0.02878422505147782, 0.11007457951026645, 0.20087802488193596, 0.29935387837257643, 0.4029167601319372, 0.5082769032281842, 0.6114357543429492, 0.7078508269574666, 0.7925444113349709, 0.8604383208661286, 0.9065911346478188, 0.9266834654502887, 0.9173172525990476, 0.8765360046649016, 0.8040344761193736, 0.701531195570615, 0.5727149995949481, 0.42330973145533957, 0.26112906515325207, 0.09694514137065013, -0.019865091319527295, -0.12582843719392223, -0.5111074719283017, -1.0796297929580074, -1.394408916703183, -1.4524513365542209, -1.3461955178631833, -1.1437573620331172, -0.8812485014426699, -0.5545011035539886, -0.19821161793682762, 0.1493548698356939, 0.4721323399032098, 0.7418537271890013, 0.9578497181221222, 1.120396368821785, 1.2238726012410996, 1.2654861378506297, 1.2456415717899185, 1.1688279398616834, 1.037014291330607, 0.8462289956664537, 0.58841352936662, 0.32788465699069436, 0.04852245021438467, -0.23361178105160496, -0.3730971026191767, -0.4508531856642095, -0.5055910673779129, -0.5341870199342198, -0.5353676276503725, -0.5095654130251952, -0.45886602105865126, -0.38662290059552884, -0.29725184167800656, -0.19572837625561945, -0.08734101002861028, 0.022789712645345794, 0.1298962999351838, 0.2299149481203635, 0.319548788601681, 0.3964367191920033, 0.45909000877874817, 0.5068878870876432, 0.5399291156962578, 0.5589064827149288, 0.5649386459875299, 0.5593929844614669, 0.5437606687726078, 0.5194888419425681, 0.4879392676218455, 0.45026486395819454, 0.4074607321418755, 0.36028876134073684, 0.3094017067342776, 0.2552945092882499, 0.19846661608060057, 0.13936728131783216, 0.07856181897202097, 0.016641841748316732, -0.045625510916352585, -0.10601494345328755, -0.10366821045463959, 0.02692802806268535, 0.07785454508259249, 0.05487394586923244, 0.028572722026828812, 0.010755570293416561, -0.001011272922752049, -0.008484785716844856, -0.013023186194372371, -0.016240199234651254, -0.019749249608286057, -0.02520552030403378, -0.034012832802735815, -0.047347017536850444, -0.06591258517504262, -0.08998173784346442, -0.12406580727409011, -0.1608499629380704, -0.20097962828796856, -0.24239674918042908, -0.27681597765767574, -0.2788264335830135, -0.3009115945454406, -0.3406601717058084, -0.390276688616229, -0.42578534783461297, -0.44609971341783705, -0.4511657817393866, -0.44108494782871466, -0.41662302011430086, -0.37927653750568435, -0.33107403060777063, -0.27458453483061507, -0.2126432015274511, -0.14832898521300408, -0.08465833829935177, -0.02456430491313566, 0.02939653392845698, 0.07503604977844047, 0.11077874412166122, 0.13560659639876477, 0.14923213466841345, 0.15198659017499871, 0.14491200611274885, 0.1295901991210423, 0.10815526251048374, 0.08306910576036175, 0.05706824156696155, 0.03290383557161802, 0.013251226120038151, 0.00044696004335809114, -0.0035976301738785965, 0.0023808026115413883, 0.01896108606656921, 0.04589775073499558, 0.08217113310601232, 0.1259583692240802, 0.17478447790304696, 0.2256053561096889, 0.2750447766004973, 0.3195607822741213, 0.35572634798214353, 0.38042665988021196, 0.39112413464926177, 0.386022609017994, 0.36425480450868075, 0.3259533592571744, 0.27231184437331746, 0.20552218090646013, 0.12868809263146774, 0.04562197209329555, -0.03937121615288186, -0.12180255948358454, -0.1972844317134026, -0.26187011822064754, -0.3123158400100454, -0.3463557421529728, -0.3628428531376806, -0.36187520677626406, -0.34474871014477104, -0.3138974666180794, -0.272653421893178, -0.22503270538350972, -0.1753668211889685, -0.12802776295645923, -0.08704161178359215, -0.05586868105522669, -0.037109997500886616, -0.032432968073420554, -0.04243563929217631, -0.06674759737709479, -0.1040509637153022, -0.1523215019996944, -0.20895100679311795, -0.27105281410317295, -0.3356074299299765, -0.39975000280172956, -0.4608701024633346, -0.5168191655923495, -0.5659241713283443, -0.6070868576739858, -0.6397059863535999, -0.6636752252284017, -0.6792393329507558, -0.6869249047508097, -0.6873741240700673, -0.6812548412908983, -0.6691163657448227, -0.6513197888733249, -0.6279452729540242, -0.5987657115509837, -0.5632142779720954, -0.5196380360974935, -0.41642351041725334, -0.24633540702554768, -0.13956183059517713, -0.08610557697515908, -0.022116941402764212, 0.05302580880387353, 0.1387668257976813, 0.2339231624688658, 0.336622189265956, 0.4442695023235501, 0.5535231099397411, 0.6603503356626792, 0.760093628400254, 0.8476830910734208, 0.9178409278923834, 0.965478593346802, 0.9860226555064617, 0.9759334076181174, 0.9330349343588065, 0.8569910033452599, 0.7494509452261837, 0.614282825672082, 0.45823486566263716, 0.29414687836307785, 0.13850872640792744, 0.04347538756033842, -0.2306699926869502, -0.9322397793803372, -1.5917260250887768, -1.840963439607929, -1.8036742340961034, -1.5897935714240656, -1.277010729089783, -0.9322524151714653, -0.5825004075288547, -0.23180118514633463, 0.10114098599737176, 0.4052898383065955, 0.6733929880856451, 0.8933045971699194, 1.0583336834749826, 1.1646134505215455, 1.21130974058255, 1.2006593383261324, 1.1397200127699705, 1.037471061656839, 0.8938864788582801, 0.6658788598556425, 0.35754031159901867, 0.05997116477906772, -0.24429237343852295, -0.43530756577129104, -0.5257563112605705, -0.5821805553337529, -0.6123289799916485, -0.6149044825997318, -0.5903860233504261, -0.540772130065978, -0.4694116740161949, -0.38057377406757986, -0.2791909270210029, -0.17038702493559832, -0.05923991332907441, 0.049611772803459075, 0.1521077228390615, 0.24500420524726785, 0.32588522361408057, 0.3932272780333559, 0.4463026826007388, 0.48510229099312596, 0.5101849591811041, 0.5225187198645376, 0.523340549292004, 0.5139802360050529, 0.4957823640109442, 0.4699598215195664, 0.4376033654651508, 0.3995830987822, 0.3566414389917627, 0.3093324255949721, 0.25817187538187536, 0.2035855380006888, 0.14608205752900538, 0.08617653261926916, 0.02455821039320316, -0.03805608845600972, -0.08967294078457178, -0.03036431728274236, 0.07063070765750812, 0.06367227819570198, 0.035382092297389756, 0.015188876272131835, 0.001154030762185121, -0.007746640975733743, -0.012602516822610044, -0.014912196787597587, -0.01628003081970375, -0.01850368699140592, -0.023233302511860288, -0.0320224375434246, -0.04601310488304655, -0.0659847740476005, -0.09211569488213467, -0.12561696039309833, -0.16522839399744882, -0.20853609876118995, -0.2517775104647306, -0.273942247432835, -0.23835659373107454, -0.2208781893996674, -0.2688368015647873, -0.3207080443984536, -0.35793604361184883, -0.379774011842521, -0.38633189387894085, -0.3777414405612354, -0.3549219247019093, -0.3194292795259974, -0.2734570133942351, -0.21959442097485526, -0.16078394675229601, -0.10003269146516947, -0.04036568813069841, 0.015459491540331216, 0.06496975968721008, 0.10621949261047037, 0.13775848471335428, 0.15881051291086784, 0.16918669815495313, 0.1693924189311436, 0.16048831628361587, 0.14412716035199608, 0.12236789613429477, 0.09765012212410262, 0.07257081586156722, 0.04981232387706569, 0.03190065511018558, 0.021114551234547974, 0.01925659551643344, 0.027581644072715572, 0.046620536327897644, 0.07616873443366723, 0.11519983019924296, 0.1619447097997826, 0.21391552024361338, 0.2680827813766513, 0.32100349035380216, 0.3690745374884161, 0.40872909408605795, 0.4367181114794976, 0.45031588155221147, 0.4475652555542582, 0.42742345638665813, 0.3899065833222809, 0.3361149534444561, 0.2682313113186159, 0.18939253514870846, 0.10353281436799855, 0.015111998069193389, -0.07115693742948626, -0.15066364717996317, -0.21920404650950065, -0.2733234917929317, -0.3105431908879295, -0.32958695498948476, -0.33043592810276756, -0.31436877836485255, -0.2838042060213892, -0.24215187729323606, -0.19347853635401324, -0.14224138807505948, -0.09287923338976167, -0.04954626917999261, -0.015752592907314567, 0.005788825237826201, 0.013378396445276497, 0.00630973192538864, -0.015085471064837819, -0.049619747188833774, -0.09533844088566434, -0.14979840482844642, -0.2102148430767392, -0.27375168500626756, -0.33765069766713385, -0.39946278936495094, -0.45710802123055405, -0.5090085847825643, -0.5540618766164576, -0.5916702182433582, -0.6216397394626947, -0.644130249257711, -0.6595137845194836, -0.668285099814443, -0.6709212010541403, -0.6677952229051209, -0.6590708759961288, -0.6446511086254638, -0.6241242310833872, -0.5967615619286164, -0.5606673024088416, -0.44436343436464476, -0.24370659531732386, -0.12562395067551968, -0.06836138811555514, -0.0008101318273130431, 0.07781061336030248, 0.16690730404985032, 0.2652817785013326, 0.37104850728950645, 0.48160174960410274, 0.5935832220648294, 0.7029119341450993, 0.8048734336000294, 0.8942755219467031, 0.9657243677748735, 1.013934149740649, 1.0341853111622505, 1.0227225437946297, 0.9772768275682182, 0.8973812653506075, 0.7847511271602299, 0.644287921124373, 0.4928161788984413, 0.34655514466440884, 0.19831925188403687, -0.0768699021853525, -0.8045796878658287, -1.739297936537163, -2.219053172160123, -2.198279885469818, -1.988141288859529, -1.7199247709647665, -1.4104828431843686, -1.069196919253658, -0.7117306990027483, -0.3536831690057163, -0.008690454276734982, 0.3083874893948586, 0.5850969670301689, 0.8114438510774873, 0.9803203084609962, 1.0879099671854071, 1.1336758495264885, 1.1203625117326006, 1.0540985422665625, 0.949302613358971, 0.8250903085925894, 0.6619786654215705, 0.3936564341549651, 0.05686588640272183, -0.2717810027637624, -0.48749716426904843, -0.5876950261777356, -0.6462922839567047, -0.6785283595833089, -0.6831654310376685, -0.6606466681303385, -0.61297835308822, -0.543397002311492, -0.4561223833123549, -0.3559240289056076, -0.24785039544664667, -0.1368186486449705, -0.02741074874184335, 0.0764194417867099, 0.1714321927208493, 0.2552339852065373, 0.32624336496422135, 0.3836706402922161, 0.4274015845791892, 0.4578708440136916, 0.4759225540080205, 0.48263884135276136, 0.47923530189679653, 0.4668989695143839, 0.44675776607763495, 0.41975952416164297, 0.38672706516117117, 0.3482813405325986, 0.30496807972278095, 0.25720401094482703, 0.20544533689448485, 0.1501235744626115, 0.09182424431051395, 0.031180336586594137, -0.030921464794646525, -0.06307988425935873, 0.026615699024003625, 0.06558658089312264, 0.03975623106542736, 0.01664087668261649, 0.0002147090585604694, -0.010385053876238226, -0.015960771229950432, -0.017781073965822514, -0.017316437492081893, -0.016379590250389597, -0.016756843801319032, -0.020293175520389006, -0.028520239504138623, -0.04271898621147363, -0.06360195950213221, -0.09139336425179412, -0.12282527563656753, -0.16492134380157886, -0.21115152030332318, -0.2512366712313927, -0.23606667313682017, -0.16727380250890977, -0.14435722125248152, -0.19991627678367774, -0.25374633129004565, -0.2921162521734546, -0.31513400407627756, -0.32283887521101917, -0.31547903614707673, -0.2940348321164836, -0.2602209881516151, -0.21628564167312003, -0.16494936675126914, -0.10913842723033351, -0.05190706609689011, 0.0038400881673777976, 0.055398437509986076, 0.10050508087141485, 0.1373355513728446, 0.16468369761767587, 0.18189929435286695, 0.18900055248121694, 0.18656035060226922, 0.1757567312216106, 0.1582180704146403, 0.13601922201990646, 0.1114936313008128, 0.08718366700704716, 0.06562888497279717, 0.049285067072975086, 0.04030642684297714, 0.04045921996272328, 0.050928048958605254, 0.07226044304817902, 0.10423516435035518, 0.1458757068759422, 0.19541408252283254, 0.2503989476241646, 0.3077695568475285, 0.36405949074689214, 0.41556645083442323, 0.45862198792351005, 0.4898120042039795, 0.506255756718333, 0.5058090904783243, 0.48728156634184283, 0.4505482843253863, 0.3966395002813139, 0.32770312439395255, 0.2469298188653095, 0.15834716855770914, 0.06659140602599356, -0.023431978341116322, -0.10686356479405479, -0.17927640767666997, -0.23697022097565368, -0.2772905637226679, -0.29878652024934205, -0.3013627577608613, -0.286224047305883, -0.2558185191807447, -0.21356757857194397, -0.1636401705001287, -0.11054765355574547, -0.058856667821180375, -0.012776863372338187, 0.02405981939253299, 0.04889886465851401, 0.05992644652810242, 0.05639485510875719, 0.038509073511111325, 0.007390678868429923, -0.03516327145473852, -0.0868113900301477, -0.14495305172015005, -0.20687364916406192, -0.2699943078024791, -0.3319688544429962, -0.39084770251362855, -0.4450969556765294, -0.4936607795022514, -0.5359042856575025, -0.5715878848041314, -0.6007579767939513, -0.6236661666428605, -0.640643009722476, -0.6520027173607019, -0.6579342034507114, -0.6584273733408619, -0.6532040683757145, -0.6416886919108382, -0.6229859700913849, -0.5950666807853082, -0.46261288681230894, -0.2335770916465041, -0.11046036038322882, -0.05035681173776041, 0.01978501648250841, 0.10085673324668853, 0.1922548522957701, 0.29275499638654345, 0.4004844129482592, 0.5128248668000772, 0.6264202623522515, 0.7371572412233629, 0.840270715797887, 0.9304859668965122, 1.00228215616543, 1.0502432566656488, 1.0694702320534315, 1.0560847075337154, 1.0076643245318477, 0.9237223379246595, 0.8066536372795095, 0.6737526700153125, 0.5639577032274445, 0.38259007453604443, 0.03141424083448374, -0.7347004236280501, -1.7473745963959928, -2.3868980787222434, -2.473083117856575, -2.3315410615977132, -2.1173556679123795, -1.8470703291209212, -1.5310423487960882, -1.1823388075767358, -0.8155987525151343, -0.44665098181330976, -0.09120707258102101, 0.23594352872383784, 0.5218188471185545, 0.7558652354765165, 0.9305546508696252, 1.0416042548461033, 1.0881865783257254, 1.0727229216595138, 1.0007252602198575, 0.880786254975785, 0.7308635175509204, 0.5934494908717121, 0.3810178181324144, 0.06545658712706093, -0.27750038059441673, -0.5208892123470896, -0.632974465497989, -0.6942469134884472, -0.7292608279256374, -0.7367092239355415, -0.7170604991739999, -0.6722572015396189, -0.6054956744913822, -0.5208564529843613, -0.42301871894115983, -0.31685895739319037, -0.2071965006964689, -0.09846527666936744, 0.005442046323539174, 0.10136510972688573, 0.18690971286948166, 0.260487276764529, 0.32124629751793243, 0.36898845068550123, 0.40404648277125244, 0.4271299980612744, 0.43920797971476144, 0.44134079545778704, 0.4346159086762249, 0.4200078815788775, 0.3983934478437723, 0.37045592660356075, 0.33677968911264955, 0.29778894074205464, 0.2539006102134831, 0.2054684876598829, 0.1529638583536368, 0.09688977736489868, 0.03796256330938341, -0.022356167056631016, -0.032308807102021664, 0.04553852365711242, 0.04152720240962049, 0.016281690842053997, -0.0024833393770866685, -0.015036550890431766, -0.02182338153525487, -0.023785062328510298, -0.022137617176012814, -0.018569678367957865, -0.014867514052585573, -0.01304121372028022, -0.01491556208653444, -0.02221261639401817, -0.036167095696373774, -0.057605134576200534, -0.08664707486229073, -0.11489254726563303, -0.15922377820827283, -0.20810242417843217, -0.24114745510729207, -0.17342757594979474, -0.07107735103475932, -0.07078474438051163, -0.13656609476676174, -0.19203677842272082, -0.2308548626994087, -0.25473612870064244, -0.2633398993320082, -0.25696152083483703, -0.2367171896407121, -0.2043946096380811, -0.1623822305553957, -0.11343163474533702, -0.060548970595242446, -0.006726822130718735, 0.045146633140502046, 0.09252986652116146, 0.13326232981938624, 0.1657461874884797, 0.188912619929137, 0.202335239972033, 0.20613879204665117, 0.20105371158652358, 0.18828492516187056, 0.16952005688644223, 0.14677100596504722, 0.12234347063255102, 0.0986570368204589, 0.07818155140267202, 0.06324226529408516, 0.055935340013083756, 0.05793513450905141, 0.07041443437762629, 0.09388481662675696, 0.1281583949213161, 0.17225924250344193, 0.22446345757788233, 0.28231233460821503, 0.3427520912334998, 0.40225673739620627, 0.4570603715351056, 0.5033650607250562, 0.5376253021957842, 0.5567837246926315, 0.5585401352978168, 0.5415370669927229, 0.5055358441036009, 0.4514750846386564, 0.38149142039367034, 0.29880231490510534, 0.20755074457857692, 0.11251578215611557, 0.018819823158344295, -0.06846807333801541, -0.14466656413812995, -0.20587343608178799, -0.2492157963765811, -0.2731145511944506, -0.2773417106975251, -0.2630772667657144, -0.23273008498515768, -0.18978644169823067, -0.13844017363948158, -0.08331664506435743, -0.02903014377287927, 0.020085246263035428, 0.0603534181191967, 0.08890004566034015, 0.10386913415352472, 0.10438725815756555, 0.09059884683267905, 0.06347480111768533, 0.024716027078609315, -0.02351685068769349, -0.07875002337655612, -0.13845912388308612, -0.20019263785378705, -0.2617641319404349, -0.32131060018831015, -0.3773874582997694, -0.42895307108816816, -0.47537100210334415, -0.5163359978896764, -0.5518089431417401, -0.5819126379792694, -0.6068355928971307, -0.626728943147473, -0.641616039971245, -0.6513156289303978, -0.6553861524869848, -0.653087894324921, -0.6433783590173352, -0.624225893819851, -0.4711401870441527, -0.21642626016772049, -0.0960433799045397, -0.034072899210224605, 0.037719976161554314, 0.12029075296024772, 0.21299184123450843, 0.31462168149259284, 0.4232875102730702, 0.536405899904306, 0.6505995068628394, 0.7617621203017855, 0.8650731317276907, 0.9552011044478235, 1.0265194823323274, 1.073488081509149, 1.0910789381034878, 1.0752708565732725, 1.0235757901369826, 0.9357142408601824, 0.8241651436613653, 0.7479651581650066, 0.5899711771958618, 0.20852766899663955, -0.6178857059426086, -1.679563201781069, -2.401366018587174, -2.625836829839697, -2.5829123626834507, -2.4362659623644465, -2.222790274739687, -1.9498722652525338, -1.628312542923906, -1.271708584640626, -0.895585944055302, -0.5164366049355644, -0.15072458389359333, 0.18611866272888022, 0.48052008504279353, 0.7215486040721801, 0.9013647389396526, 1.015623842094902, 1.0634668164042766, 1.0475049435070338, 0.973390124023757, 0.8494998373375979, 0.6877531667651233, 0.5169571946300646, 0.3411374793285247, 0.05446491363486494, -0.2825366856239051, -0.5339863392149273, -0.6576315704007207, -0.7236405546138904, -0.7621888054172885, -0.7732982465831428, -0.7574271846191527, -0.7164971448201269, -0.6536069524893655, -0.5727497554909364, -0.4784442219376688, -0.3754451217248178, -0.26840071003291577, -0.16163605792446667, -0.05891610791670132, 0.03665649381021119, 0.12273770690839036, 0.1977305401982985, 0.260749806090943, 0.311532014151636, 0.35030920784007336, 0.3776935768631926, 0.39451393177462, 0.40172804327413214, 0.4002695254764621, 0.3910255925089743, 0.3747224666960669, 0.3519827309563208, 0.3232516741559559, 0.2889249431932406, 0.2492950739704467, 0.204724035386743, 0.1555756751038455, 0.1024034037100714, 0.04581537367075761, -0.009388498182794969, -0.0037472832051141935, 0.03551701845598476, 0.015258909611640448, -0.005626127995150831, -0.020272271130012953, -0.028708655113899084, -0.03150624674866931, -0.02952847982965734, -0.02420762540871202, -0.017184659437524563, -0.010482321706836717, -0.0060816535959490325, -0.00603268123648415, -0.012021608215975643, -0.025453571628977656, -0.04707874590758454, -0.07709421998387134, -0.10146419280333463, -0.1477555662348733, -0.19712376357601347, -0.2097830511435168, -0.0831478701627848, 0.026997739639416096, -0.011790376460775853, -0.08188829397717878, -0.13709164212245106, -0.17634475027669083, -0.20084849791365755, -0.21011633865913693, -0.20454346942157775, -0.185320977934055, -0.15436974040484408, -0.1141430305781308, -0.06749411437140607, -0.01742275840379759, 0.03305863684273236, 0.0811691851557928, 0.12444045064221931, 0.16090380687942785, 0.18909418153634389, 0.2081649390060415, 0.21782167717402756, 0.21837515660774126, 0.21062903762984603, 0.1958902283614012, 0.17583213822254729, 0.15247528328862014, 0.12803524661973598, 0.10487637386002646, 0.08534499022458886, 0.07169743592124433, 0.06592282938255689, 0.06965715920718196, 0.08401435541774505, 0.1095145495401082, 0.14595764177461445, 0.19240503596434655, 0.24713488451392562, 0.3077132424424489, 0.3710579838298247, 0.4336145161730305, 0.49152683925473495, 0.5408993811878005, 0.578036737923239, 0.5997373287109462, 0.6035304529766772, 0.587922614527653, 0.5525451947231497, 0.49827285777956987, 0.4272078486859161, 0.34261884644005347, 0.24873124290923165, 0.15049092802173325, 0.05319438607429383, -0.03785105024290214, -0.1177599517576855, -0.18238914374377524, -0.22870190181119998, -0.2549372070731044, -0.2607910170595429, -0.24734902823334703, -0.21703921339734844, -0.17333043978427698, -0.12050356261290318, -0.06320917455626418, -0.006177911094962241, 0.04621975506806697, 0.09018690838926124, 0.12281121767194492, 0.14211180926104383, 0.14716280036371465, 0.1379644095043009, 0.11540187048083528, 0.08100180044905958, 0.036801665502901315, -0.014918918522298874, -0.0717761241542565, -0.1315000200887697, -0.19202433177295397, -0.2516141050395726, -0.30888729384604297, -0.36284717390416166, -0.4128431014334497, -0.4585264819184971, -0.49977281160812126, -0.5365923339374818, -0.5690403643715909, -0.5971176753001624, -0.6206936547567725, -0.6394282108886733, -0.6527240158058225, -0.6596928253595404, -0.6591422204938802, -0.6492968165405433, -0.47041881067868907, -0.19232489818126908, -0.08389309396000577, -0.021075922683095882, 0.05152573718134512, 0.13470584794070284, 0.2278397411077222, 0.32969177496421054, 0.4384206309316987, 0.5514207900304839, 0.6653625587722303, 0.7761003032450873, 0.8788172879528435, 0.9680998529247304, 1.038262042956113, 1.0836430619338593, 1.099098929397968, 1.080563552400255, 1.0254473665096473, 0.938277493857063, 0.8805771052601417, 0.7999810687933291, 0.4454173839430262, -0.41725694563034477, -1.5538889780400256, -2.3413647484561277, -2.675916432325331, -2.728132737526452, -2.6591165799258087, -2.5162451946129796, -2.3031562914301933, -2.02748766792541, -1.7005111234161037, -1.3363996764023698, -0.9513600028332796, -0.5626013488562034, -0.18726789638635477, 0.15856156611089034, 0.4608262842766777, 0.7081745474748296, 0.8925730334677309, 1.009533437935719, 1.0582819391625695, 1.041507318872735, 0.9651220011608923, 0.8376598197879241, 0.6704060633052089, 0.4830703736315969, 0.30362763941954984, 0.035070747212209596, -0.2929254590131123, -0.5369325269794949, -0.6627986997331856, -0.7333946304633052, -0.7762691067486953, -0.7918969960738771, -0.7807368449129282, -0.744664397326952, -0.6867080249233268, -0.6107323122994828, -0.5211293482882935, -0.4224819876185144, -0.3192977383389506, -0.21574145101470243, -0.11546868518669307, -0.02147998929062922, 0.06392923789219562, 0.13918341209079532, 0.2033802776445679, 0.25620048655523586, 0.2978089374619177, 0.3287056209440271, 0.34962739202827287, 0.3613893080699757, 0.3648319985459221, 0.360690275538075, 0.34961271548900097, 0.33207211458250185, 0.3084609158509082, 0.2790335724911719, 0.24406126938161243, 0.20377710601902965, 0.15856220528302956, 0.10885643843869452, 0.05534060271082453, 0.0033403735824624192, 0.012671008674215223, 0.013068717886097758, -0.00833036003845411, -0.024903595860653382, -0.03524369480674805, -0.0394751355048486, -0.03804806184975762, -0.03203215503458079, -0.02278904217152533, -0.012195286070284972, -0.002227423517131566, 0.004890937566132125, 0.007146915844263857, 0.002643076934944144, -0.009968201225069251, -0.031573944990584746, -0.06226393698507149, -0.08252839362413988, -0.13059458213602282, -0.17120394096739044, -0.1276109060622863, 0.02274684975138186, 0.09216853685354742, 0.034132495125744455, -0.03600567383895381, -0.09076502016192922, -0.13037486016944078, -0.15526648425953216, -0.16501024938576014, -0.16006427874404716, -0.141731278481823, -0.11201518059609583, -0.0734789157887854, -0.029015279346639167, 0.018325804036192883, 0.06558158690140914, 0.11000993865570696, 0.1492868740404265, 0.1815583609949728, 0.2055616859571795, 0.2205921998456834, 0.2265543550239758, 0.22386861092899524, 0.2134768314145588, 0.19672066447954994, 0.17532318332383945, 0.1512572191297742, 0.1267102596294345, 0.10394430377074593, 0.08523977796018678, 0.07274221181950868, 0.06838373210151283, 0.07372136723985467, 0.0898506864039943, 0.11725945067700305, 0.15576691035059698, 0.2044320234237187, 0.26156097245588006, 0.32470963380073714, 0.39079257185250604, 0.4562000610777286, 0.5170138066315775, 0.5692234272157872, 0.6090152021156214, 0.6330325790372067, 0.6386678143062903, 0.6242808586097675, 0.5894052142755779, 0.5348342090665283, 0.46266412281961666, 0.3761852760075728, 0.27973102863865407, 0.17837054549779507, 0.07760138346371503, -0.01708640345321122, -0.1005682641692971, -0.16852328960172347, -0.21770133187278518, -0.24622586829477866, -0.2536489853530868, -0.24102918589760103, -0.21072851763358758, -0.16626663302271316, -0.11191487424917179, -0.05242084989708928, 0.007468105467500763, 0.06326748597084109, 0.11115443501573896, 0.14809553911944384, 0.17207022715649822, 0.18201568913965538, 0.17786195579968656, 0.16032908967667137, 0.13083261967210813, 0.09121832044507538, 0.043623898564682406, -0.009761556054300513, -0.06680997597970428, -0.12561499728571235, -0.18454504873781374, -0.24230804783437954, -0.29794401264661907, -0.3508060084643825, -0.4005091770913314, -0.44685468570049647, -0.4897581134926545, -0.529148439940939, -0.5648979532211769, -0.5967280599060452, -0.6241578424361105, -0.6464435963605064, -0.6625551003842283, -0.6711644524910909, -0.6726330584843314, -0.4500128797634062, -0.1591434753382206, -0.07507461381424108, -0.012433120544171672, 0.060197481910321926, 0.14324253071572102, 0.23602795324963388, 0.3373741596229376, 0.44540907942195673, 0.5575992428114489, 0.6705814250121094, 0.7802587189861967, 0.8817476907674475, 0.9696419769761313, 1.038156421657071, 1.0815290869569338, 1.094578690318798, 1.0740395445300042, 1.0158835294317985, 0.9565302944699017, 0.9669884128913822, 0.715046484778048, -0.14453591039794977, -1.3744285768394473, -2.2456946654656447, -2.6345540641812235, -2.7579667857127843, -2.7718605131365344, -2.7093034461798124, -2.569686922143113, -2.356697583387608, -2.0782686832708874, -1.7460786653673628, -1.374871264164267, -0.9814818853030456, -0.5837851476253304, -0.1995790067579879, 0.15449704122694463, 0.46388237583903, 0.7169098935398592, 0.9052953986054053, 1.0245162900480196, 1.0737857328995557, 1.0559742513409858, 0.9771288024206841, 0.846054900775318, 0.6739579335746475, 0.47778265695695277, 0.285183790193817, 0.028328908030793798, -0.28613891014377657, -0.5223937152903755, -0.6485495173485347, -0.7237325926833469, -0.7716968076053856, -0.7926583244298699, -0.787081706351934, -0.7567962867801503, -0.7047479153897633, -0.6346864931041614, -0.5508530365297508, -0.45767670048769205, -0.3594929144078547, -0.2603190485412128, -0.16366943599816253, -0.07244283189951695, 0.011139446029348576, 0.0855385549360399, 0.14984758181336666, 0.20372230026213245, 0.24725456078280672, 0.2808769910247815, 0.30520693679636235, 0.32097344919502113, 0.3288734650311582, 0.329557123567624, 0.323521070582661, 0.3111681787766747, 0.29273979724790955, 0.26844443347275515, 0.23840845345776085, 0.20285162572458226, 0.16202119774809187, 0.11638516595599846, 0.0664984166706164, 0.012224747616546239, 0.013463805620093083, -0.010079405075143377, -0.02819996722038809, -0.04043353482801404, -0.046466732289089485, -0.046329271247042225, -0.04066406108099452, -0.030449858162070687, -0.017273802480272327, -0.002945004460461309, 0.010315476756658892, 0.020332625620886335, 0.02485947174975245, 0.02204960108928844, 0.010372776830330999, -0.010975493745657205, -0.042178976060086804, -0.0585500261747085, -0.1081575080243593, -0.1341374763523655, -0.01862357734494191, 0.13999695921199162, 0.14694424325039934, 0.06929888193940403, -0.0012718391830186526, -0.05448912913288817, -0.09420294481113123, -0.11926428073201745, -0.12928554906997025, -0.12480494813045873, -0.10721157717405339, -0.07861296467561774, -0.04164431720672579, 0.0007311674584917771, 0.04546011106039216, 0.0895847427105726, 0.13045304327077428, 0.16582785975166325, 0.19402210408935097, 0.21390982558685318, 0.22498056274909256, 0.2272713803861851, 0.2213653788065511, 0.2082826386955422, 0.18945427894093092, 0.16660314412531751, 0.14171023379024028, 0.11689474318827564, 0.09437030693916504, 0.07631716301570135, 0.06481787027176922, 0.06171440995355093, 0.06852310545061502, 0.0862861234917307, 0.11548689065717532, 0.15592749214250112, 0.20668513678476375, 0.2660596741566068, 0.3316154855598792, 0.4002363644147984, 0.46827949472212715, 0.5317466690762673, 0.5865410103422017, 0.6287215780246416, 0.6548106524229045, 0.6620576938450071, 0.6487117011917429, 0.6141974772446099, 0.5592602462318461, 0.4859666421605058, 0.39765770268382816, 0.2987337520978408, 0.19441452874425247, 0.09034061906101698, -0.007783335274996528, -0.09466434566959014, -0.16575924291958977, -0.21768158926538428, -0.24837567693045814, -0.25732821313506893, -0.24548578012968658, -0.21522240275819948, -0.17000667917848578, -0.11417902468933683, -0.05247356949701665, 0.01026387554278152, 0.06954416016718357, 0.12143264485536598, 0.16287543238982227, 0.191724985519512, 0.20686941412222826, 0.20808562233523809, 0.19600258715316965, 0.1718526273248182, 0.13734988988899488, 0.09443332331764065, 0.045142040690778096, -0.008578318325960232, -0.06495417084155175, -0.12248352440558463, -0.17995652959866693, -0.2364649824508982, -0.2913765467273146, -0.3442771042803727, -0.3949186574467003, -0.4431239137676801, -0.4887275182113662, -0.5314730964450245, -0.5709638743710945, -0.6065803727531573, -0.6374510865641874, -0.6624140436674653, -0.6797856231392245, -0.6789283240688189, -0.4071881742532142, -0.1323149210622283, -0.07054689342591303, -0.008787551868099541, 0.06324072995188423, 0.1454875433909404, 0.2373322973256613, 0.3375532246206312, 0.4443602526542918, 0.5551848205942598, 0.666750752160393, 0.7749036731520818, 0.8747950213163982, 0.961116907885831, 1.0277455936988922, 1.068253938379904, 1.0783528051199518, 1.0604975987085243, 1.0022610197291115, 1.0042152646321956, 0.8762377896238025, 0.11590586887553833, -1.1493901521309224, -2.101429435712703, -2.498641664076069, -2.6699564509833724, -2.7666694929172637, -2.789103930454881, -2.732281455547949, -2.595459712512735, -2.3824388872051756, -2.1013716706272794, -1.7643592907915675, -1.3866399953416426, -0.9856460763153603, -0.5798580761183016, -0.18765852903661262, 0.1737771717780321, 0.48947926699056143, 0.7474426521062876, 0.9392297239257363, 1.0602111499412326, 1.1096821739004463, 1.0905824289082564, 1.009183458946648, 0.8744284189598592, 0.6975979399282379, 0.49394397849217686, 0.29060833533227903, 0.03897012396161248, -0.26112245186161775, -0.48953849823375784, -0.6159714884381939, -0.6960676817472917, -0.7497742321217586, -0.7767867567701403, -0.7775467394139595, -0.7538520733590426, -0.7085569455821483, -0.6452979425966925, -0.568167658249985, -0.4814329278114595, -0.38926144014299613, -0.2955085404343638, -0.20354461197681317, -0.11615135766812124, -0.03546086434843598, 0.03703462604583141, 0.10045278886924613, 0.15442291676800046, 0.19900618628718725, 0.2345498144031275, 0.2616052392992261, 0.28077763962503255, 0.2926839041954077, 0.2978298430952151, 0.2966345149400791, 0.28934804267434355, 0.2761485986339558, 0.25709096664072906, 0.2322629239299605, 0.201735350605734, 0.1657518764751229, 0.12464168124101249, 0.07877907169304166, 0.017461211101983842, -0.0011337793745029856, -0.029749891762083536, -0.0438243997263319, -0.051719581463635755, -0.05333788599869749, -0.04888318968651095, -0.03889273269055149, -0.024556238304534794, -0.0073729692686645976, 0.01061263397744483, 0.027245909393530887, 0.040111528051020695, 0.04701848835038369, 0.04590947444550475, 0.03532340893064867, 0.014313065286125526, -0.017198581257430234, -0.030301439663166008, -0.07183422790200389, -0.04373941031555795, 0.11867010832206937, 0.21974788526758937, 0.17015591848934042, 0.09113386690905179, 0.02384002366190252, -0.02897789264208983, -0.06853045979775496, -0.09352161769633849, -0.10360864827700045, -0.09940793067433473, -0.08239455052200095, -0.054766697121876096, -0.01923811168661338, 0.02118101027788477, 0.06341402871621638, 0.10453842127217472, 0.14195670208111183, 0.17355219082143605, 0.19775640874303818, 0.21361590722844734, 0.22076034914067344, 0.21939829262065974, 0.21022386027661, 0.19437897490459832, 0.1733410101219396, 0.14888085161519116, 0.12295435154123857, 0.09766232758663884, 0.07514365032171622, 0.05752473804079994, 0.04680037513616875, 0.044760100450089935, 0.05285182747092776, 0.07209088574591771, 0.10292463618623504, 0.14515507548085127, 0.19784481879858395, 0.2593002693012978, 0.3270657479298138, 0.3980096454567561, 0.4684365968498252, 0.53429137087985, 0.5913814552880936, 0.635670269854157, 0.6635561765385605, 0.6721831298229102, 0.6596845603006636, 0.6254143388547675, 0.5700534037631027, 0.4956727216892869, 0.4056288044868319, 0.3044187936306977, 0.19735617704739727, 0.09025507790604559, -0.01104059816696612, -0.1010297032044738, -0.17503372898856728, -0.2294720925168665, -0.26220099748495773, -0.27256050935510956, -0.26147576119144933, -0.23122910578741251, -0.18532706747227, -0.12806032570679315, -0.0642388835653156, 0.001316293496533838, 0.0640200092796781, 0.11994351765334121, 0.16592017239123624, 0.19978066679429496, 0.22027562807113021, 0.22711842580543617, 0.22076894676558823, 0.20234914943204085, 0.17337939150527149, 0.13565468811825276, 0.09102005017618087, 0.041273245035264416, -0.011972312993138168, -0.06733207981160483, -0.12369246237129516, -0.18020734242306258, -0.23626333130972288, -0.2914460905643512, -0.3454563226170766, -0.3980641194064578, -0.4490043299791102, -0.49793341069928054, -0.5443317856718899, -0.5874736101408535, -0.6263614901233803, -0.6597150860273571, -0.6854162851352434, -0.6566200280792618, -0.35911526444990294, -0.12377444672520888, -0.07093345694743469, -0.010344032776803402, 0.06051581847277987, 0.14148362692443683, 0.23189162956648524, 0.3305950654899412, 0.43577250120272026, 0.5449348659149145, 0.6545397309263805, 0.7604645171493623, 0.8581534668263444, 0.9437082509837929, 1.0082004926234873, 1.04108015102301, 1.0375917564226498, 0.9774747557705386, 0.8550983295768493, 0.7115166589321564, 0.24449131342819008, -0.7630399111209218, -1.7437900816075702, -2.2258009614451435, -2.4686701486204363, -2.642670365097336, -2.749223898897327, -2.7792700599040776, -2.7275508195936045, -2.593269348388845, -2.3802609519248596, -2.0969329581061986, -1.7557159929058654, -1.3723301516899005, -0.9647144982046001, -0.5519033663422093, -0.15279942454678253, 0.21496194124345624, 0.5360210276992934, 0.7981185366839068, 0.9926276385488677, 1.114893972381232, 1.1642077807579945, 1.1436552923428853, 1.0596099105107957, 0.9212304278648196, 0.7397943688108537, 0.5295370372441202, 0.31504414491892163, 0.0649862493177773, -0.21761395627749103, -0.4391110628266528, -0.5673313605986365, -0.6527632703626001, -0.7127310693584272, -0.7463324228257777, -0.754024164609068, -0.7375393492074638, -0.6996656500902985, -0.6439104190833982, -0.5742321268554544, -0.49472809170725274, -0.4094037102708361, -0.32194423492100643, -0.23557564519980634, -0.1529462667010142, -0.07609713521315875, -0.006445592038820003, 0.05514809556010025, 0.10832735139341665, 0.15310995748031875, 0.18980910892815217, 0.21888250207250337, 0.2408720909576525, 0.25626820461944533, 0.26550225716503384, 0.2688479865230926, 0.26648426958175264, 0.25843473476677126, 0.244697892580386, 0.22520477578679365, 0.1999964219708703, 0.1691637468240037, 0.13304579939654637, 0.08972172800199196, 0.022415386019276617, -0.024029313260964358, -0.04529029918560834, -0.055037668204067636, -0.05853595805369949, -0.0558424866962719, -0.04704428665964233, -0.03287405451015424, -0.014418350497488852, 0.006603626247114747, 0.028233074527775237, 0.048081659159247, 0.06380328649265588, 0.07298496585158021, 0.07363721172725102, 0.06412358127589601, 0.04358516403162871, 0.011847951007317947, 0.0010552053497365765, -0.01885521621374764, 0.10126039281366284, 0.2552268518409573, 0.2579791336874191, 0.1796753373079487, 0.10152667870123455, 0.03786911109598101, -0.014393523427170596, -0.05348676211472947, -0.07812760784305217, -0.08803703888675951, -0.08389301526620252, -0.06726680814611319, -0.04043164435869406, -0.006179319453297749, 0.0324375230351025, 0.0723279250977128, 0.11059234880625088, 0.14470205384502563, 0.1726319205049045, 0.19295013400388375, 0.20483589152071552, 0.20808202237533197, 0.20302648877912088, 0.19050477596048687, 0.17174425898374945, 0.14830714171841008, 0.12198550519319218, 0.09475451148733804, 0.06867784864059723, 0.045864368058284866, 0.028370718935051498, 0.018142241575287654, 0.016897035277369632, 0.026041797147574153, 0.04653992745302893, 0.07881841228452924, 0.12264946338874605, 0.17708967670093845, 0.24042300903053704, 0.310182484155344, 0.3831990807439869, 0.45574084618915656, 0.5236842298972659, 0.5827678752246999, 0.6288575051932233, 0.6582639665594097, 0.6680258045215943, 0.6562017518066092, 0.6220664256572142, 0.5662757341252362, 0.4908780099944847, 0.3992795847814934, 0.2960228120240638, 0.1865464900126832, 0.07676243927694948, -0.02730976808617358, -0.12005470018219633, -0.1966069321804369, -0.2532947409820343, -0.2878109629103358, -0.2994535015434385, -0.2890243900610292, -0.2588165571797516, -0.21225111389785933, -0.15366926394487113, -0.08782210045789318, -0.019605730596017334, 0.04643297583853023, 0.10627145653118042, 0.15675462571159837, 0.19559543978039784, 0.22151552147498688, 0.2340786146253251, 0.2336654311034989, 0.2212175055271004, 0.1981309614329545, 0.16600632553163397, 0.12654137111252517, 0.08135466736458774, 0.03192108066827437, -0.02050755288489814, -0.07491849185843158, -0.13053107212601844, -0.18677908763444862, -0.24324323416511984, -0.29961788441024595, -0.3556109587515106, -0.4109088619157335, -0.46507034496572874, -0.517498925775123, -0.5673562505347078, -0.613548162353295, -0.6546811447963554, -0.6885205463766457, -0.6120510676245576, -0.3115161430329838, -0.12723099728253118, -0.07614533432633941, -0.0170534791798449, 0.052231514748473984, 0.13154445754279998, 0.22025217612252668, 0.31705877426759344, 0.4205225245228945, 0.5284407941752285, 0.6337444762434998, 0.7269655436457398, 0.8006465359906159, 0.8552021017990974, 0.885270761855999, 0.8703014255847386, 0.7816200315008786, 0.6082242734843124, 0.462478432051908, 0.3508481118143223, -0.1692589330422205, -1.1044926903243706, -1.8041214939025352, -2.165457631880913, -2.4062093464361265, -2.5904269018490016, -2.705670402607007, -2.7425040406427943, -2.695479394843618, -2.5636749142861746, -2.351013132971813, -2.0660551730319767, -1.7215667366814795, -1.3336354500904282, -0.920671487054654, -0.5021603596490642, -0.09746307073171678, 0.2753900187613052, 0.6007197154050852, 0.8660220199153885, 1.0625479050846014, 1.185568043004869, 1.2344284296498471, 1.2122631587994657, 1.1256066964629978, 0.9837078777436954, 0.7979532041277544, 0.581832132405891, 0.3566085337175897, 0.10462088563977012, -0.15939863029376067, -0.3735332049682185, -0.5055635014508235, -0.5969189236502057, -0.6634353967955366, -0.7039794004613054, -0.7189668600444223, -0.7101112931322655, -0.6800976820461875, -0.6323393370128221, -0.5706388979709551, -0.49894992178661557, -0.42109933790560294, -0.3406193795882011, -0.26057229368317447, -0.18348372010207825, -0.11127534327474553, -0.045298214316528806, 0.013648848773032185, 0.0652112029234857, 0.10941302667255037, 0.14651187557880885, 0.1769302608676835, 0.20111091019443972, 0.2194842483971602, 0.23235310751485727, 0.23992214394254407, 0.24222345098567732, 0.23921572905319266, 0.230740856686805, 0.2166815196938714, 0.19691934267104916, 0.1715260677402739, 0.14066291239351703, 0.09302763651171198, 0.0217307395171904, -0.04405548397410808, -0.0566488342588265, -0.061923341889099426, -0.061178922130840974, -0.05420192201700491, -0.04126234655715599, -0.022982378651922986, -0.000651279771066271, 0.02411338609745428, 0.049133737249978715, 0.07210756627113168, 0.09046982385808588, 0.10188381611399322, 0.10416907237635331, 0.09577101163090496, 0.07569858262138895, 0.04388176211204686, 0.05390604595357207, 0.12323870233418566, 0.2654172396997252, 0.31403194002462165, 0.2563988967814752, 0.17581242826290544, 0.10318194526795699, 0.040970100829952116, -0.010375671152622168, -0.04865250635330387, -0.07262639228990064, -0.08205482761332461, -0.07770844222319773, -0.06122134484832564, -0.03496299986674978, -0.0017763781549196, 0.03523165457437205, 0.07296693766576245, 0.10854784730634298, 0.1395063856845947, 0.16390896752790787, 0.18043665989958968, 0.18840736661679786, 0.18774578458533003, 0.17893437408219837, 0.16292057046357267, 0.14104360454781006, 0.11492937174814943, 0.08642785140834874, 0.05752147785667461, 0.0302786305578977, 0.006770782972040479, -0.010976013013751063, -0.021075285122442056, -0.021850892919913045, -0.01195396954578043, 0.009543709457633387, 0.04302433711859832, 0.0882368551011461, 0.1442039281719083, 0.20919033832316414, 0.280693440454451, 0.35551526897997965, 0.4298724755049652, 0.4995930589506079, 0.5603430462625547, 0.6079230848103538, 0.6385589629788981, 0.6492253555466214, 0.6379048491030432, 0.6038364644523986, 0.5476336639334898, 0.47136205571246137, 0.3784349225102872, 0.27347485913804004, 0.16197437680974458, 0.04997848134866256, -0.05641396408139565, -0.15142698532563514, -0.23012036903111177, -0.2886632451622102, -0.3247030687300567, -0.3373992616077359, -0.32754778020506237, -0.2973285726165238, -0.2501911654825446, -0.1903849317082016, -0.12271351140276288, -0.05199939380913676, 0.017139176909025444, 0.08072903021798794, 0.13552093090175532, 0.17923917402211043, 0.2104800486415197, 0.2287677163540005, 0.23432325745193694, 0.22799591385971585, 0.21099769066466312, 0.18479814491035107, 0.15090954229118747, 0.11080719113697679, 0.06580825597102358, 0.01703826421385113, -0.034595319018098536, -0.08839929673307978, -0.14384879343270374, -0.20056434148664604, -0.2582216211747612, -0.31652403262744677, -0.3750943555154258, -0.4334515545225397, -0.49090908384476073, -0.5465613042750457, -0.5992127817046322, -0.6473775176668566, -0.6898518557038713, -0.5486015073804484, -0.2576112587835855, -0.13465071431702036, -0.08569289351823883, -0.02828288255667566, 0.03992828572457441, 0.11928253117059384, 0.20477789412353253, 0.2929744146640303, 0.3837608422898029, 0.482102234067316, 0.5841933779777762, 0.6656876969469927, 0.7090279932950239, 0.7159972281915472, 0.6926396856072365, 0.6383660800042286, 0.5606579811519978, 0.4731229748275929, 0.4659819046015965, 0.3530870563848545, -0.3030627954932683, -1.1844566050507161, -1.7449097458293519, -2.070623971177069, -2.3209432428333576, -2.5139797934767065, -2.636858753206157, -2.6798634165232578, -2.6373037425010217, -2.5082000016535844, -2.2964655923280137, -2.0108389272783764, -1.6642926128233277, -1.2732625493797851, -0.8564953814741969, -0.4338793924332869, -0.025123477112680703, 0.3514055397629807, 0.6797691430457782, 0.9472720829180732, 1.1450401101626522, 1.2683121425516637, 1.3164271935795115, 1.2926051305657662, 1.2034356106701019, 1.058301459522454, 0.8686047076365631, 0.6474222952733921, 0.4123993392252112, 0.15830605279908738, -0.09356193870730323, -0.2988991124898135, -0.43442514756834605, -0.5320197964011788, -0.6051692577864589, -0.6527430381208559, -0.6751773048772698, -0.6741101216922107, -0.6521762960486184, -0.6126568320267669, -0.5592427424513406, -0.49571669591409684, -0.42576224374666083, -0.352733925563963, -0.27955622069597474, -0.2086024245180882, -0.14169385561828296, -0.08007650161188362, -0.02450419636828549, 0.02471892538197995, 0.06760364980828282, 0.10440895856181154, 0.135493182284816, 0.16126415294062646, 0.18204921072320523, 0.19809475360923923, 0.2094749612084179, 0.21615808326547992, 0.21795445698439764, 0.21464801458101768, 0.20596312701985298, 0.19174239289329353, 0.1718961195779558, 0.14643204852703384, 0.08446372370180555, 0.007340026500110675, -0.05710507054407277, -0.0639595299115685, -0.0650094710427842, -0.06010193873591607, -0.049092509321830846, -0.03214192413087069, -0.010059068074093958, 0.01597787176486065, 0.04415011741696695, 0.07238153274445569, 0.09816343548066353, 0.11902106784665589, 0.1324259266595269, 0.13628366610450815, 0.12888854955158413, 0.10934372545085824, 0.07749166713243683, 0.17905768133776356, 0.3012522789586134, 0.36072222311113444, 0.31693212691994166, 0.2392218760852891, 0.1632227372079218, 0.09469230973277587, 0.03392162211049321, -0.016079375838638832, -0.05314722906748326, -0.07606496655430695, -0.0846754477568945, -0.0797960678909273, -0.06316462944984069, -0.0372010540220139, -0.004830609385179208, 0.030818871180477547, 0.06662665773126619, 0.09974258003038888, 0.12774182447187754, 0.14877622517613687, 0.16162861217835828, 0.16573650479682583, 0.16115505308040534, 0.14848915487072412, 0.12881010810322835, 0.10355270275589201, 0.0744326306955232, 0.04335090012398335, 0.012333687056990117, -0.01654594491011041, -0.041214973890706386, -0.059677875631911625, -0.07007459605270316, -0.07077776219154353, -0.06047637935136918, -0.038294283474133994, -0.003886938006685714, 0.042446728229853736, 0.09969530339008026, 0.16607884598335998, 0.2390605655488276, 0.31539476320875615, 0.3912583355176267, 0.4624232994033344, 0.5245091699655475, 0.5732535503923195, 0.6048362940040204, 0.6161714502556714, 0.6052114014576446, 0.5711514529021144, 0.5146078872010342, 0.43763178863175334, 0.3436836337463465, 0.23740343628962357, 0.12437471963105695, 0.010682217066628752, -0.09745282137432332, -0.1942104693325497, -0.2745147590965278, -0.3345044748408741, -0.37169288966511793, -0.3852323425212738, -0.3757929847305128, -0.3455705524163739, -0.2978976839122933, -0.23705707576210688, -0.1677455953916165, -0.09483412088435816, -0.022852273365735698, 0.04415861443271396, 0.10300467877318287, 0.15131293519685673, 0.18768600191744156, 0.21151525724086095, 0.22297148136987666, 0.222739566981768, 0.21193097591735555, 0.19183591281844947, 0.1638354995756881, 0.12923568780336403, 0.08921821068559854, 0.04477431118288244, -0.0033040876077077286, -0.054406113418671964, -0.10808718781581383, -0.16399388812254223, -0.2218421719032353, -0.28131239942547115, -0.3420302137409088, -0.4034559776444615, -0.4648728915161282, -0.5252955265058201, -0.5834658497982268, -0.6376551692461874, -0.6765832161629843, -0.46490053836463563, -0.2069742193218751, -0.14033151062727534, -0.08701286847876943, -0.025376824122869124, 0.07567009673498681, 0.20703600358993413, 0.3086589525186323, 0.37878539456175986, 0.4424387944854473, 0.5016703873648929, 0.5572890884029249, 0.609127671870958, 0.6564618643098932, 0.6901128059816735, 0.7032665746212992, 0.6905161841313294, 0.6474092656557247, 0.5955613359726364, 0.5979033982651014, 0.400175879905893, -0.356837331474015, -1.1876071207571677, -1.654130098378788, -1.9561973580928802, -2.2144406228102334, -2.414974001346641, -2.5446027575012398, -2.5933066304966133, -2.555231718873179, -2.429260857282939, -2.219339187059088, -1.9342536838222166, -1.5871818244749072, -1.1947518917832713, -0.776012235631482, -0.3511036169173831, 0.05996502550020644, 0.43860204500020217, 0.7686518634577029, 1.0372784681344687, 1.235510004787053, 1.3585373982821176, 1.4057088730666845, 1.3802577752882828, 1.288845278164155, 1.1408810795952453, 0.9478323767328076, 0.7224384603062015, 0.47886008662426427, 0.2240947886953748, -0.021656120505360477, -0.22014662448224342, -0.3580961252734074, -0.4617149110977987, -0.5412924981967961, -0.5957660200934587, -0.625519548057075, -0.6321813113409345, -0.618280850242237, -0.5870261492595867, -0.541956250915856, -0.4867344679749612, -0.42486834669804185, -0.3595766888040366, -0.29361329686784465, -0.22923127613688088, -0.16811248669032164, -0.11142266652782151, -0.05982295158985895, -0.013589332283188149, 0.02733148188467016, 0.0631739191455507, 0.09429478683702541, 0.12103158729505292, 0.14367765118221065, 0.16237315137355868, 0.17713924876734044, 0.1878119409225203, 0.19414330809858527, 0.19576779830622648, 0.19235983520113198, 0.1836028946778301, 0.16937774307822195, 0.149341700434805, 0.06591819491600326, -0.02056357389123331, -0.06484756074659614, -0.06784202514607429, -0.06488658733599095, -0.05611067301821393, -0.04125596587734304, -0.020655350374821246, 0.004994866576677026, 0.03433304471497145, 0.06565263956576128, 0.09668811299015623, 0.1250356317908512, 0.14803833695882584, 0.16326513779128504, 0.1684664043720141, 0.16203194061028547, 0.14296662026747597, 0.1262560261651029, 0.36755498380773144, 0.39829133456474564, 0.35692663691285764, 0.28686747242937605, 0.21390131991494954, 0.14330031329912662, 0.07676618270510316, 0.017912613962625334, -0.030288679714757683, -0.06568223165386522, -0.08713068399545554, -0.09450940629353943, -0.08874033729283193, -0.07160484912467835, -0.04562180808577698, -0.013745948840315658, 0.020833933273166405, 0.05500521669029945, 0.08591552477746067, 0.11119591289985986, 0.1290562112241032, 0.13837567262218664, 0.13869332405961132, 0.13018086613368718, 0.11356147737159572, 0.09001828106653931, 0.06109434797984381, 0.02859166095956489, -0.005509807063274863, -0.03913491618696896, -0.07016966159519522, -0.09653120155952744, -0.11621983863480256, -0.12739864712589521, -0.12846462821399762, -0.11815217846993242, -0.0956268587259963, -0.06060052229936552, -0.013420780527595877, 0.0448422509991504, 0.11236017469636916, 0.18653991407209114, 0.2640912761027887, 0.3411388683205603, 0.41341623197975874, 0.4764952825448927, 0.5260840528403903, 0.558321418267349, 0.5701059434266145, 0.55935922043997, 0.5252818327119457, 0.46847282901525844, 0.3910147385478009, 0.2963646398713988, 0.18922137689727148, 0.07517440740162762, -0.039609089068924686, -0.14890062102603752, -0.2467807489079492, -0.32817263675069785, -0.38910409969603865, -0.4270974096666045, -0.4411849874405336, -0.43205444098696333, -0.4017736227354298, -0.3536981464282998, -0.29197887423836155, -0.22134184217470354, -0.1465331786908708, -0.0721250038863781, -0.0020587893480090713, 0.06040428937443121, 0.11294702222165398, 0.15407031492341616, 0.18316442949641232, 0.20026295019543205, 0.2059921970244014, 0.20130139363797817, 0.18737721491595583, 0.16543324683533722, 0.13664823307900065, 0.10205395763979475, 0.06251389492417392, 0.01870657565238698, -0.028866789609112153, -0.07982831116086597, -0.13390504118257507, -0.19083265399096483, -0.2503385550325845, -0.31202798523599995, -0.3753747698625771, -0.4396090752914539, -0.5037340727809534, -0.5664266350654827, -0.6256568411420957, -0.614211154482935, -0.3755143460553212, -0.15429018777534864, -0.03055125179689, 0.07413043008886078, 0.13586832386826586, 0.19785322440880648, 0.2616160626768007, 0.32864404442893225, 0.3993977732043188, 0.4728929938844182, 0.5471589862962674, 0.6194195747590143, 0.6861936165357818, 0.7427679581613553, 0.7839906479764664, 0.8041245292961818, 0.7975101330918655, 0.7588634610656477, 0.7299034100489017, 0.7490089415920558, 0.41246223110773883, -0.4026768080270138, -1.1034447334442081, -1.5177699399408997, -1.8246687226722367, -2.0892286105706015, -2.296056384386886, -2.431650073640732, -2.485770319859528, -2.45234859368321, -2.330187494818036, -2.123149144184266, -1.840085673515059, -1.4942167625869907, -1.1023436373537123, -0.6836370631169846, -0.25845310251870046, 0.15305766366822482, 0.532112097811698, 0.8624436095415522, 1.1310909649557113, 1.3290225642876399, 1.4513785461693702, 1.4974884372724855, 1.4705891057985374, 1.3773357082513131, 1.2271638194000536, 1.0315118952531996, 0.8029491906880377, 0.5526144284459509, 0.2972695321347807, 0.055057512625555916, -0.1398020222973173, -0.2803420028180934, -0.389473509997595, -0.47506163915521604, -0.5360204982954571, -0.5727566982036842, -0.5868188415991966, -0.5807015916006737, -0.5574854552219035, -0.5206224785188738, -0.47361371872571834, -0.41984748059976784, -0.36236838903895396, -0.3038058643385604, -0.24625195899810226, -0.19128502902283095, -0.13994310474382754, -0.09282338203202123, -0.05011875281177769, -0.011760386020149838, 0.022522939240853024, 0.053055189404131564, 0.08017029124749975, 0.10408628248121854, 0.12491016688057055, 0.14255408397774438, 0.15680448639271383, 0.16727994269339508, 0.17356294053519417, 0.17517825497948536, 0.17176777871984328, 0.16303617744156185, 0.14587319115741515, 0.045759224898332285, -0.05410224979543532, -0.06988832881954643, -0.06899639651735168, -0.06238981609019678, -0.04998778270558635, -0.03169651651513483, -0.007741825697518578, 0.021012616098714076, 0.053320772965206764, 0.08730453953339357, 0.12081403705340943, 0.15127867467583211, 0.17615242344432414, 0.1928559389537261, 0.19923169938015217, 0.19408783266239604, 0.19382728749295897, 0.2636719457319576, 0.4208100319329091, 0.37492199497774825, 0.3154734984583376, 0.25118297189059824, 0.18300354924892925, 0.11491750172319826, 0.05086597767429346, -0.005583012870959081, -0.05146925206375985, -0.08471668423549161, -0.10421315623322092, -0.10993781314741335, -0.102847911654945, -0.08483177694716681, -0.058438586410585636, -0.026707039878746452, 0.007167327404113744, 0.04003232535416745, 0.06906527071311097, 0.0919112147097132, 0.1068478910224882, 0.112817223289221, 0.10945530824426097, 0.09702979304484105, 0.07637441872236772, 0.04878142668210994, 0.015900490848290705, -0.02036398143768836, -0.057945179596385676, -0.09468881061959289, -0.12842588562464452, -0.15702901997605334, -0.1784820393441766, -0.19094251074842727, -0.19282915225418762, -0.182906399516358, -0.1603920920853501, -0.12505304085996416, -0.07730656014290282, -0.01828783200361217, 0.050102541144338986, 0.12521114358483265, 0.20368564634761022, 0.2816062819245748, 0.3546618504672967, 0.41840168136061706, 0.46850768426771117, 0.501118532677864, 0.5131213088339242, 0.5024566552743308, 0.46832101495345, 0.41134688371429773, 0.33361160834751824, 0.23861558163176833, 0.13104431373525127, 0.016538170562805377, -0.09876071817774745, -0.208563934301373, -0.3069873171594626, -0.38887986049824086, -0.45030868694889126, -0.488700752237742, -0.5031237578150893, -0.49414454954745235, -0.4638569853305654, -0.41547354749838794, -0.3531635965932325, -0.2815006878424122, -0.20525184062410062, -0.1288485656403342, -0.05627043297610257, 0.009326654936418599, 0.06555675471105626, 0.11097262864012247, 0.14485938487677785, 0.1672421016709844, 0.1786104746255326, 0.1798504850510909, 0.17199508224107962, 0.15615514505709704, 0.13335771146219866, 0.10451196978523747, 0.07034992944365648, 0.03142630205106656, -0.011855990911664449, -0.059229580380561586, -0.11048082931453518, -0.16543268197569017, -0.22383421862615727, -0.2853450755683191, -0.349445879612035, -0.415413126872358, -0.4821006040534641, -0.5516509167257864, -0.6107598946134836, -0.4418597423444872, -0.1461317069496051, -0.021866150879599644, 0.03019519733128284, 0.08267858019562979, 0.14074315814974625, 0.20522578899464605, 0.2758514154042562, 0.35214321398720827, 0.4331389016172924, 0.5173154044610548, 0.6023775742733442, 0.685332047284696, 0.7622310311349594, 0.8284051240659771, 0.8783850744683619, 0.9063810132464596, 0.9064913915044741, 0.8734350686644774, 0.8796278867316687, 0.8702391591287686, 0.423312203842487, -0.36830178915850986, -0.981707060023993, -1.3685759269562165, -1.679486094421745, -1.9488315109882617, -2.1608144198424153, -2.3017106091219954, -2.3610475664320436, -2.33261304562639, -2.2150420667784196, -2.012149990765348, -1.732700951472541, -1.3899555280510185, -1.0006948606314179, -0.5841875506634597, -0.1608102907139699, 0.24916988959820863, 0.6269363777814227, 0.9561185803879315, 1.2237252407119534, 1.420647881201706, 1.5420005927719318, 1.5870612974433431, 1.5590340083860381, 1.4645362378649542, 1.3129511391444897, 1.1156823345221385, 0.8851528145779426, 0.6304333753455644, 0.37439510775389095, 0.1323761553886751, -0.06142117354269949, -0.20450503870439185, -0.3184405465864124, -0.40934488340248265, -0.47618289980299267, -0.519303896520948, -0.5402545479790852, -0.541427156882591, -0.5258495960226064, -0.4968324140343121, -0.45778348080826436, -0.41192566645444817, -0.36218912080696075, -0.31103434862786283, -0.2604406526569303, -0.21183461963900552, -0.16616445256188506, -0.1239090032220922, -0.08520951606160665, -0.04992136064753261, -0.017767319269884396, 0.011608651327817299, 0.03850079756107938, 0.06312139059128796, 0.08549764334529986, 0.10550909619857052, 0.12283091192568829, 0.13703595193006546, 0.14757299705065385, 0.1539220420397065, 0.15557792676862903, 0.15210315976485944, 0.11787260922661247, 0.01838241999239809, -0.07093121472067843, -0.07289632019242287, -0.06821735178937605, -0.058253575681638026, -0.04267720674403108, -0.021301345184022935, 0.005494860850301819, 0.03695969784579134, 0.07169210971049367, 0.10793407843508529, 0.14338576476723208, 0.17554301164525743, 0.20179869937010864, 0.21970031393623657, 0.23061965225684178, 0.2676027112890784, 0.353529150199154, 0.4232963725594967, 0.3687272157605501, 0.32556463157825943, 0.271610830437081, 0.21014443841160846, 0.14487516446964, 0.07975375639080529, 0.018662611006429852, -0.03485654070098132, -0.07792963561264754, -0.10850859292592663, -0.12558705411241156, -0.12917494815113173, -0.12034020344447316, -0.10099833785611723, -0.07379545865822978, -0.04178328910341267, -0.008223372544056917, 0.0237430710438421, 0.051269271095083446, 0.07204057109068407, 0.08435538518073993, 0.08722500534492006, 0.08034657104320897, 0.06408116039708311, 0.03935418364906895, 0.007566387021088361, -0.02952420751695528, -0.06990264144113068, -0.11139481638799209, -0.151750583662571, -0.1887146437874383, -0.22009619221097965, -0.24383151902432232, -0.2580604928109729, -0.2612027190954018, -0.2520536367297741, -0.22987729865405893, -0.19451018465510472, -0.14644520659144167, -0.08690536043221808, -0.017872496257536064, 0.05791805652965376, 0.13705053641447185, 0.2155484038161859, 0.28907043780507236, 0.3531424915438848, 0.40345335194606236, 0.4361465241145934, 0.44814462050708537, 0.43740589491951676, 0.40317555855114584, 0.34609662260850715, 0.26829291097741437, 0.17325169339678315, 0.06569408130425325, -0.048783050028781805, -0.16401016455341022, -0.2737669328763621, -0.37213655381596844, -0.45404499008520904, -0.5155029934954163, -0.5540047521478835, -0.5685230490754414, -0.5596692445334961, -0.529400518658643, -0.4809498319003347, -0.41831984135475375, -0.34609155606858355, -0.2688590920495715, -0.19106688428532115, -0.11654367949231581, -0.04848193699981174, 0.010837262372669798, 0.05989569136644768, 0.09802418848681516, 0.12514228708728226, 0.14172553578593838, 0.14852924643146004, 0.1465215636528665, 0.13667244743933615, 0.11990816957420858, 0.09700235538552526, 0.06856628206298598, 0.03503731562397405, -0.0033075366083092916, -0.04629141667551018, -0.0938198645391406, -0.14577165679442494, -0.20202542534696466, -0.26230595100994236, -0.3265517196193084, -0.4035635803182913, -0.4650185420721451, -0.47996461492320375, -0.47436621291933445, -0.3021552215622485, -0.1018877967980174, -0.045695795249796944, 0.005655133963770709, 0.06377667010126409, 0.1293464270648581, 0.20228176944319287, 0.2823005823292597, 0.3686895662791283, 0.4603438998221687, 0.5554813786672135, 0.6517071633567113, 0.745718755687129, 0.8334589678237556, 0.9099393235709456, 0.9695942666942301, 1.006352370307713, 1.0142602147522446, 0.9884086916738646, 1.026773450794554, 0.9861079758237423, 0.45857391266673275, -0.3039897261918867, -0.8457255155884305, -1.211796854841726, -1.5250187204272754, -1.7976644804299262, -2.013730402524885, -2.15929637488596, -2.2237365176288755, -2.2006450371740733, -2.0885447241726656, -1.8910760678823912, -1.6169348656894122, -1.2792335116727003, -0.8947246594565552, -0.4825592843867206, -0.06311913822625392, 0.34341261379188914, 0.7181864038375956, 1.044877835654753, 1.3104390841674531, 1.5057664070383545, 1.6258975927339891, 1.670072241770944, 1.641403329892345, 1.5464296845904002, 1.3944360535605327, 1.1967224351994101, 0.9656674504846698, 0.7093289046179443, 0.45230518625770344, 0.2069771212472773, 0.011985111205405019, -0.13340737600495345, -0.25118572312437415, -0.3465447203168335, -0.41841270555325316, -0.46716351259662403, -0.49426463759060013, -0.5020873759740141, -0.4935411203829876, -0.4718732756380106, -0.4403430186079609, -0.4020789778389311, -0.3598466122121664, -0.31599788585651734, -0.27234875828661753, -0.23022243461421077, -0.19042266648772532, -0.15334848689162772, -0.1190300074790942, -0.08728021690743404, -0.05775248603964522, -0.030092833164424793, -0.003980038295146926, 0.020752055360228283, 0.04412198700611114, 0.06592542078009522, 0.08580541593056523, 0.10322236918631056, 0.11758382822962243, 0.12823750236311682, 0.1346406110647429, 0.1360276184941105, 0.07380141245071492, -0.022984699149989574, -0.07684245682242619, -0.0739628503290044, -0.06612093695559729, -0.05328464669368227, -0.03493702903857265, -0.01103072398879501, 0.01815793435016566, 0.0517372484096672, 0.0882749227914621, 0.12610190193888382, 0.1624390864620544, 0.1891149459926238, 0.2107101576179522, 0.2655000576187527, 0.3460092924393674, 0.4005631729052972, 0.41524480264635644, 0.39990717326473657, 0.3135737652908914, 0.2728443252127617, 0.22173279457885453, 0.1633599869219884, 0.10136629583078038, 0.039630315041875974, -0.018013425980512032, -0.06812135621999937, -0.10786033014220386, -0.13529529483867941, -0.14945372326109907, -0.15046021905133244, -0.13940758435087708, -0.11831470941862676, -0.08984087908207172, -0.05711921959984023, -0.023409868035136228, 0.008094066143220946, 0.034564819139608294, 0.05367028633870907, 0.0637490956490881, 0.06383277657242004, 0.05368382532334465, 0.03372246326001427, 0.0049665281470079314, -0.031088639475877367, -0.07256987343478682, -0.11734405978944684, -0.16311352971818716, -0.20750825465167555, -0.24816452600415229, -0.2827978365179733, -0.3092773726525939, -0.32570020455647297, -0.33047821832478874, -0.3224259654881805, -0.30086009667783653, -0.2656892996641237, -0.21750088496954645, -0.1576165836095651, -0.08812268364536724, -0.011845134121596601, 0.06771877797351067, 0.14653974014493798, 0.22023944679741358, 0.28434289622456177, 0.3345483508488023, 0.3670445178870265, 0.3787924261261324, 0.36781952042228117, 0.3334084068100631, 0.27626726325572015, 0.19852634810783965, 0.10371294598581149, -0.0034937448126615145, -0.11748615773869009, -0.23218249304063932, -0.34136567692984654, -0.43923140326648014, -0.5206945043340627, -0.5818731446906908, -0.6202077358795179, -0.6347482985719206, -0.6259948124732482, -0.5959417908862417, -0.5476585874730988, -0.48515368554374216, -0.41281588051803597, -0.3352345569870496, -0.2566659045328068, -0.18094676589545378, -0.11111554978629545, -0.049490834162995156, 0.00250927693985048, 0.04414344283824967, 0.07537059958728687, 0.09656446172469746, 0.10846269393210406, 0.11191293771198829, 0.1078200526089299, 0.09698343486826744, 0.08007591868830755, 0.05758632915576989, 0.02982762836280184, -0.0030324083135102597, -0.04095141144687986, -0.08396239903363245, -0.13211916343247232, -0.18644869295928945, -0.26146192232824106, -0.3330682275027925, -0.3782432014265682, -0.42154140644445715, -0.4675488325831081, -0.4118565621206285, -0.25709005358817816, -0.13132859106112882, -0.08164102696656084, -0.02598018048996842, 0.03805007035419905, 0.11060361228360982, 0.19159522690744168, 0.2805829456793454, 0.3767983397298149, 0.4789030146850166, 0.5850295424824594, 0.6924910979621757, 0.7978739276054547, 0.8967971430693282, 0.9841563661511685, 1.0540716880717866, 1.1003824152263242, 1.1168762330726487, 1.1032767522661047, 1.154726048074597, 1.0942329246383427, 0.5244615118975737, -0.21684235149972508, -0.7042023155240891, -1.0525991856068888, -1.3663954308469108, -1.6408929546992805, -1.8599727482823951, -2.00960039940286, -2.078989409892678, -2.061611694228535, -1.9557868802837142, -1.7650225502482204, -1.4977783574961734, -1.1670303591994475, -0.7892849577977525, -0.3835731709013075, 0.0299457220753645, 0.4311660123296672, 0.8014019033350213, 1.1243427888299102, 1.3870216756825497, 1.5802781547407818, 1.6991415466456976, 1.742734645378027, 1.7140840524915717, 1.6195747532638762, 1.4683510806830604, 1.2715682528214414, 1.0416255253320656, 0.7867374762084687, 0.5281894682096056, 0.2760709088481761, 0.07801389712949991, -0.06915224874355275, -0.18967948284487868, -0.28841750823729306, -0.36434009673727097, -0.4177636353820553, -0.45016160917786685, -0.46380917462108506, -0.4615820863379776, -0.446599435833523, -0.42205202369834094, -0.3909167254494994, -0.3558654544316697, -0.3190869790828934, -0.28229294080137457, -0.24664712816876122, -0.21285591079125243, -0.18117919113647396, -0.15157435559436117, -0.12374973583310478, -0.09732422965505272, -0.07188161292681272, -0.04711064741958104, -0.022824639764349897, 0.0009424908008313082, 0.023974143814484705, 0.04582637657578825, 0.06592834019347649, 0.08357569136431131, 0.09807951507381585, 0.10874305716929733, 0.11340534942199465, 0.029316685949391186, -0.06768478727348448, -0.07943219738702467, -0.07369579412570904, -0.0633141881648509, -0.048052429185424295, -0.02752143106604521, -0.001804289946423232, 0.02904730217789897, 0.06269056493229819, 0.08499795086085626, 0.10316642761012051, 0.1428222929043219, 0.21112091465104843, 0.2746552237384492, 0.3145850056431021, 0.3396614371420865, 0.3538323711958169, 0.35510902204347605, 0.3415563396253338, 0.2541027206616753, 0.21595688703578153, 0.1678416665979745, 0.11280513505454803, 0.05440782750153028, -0.003541457352379318, -0.057319318616170456, -0.10354310908707731, -0.13950476234138653, -0.16331505910593935, -0.17412373759219357, -0.17208313902354822, -0.15839389499203382, -0.13508632885775418, -0.1049080164938252, -0.07099216291747013, -0.03666670738342315, -0.005117417866213558, 0.020781945323344875, 0.038715473037714165, 0.04700301156799375, 0.04470950932517931, 0.031615395199114715, 0.008203535088337821, -0.024444989248046056, -0.06473513715165669, -0.11068566614976816, -0.16003176116976947, -0.21033897795633916, -0.25909560594298675, -0.3038039334739313, -0.3420620879730303, -0.3716455135875434, -0.3905919213994897, -0.39728819369121315, -0.39056533763562595, -0.3697898452958056, -0.3349549062046484, -0.2867517637878556, -0.2266226896892457, -0.15677158136731562, -0.08013697521094132, -0.00030323825021216777, 0.07863389573226076, 0.15227004277273348, 0.21612684343891742, 0.2659425421314343, 0.2979543510755951, 0.3092079880193439, 0.29779676984745174, 0.2630951040303178, 0.205851233513612, 0.1282578040651312, 0.033823068101720644, -0.07275912596239831, -0.18596824996250882, -0.2997466333755434, -0.4080131683463235, -0.504993926991947, -0.5857508472206772, -0.646397699362752, -0.6844942513749626, -0.6990208299356762, -0.6905459352454235, -0.6609223787062533, -0.6132377691967332, -0.5513055785428032, -0.47950283962416007, -0.4022052909376006, -0.3236553126729924, -0.24749397721117194, -0.17676694716597385, -0.11364184281620826, -0.05957619383803969, -0.015218182181934381, 0.019320346382286857, 0.04444716618947275, 0.060805659844608506, 0.06922354381850404, 0.07049724100186339, 0.06535951334213053, 0.054368255950878464, 0.03790750886393912, 0.016166499087090003, -0.010840703152848796, -0.04322091853580723, -0.08315569486913255, -0.15031824534265326, -0.22310829209435212, -0.2863733838914069, -0.3473696074807391, -0.3999102296078032, -0.44211069172956385, -0.4722830406667322, -0.3759423851886403, -0.2316357387936554, -0.17386024199591255, -0.12329637631702006, -0.06390162438839475, 0.005070624027997184, 0.08374758489480172, 0.17195399499331288, 0.2692290253258012, 0.3746307843589225, 0.4867599342510971, 0.6034977653860167, 0.7220564536200662, 0.8387141489131764, 0.9489668792830699, 1.0473841384743103, 1.1279712330415919, 1.1842710736549655, 1.2099966790926935, 1.2117600378428257, 1.2671167965265298, 1.1804133568921795, 0.6112054652511087, -0.1067604801168045, -0.5617993058739223, -0.8966139297829194, -1.2092592497964292, -1.484170850579134, -1.7051893458815526, -1.8582007567626544, -1.9323391048804908, -1.9209070317619208, -1.8220838442769054, -1.6391117648313802, -1.3802492820751606, -1.058134664953121, -0.6890435824407959, -0.29165092998566244, 0.11409020832366146, 0.5083807260538542, 0.872661357231264, 1.1908214024626513, 1.4499072236747432, 1.6408241264534027, 1.7585013564469998, 1.802000432670976, 1.7741639522930388, 1.6812218124353064, 1.5320969713654815, 1.3377753188606567, 1.1108022600267873, 0.8605278623324004, 0.5997282839384699, 0.3374148534475019, 0.13501437166304342, -0.013154005830598337, -0.13516405145388788, -0.23611479426974924, -0.31494548702015024, -0.3720020510421982, -0.4086831177979793, -0.4272568915235553, -0.4304917393551424, -0.4214657337434895, -0.40323574933889983, -0.37870714713245324, -0.35039804153444454, -0.3204029458251556, -0.2902702942684021, -0.2610605154244521, -0.23332250979392377, -0.20722189589673778, -0.1825816385205581, -0.15904323555054045, -0.13612863877368397, -0.11339534613613722, -0.09047916795568067, -0.0672117924787683, -0.04361457059406959, -0.019962337836745725, 0.0032849659447418134, 0.025468197946492133, 0.045853554236928495, 0.06364489379684102, 0.07797222159461903, 0.06117935362244786, -0.014859015762020533, -0.08453029780676768, -0.08093199196565681, -0.07257274911369205, -0.06028803230920943, -0.04335999527477341, -0.023007648379876677, -0.017708157448781847, -0.017266335167002822, -0.0005956935832900356, 0.03817780618211142, 0.08136433251250796, 0.12099872984918036, 0.1634983822571483, 0.20772695862330792, 0.24625755392676574, 0.27443685657663863, 0.2900971319992771, 0.29211341234629984, 0.27995791794309977, 0.1925632673998403, 0.1570035009046089, 0.11198361400023171, 0.06047469400327832, 0.005951852423694337, -0.047895614208457005, -0.09742680438568474, -0.1393978656672763, -0.1711658329242094, -0.19097581846074863, -0.1980158976660924, -0.19255275860372656, -0.17579953206271814, -0.14987753046691155, -0.11753132840593439, -0.08196738416444715, -0.04650797870819379, -0.014400731783519638, 0.011482745331162836, 0.02877749760301984, 0.03580858419061261, 0.03161715399517018, 0.016009943902517088, -0.01050999948974951, -0.04679399190358691, -0.09116917547709802, -0.14153646264853204, -0.19549930070009203, -0.25046785108136227, -0.30377156243305903, -0.3527546391354499, -0.39487333421144477, -0.4277877577685092, -0.44945562843510833, -0.45822801237610955, -0.45294387551793225, -0.43302386326856435, -0.3985511747408865, -0.3503384320844931, -0.28996259592157797, -0.21976816473853023, -0.142818757235049, -0.06280489393752076, 0.01611112766223166, 0.08948995231167478, 0.15286854757354762, 0.20202549516735235, 0.23328385302026566, 0.24377464565665008, 0.2317073231650173, 0.19653479239601368, 0.13910134586680067, 0.061620732581588955, -0.03235977461891815, -0.13820963685692567, -0.2504321864545842, -0.36310917304731993, -0.47021791181129835, -0.5661611143033203, -0.6460445909048298, -0.7061453233727497, -0.7440056010479075, -0.75871616583298, -0.7507430634391512, -0.7219839678623718, -0.6753469596284503, -0.6146394763469516, -0.5440146302501336, -0.46782146895690513, -0.39007552512939103, -0.3144003055143254, -0.24364635155294367, -0.17999084339911153, -0.12474779228118393, -0.07860593283148809, -0.04159127827127396, -0.013362255744023166, 0.00675422365100431, 0.01950183662115723, 0.025653078409723307, 0.02584556017393158, 0.020549196841045614, 0.010020525314648587, -0.006279580509453098, -0.03449149025277087, -0.08533730446699739, -0.14848458950854937, -0.2142533668556812, -0.28086606114678325, -0.3338870726743215, -0.3766190780619336, -0.4181446368345263, -0.45821229371664973, -0.43092561705470267, -0.3650589257540924, -0.266536125674814, -0.2222918848942701, -0.17060814843020644, -0.10859780151225706, -0.035820342159166074, 0.04783139673252634, 0.14220395493430082, 0.2467360322533665, 0.360461371787709, 0.4817902142056365, 0.6085277244587637, 0.7376169549447074, 0.86521981658953, 0.9865174669099765, 1.0959517065282967, 1.187215105794774, 1.2537467391496584, 1.2889956658148165, 1.3059660451902992, 1.3706098805833307, 1.2446308925055654, 0.6833858894010927, 0.01647601531520948, -0.4197610636590472, -0.7496354300114696, -1.0594573376531402, -1.3333443602034132, -1.5551676357092798, -1.7108164600301023, -1.7893429332394835, -1.7839594826149785, -1.6926165797972974, -1.5183493947241384, -1.269045773368159, -0.957043428048646, -0.5981617135807884, -0.21074997510986115, 0.18568848037267394, 0.5716173598170364, 0.9288260513510878, 1.241332868207957, 1.4963688208254062, 1.684806573472474, 1.8015824935440108, 1.8455844626788451, 1.819516103025931, 1.7293470022181987, 1.5837743341162405, 1.3935631716475445, 1.1716011334733203, 0.9290649987765089, 0.6650210615490479, 0.3893648776039811, 0.1820082198646471, 0.033933427957952844, -0.08824467854389262, -0.1901085859007683, -0.27065329158276086, -0.3301720648663018, -0.37008076023890624, -0.39256061107494045, -0.400365334979889, -0.39645874085804866, -0.3838516505037921, -0.36531110977746284, -0.3432792797104369, -0.3196932924878437, -0.29600318906132284, -0.27310398602305686, -0.2514390384634604, -0.23101774874405656, -0.21157070259020827, -0.19261129019133438, -0.1736012648005243, -0.1540118942807025, -0.13346217117847115, -0.11174275783542864, -0.0889019352357554, -0.0652109060676418, -0.04119200007596646, -0.017523469795117208, 0.004973971054885062, 0.02547309519971286, 0.04262232074471051, 0.0024373025273245474, -0.06150823224537305, -0.08743962536024874, -0.08095057836132469, -0.0717103505426433, -0.07185450048433317, -0.08691969228357443, -0.1053218258835873, -0.1103912973761858, -0.09888505089778477, -0.08037017610260744, -0.044370123391747285, 0.0025281017355718305, 0.05208843240512451, 0.10026088136652689, 0.14422719023115338, 0.181240427364175, 0.20865674216759, 0.22443118676091167, 0.22717926312001335, 0.21641807050225426, 0.13104556373295395, 0.0980287427101747, 0.056156781047592474, 0.00831098279430309, -0.04215178923305252, -0.09164159392983473, -0.13666680878796456, -0.17407086815518857, -0.20135980646354223, -0.2168351971750695, -0.21981021045530102, -0.21057154904838193, -0.19042649298304992, -0.1614905480206973, -0.12658043575918332, -0.0888912592851484, -0.05181048285251921, -0.018585748276230163, 0.007845425129413719, 0.025105149214049716, 0.03146053236674706, 0.025944546488987807, 0.008337731202315624, -0.02083108160844116, -0.060380742232440054, -0.10855417800097689, -0.16314829613755677, -0.22162102684524942, -0.2812211747203879, -0.3390980919565356, -0.3924192759365286, -0.43847603745322505, -0.47479235383003315, -0.49922930761742856, -0.5100891038296314, -0.5062150434583486, -0.48708205631670287, -0.4528742580742675, -0.40453754159712885, -0.3438043616678975, -0.27317570983137607, -0.19586228459393384, -0.11566989078052092, -0.03684228225066932, 0.036152855521065064, 0.0988631088097558, 0.14713329136864872, 0.17737298909569588, 0.18684087013990025, 0.17385692039072376, 0.13800494377137795, 0.08019912365431098, 0.002731563602592524, -0.09086963243033197, -0.19597505258965464, -0.30720686175985445, -0.4187126348200101, -0.5246572672153453, -0.6195247958696548, -0.6986208093602624, -0.7582592418090943, -0.7961390946859446, -0.8113007774783929, -0.8042936311587376, -0.776869055479882, -0.7319482524636491, -0.6731214610112417, -0.604513078638075, -0.5302273697297468, -0.45424460751748574, -0.37995805430587204, -0.3102023286245128, -0.24696672287804633, -0.19157843620644144, -0.1445921058629267, -0.10607321292564897, -0.07560185208257053, -0.052562096878100206, -0.03618629318645272, -0.0257593418339086, -0.020683637740754435, -0.021551423053462138, -0.03485222857508319, -0.06549128475213539, -0.11159975488307694, -0.16770640687589466, -0.22903112175017348, -0.27535181383097207, -0.3165010650341866, -0.3569977671957183, -0.3973076420193369, -0.43708542733775957, -0.46814533592562046, -0.43489158562851493, -0.35916122070077083, -0.3167348654438502, -0.2755019066413631, -0.22366817963644436, -0.16034775750907038, -0.08512494318345887, 0.0021689768090720207, 0.10136043970845598, 0.21190755521605986, 0.33273067452222804, 0.4622014574718918, 0.597916693328159, 0.7367249960137006, 0.8745082297395648, 1.0063210813915262, 1.1262986510100141, 1.228012259289347, 1.3046188724699306, 1.3494840542816036, 1.379989938368908, 1.4521307085885873, 1.3106239529913228, 0.7466720736790258, 0.11990337619070601, -0.29397053345920554, -0.6173040020659979, -0.9226659794722565, -1.194079375480925, -1.4155214263813694, -1.572921573588248, -1.6553379082424549, -1.6558501201612827, -1.5722582941138974, -1.4072632903157132, -1.1684427334383827, -0.8676354723789625, -0.5202536261315913, -0.14408206800585255, 0.2417717050644228, 0.6182755440926133, 0.9674929986135332, 1.2737805233940689, 1.524452862530989, 1.7105045803157166, 1.8267593530018917, 1.872023999289394, 1.848742421087672, 1.7626592448039204, 1.622146780849354, 1.4377740364922893, 1.2230431882192754, 0.9911491999323019, 0.7224489693409986, 0.4307079812877763, 0.21869309320034525, 0.0720830305203286, -0.0488613735418042, -0.1503284207280302, -0.23129482941848245, -0.2920951546696937, -0.33407913874449946, -0.35943833179801743, -0.37083213960158634, -0.3712047141384298, -0.3634473017144879, -0.35027459629854363, -0.333984428026465, -0.3164296998249174, -0.29889683988184057, -0.2821745963798099, -0.26653760605743315, -0.25188603138814436, -0.23779721412790522, -0.2236951176623947, -0.20892353759885562, -0.1929023304697859, -0.17517891029242616, -0.15553776968131316, -0.1340002538255023, -0.11087203479585295, -0.08668065043260142, -0.062168049525543445, -0.038175179531564574, -0.015601633977362361, -0.0028633156310586827, -0.04084028867704337, -0.09230621008809958, -0.08843518747594636, -0.09731351374630304, -0.12772281237224092, -0.1659066559947293, -0.1892698981764127, -0.20130103865788485, -0.19119902311968318, -0.1663509630398199, -0.13334501795924414, -0.09403801339743101, -0.05025712495873158, -0.004377357195309628, 0.04080147516993904, 0.08243815579656566, 0.11768696642605203, 0.1440516854463656, 0.15947520618731303, 0.16264092501222027, 0.15302368848237702, 0.07150048605826598, 0.04095369963123474, 0.0022255723214070766, -0.041907044742404365, -0.08819351360703354, -0.13319540384260264, -0.17352775445473556, -0.20619624963030359, -0.22878601829522371, -0.23973825334968768, -0.23840142347082094, -0.22516343744449352, -0.20132784419690086, -0.16907972055747755, -0.1312160949148492, -0.09099131923502723, -0.05178463888146373, -0.016911799014516227, 0.01067221357686493, 0.02851119220651377, 0.03483917339098597, 0.028622305885488086, 0.00962432591904605, -0.02164559778563846, -0.06396915449033624, -0.11553174956001255, -0.17401751268756493, -0.23674532961683203, -0.3007863654960392, -0.36310015109083693, -0.42065630177500024, -0.4705637652881749, -0.510191099117828, -0.5372876584366533, -0.5500967894261639, -0.5474611304097383, -0.5289134533283386, -0.4947462168969672, -0.4460544505730686, -0.38474171486740116, -0.31348717738193344, -0.23566329610726466, -0.15521007133075715, -0.07645646937493789, -0.003908692563381111, 0.0580050980761746, 0.10519387594151008, 0.1341853199329459, 0.1423636879497686, 0.12820462312632785, 0.0914079125157688, 0.033010878366788676, -0.04465652506434881, -0.13802602993266166, -0.2425434380883269, -0.3528805703307203, -0.4633597098073743, -0.5682457709866573, -0.6622433383117956, -0.7407423892478255, -0.8002563326463283, -0.83849194442264, -0.8546184997905977, -0.8490871470965979, -0.8236938985159705, -0.7811667929824315, -0.7250771915755463, -0.659301635738069, -0.5878998575616499, -0.5145974983310568, -0.44275161583911027, -0.3749720789954516, -0.31323772129598915, -0.2586988886416366, -0.2119275469314017, -0.1728470250209888, -0.1411236994290732, -0.11563324864616487, -0.09333216847940662, -0.07050810755862535, -0.060987617379309356, -0.06866211485834572, -0.0952255225556824, -0.1373718320658437, -0.18504221769913887, -0.2260430584626505, -0.2649228446939471, -0.30380197111368634, -0.3424773388277673, -0.38103549496249123, -0.4193926396544896, -0.45676842591391775, -0.4472267308459248, -0.4627399633268352, -0.4018121908028638, -0.3719701915401501, -0.332990854997532, -0.282304461634741, -0.21913075158979556, -0.14296821856671293, -0.053589047258775224, 0.0488967023779292, 0.16392009464478718, 0.2904089908614562, 0.4266053769881104, 0.5700471755682326, 0.7173602614405148, 0.8643160578146123, 1.0056912636979582, 1.1354949731444925, 1.2470185872882489, 1.3333169226969446, 1.387519020627714, 1.4295578610287798, 1.5070053595843884, 1.367453182641487, 0.8048262659835768, 0.20547371425761618, -0.1893994667017811, -0.5046775443874187, -0.8040073185950654, -1.071495586502464, -1.2912920932986314, -1.449454439135863, -1.5350459459087489, -1.5411059286223932, -1.4652026386148567, -1.309784428867479, -1.081959232242383, -0.7931369154701393, -0.4581051881723486, -0.09415257934342058, 0.2802514303849808, 0.6464983101172628, 0.9871575231270047, 1.2868215845722695, 1.5330814754212465, 1.7169318136357568, 1.83322048701387, 1.8805446927955947, 1.8611664892364823, 1.7804896316877832, 1.6465876259273378, 1.4697913731330203, 1.2647107953299912, 1.0464887322476812, 0.7692279134515179, 0.4599759558533787, 0.24522745154037295, 0.10187889092267888, -0.01646008933898102, -0.11615850605880595, -0.1962770433274521, -0.2571077343260484, -0.3000355441029221, -0.3271780013059544, -0.34120120539641796, -0.3449498888314828, -0.34128951936552987, -0.33280830877273715, -0.3217410668048446, -0.30978709087259304, -0.298135620269508, -0.2874036833515552, -0.27774949569099583, -0.2689026210509686, -0.2603284640893273, -0.2513051417387695, -0.24109292997338638, -0.22900917256746567, -0.21456112144393025, -0.19748005036966187, -0.17779183129228926, -0.15579019764160407, -0.13204210332733624, -0.10730179086348457, -0.08246082974059554, -0.05849100428060261, -0.06253601943932541, -0.07024275956749193, -0.09445113412170514, -0.13001853724538126, -0.1739707017922596, -0.2031727774588159, -0.2255097039584708, -0.23229521381130702, -0.23011486798807645, -0.21907630110132637, -0.19927021416124813, -0.17143563187716904, -0.1369413850791048, -0.09761144877691308, -0.055802483505845046, -0.014127558426609177, 0.024581583110062866, 0.05761284029796521, 0.08246984162934945, 0.09719385067826991, 0.10045337922366837, 0.09176320167562668, 0.01567398895742378, -0.012521580268660237, -0.04817563792186008, -0.08861161548818752, -0.13072084957973806, -0.17118272516511213, -0.20678155756509908, -0.23462434274543087, -0.25245122862460545, -0.25876027113237576, -0.253013196276191, -0.23560400983920404, -0.20790641766727846, -0.17208021892523417, -0.1309717730900517, -0.08781290332952563, -0.046040807445457854, -0.00897968503861818, 0.020333460116773172, 0.03939932868461948, 0.04635798945268188, 0.04012441643750808, 0.020393544365123972, -0.012339649680182196, -0.0568567437982761, -0.11128063429573487, -0.17320113258227243, -0.23978748151141271, -0.307934059077938, -0.3743937732578946, -0.4359273980153784, -0.4894428652709961, -0.5321393098745286, -0.5616406241327461, -0.5761228579094104, -0.5744249214696802, -0.5561396834259211, -0.521677279315174, -0.4722942517261888, -0.4100834979929455, -0.3379186399518854, -0.2593537669788475, -0.17847401501305193, -0.099707882520639, -0.02759756705777916, 0.033447018569143894, 0.07941856238370781, 0.10696098196360893, 0.11361903775047355, 0.09801612411820815, 0.06001385829956363, 0.0007463416853026317, -0.07736487353177979, -0.17076612866962693, -0.27491522749089015, -0.3846213153240554, -0.4943021849000435, -0.598442122326801, -0.6918622433221877, -0.7701831307508034, -0.829981845254447, -0.8691403283530517, -0.8867874386278416, -0.8834598633261264, -0.8608003952229035, -0.821539920234378, -0.7690146315772977, -0.707056720013727, -0.6394589031245577, -0.5698960433215858, -0.5014718193851855, -0.4367655916049067, -0.3775425520119722, -0.32492684104424807, -0.2793803933145691, -0.2376404549997133, -0.18716777703048848, -0.13327886928045807, -0.08725083004180867, -0.06760067156166816, -0.07853650070276785, -0.1080931900155564, -0.14540571737244168, -0.18358020605229175, -0.22167031234640344, -0.2594175708833477, -0.29669254042750914, -0.3335755871862611, -0.3701712939206301, -0.4065091025810714, -0.44251660480618327, -0.47077049742387445, -0.4898702270492441, -0.4732519406981073, -0.4538124169061044, -0.4296375502950802, -0.3940537197031482, -0.3459415156087253, -0.284469109088338, -0.20900651467059195, -0.11922588857317074, -0.015177373586883647, 0.10262568502330183, 0.2330717420996251, 0.3743896979415027, 0.523971371454028, 0.6783623432466044, 0.833106656716506, 0.9828634547987214, 1.1213842154514904, 1.2418492978470788, 1.3370791313334838, 1.4001297694959813, 1.4513060445952455, 1.5320967046796738, 1.4108695330962089, 0.852753126132626, 0.2693317326641669, -0.11001560030795687, -0.4158680960368706, -0.7076607123158407, -0.9697815605156919, -1.1866325120257164, -1.3444310586372055, -1.432343954740702, -1.4433315287560777, -1.3748284268161584, -1.228914866167937, -1.012319105250283, -0.7358390198733602, -0.41372286046230045, -0.0625366145914601, 0.29979835456869885, 0.6553344373003309, 0.9870426738132068, 1.2799687034442266, 1.521858643346465, 1.7038806452463815, 1.8207766504413998, 1.8710522981323878, 1.8566642960337205, 1.7827370576483599, 1.6569470339794528, 1.4894569880909545, 1.2969781496507817, 1.0967874335552876, 0.7986240910418783, 0.47393168217822534, 0.26229350434293686, 0.12431450321512472, 0.009980682918689254, -0.08663312907058085, -0.164591992705434, -0.22425036374905538, -0.2669410283877358, -0.2948148900343357, -0.31045950340035944, -0.31672201594243, -0.31636214680050134, -0.31193137666019854, -0.3055272841926655, -0.2987695976178397, -0.2926817186193489, -0.2877669891709438, -0.28400443606335557, -0.2809974745967434, -0.2780436121633265, -0.27430978293065866, -0.2689243238875427, -0.2611307634095299, -0.2503547669776678, -0.2363002014112956, -0.218959666612065, -0.19862181501080034, -0.17569087650254023, -0.15119056479578052, -0.12615486956334898, -0.08325891751054293, -0.06314931968835946, -0.08962803071658065, -0.11919357642157102, -0.15184525596012577, -0.18276699735030633, -0.2086419116708873, -0.22824624154950168, -0.2402400502158475, -0.2437801321527786, -0.23845973944958132, -0.22431517555346403, -0.20201352699711794, -0.1727476183867438, -0.13832287707349078, -0.1009446955215818, -0.06320631018461409, -0.027793265853291338, 0.002605735744293902, 0.0256176394859029, 0.03929719501988549, 0.04238727446062285, 0.03438651994203923, -0.0349963301839451, -0.06099582589725627, -0.09369792968576118, -0.1305458178007648, -0.1685480035451019, -0.20454994447608454, -0.23545372426374866, -0.25853330183631473, -0.27160969202498153, -0.2733097283751291, -0.26311903508099443, -0.24150826031535177, -0.2098273783925122, -0.17027729016640158, -0.12566735663893552, -0.07927000023454528, -0.034511892775913766, 0.005212674416275098, 0.03683006091928509, 0.05773800097885262, 0.06600626580528657, 0.060444008488105716, 0.04068628158130916, 0.007169917671695281, -0.03888312209749367, -0.09556171478268549, -0.16035572150988564, -0.23029627611843084, -0.30208971951837205, -0.37227983674603404, -0.43740319270696615, -0.4941567766514079, -0.539555840265793, -0.5710895199314039, -0.5868588610152772, -0.5856969536925267, -0.5672594784681211, -0.5320817993273792, -0.4815945301413145, -0.4180942440038362, -0.34466654911748773, -0.2650612315179628, -0.18352431844134642, -0.10458950623215846, -0.0328442586152391, 0.02732805148494366, 0.07200034556805535, 0.09795604284067361, 0.10289584243508187, 0.0856265555161545, 0.046155276398584855, -0.014241923875705886, -0.09309050681293662, -0.18679647287358137, -0.2908972411515096, -0.4002698435119485, -0.5095259479142853, -0.6132775078115262, -0.7065890739728471, -0.785190401200659, -0.8458736032212562, -0.8865409663040165, -0.9064527452942222, -0.9060451050627094, -0.8869962068260087, -0.8518302075395385, -0.8038494447022266, -0.7466198421771757, -0.6838751675937615, -0.6190170155342898, -0.5551015646442172, -0.4944649089923372, -0.43877778803292333, -0.38447421598877796, -0.3101566579594417, -0.20993412294057467, -0.11651579072457796, -0.06338086961323963, -0.0546844857313058, -0.07876945594953266, -0.11180219114319279, -0.14777202058983363, -0.18476993335862968, -0.22190295768597945, -0.2586513009022209, -0.2947487779806748, -0.33009307129518994, -0.36476891271719936, -0.3988950097941748, -0.43264800934122594, -0.46548702859824953, -0.4694283969164008, -0.5448099926186734, -0.5164153862331835, -0.5074439022684887, -0.4885010967530441, -0.45756449810749267, -0.41350863462150755, -0.35532945220005097, -0.2822752825330044, -0.19387984317447504, -0.09009563721467195, 0.02861799618536942, 0.16118641456810678, 0.30578285388158655, 0.45976044311651876, 0.6195076038672642, 0.7804723283112782, 0.9370979164837596, 1.0830257567425896, 1.2112198391164064, 1.3144189587323432, 1.385504263134834, 1.4432561113430005, 1.5255135928570134, 1.437705717872344, 0.8943925027388886, 0.30890954819349226, -0.05847503872521376, -0.3536702523734556, -0.6365252550157257, -0.8918861120554951, -1.1044585267246534, -1.2607155953897227, -1.3499233350580644, -1.3650706563284682, -1.3033851737215718, -1.1666854205901114, -0.9611773065300815, -0.6971486825603472, -0.38811095076656255, -0.050009505944093036, 0.3000090709268548, 0.6445490065978801, 0.9672090589800453, 1.2533678208137404, 1.491125097758327, 1.6716946471363476, 1.7898644789016656, 1.8439241162832047, 1.8356216750561192, 1.7696966623722048, 1.6534692039372487, 1.4969769099785175, 1.321323063158264, 1.1367915703246396, 0.8107998376269911, 0.4764480651141412, 0.27170702849027606, 0.140133500528421, 0.03114388486709352, -0.06096085739258861, -0.13538348594032357, -0.19249106839741437, -0.2337102303985148, -0.2611644067316554, -0.2774625219831348, -0.2853406436280359, -0.2875369306433342, -0.286483873983701, -0.28422423962204135, -0.2822255902279007, -0.2814099916228834, -0.2821020830940322, -0.2841499503494411, -0.28697451448194666, -0.2897408386875018, -0.29145801659555914, -0.2911489173523929, -0.2879370541463455, -0.2811071184480731, -0.27005221708035076, -0.25547107816024184, -0.2375905606692097, -0.20171743638535844, -0.1377015819984324, -0.0892548643669091, -0.06323799091745563, -0.0230958486112538, -0.05225305819764259, -0.09203752583175806, -0.13050609396996116, -0.16601297479662502, -0.1969895259709622, -0.22196447952775866, -0.2396247916794847, -0.24900991150055685, -0.2495489307839156, -0.24123709476836197, -0.22459794441028968, -0.2007929437179259, -0.17148052991538965, -0.13883151920351455, -0.10528972542227155, -0.07349931879508587, -0.04600973073449932, -0.02515564388636582, -0.012778169499514824, -0.0101199358284223, -0.017642252529333824, -0.07943496155458218, -0.103423723512994, -0.13335548842336187, -0.16677730397991875, -0.20084836530795802, -0.23253837110128628, -0.25892054933678277, -0.2773711705079729, -0.2858554800128088, -0.28304753045054776, -0.2685220703288348, -0.24273674849133575, -0.2070804775568058, -0.16370825389711952, -0.1154519147164575, -0.06555044493574991, -0.017477637926970546, 0.025356114640318173, 0.05978393052650166, 0.08313286830549171, 0.09334849456057515, 0.08914872481563707, 0.07006162904249225, 0.03647042433096992, -0.010434888204170267, -0.06870665187599867, -0.13575561220809584, -0.20846888392905427, -0.2833713251126122, -0.3567870615592019, -0.4250247895555761, -0.4845580507823968, -0.5322108263637109, -0.5653277839319597, -0.5819304876628011, -0.5808436149303189, -0.5617883795367846, -0.5254314728088341, -0.47338764410817724, -0.4081696954256955, -0.33308847239917583, -0.2521034044093402, -0.16963121977501028, -0.09032113480482118, -0.018806197643526534, 0.040551672476275114, 0.08391775448588268, 0.10821143693373814, 0.1113134344819704, 0.09220383583247749, 0.05106940822923489, -0.010698178084951548, -0.09052719519784813, -0.1848336362134, -0.2891767937745424, -0.3985798323742227, -0.5077702983091008, -0.6115942658809201, -0.7052540574724713, -0.7847212988214256, -0.8468648397494869, -0.8897635070897438, -0.9126377215947095, -0.9159999763357853, -0.9013647708310932, -0.871243768117222, -0.8286879948181776, -0.7772039322563837, -0.7202418641153172, -0.6611419256938087, -0.6026831417568046, -0.547155330265328, -0.47871866924220363, -0.3405642937986646, -0.18754897287025507, -0.08081233252144049, -0.04842173933919369, -0.06074519945059187, -0.08818327958770222, -0.11949331252521933, -0.15343010964848336, -0.1891426223619117, -0.2254531130300066, -0.2615150810642639, -0.2967897427866628, -0.3309799234750006, -0.36405780839397117, -0.3961263518927778, -0.4274491871071149, -0.45817720092605363, -0.48107078155145544, -0.5328332051554456, -0.5576935603666229, -0.5615053726558408, -0.5596428138501235, -0.5469089544528245, -0.5219152193183234, -0.48334132127445706, -0.4300596691746241, -0.36111764215383513, -0.2759231403576088, -0.17428726841954578, -0.05658601249131756, 0.07614691477022006, 0.22209417211619176, 0.37853732300910004, 0.5418018149505812, 0.7071796854204297, 0.8690151572385059, 1.0207662251317977, 1.1553114198379841, 1.2652331713938132, 1.3433695928497027, 1.4049652155401517, 1.48696941964611, 1.430538117290613, 0.9505201111933417, 0.3396476433629507, -0.03581317310623344, -0.31930655618781234, -0.5919585720790206, -0.8392422728306421, -1.046253412200981, -1.1997389212149905, -1.2891732511843221, -1.3075353959783396, -1.251962891859291, -1.1239098926764308, -0.9291763918419891, -0.6773786669221211, -0.38140608608678406, -0.05638019489068835, 0.28121087880162765, 0.6147432835417304, 0.9283226180677531, 1.2078703554312762, 1.4417155219116902, 1.6212938457246278, 1.7413182771145514, 1.7999893791332977, 1.7987408733913561, 1.7419988109963445, 1.6366724021883714, 1.4933176203932605, 1.343285245129107, 1.1484385275471576, 0.7999439718667558, 0.46704104872820107, 0.26626284882976403, 0.135219446531762, 0.029758530023331176, -0.05568588543188735, -0.12179509939641786, -0.17048302644994706, -0.2043710645793464, -0.2270526586035606, -0.24139690480370035, -0.24941061910461748, -0.253078378984533, -0.25459060408573375, -0.25581846360053273, -0.2581228440481791, -0.26222395621445393, -0.26829104074455756, -0.2759664323841804, -0.2845296293317583, -0.29299867636424004, -0.3003086790380918, -0.3054875637199963, -0.30781149524785256, -0.3039329620205411, -0.2611714724749685, -0.20372429972384598, -0.14390634210362663, -0.08549481148427418, -0.040053311983651696, -0.013793758890288998, 0.010085954483518123, 0.02323249770572744, -0.01669098348414977, -0.05964040091077294, -0.10187503120087715, -0.14172543175225272, -0.17755124639419506, -0.2077548394674258, -0.23094902850528776, -0.24603918612382714, -0.2523949911429053, -0.2498765782514365, -0.2389597615676653, -0.2206675780650995, -0.1966117573721924, -0.16881835923167543, -0.13967731200039912, -0.11168769253166122, -0.0873417629457931, -0.06884901807240462, -0.05800840442607402, -0.05598753725799188, -0.06324529383741728, -0.11697921592759863, -0.13916559836348608, -0.16653787563089972, -0.19676683341177692, -0.2271303785226051, -0.2547628369179902, -0.27685395288858805, -0.29093529429974074, -0.2950438642818616, -0.2879589306064647, -0.26926138517218134, -0.23945362252544866, -0.19987922191624252, -0.15270264682749735, -0.10070222124287626, -0.04713681281028781, 0.004532631811250576, 0.050827404231708506, 0.08852752784966256, 0.1148386091730631, 0.1276034724429338, 0.12540193466504457, 0.10766316240022378, 0.07467772831103314, 0.027605550393539957, -0.03159680252591013, -0.10025898638560315, -0.1751388906061413, -0.25257444697756837, -0.32867373740477657, -0.3995088603369856, -0.46132670876105397, -0.5107508905202418, -0.5449772037814871, -0.5619420614037907, -0.5604609647637382, -0.5403210162599508, -0.5023252953084278, -0.448278956867012, -0.38092056441480704, -0.30379551080085254, -0.22108264520722654, -0.13737775836497668, -0.057450543259970566, 0.014015367879321783, 0.07268297165536897, 0.11480688721654508, 0.13745544146169686, 0.13868282835429624, 0.11766445555241911, 0.07474887268592179, 0.011474832514742461, -0.06952544375173764, -0.16463389956865981, -0.26949226995055575, -0.3792072292005, -0.48870888158451997, -0.5929890225721506, -0.6875006798049643, -0.7683373908003537, -0.8325829449145585, -0.8783390390709851, -0.9049481393180949, -0.9128142596324098, -0.9034714762285052, -0.8792100706032184, -0.8430306608946392, -0.7981574236854687, -0.7479696261340316, -0.6955039493041462, -0.6418439810945473, -0.5560614844073328, -0.359228986623239, -0.16623204237373157, -0.07866556922267165, -0.06636720838907895, -0.08144503369118539, -0.10358259997465247, -0.13047130352648573, -0.16167587896082836, -0.19559405973212574, -0.2308531707710273, -0.26629000342393017, -0.30103686455592893, -0.3345224420399422, -0.3665010628279539, -0.39694874318820617, -0.42609948564467537, -0.45425462605270805, -0.48118871807224384, -0.4872090534366986, -0.5916337085603569, -0.5883013355546449, -0.602919309054645, -0.6082906635635048, -0.6028010082706414, -0.5849145770730093, -0.5532137770848182, -0.506328044677379, -0.44317046695754847, -0.36293432203596065, -0.26531249611469754, -0.15054608199513275, -0.01961163795118459, 0.1256966075559891, 0.28263850702729876, 0.4474589265469451, 0.6153716832343115, 0.7805849077923508, 0.9364722541002628, 1.075783004661421, 1.191053504082067, 1.2750364413931834, 1.337778832021936, 1.424908075254649, 1.3813244567593177, 0.9847267297453559, 0.37169062252114227, -0.033246139723797974, -0.312254749008559, -0.573606557286269, -0.8116435745027122, -1.0118785523495015, -1.161436157904708, -1.2499844855568032, -1.2706132085347583, -1.2203010230644482, -1.100263873909551, -0.9157709297937773, -0.6758930672240924, -0.3927253836770914, -0.0806904478859094, 0.24458367523857927, 0.5671211989449434, 0.8717420385622612, 1.144788627284191, 1.3750081293441418, 1.55394251676067, 1.6763795163969384, 1.7403294346194276, 1.747004299761632, 1.700456812905761, 1.6085883713430826, 1.4911535515127006, 1.3589129691181272, 1.1107225848340567, 0.7009621461271074, 0.32670420644574616, 0.11501599521212036, -0.01845204988589888, -0.11746415563555512, -0.18541308467800643, -0.22629553636964594, -0.24510718598293746, -0.2475304605818378, -0.23896851028981558, -0.2243390014862099, -0.2081941758019603, -0.19432768398100286, -0.18512006953403315, -0.18154991676382082, -0.18328125426523556, -0.18895958695427417, -0.19643654006519817, -0.203159095806134, -0.20649692991516488, -0.20413725670338323, -0.19440173573019592, -0.17652419698669775, -0.15019199707971964, -0.10842461774496837, -0.05915600387661968, -0.015831725281891806, 0.0225391093978331, 0.038453868217808385, 0.01626159322944254, 0.00551409605318387, 0.0689245053097256, 0.06745997253121416, 0.023848629448871783, -0.021710857935118177, -0.06720773865021812, -0.11096885953875812, -0.15124843825608725, -0.1863599560609437, -0.2147948438204912, -0.23537924784142028, -0.24735750090695685, -0.25052458566272406, -0.24522841660739392, -0.23243347473524878, -0.21361665297679444, -0.1907412704467184, -0.16605542433153486, -0.14198870295850785, -0.12089772328893611, -0.10492832614459857, -0.09577730781749771, -0.09457896802378385, -0.1017550794971096, -0.14739542356890656, -0.1679910164627456, -0.19304858971636984, -0.2203406499238032, -0.24729177130544389, -0.27115664443608245, -0.28928325445284364, -0.29929585169593, -0.29935240352856496, -0.28826266246830534, -0.26566515206903896, -0.23202810719833278, -0.18870046232238646, -0.13778157235687255, -0.08204522852398849, -0.02470744804621361, 0.030736050491559697, 0.08078426535382349, 0.12211768963362091, 0.15184872910156988, 0.16767332632000453, 0.1680464788132574, 0.15225917290575164, 0.12051307908462316, 0.0739067387834269, 0.014405857430986213, -0.055259187608964755, -0.13171577569101167, -0.21112551874280694, -0.2893761898139706, -0.36230562218256424, -0.42592759119458456, -0.4766633116181289, -0.5115534762250133, -0.5284472496640258, -0.5261474373633299, -0.5045078948861224, -0.46446834430048733, -0.4080288645737151, -0.3381568476896226, -0.25863867998761214, -0.17387621932811625, -0.08864960677513856, -0.007851250848104119, 0.0637833571014248, 0.12194083396125244, 0.16296945449970823, 0.18408264385337958, 0.18351861713103723, 0.16063594820351423, 0.11596297581471138, 0.0511588555842013, -0.031054812905285, -0.12707215862015042, -0.2325716749784732, -0.34281260117766976, -0.45285793943966546, -0.5579389146610625, -0.6536592980610312, -0.7363537938017473, -0.8031873202165798, -0.8524293080169549, -0.8833769826900122, -0.8964953116303844, -0.8931417350592028, -0.8755765659996602, -0.8465330025735502, -0.8091615998617643, -0.7665353352541553, -0.7198332768982376, -0.6315722652053961, -0.4011737230424557, -0.1789287284586687, -0.10646104968112802, -0.09980186472338382, -0.10853240457333868, -0.12306444526136495, -0.14459822366297548, -0.17174783437347863, -0.20296881060488126, -0.23659432521276358, -0.27116368789206735, -0.30546281263766684, -0.3385889762900449, -0.36999012924438457, -0.3994079766850982, -0.42692342860551946, -0.45279294553911065, -0.47743542694013463, -0.4930571711916203, -0.5465135578304379, -0.5904365324866143, -0.6155189184576724, -0.6377546795657105, -0.651013126354897, -0.6535989206687844, -0.6439177925440491, -0.6202882968462653, -0.5812192547323782, -0.5253555509840186, -0.4517555355631364, -0.3598942203158977, -0.24991589522538682, -0.12267798492533011, 0.020047668431054433, 0.17552685222496756, 0.3399554847499857, 0.5084720021737112, 0.6752071009460625, 0.8334404379758968, 0.9758701827708389, 1.0949744581403849, 1.1835057948170302, 1.2449679578195099, 1.3352623959819176, 1.3240548196848234, 0.9928876755389888, 0.3918784777091364, -0.05250856928401548, -0.33020778877752033, -0.579387014895012, -0.807175599909308, -0.9995988560277951, -1.1441549223132972, -1.230823396173049, -1.252759631442946, -1.2069135756203302, -1.0941698939238353, -0.9194009336794053, -0.6909927564287051, -0.4203790703523316, -0.12110828709834731, 0.19192300663609085, 0.5035802852373932, 0.7992762854172764, 1.0659635294204, 1.2926965967620596, 1.4712863954112674, 1.5965010357405562, 1.6663290059234184, 1.6825976174865929, 1.6543862597731382, 1.5937120955474247, 1.4643354404967672, 1.2659619287507038, 0.8877150770828619, 0.3721111799003074, -0.003462123437437903, -0.18209980634506895, -0.2798620370299698, -0.3366855894844685, -0.36307673242432514, -0.365131075990214, -0.34673942692650606, -0.31255289358594496, -0.2671724281315164, -0.21586937461118616, -0.16428910264739116, -0.11684653141540657, -0.07629705807230636, -0.043877762805390574, -0.019623235045822085, -0.0024929651122125307, 0.009325342639108669, 0.018152910048687687, 0.026449977500671906, 0.03649865628132609, 0.050074467284945356, 0.06824888792615802, 0.09125006292499371, 0.11554341362891485, 0.10644461283335183, 0.08481937978487775, 0.06161845845379865, 0.037328786838910055, 0.011327710040142769, 0.04437012641608096, 0.13234963436079106, 0.11278679148941251, 0.06793026900697718, 0.020419987597653844, -0.02779028768147107, -0.07495437967437546, -0.11923032440609926, -0.1588288902367596, -0.19214534919756243, -0.2178925763769355, -0.23523149404423727, -0.24384047738880943, -0.2439955258793689, -0.236538722940983, -0.22287641453596052, -0.2048399077550931, -0.1846004435837405, -0.1644516794409121, -0.14667232319742052, -0.13328940118185084, -0.12594112719230544, -0.12569168595821378, -0.1329499323305201, -0.17086686932756834, -0.19008245554684988, -0.21306790686265709, -0.23771456434882055, -0.2615599798036383, -0.2820097972164537, -0.29651796505391226, -0.30284088043216184, -0.2991919598505962, -0.28445540570739125, -0.2582556220835197, -0.2210718661964136, -0.17418797388240792, -0.11968274401129025, -0.06026312685717722, 0.0008544204205685468, 0.06018855349788499, 0.11417406214670889, 0.15942558592889083, 0.19292222368625578, 0.21223197466230082, 0.2156480073363234, 0.20233066042586567, 0.17236083618134002, 0.12677659870026803, 0.06752817239260045, -0.002595079680360435, -0.08010618358910326, -0.16099016536084454, -0.24092256194680317, -0.3155041824122877, -0.3805176838358211, -0.432177282194921, -0.46736744847702116, -0.48384513807590057, -0.4803990237697975, -0.4569455709376138, -0.41456104612125655, -0.35543728193543034, -0.28277191896867326, -0.2005894494677365, -0.11351680269381337, -0.026515293218628555, 0.05539835015841077, 0.1274395204875125, 0.1853180888354018, 0.2254756615318838, 0.24527240526845562, 0.2431229963612347, 0.21857469185636624, 0.1723162119821795, 0.10614056829223606, 0.02282342215830857, -0.07401374688163909, -0.18014065374772503, -0.29091936397090024, -0.4016221247519276, -0.5076409616628821, -0.6048311020325787, -0.689656260189861, -0.7594894706086244, -0.8126208284819301, -0.8484562038764611, -0.8673417351376074, -0.8706377261087006, -0.8603677431701966, -0.8391991452453755, -0.8099835011894427, -0.7752487452155066, -0.7013286044512932, -0.4761288635063725, -0.23141606576659313, -0.14957975018756975, -0.13881706177779063, -0.14067340913571114, -0.14681563095095562, -0.1614388013151613, -0.18319359584376738, -0.21047403690544986, -0.24148866409208214, -0.2745512011357478, -0.3081278180195488, -0.3409689591430567, -0.3721590042108378, -0.40111848391441995, -0.42766051660798077, -0.4518682952947053, -0.4741629625175712, -0.49430721506184305, -0.48764288308690507, -0.5855695978450068, -0.5962066005584639, -0.6332237305205801, -0.6633855000142468, -0.6850043652157893, -0.6964224416036453, -0.695783144064662, -0.6813188734848037, -0.6512381622868109, -0.6040560205919636, -0.5385472066969745, -0.4540652691970868, -0.35054594720839827, -0.228783969493092, -0.09045352557277475, 0.06169676291208859, 0.22385959830054425, 0.39110934391137064, 0.5575266463741073, 0.7163343755765172, 0.860199668422263, 0.981596213140838, 1.0732954893371787, 1.1324413158487765, 1.2131050182428105, 1.2531163859457024, 1.007007708288345, 0.46283876817998193, -0.06806182889941859, -0.368994012631771, -0.6055605652937333, -0.8223572682887483, -1.0061176591354175, -1.144823812878895, -1.2287332116612086, -1.2511952505602881, -1.209060889345218, -1.103020645313669, -0.9374398514121083, -0.7201583106086158, -0.46180225639067896, -0.17517968597527744, 0.12571510322363366, 0.4264655369405643, 0.7132554706848317, 0.9735396962047855, 1.1968450432412787, 1.375163759463513, 1.5034788536118597, 1.5814187523386156, 1.619772226920384, 1.6258821696899348, 1.5146662792123191, 1.2996855640759897, 0.9470729617213807, 0.45189589898925764, -0.014469772758874733, -0.2555622244489859, -0.34980453483083096, -0.3919782492616255, -0.4114517583380115, -0.4127976001596574, -0.39622746722106683, -0.3631865154118117, -0.3162439579136169, -0.25866220416624053, -0.19420433564607187, -0.1267011353654226, -0.059874063308505754, 0.0030023455646457364, 0.05919753474704059, 0.10671599437482904, 0.14428817997994337, 0.17140760403519195, 0.1882286573840286, 0.19547974905308507, 0.19430900067525947, 0.1861257613867764, 0.17244799045191783, 0.1547237226522924, 0.13414551739439595, 0.11102338160835856, 0.08627733329497644, 0.06041053448612743, 0.03362601650657471, 0.0163371293085115, 0.11938256179864659, 0.1967764580313851, 0.1595299903250309, 0.11397546810417403, 0.06514435448042821, 0.014803046039261858, -0.03520307303844916, -0.08295639460942006, -0.12656030824836595, -0.1643134832894697, -0.19482800378059695, -0.21716065228634074, -0.23090253341687106, -0.2362203826937841, -0.23387662275469845, -0.2251589832562515, -0.21181684951643032, -0.19589324451208512, -0.1795959033307688, -0.16507890679322434, -0.15429288523297324, -0.14878249215666806, -0.14957009036190838, -0.15703325876162966, -0.1879603469969543, -0.2059835525030751, -0.22714278968475332, -0.24942512137716133, -0.2705015288281376, -0.2878869762618169, -0.2991708795530096, -0.3021860588155898, -0.29523685038087133, -0.2772183923632362, -0.24777965128759682, -0.20734645535643292, -0.15717725809152733, -0.09927108964560977, -0.036307291541653686, 0.028546577569015796, 0.09178572307969052, 0.14981754901133282, 0.19915498544825963, 0.23666761221443633, 0.2597621556112103, 0.26658217073390844, 0.25612741588346544, 0.22836167649725203, 0.18423723143094795, 0.1256877013952895, 0.05554199565521145, -0.022600860579088167, -0.10456220204037603, -0.18580627545342665, -0.261703549650278, -0.3278040326835634, -0.3801167199329898, -0.41536584073649685, -0.43121476185774243, -0.42643191900689326, -0.4009934111151261, -0.35610415736226475, -0.2941442689433371, -0.21853219454819284, -0.13352740573900768, -0.043971655022270295, 0.044994392262393434, 0.1282389131647248, 0.20092769125438648, 0.2587990563160927, 0.29838483609765554, 0.3171895241265976, 0.313800168993126, 0.287939314693181, 0.24045548347598134, 0.17324848162568718, 0.08915814848832326, -0.008221462632523657, -0.11472195895689907, -0.22586990669535645, -0.33709035050954306, -0.4440198293524231, -0.542675748030101, -0.6297601776268333, -0.7027293631777329, -0.7600316065084689, -0.8010211217345784, -0.82609133727503, -0.8364130074985381, -0.8339653590789222, -0.821131649417846, -0.8006358937793658, -0.7508792438265894, -0.5766561841757003, -0.31911211315014665, -0.20750198056238833, -0.18287058242643073, -0.17659010036799327, -0.17437219693265948, -0.1809165308629037, -0.19585690122451727, -0.21775434174723385, -0.24484974234589796, -0.2753581525771711, -0.3075079627175574, -0.3397403882887069, -0.3707656127161032, -0.39963324632576747, -0.42579990252646915, -0.44906150082226404, -0.4696337716160759, -0.48788731659833484, -0.4944696862362443, -0.5166410661299556, -0.5533383787233905, -0.5944996015445927, -0.638820290265377, -0.6769792032491555, -0.7073511959952992, -0.7280477920425881, -0.7371769333795353, -0.7326584549306849, -0.7125978147332841, -0.6751810904718134, -0.6190564983238778, -0.5432928749152648, -0.44773333171506025, -0.3329847719953323, -0.2007007047320588, -0.05355276806726117, 0.10460703127693272, 0.2688562269692394, 0.4332148788625023, 0.5909033977184741, 0.7345712838609568, 0.8567376117242951, 0.950218757167475, 1.008704112716945, 1.06462237207149, 1.1406366287004257, 0.9970255535857202, 0.6010920605786034, 0.003082155013930832, -0.41001413977142365, -0.6470042000259628, -0.8523116508036743, -1.026858770023272, -1.1590767253035237, -1.2396231799819803, -1.2619827556991412, -1.2230428754247553, -1.12321112489498, -0.9664864905454209, -0.7600430598423724, -0.5138373627778723, -0.23979195964625788, 0.04887458405059597, 0.33862301867837896, 0.6163005888608328, 0.8700212470442175, 1.0897010518229329, 1.2676923261005566, 1.3999440626011457, 1.4933084590550472, 1.5740562545605101, 1.5291329097328599, 1.3256986197328544, 0.974100115065768, 0.531369478188588, 0.11504430581821268, -0.18778146058604905, -0.3194607215485079, -0.3695566404770867, -0.39794533207670746, -0.40980261392248885, -0.40406306246750745, -0.38101125565587424, -0.34227717649372114, -0.29045299931978086, -0.22894044103194755, -0.16149900395061145, -0.09204759013955943, -0.02426151565591539, 0.038577796354458016, 0.09385083471515365, 0.1396459253618989, 0.17485697001852074, 0.19911790661972084, 0.21274669616989073, 0.21660455933629663, 0.21194003678556328, 0.2002340149071138, 0.18301196679401777, 0.1617368716085803, 0.13764857616118142, 0.11174668281223887, 0.08468924027153868, 0.05687239267519928, 0.02889424225663184, 0.053099553935969546, 0.20090623976768018, 0.2450826816226579, 0.20571274493710234, 0.16015910951039736, 0.11061261456977256, 0.05876521748544583, 0.0064987517834529385, -0.044158581961111665, -0.09123765792773497, -0.13292261941901184, -0.16773699997032443, -0.19463408880855892, -0.21310929894473407, -0.22323807635409887, -0.22567883376379516, -0.22163187476905533, -0.21273108583179923, -0.20092938346994438, -0.18831334615963247, -0.17695005571049527, -0.16868397504505594, -0.1649959525851037, -0.1668475998676311, -0.17460076464757968, -0.1995572309535537, -0.21655398709891083, -0.2361057234690267, -0.2563071366934677, -0.2749318023630958, -0.2896240302489693, -0.298063145129826, -0.2981848620206784, -0.28832977707664986, -0.26743517005149153, -0.23511724710600224, -0.19178252488702696, -0.13860984759654077, -0.07755356841128574, -0.011218450465258822, 0.05724259133494114, 0.12433864550949081, 0.18641762338664508, 0.23991756086913152, 0.28156917075330345, 0.3086344842511085, 0.3190809622944481, 0.31175542180103644, 0.2864810098676185, 0.24412516700760478, 0.18658481054260312, 0.11672556085968733, 0.0382426087054073, -0.04452532295175349, -0.12684215000173849, -0.20384999742350862, -0.27087201094832025, -0.323710708778882, -0.3589309681529884, -0.37409712465899725, -0.36795399840828313, -0.34052725955133534, -0.29314380555303554, -0.2283575919055394, -0.14979953769998722, -0.061946744145304544, 0.030151633619078577, 0.1211928341949633, 0.20593329733518573, 0.2795021867189742, 0.33766321576668856, 0.3770429573724623, 0.3952809581422594, 0.3911296375464859, 0.36447544148832667, 0.3163065884429552, 0.24862392487874452, 0.16429733445756378, 0.06690301402999443, -0.03950239289887891, -0.1505757670849195, -0.26196393535536444, -0.3694821048965258, -0.46940270998801914, -0.5585645771546606, -0.6346283734542624, -0.6960619089591598, -0.742319722721466, -0.7736678938894173, -0.7912696472364367, -0.7968531623362844, -0.7927150526904017, -0.7730564178221657, -0.6809866314978219, -0.44590479530846716, -0.2782393467595954, -0.22994308391663099, -0.2149964804203539, -0.2050235496382724, -0.2028063184246255, -0.2097440834816915, -0.22483485956818505, -0.2465347815651775, -0.27312737669256393, -0.3027370964322236, -0.3335900779854857, -0.3640678156342476, -0.3928499974446531, -0.41899030782729874, -0.44191520067149703, -0.46151700076724467, -0.47800604424546833, -0.49110378986861747, -0.4604255897763503, -0.5137586688207687, -0.5236155507699021, -0.5782983019602206, -0.629623436436761, -0.6757991872643991, -0.7149793630388572, -0.745304410180422, -0.7645730590267856, -0.7706473314516042, -0.7612785707614282, -0.734542241290912, -0.688743135258524, -0.6228430463147232, -0.5364149723670089, -0.430014934770087, -0.30513589664886087, -0.16447087419447204, -0.011806584435421819, 0.14787440472758195, 0.3086224911055355, 0.46362200957312805, 0.6055864179622565, 0.7270673920667328, 0.8210035621073137, 0.8811664405876884, 0.9152791354625105, 0.982703198455221, 0.9234953041487999, 0.6652190712771482, 0.2358812594165538, -0.3171068955052778, -0.6674999598691072, -0.889431389589046, -1.0562177462280404, -1.181643569945889, -1.258456802879527, -1.280402583426933, -1.2443270614517843, -1.150493736424874, -1.0024357840802498, -0.8068009638173166, -0.5727554686294365, -0.31146633696762294, -0.03523997842744819, 0.24315154802236094, 0.5113599040091756, 0.7580762862217414, 0.9737350023673343, 1.1511087447910175, 1.2901061447575608, 1.4197978782794896, 1.481409089143341, 1.3550099493470285, 1.0177057591197642, 0.5833896523957205, 0.23948335777445173, -0.07284732859222132, -0.27131786701822946, -0.3441374698482198, -0.37852882271839494, -0.3992640581789182, -0.4039547944404349, -0.39158381445932466, -0.3626218753056296, -0.31871810600995776, -0.2626176157619353, -0.19772189802085638, -0.12789964554913613, -0.05703966337074817, 0.011138525645952413, 0.07342952983171003, 0.12724948743264974, 0.17081325022994598, 0.2031254898634529, 0.22398126702708154, 0.23385800807409396, 0.23377954433788162, 0.2251637037717522, 0.2096177768418439, 0.1888100560930397, 0.16426644518907807, 0.1373226495370652, 0.10897094833710419, 0.07991876531970377, 0.0504946904754533, 0.020939069608260752, 0.10696141586189789, 0.27256322206943917, 0.28708578081035885, 0.24926796136565876, 0.2044529158153967, 0.15483493511293744, 0.1020849760878253, 0.0481876447707803, -0.004790151078334581, -0.05475762318796917, -0.09983191740005148, -0.13841846891687215, -0.169390317327339, -0.19213787536319504, -0.206647451540372, -0.21348224040525876, -0.21374203313179585, -0.20896737893391903, -0.20100005777960983, -0.19183436151757594, -0.18342867547128505, -0.17754923611647677, -0.17559660131268728, -0.17849116602310922, -0.18657137762279064, -0.20677639086420785, -0.22287576046676472, -0.24102090945420096, -0.25939408938107644, -0.27588302702155343, -0.2882262620910764, -0.2942105172975662, -0.29182899078540325, -0.27948150809221084, -0.25609789855153275, -0.22128914303681935, -0.17539431983078224, -0.11954304398286975, -0.05560224524596824, 0.01386703081139451, 0.08576193320427594, 0.1565763832978373, 0.22262630539172168, 0.2802489730577308, 0.3260557826770676, 0.35714147489964154, 0.3713091629899133, 0.36723263144323987, 0.34459892348427934, 0.30417232796704763, 0.24781184760435582, 0.17840330524877324, 0.09973351393061503, 0.01628741432113845, -0.06700351138620997, -0.14506293551689797, -0.21298956704018357, -0.2663841811915213, -0.301649757054097, -0.3162503774808094, -0.3088979554025575, -0.27966053625280196, -0.2299703396926427, -0.16254335760913063, -0.08120022693222428, 0.009377467891710678, 0.10395839210638791, 0.1970872922981517, 0.28343110446684405, 0.3580836042513067, 0.41684748795034676, 0.4564347146774621, 0.4746209242838857, 0.47030644398410426, 0.4435287376535464, 0.3953976309905336, 0.3279884780425031, 0.24419315692091725, 0.14752963421509202, 0.04195574085725706, -0.06837242799580734, -0.17928079697579946, -0.28684133950105384, -0.38750352945679634, -0.4783484845659629, -0.557125309590301, -0.6224589063935433, -0.6737496322260306, -0.7113071165313789, -0.7360955794788762, -0.7497937592094948, -0.7540042827759663, -0.7247421277145127, -0.5696508149598936, -0.35975686641672056, -0.27840487257214486, -0.2541926625794666, -0.2375194068019808, -0.22652043943388311, -0.22477193903858972, -0.2319246366417116, -0.2468307994238499, -0.26802645233106315, -0.29370247082290124, -0.3220133081368868, -0.35111392656638785, -0.37937273085070444, -0.40544830514574226, -0.42836237117392084, -0.44760294644973, -0.4630395236943805, -0.47498422343092184, -0.4711454100956951, -0.4360580111655503, -0.4353390689900376, -0.48458149824979735, -0.545208055308045, -0.6032808067590087, -0.6571530805889809, -0.7051292475860791, -0.7450544161309907, -0.7747278230043699, -0.7916495744469092, -0.7934956627746352, -0.777958205435727, -0.743238759187598, -0.6879594161498277, -0.6116219668758918, -0.5145401214866929, -0.39820430258428274, -0.2651730120729754, -0.11928710421984245, 0.034541045617967114, 0.1903070681590897, 0.3412743155450251, 0.48016238691280755, 0.5996626356087154, 0.6927949057476228, 0.7535139045317409, 0.7786610039154929, 0.8104102531545787, 0.8256616182785641, 0.6426607895245656, 0.3705175241847991, -0.022903662116803947, -0.4692213026768828, -0.8262255410162807, -1.049858983917038, -1.1863875720459856, -1.2689972910651939, -1.2965971226586426, -1.266795133331538, -1.1798181659463847, -1.0408640884643816, -0.8563598374397738, -0.6349524289591777, -0.38695839848255353, -0.1239223217175347, 0.14224558133030385, 0.39991338335318627, 0.6384909721541927, 0.8486965197874072, 1.0250144524459, 1.177239773416951, 1.3408954956477008, 1.3435841694140835, 1.0660904737581411, 0.6048675323232917, 0.2499211194473161, -0.026210806913006923, -0.23586209735053476, -0.31927469710773115, -0.35617029997325833, -0.38328997858005165, -0.3970617533830958, -0.39517300716597203, -0.37682384947748915, -0.3425172911158061, -0.29407884805255513, -0.23426288760726788, -0.1666055141185243, -0.09496015045379558, -0.023290992792221132, 0.04473747273751094, 0.10592324171801337, 0.15778866321755558, 0.19863581281400045, 0.2276202319132583, 0.24469049941765597, 0.2504924260519168, 0.24623377861161266, 0.23347952486122026, 0.2140104493164401, 0.1895854631501308, 0.161862870184887, 0.1321941470267145, 0.10165210402353964, 0.07088674428857544, 0.040271849161483075, 0.015107998250828203, 0.1730837313920084, 0.3397690441345711, 0.32417295571904337, 0.2882320230844124, 0.24479405640901142, 0.19568770292644366, 0.14268137770080358, 0.08775462652281174, 0.03309448183870778, -0.01917149107304983, -0.06703242437305779, -0.10883345547924739, -0.14332883797058305, -0.16983577649363157, -0.18823498216345413, -0.19900482210868486, -0.20314715018370633, -0.202105070967999, -0.19762538325917967, -0.19159902308270582, -0.18589814724155052, -0.182199264538617, -0.18184333641022987, -0.18570204019702774, -0.19410181596636322, -0.21087093205192364, -0.22617242227074286, -0.24307715858706003, -0.2598593274684202, -0.2744963508367254, -0.2848299698990975, -0.2887184991975933, -0.28422693482434425, -0.26977283253342976, -0.24429852421159193, -0.20736828593590628, -0.15927843544458198, -0.10107191923102155, -0.03455531212276641, 0.037785747525656666, 0.11287208550218208, 0.18720835783815093, 0.25705530888729955, 0.31866992445298914, 0.3685251385153019, 0.403563284130689, 0.4214070874652352, 0.4205659588958135, 0.40057611303171137, 0.3621008657862994, 0.30694660007563135, 0.2380160228663606, 0.1591729621118816, 0.07504220479163237, -0.00926240778984111, -0.08845205288468838, -0.15741019260702105, -0.21153761856040765, -0.24707841768409144, -0.26139059672669473, -0.253148410096232, -0.2224467323735504, -0.17081076858970468, -0.10109344632374517, -0.017288058577104692, 0.07575066575048095, 0.17262533373586886, 0.2677595700963882, 0.35573904762364916, 0.4316462746809635, 0.4913181214241844, 0.5315630942119587, 0.5502748037253926, 0.5464973487977187, 0.520393752192924, 0.47317667179206957, 0.4069740283073977, 0.32466753649563196, 0.22971097853966072, 0.12591688965420156, 0.017275158696021364, -0.09228448875380124, -0.1990358441307878, -0.2996963478403609, -0.39149626502727664, -0.4723963976134131, -0.541045551079522, -0.5969491225040917, -0.6402867683244198, -0.6720180658192128, -0.6935590683895994, -0.7002100195117871, -0.6445932013087159, -0.4649010767605182, -0.33508686761207507, -0.29192371417740093, -0.2691396115257847, -0.2508836579330156, -0.24048867922007466, -0.23913286441696857, -0.24620739516996992, -0.26067159911470905, -0.2809639245514335, -0.3053409105584628, -0.3318790621754939, -0.35874880307518753, -0.3842798576582709, -0.407110381621143, -0.42629396653583385, -0.4412886795361608, -0.4520946055833601, -0.4575295620728559, -0.3961892360549557, -0.37017337731211164, -0.3635808162805336, -0.4281016315035924, -0.49358630059642294, -0.5577015729433734, -0.6189269551196057, -0.6753019120284289, -0.7247373736746159, -0.7646762398255627, -0.7925939468990446, -0.8057609580476184, -0.8017882487835806, -0.7784835117919426, -0.7343907230687172, -0.6686941187968474, -0.5816843234751046, -0.47464396927314834, -0.3501747543846161, -0.21199879177852665, -0.06509758551197553, 0.08462078085287938, 0.2303919414368254, 0.36507948962034575, 0.48143147472173276, 0.5726779594088209, 0.6328863290564368, 0.6575624386642409, 0.652290013025483, 0.6651373751368399, 0.6158761023555693, 0.3930343182888776, 0.14468473894195588, -0.17149128083887266, -0.510947767619296, -0.8193490702120849, -1.0343687071400414, -1.1708665532137559, -1.24172053256102, -1.2501408333133615, -1.1914091066834054, -1.0737093368630521, -0.909009419163187, -0.7069136273752274, -0.47769741279014966, -0.23233888527005497, 0.017562483436636356, 0.26057985170766607, 0.4880704319981408, 0.6871319640318223, 0.8480160886332255, 0.9938035968526782, 1.1210689985088016, 0.96988409401242, 0.5356017640401745, 0.13455815313751573, -0.0907661423952375, -0.23359095474886127, -0.2989789453638907, -0.33454058908012607, -0.36486783576547, -0.3854877074634382, -0.392942120081369, -0.3851765293173748, -0.3614448233977141, -0.32245477581365467, -0.27005256186666493, -0.20715216470830722, -0.13728683982460765, -0.06441502205322358, 0.007534778447867652, 0.07486712136651796, 0.13446292186335285, 0.1839004218098097, 0.22161432751124543, 0.24689585113223877, 0.25985762254284595, 0.26133209087782205, 0.25268705474337594, 0.235684070043785, 0.21222033952693664, 0.18422322550491188, 0.15339523384781018, 0.12120613309276784, 0.08869261580804277, 0.05656573337459392, 0.025436177180916175, 0.03267706475465637, 0.23331290508425262, 0.3778370121881842, 0.3543216779902032, 0.32061986988209235, 0.2790651925222658, 0.23109203036139903, 0.17841042992806866, 0.1231103834842937, 0.06737538463116888, 0.013463643581029583, -0.036581029131843135, -0.0809740818391873, -0.11841578671428321, -0.14810617240686685, -0.169857607998823, -0.18404357687363393, -0.19158380812578502, -0.1938237643074492, -0.1924173501099733, -0.1891654048821647, -0.18584955571944728, -0.1840751981093638, -0.18511846629325618, -0.189817748585569, -0.1984844144582082, -0.21312826955813824, -0.2276994108425634, -0.24350769983852716, -0.2589056086357705, -0.27196146050781356, -0.28059443274007223, -0.2827400366752997, -0.2765020395833928, -0.2603272640046006, -0.2331359997968213, -0.19446357501804312, -0.14453189934134336, -0.08431955062667562, -0.015545868692615095, 0.05935540669052397, 0.13735125819371574, 0.21493596599471054, 0.28833430310736463, 0.3537064073988181, 0.40740300521721795, 0.44620173823627796, 0.4675571811773067, 0.46980411041507175, 0.4523344313111328, 0.4156995856450443, 0.36165324056605286, 0.2931020313995647, 0.21398108061998267, 0.1290406910717654, 0.043568772270248246, -0.0369464945132818, -0.10717969867299315, -0.16234003070444558, -0.19851226099740993, -0.21294861922786668, -0.20427447028267665, -0.17260206593607497, -0.11952590248054107, -0.048018075577702324, 0.03778959825079253, 0.13289006197768105, 0.23175843968868048, 0.32871299865862547, 0.4182927386651558, 0.4955717364100043, 0.5564438255796011, 0.5978002838814849, 0.6176593398537427, 0.6151816769928147, 0.5906462367434149, 0.5453377143026892, 0.4814126923019302, 0.40172163131375194, 0.3096167030613808, 0.2087665555274123, 0.10294085022116395, -0.004141627343591026, -0.10903398429589028, -0.20865052635829429, -0.30047984732569866, -0.3825826330283437, -0.4537785606815028, -0.5135239167577286, -0.5620546297315663, -0.600128842140041, -0.6290721826959533, -0.6366872273796833, -0.5599155935897189, -0.4033684244204103, -0.3272182940094073, -0.29704532984895593, -0.2739649103666446, -0.2558540986704094, -0.24617761509609482, -0.24499889158895982, -0.25182696610613886, -0.26550860116302255, -0.28457874698500085, -0.3072078008780039, -0.33152190473492427, -0.3556403297974935, -0.3778960585257254, -0.39693596546893417, -0.4117895921193666, -0.42201340203628135, -0.42748834456345364, -0.40827829659487413, -0.29897406296807194, -0.23639945532755124, -0.28424412356582174, -0.3526217773416782, -0.4221131185324829, -0.49162757218867625, -0.5594840709346984, -0.6238547335787157, -0.6823092392621355, -0.7323269813993258, -0.770971022857295, -0.7954690047615847, -0.8030000902800367, -0.7913020160019961, -0.7585361350523154, -0.7038501012189666, -0.6272531738075928, -0.5300572757783568, -0.41468825204743265, -0.28494445557598613, -0.14568642174610158, -0.0028835919641041485, 0.1368426348293994, 0.26637172110938145, 0.37866579095453856, 0.4670564527458869, 0.5258700562487282, 0.550724965549845, 0.5390643307086105, 0.5046566830137686, 0.4701627207136052, 0.3827156401659324, 0.18844353123696767, -0.03406914407444539, -0.25623905067419006, -0.5110534109238971, -0.7387869974730616, -0.9107996328947543, -1.024707831722404, -1.0856226996985399, -1.0954130907462982, -1.0456084302432558, -0.9435518682464377, -0.7999585675035519, -0.6260596244591561, -0.4331814278783863, -0.23265137100359645, -0.03461091341565847, 0.14820028963764464, 0.3022618515109361, 0.42262050388356087, 0.5560222687772924, 0.5842787429418683, 0.36075866214915653, 0.017392585983668774, -0.18257476092261005, -0.2527845241771143, -0.28661603579832273, -0.3172138464602048, -0.3473135529674467, -0.37194064973845764, -0.3867806016172315, -0.3886824934395392, -0.3756776866080114, -0.347261093619486, -0.3041784756360393, -0.24846276087196095, -0.18303691852273563, -0.11156674795639887, -0.03799113410323596, 0.03369730206991939, 0.09986327527150607, 0.15740823043305063, 0.20401974254965438, 0.2382402952364906, 0.25951113389186276, 0.2681209888089473, 0.2650647960456194, 0.2519182858174567, 0.2305786524990161, 0.20314157708897085, 0.17160748813619264, 0.13783639185172447, 0.10328950737089393, 0.06910715921684307, 0.03591490709124301, 0.004947092326821334, 0.05696479592821824, 0.27295691620020257, 0.3955120419951772, 0.375100238680238, 0.34443118393784733, 0.3053105036844075, 0.25899098048241864, 0.20727251801252766, 0.1521918931646571, 0.09605751462074785, 0.041123800631803764, -0.010430622027693293, -0.056792605085732806, -0.09653509899470292, -0.12880877191666085, -0.1533125211717472, -0.17035410370509885, -0.180751464204719, -0.18577044749610017, -0.1869726016418174, -0.18607370918526656, -0.1847780150632583, -0.18461858890653632, -0.18682350621308103, -0.19219471427542045, -0.20104020213303764, -0.21476520327882165, -0.22865072403711884, -0.24348359796768915, -0.2576888513569492, -0.2694105451028356, -0.2766424187942207, -0.27737321386566427, -0.26974802230568806, -0.25221566635673376, -0.223683998867083, -0.183633741776279, -0.13222853210033003, -0.07036096935743164, 0.00031711937654854694, 0.07744180702700243, 0.1580072008336999, 0.23851326750614055, 0.3151340520167465, 0.38394836209064054, 0.44117532665196646, 0.48344224398388747, 0.5080296728826288, 0.5131085221059001, 0.4979204968553832, 0.46290967086495205, 0.40976793128714384, 0.3414029952100279, 0.2618080793528108, 0.17585040631146875, 0.08897646239669177, 0.006863679369768505, -0.06496737611215408, -0.12154006022520258, -0.1587868928020688, -0.17384989108669613, -0.1653021319096466, -0.13325468241678484, -0.07935671074014605, -0.006666695081298024, 0.08056713101267515, 0.17722767692814334, 0.27768416675888474, 0.3761926997144063, 0.46725696570107633, 0.5459771417241881, 0.6082981173398734, 0.6512129685636321, 0.672840905776122, 0.6724606340917609, 0.6504330296036338, 0.6081003445889239, 0.5476164810262525, 0.47177221048458184, 0.38380369796373337, 0.2871919699775254, 0.1855007839993421, 0.08217294090583405, -0.019573281201738624, -0.11694440441460152, -0.2075959846545432, -0.2898226037466829, -0.36248018384971026, -0.4251527730733837, -0.4779529021360167, -0.5216553436764411, -0.5554830054173792, -0.5570122221627898, -0.4677720230720368, -0.36485788488046644, -0.3203624828158773, -0.2927183257737136, -0.2691603789295405, -0.2521797325569297, -0.24310568944731026, -0.2420561881572163, -0.24839721288744387, -0.2610898964897106, -0.27856614835357885, -0.2990777370022596, -0.32068683417464383, -0.34154702386096325, -0.35998170819441544, -0.3746321597940607, -0.38459899833296607, -0.38941419046972214, -0.3843745509328036, -0.2799387996240599, -0.15326570512170612, -0.1225185471069441, -0.18816008608045554, -0.2579825434870777, -0.33054615583168445, -0.40446698252309954, -0.4782895399513425, -0.5498664643298898, -0.61687069823477, -0.6763751111002563, -0.7254512077283453, -0.7608726148293554, -0.7797716998591042, -0.7794511391977457, -0.7580320601001418, -0.7143107524902437, -0.6483118435096893, -0.5611075955682532, -0.45519922055061723, -0.3342286870443383, -0.2031448499401236, -0.06777216256334029, 0.06523648284610983, 0.18896382534417366, 0.2964368117395835, 0.38126086053830743, 0.4378873768433742, 0.4622059804982457, 0.4517314039067126, 0.4060171590288659, 0.3347369261707529, 0.2618894595276595, 0.13961984668833693, -0.015228486983795975, -0.19156909558132362, -0.3843392037673663, -0.5686550814339277, -0.7232172963190315, -0.8438139422112005, -0.9243299928857187, -0.969657813470743, -0.9771187143597206, -0.9429188692640054, -0.8701538393097721, -0.7665377747996676, -0.6407974045542737, -0.5018129562660043, -0.35839282170321063, -0.2218107749222593, -0.09665033498894537, 0.021260157198378593, 0.16188879192865535, 0.19006212192607563, 0.05326845780352407, -0.15779838846902905, -0.25736243444649665, -0.2841038485874856, -0.3069100000113525, -0.33362560217777126, -0.35923850585757666, -0.3789741138437541, -0.3888761926893949, -0.38592070584766214, -0.3684247752700358, -0.33594795438373826, -0.2894553496591734, -0.23100382807804287, -0.16367598729915844, -0.0911316113606846, -0.01740382214963976, 0.05355543510471783, 0.118096177329857, 0.17320485066342073, 0.21664271428242188, 0.2470812213898803, 0.2641151666910915, 0.26818737803037607, 0.26049806333179504, 0.2427677248316087, 0.21711104285589755, 0.18572081437342547, 0.15078994576423277, 0.11419970136086732, 0.07755592544917533, 0.0419358025529224, 0.008061386374929924, -0.022648700340738515, 0.07247146243243385, 0.2958511750622925, 0.4011419208623028, 0.38505726362033954, 0.35794135020852913, 0.32167980895609016, 0.27759780370956477, 0.2273857528501626, 0.17319237430092205, 0.1172761447182995, 0.062023931746813865, 0.009609086350234719, -0.038022169770753234, -0.07941753388844974, -0.11360612174354534, -0.1402396624610669, -0.1595185490260358, -0.17219611638611965, -0.17944334969116482, -0.18274616098747365, -0.183739698941289, -0.18405523268120033, -0.18516871854353106, -0.18825814887104553, -0.1941053854406697, -0.2030099574632086, -0.2168312499397418, -0.23006438208799662, -0.24402991065800017, -0.25722153310412665, -0.2678480632420015, -0.2739638030875846, -0.273604003014874, -0.26493574922389906, -0.24641024289116809, -0.2169034947500066, -0.17585000234257597, -0.12333892567608351, -0.06019132478599065, 0.012021309767162869, 0.09098866292131813, 0.17374357075103752, 0.2567784596180829, 0.33622941971282305, 0.4080864789074796, 0.46845159832432337, 0.513799482930871, 0.5412505654212341, 0.5488112627233181, 0.5355825947811947, 0.5018977079782496, 0.44938856977327424, 0.38095442458555206, 0.3006401282188458, 0.21341440336352102, 0.12487042063526732, 0.04085712079600934, -0.03292119162298546, -0.09131632412635571, -0.13011220463839468, -0.1463456018391156, -0.13852691086488034, -0.10675826540856193, -0.05271626803230034, 0.020473399786974378, 0.1084876943362868, 0.20612344037282337, 0.3076922751262665, 0.4074065938046605, 0.49977939947911754, 0.5799402620114149, 0.6439168791019787, 0.6887879198640592, 0.712787732046706, 0.7152812091111551, 0.6967078616371705, 0.6584313181745873, 0.602584280140539, 0.5318721243320685, 0.44938147424421615, 0.3584042776161598, 0.2622452775084958, 0.16410395776236442, 0.0668883680718011, -0.02682760613702051, -0.11498666100232491, -0.19600125145526093, -0.2689293051972905, -0.33332054705066216, -0.38937646464723663, -0.4376779334668299, -0.4752359648434723, -0.47409678755165174, -0.40058868751744914, -0.34052270841638954, -0.30490150088655277, -0.2779500120617424, -0.2556200425117252, -0.23980868744600325, -0.23142392071961826, -0.23039213341808074, -0.23619307388675193, -0.24765310152146114, -0.26330616467843415, -0.2813198179693832, -0.2998213012859492, -0.31693648656981055, -0.33101015313332915, -0.34073123005073347, -0.3451894772290931, -0.3438063994281624, -0.28954863381235896, -0.09394533278694617, 0.02997247597035191, -0.009067292603957, -0.07475944455111616, -0.14505741967222896, -0.21946469860917173, -0.296923690472795, -0.375686392403793, -0.45377688547402517, -0.5284779981746306, -0.5969315744445982, -0.655747713895555, -0.7016901420747681, -0.7314179232607021, -0.7422014936558918, -0.7317478665805925, -0.6988580406083527, -0.6432497253870961, -0.5660630320324467, -0.4695958510734677, -0.35759477786579996, -0.23485175622774168, -0.10726704326262393, 0.018694961110676367, 0.1361301133361832, 0.23832975654309507, 0.3190033367001548, 0.37290921131614985, 0.3960512515512531, 0.3861829233598353, 0.3428473247388175, 0.2676432473269559, 0.16481903113056529, 0.049738707364133106, -0.08140395732593397, -0.22837605738981814, -0.38409871987526323, -0.5377894549183697, -0.6755120608225411, -0.7898646790645731, -0.8754884457321701, -0.928185035413442, -0.948080359221299, -0.9350043843766933, -0.8902657087757184, -0.8173423663995045, -0.7214575361249196, -0.6086730000905991, -0.4855056688250112, -0.3588404973433317, -0.2342550242250141, -0.10928667450235174, 0.02932024007919587, 0.08509313060160828, -0.027782862078239212, -0.20795777229091428, -0.28370271218660026, -0.3047590349379359, -0.3257636481082593, -0.34967404699180316, -0.37170309351161945, -0.3874763162501558, -0.393207122684172, -0.3862065348136974, -0.3648926177683176, -0.32908428253671396, -0.27979268872227836, -0.21926414183506315, -0.15058911746270365, -0.07754920368884566, -0.0041523282904307734, 0.06560288294402117, 0.12812985680975508, 0.18045323867169394, 0.2204393970543279, 0.24688242057851362, 0.2595140695528624, 0.25896620466910214, 0.2465815180044899, 0.22430276472740296, 0.19435662491966355, 0.15915342983735492, 0.12093441111054304, 0.08176338060687272, 0.043212120992496494, 0.00649143926093565, -0.027790306087238648, -0.05805547828106228, 0.07326044023838385, 0.30334591936777855, 0.39451184485014323, 0.3828957916234508, 0.3596284785023265, 0.32672010860908074, 0.2853337248662342, 0.2372547037160988, 0.18452876779563798, 0.1295372952078333, 0.0746188578459761, 0.022079078894820192, -0.02614228292570786, -0.06846662130639425, -0.10389885476482497, -0.13197791271825499, -0.15285679639546057, -0.16719071778158867, -0.1760869518067365, -0.18094858267474478, -0.18334186440616407, -0.18483588805822126, -0.18684957695395132, -0.19052961386046285, -0.19663121677180317, -0.20546241790243835, -0.22013470538172353, -0.23273998676995866, -0.24594710977759304, -0.2582996582006307, -0.26806841775449386, -0.27335216023343367, -0.2722224035319576, -0.26285855159273175, -0.24370168437534145, -0.2135950328846392, -0.1719162502905991, -0.11868729927150978, -0.05465011918814078, 0.018692250985015146, 0.09908953755221761, 0.18360210094396612, 0.26872326307573724, 0.3505450629867335, 0.4249810796053204, 0.4880163869545999, 0.535988186944937, 0.5658608300358812, 0.5754900518082353, 0.5638388238288716, 0.5311369006404609, 0.4789525155172405, 0.4101744394310929, 0.32888663588482414, 0.24014831353140842, 0.14967997946616673, 0.06348685803964127, -0.012563520557783647, -0.07316299995531006, -0.11396122380215656, -0.13188930460962434, -0.12539698124366883, -0.0945593183326583, -0.04106831059140381, 0.03191951853298325, 0.12002819907378326, 0.21801742683315606, 0.32016350748719313, 0.4206865825748163, 0.5141204492425633, 0.5956672358126935, 0.6614304410452743, 0.7086017669795064, 0.735505064919399, 0.7416008763526314, 0.7273714295226039, 0.6941945976822499, 0.6441497336596658, 0.5798341789195847, 0.5041716778813488, 0.42022398074741074, 0.33105435313295883, 0.2395512522315406, 0.1483686016672836, 0.05975539406635999, -0.024419118336146184, -0.10283775007137042, -0.17461520474238856, -0.23947071049554491, -0.29750045945752923, -0.34932703900435236, -0.3905913347588985, -0.3935544643718041, -0.3496585435370605, -0.3098394822976589, -0.27992738463441835, -0.2544865997761505, -0.2337678526832141, -0.21934046881957592, -0.21167096544774733, -0.21077970001664292, -0.21596256995224694, -0.22615096534740342, -0.2397604297518121, -0.2550452349919158, -0.2700803026335491, -0.28304128782550286, -0.2922972188929087, -0.29654886518730983, -0.2950052120080704, -0.2702545493321793, -0.08620605324842145, 0.1355922186573455, 0.17518231706432896, 0.11674423795099642, 0.053793037062961346, -0.015620060172896189, -0.0908673472097492, -0.17067189266697724, -0.2535233461263662, -0.3370812252387676, -0.41876351572057136, -0.4952571747173886, -0.5632110620509501, -0.618892628306484, -0.6589491770634455, -0.6801849403464653, -0.680307438871095, -0.6577442584396351, -0.6122697383179081, -0.5447639735627505, -0.4576341342754393, -0.35444417211877566, -0.24009581642488698, -0.12030964399872524, -0.001591829728265548, 0.1093958251133813, 0.20600398702673983, 0.2822522844622646, 0.3330173073418181, 0.3546038776159053, 0.3448285220048617, 0.3033967976428853, 0.23178367386036802, 0.1333497166469897, 0.012982853995752386, -0.12303981270536912, -0.2650086525727353, -0.407645505033539, -0.5455980335329862, -0.671137367871733, -0.7774117762740822, -0.8589424927011251, -0.9119917608352246, -0.9345808700799765, -0.9267074655706544, -0.8898847404856483, -0.8270999786067819, -0.7425853687618442, -0.6415027926710444, -0.5295413517434433, -0.412531171850425, -0.2961312858146474, -0.17789732755470666, -0.05325280098794494, 0.006812592706878284, -0.08977187120276753, -0.242991005173244, -0.3046224938784352, -0.32401836901286263, -0.34436670441107964, -0.36645247318499985, -0.3859072685145706, -0.3985592557733231, -0.4010017219896991, -0.39068802302854166, -0.3663413051512796, -0.3278577965317804, -0.276473480683725, -0.21446096235220136, -0.14506013174579824, -0.07204077541030873, 0.0005145918990949738, 0.06865393029990496, 0.12879621318373147, 0.17804909316260797, 0.2143674648738063, 0.23666069620724706, 0.24482296991430985, 0.23961629498598214, 0.22259565047558993, 0.19581921144082948, 0.16174217739423824, 0.1228424427768573, 0.08157308155200838, 0.03999224337424856, -0.00015549938648717898, -0.037747290137938094, -0.07204858718605323, -0.10171892613444555, 0.05534336868364953, 0.2923376228133616, 0.374677392794144, 0.3675389622741312, 0.3484926282901277, 0.31927618449962836, 0.28113524804180834, 0.2356971595033217, 0.18511645541975685, 0.13167582082049556, 0.07783838726639347, 0.025862846734498124, -0.0221857138885726, -0.06473434024844837, -0.10067238698291114, -0.12951261921192025, -0.1513068955082435, -0.16666110301631898, -0.17659762243470012, -0.18245784662675457, -0.18574292206874898, -0.18796292248081242, -0.1904986298946948, -0.19445773074120154, -0.2005920781154844, -0.20920401503669728, -0.22516972851162198, -0.23718646422857959, -0.24974312133819998, -0.26144314255920065, -0.27059376658831724, -0.27533879987337306, -0.2737657057578615, -0.2640618944097699, -0.2446466852186524, -0.21432608532257746, -0.17241901172148122, -0.11887803126865126, -0.05437148272714465, 0.01966700208101546, 0.101039337117796, 0.18683644607930106, 0.2735479293959191, 0.35723003534692, 0.4337217889252232, 0.49890530781774567, 0.5489878650845537, 0.5807940885248035, 0.5920375734221945, 0.5815562433914518, 0.5494796254711838, 0.49731626852731337, 0.42793746310594827, 0.3454589561044141, 0.2550126079903303, 0.1624300840891073, 0.07384852442111178, -0.004719133370829187, -0.06782779631228619, -0.11100264272132998, -0.1310824662636212, -0.1264496404596236, -0.09715071336280445, -0.04486592904142417, 0.02723260328520527, 0.11476086083423986, 0.2124630153661462, 0.3146339930793136, 0.415518368471667, 0.5097224346724327, 0.5925225273996033, 0.6601377399303705, 0.7098554402735195, 0.7401118994280287, 0.7504315814575535, 0.7413450773275851, 0.7142104457007656, 0.6710430885508871, 0.6143111525315053, 0.5467469505824354, 0.4711876041682451, 0.3904015438768791, 0.3070082238057623, 0.2233181615299431, 0.1413396347293019, 0.06261703992945833, -0.01167290850932634, -0.0808934400112955, -0.14475450642028775, -0.2034936626727113, -0.25734760427403547, -0.3022077005942343, -0.3183673765774637, -0.3035588214757219, -0.27394534000409987, -0.24670994885870368, -0.2232299215974729, -0.20461069962976097, -0.19171483865025607, -0.18505625049317498, -0.18440786080879867, -0.18915373813333902, -0.19805529984282533, -0.20961990297419542, -0.22201178770643049, -0.2333767663746822, -0.2418853189048803, -0.24594364397759483, -0.2443438282386743, -0.23115591650664502, -0.09282648630109325, 0.19469341345513413, 0.33331154745441793, 0.30636024454115685, 0.25376678769447825, 0.19449799647809307, 0.12707108286961422, 0.0522629437106481, -0.02894865063667762, -0.11472254393779302, -0.2029217284191862, -0.2905288994219326, -0.3743277312891875, -0.45046387098722196, -0.5152260398942126, -0.5647570498801793, -0.5958667264990476, -0.6058282552158589, -0.5931149009672678, -0.5571784904892736, -0.49900319731280574, -0.4207735939977284, -0.3261833046545397, -0.21995015840405285, -0.10788444504631878, 0.0037274563217923884, 0.10822739013715532, 0.19925802405611437, 0.27093021747175117, 0.31844598862457607, 0.33820684788454525, 0.32828039685128285, 0.28834712770859516, 0.2199354319062765, 0.12615494389774007, 0.011684104134749518, -0.1176914040855177, -0.25528435228205026, -0.3940766703045657, -0.5270102378320534, -0.6475434384416481, -0.7499037885211557, -0.8295137762314209, -0.8831107236519955, -0.9089696136910739, -0.9068518034842441, -0.8780109635965747, -0.8249897159922632, -0.7514426567061108, -0.6618387501763614, -0.5611611920997674, -0.45458977048900095, -0.34714575265764047, -0.23726616443847348, -0.12358524893089573, -0.05897946967959644, -0.1370672813156144, -0.2663457994801517, -0.32187643044856795, -0.34277214843955317, -0.36347260576852225, -0.3847890879984064, -0.40256612289873983, -0.4130396311091964, -0.4129823414140783, -0.4001975674684952, -0.37352400504790717, -0.33312385166814407, -0.2802855335895187, -0.2174619873967072, -0.14789645983052147, -0.07545887281122843, -0.004197888982758968, 0.0619123350643811, 0.1193566694241861, 0.16529912365046417, 0.19778870143194816, 0.2158654691025763, 0.21953524584530903, 0.20975019859208466, 0.188173189605223, 0.15708635995711973, 0.11902062790192325, 0.07668138884118036, 0.032538218918297446, -0.01114596653994937, -0.05268610430422882, -0.09079285713796992, -0.12487088673776903, -0.15356612394909952, 0.015916896023712823, 0.260461974702892, 0.3410230020250644, 0.3385589306694623, 0.32392172607341685, 0.29883525586592175, 0.26433813026934416, 0.22215261475893477, 0.17428107804065807, 0.12311810543004809, 0.07103180473584692, 0.02039861634352569, -0.026760235873835025, -0.06875860243243381, -0.10448723770831991, -0.133357129452076, -0.15538899222924807, -0.17110235654489991, -0.1814677867631287, -0.1877595920610431, -0.19142128332478303, -0.1939207670214188, -0.19659208050258892, -0.20053193384944323, -0.20647056613809778, -0.2147330492239724, -0.23209707346648767, -0.2435654496063172, -0.2556041818128587, -0.2668414084194437, -0.27563442243872105, -0.28014065028673085, -0.2784694194851445, -0.26879268208030727, -0.24951103845270461, -0.219380279205728, -0.17766429192327404, -0.12424302966247991, -0.05971595037228994, 0.014550291038275986, 0.09640683007126194, 0.1829730375248717, 0.2707374358990684, 0.3557236715116625, 0.4337065784784455, 0.5004752049248906, 0.5521233090725213, 0.5853491656322629, 0.5977412328804022, 0.5880226868997518, 0.5562333275660047, 0.5038224291857705, 0.43364244817439923, 0.34982780651398926, 0.25756918487515934, 0.1627845704216968, 0.07172195307043916, -0.009489821584531377, -0.07528729922615351, -0.12109565343671846, -0.14366675630523185, -0.14132685968277725, -0.11407884472577035, -0.06358648791304233, 0.006999080187351181, 0.0933020177748296, 0.19010277163008604, 0.2917325446089558, 0.3925166307382142, 0.4871415914330104, 0.5710077294143767, 0.6404404996370392, 0.6928587114209064, 0.7267856417709466, 0.7418287891701496, 0.7385346004123652, 0.7182438496327319, 0.6828826569551834, 0.6347748411365548, 0.5764579435046131, 0.5105061078958899, 0.43942322951267715, 0.36548763587249344, 0.29073767149849483, 0.21682217772602197, 0.14507701770434922, 0.07636270732658179, 0.011232014122604106, -0.050252120529032496, -0.10825282707939188, -0.16346765036533206, -0.2158071260903487, -0.2568651872674508, -0.2573588621939775, -0.23120252545617248, -0.20647363405118035, -0.1856955550500592, -0.16941918218785634, -0.1584931762419659, -0.15311417670173633, -0.15311021835800975, -0.15762816641295796, -0.16550630421700552, -0.17510701835770348, -0.1846712428287267, -0.19229768587002694, -0.19621354380797706, -0.1948822889771995, -0.18688446557356397, -0.1010380309893617, 0.21747796119960539, 0.47019615690375627, 0.4811789113832923, 0.4416757845886874, 0.39750294638337014, 0.34301531998428203, 0.2788477069829325, 0.2054232353052008, 0.12400931866798981, 0.03617672828521101, -0.05553385523478571, -0.1482660115599046, -0.23830954536078863, -0.3218760839212127, -0.3947280368156161, -0.4530303305239185, -0.4931080998348163, -0.5122738972275922, -0.5086157442639325, -0.48167848471269714, -0.43217244813392686, -0.36241767881700326, -0.27590367029483565, -0.17747239683812666, -0.07272761538417694, 0.031993414185549796, 0.13029802593128004, 0.21587429454028095, 0.2831543148967506, 0.3274349557925622, 0.3454183407835414, 0.33520903419298786, 0.2966500101324261, 0.23113224732254434, 0.14169532314103606, 0.032647188394467896, -0.09054002871050137, -0.22174045237939133, -0.3544005278982638, -0.48207844459552973, -0.5986848083198097, -0.698942743938046, -0.7785478343097285, -0.8344679229692122, -0.8649675747239787, -0.8697134299246834, -0.8496583286672781, -0.8069634341254783, -0.7447769584331283, -0.6670138454225985, -0.5780854125389432, -0.48259059461687315, -0.3850603999399187, -0.28515853516073264, -0.18150763235462541, -0.11368011952946588, -0.17223006812447927, -0.2809762795155777, -0.3368022215592781, -0.3614535729005386, -0.383537118133785, -0.4049853282393139, -0.42204920005931257, -0.4311650984364901, -0.42948924766510466, -0.4149787794556734, -0.38678118089607594, -0.3451449129688464, -0.2915746561566883, -0.2285475708170852, -0.1594334807099087, -0.08808029096039816, -0.018582074468224796, 0.04514141736088284, 0.09960460859229237, 0.1420492359818688, 0.1706239866947925, 0.1844611986491902, 0.1837276647483339, 0.16946828075143827, 0.1435515657890818, 0.10833199779803948, 0.06656755328894448, 0.020991882544008078, -0.025701754872740068, -0.07128591022689612, -0.11387536289434408, -0.15228946829795298, -0.18577117831969048, -0.21320311999672192, -0.04594976089613212, 0.20680893010597856, 0.293725178703248, 0.29600243826297934, 0.2860691813242884, 0.26536534141825197, 0.23501709155538641, 0.19654434192539494, 0.15204786483895827, 0.10377523696434299, 0.05419949298594329, 0.005607194597446075, -0.03987599789410945, -0.08060094933554907, -0.11536078539537964, -0.14355944917293917, -0.16513215911044266, -0.18056008367745557, -0.1907457079953253, -0.1969097207163969, -0.20045094925123796, -0.20278594887393336, -0.20523319946423174, -0.20885563374611615, -0.21439957715818914, -0.22218217649857264, -0.24070231545710724, -0.25169828291502083, -0.26335256699099585, -0.274347203736268, -0.2830465459788406, -0.28764056379424896, -0.28622426827368264, -0.27696689714556966, -0.2582245476071279, -0.2287136702199768, -0.1876287311210314, -0.13478796493693324, -0.07071634821576911, 0.003277062756434912, 0.08509493749287556, 0.17188103482592254, 0.260127864235125, 0.34583112481556455, 0.4247128609803408, 0.49248267782939337, 0.5451375809797843, 0.5792679699783236, 0.5923537424698488, 0.5830192393086424, 0.5512231154665923, 0.49836110274818823, 0.4272610669285837, 0.3420676091993502, 0.24800869815556537, 0.15106805591145012, 0.05757211296679232, -0.026258699117664097, -0.09477613751857383, -0.1433217165988192, -0.1685846309477479, -0.16883297675051256, -0.14403439963324205, -0.09581105851469163, -0.02728644230961441, 0.05721717428892292, 0.15253048797932367, 0.25307750733633316, 0.3532742903687609, 0.4479439731341248, 0.5326076655081788, 0.6037439285908803, 0.6588840102566271, 0.6966703897788014, 0.7167645009887584, 0.7197448550355992, 0.7069081047851746, 0.6800901421877659, 0.6414607423040883, 0.5933400323657123, 0.5380597164498708, 0.47780519797060905, 0.41457351300027984, 0.35003232666755246, 0.2855753017098688, 0.22217395630910008, 0.16052434732058085, 0.10087471140815296, 0.04326288912912446, -0.012691261296775558, -0.0689429786104796, -0.13494361190783, -0.2057056153754111, -0.20699626906767232, -0.182666540984612, -0.16115738519531408, -0.14341534754454344, -0.13001041277701564, -0.12144733684042563, -0.11793779590138342, -0.11899732518283557, -0.1238169281331718, -0.13101842998619606, -0.13902679287753061, -0.1459768509022048, -0.15002950432286966, -0.1494229311023526, -0.142628017425403, -0.07861879288615925, 0.2255935923689414, 0.5572776738212464, 0.6302261360493282, 0.6080559023691565, 0.5799185990412781, 0.542763663748568, 0.4942200354968591, 0.43417080297090394, 0.3632810339965644, 0.2824858121073657, 0.19371753135224612, 0.09928948265851023, 0.002527031634835808, -0.09297985214257753, -0.1829128149619894, -0.2630853037561396, -0.32914232323862347, -0.3774506992332256, -0.404876236391591, -0.4050522125301965, -0.3782157464113167, -0.3317270037746205, -0.26830985036223876, -0.19212237935892218, -0.10820490500914604, -0.0193704696502901, 0.07899417382928897, 0.1714721466610447, 0.2520525433014913, 0.31523529714143095, 0.3566343733180801, 0.37301464007803276, 0.3627159477483688, 0.32552753416124114, 0.2628895573118806, 0.17758631541137948, 0.0737385895198015, -0.04364465720142885, -0.1688198499453506, -0.2958165254803742, -0.4186453376866943, -0.5317683135715949, -0.630271151667122, -0.7102140704162636, -0.7687059405937671, -0.8040893101170408, -0.8158946605312458, -0.8048531354046808, -0.7727465647874787, -0.7222715778353521, -0.6568246582609252, -0.5802573661588397, -0.49664631720903607, -0.40998718482379815, -0.32123667254205657, -0.2275640410302966, -0.15862748106118119, -0.197843136723165, -0.2898990197029683, -0.3503110221816268, -0.3802123562155648, -0.4044998915760356, -0.4269959825527998, -0.4441465735003476, -0.452782252181394, -0.4502412354448375, -0.43482576733723777, -0.4058066798198232, -0.3636878593892332, -0.3100265518202674, -0.24745663028666964, -0.17934110172816775, -0.10959507576155958, -0.04226635901417364, 0.018734028886090215, 0.06998857470144859, 0.10881298509268245, 0.13343311573910732, 0.14311232648702177, 0.13809269565818738, 0.11959746097680579, 0.08955518332141565, 0.05053173597451277, 0.005313206737657339, -0.04314067847659153, -0.09215765310197988, -0.13928881511066926, -0.18273199846609067, -0.22110640352855881, -0.2538077732761739, -0.2795185131769351, -0.12935368890793697, 0.13252281394787957, 0.23355835824962323, 0.24079298707951935, 0.2356415491891859, 0.21967969176868962, 0.1937931951859202, 0.15959163959563805, 0.11897880572862318, 0.07429279640263653, 0.027866093909964196, -0.017924622317583294, -0.0610343347447555, -0.09972674041390794, -0.13281981393560294, -0.15963744000101476, -0.1800954029033046, -0.1946080696830692, -0.20403148198847865, -0.20954028919297485, -0.2124795825174497, -0.21424748771963487, -0.21611904571363638, -0.2191695480086131, -0.224122966259932, -0.23133618672049605, -0.25044181422355505, -0.26103705887799844, -0.27247844600674487, -0.28344656786186684, -0.2923480798865714, -0.2973557996958016, -0.296576008822111, -0.28813525774792303, -0.27036544619768765, -0.24191585016132278, -0.20192978222943214, -0.1501472654438336, -0.08703516075281614, -0.013835498403413915, 0.06739438616899784, 0.15383120197632705, 0.24196868488259016, 0.32778755790767056, 0.40696513329560435, 0.47515048549680783, 0.5282606173352971, 0.5627993914165588, 0.576157059176877, 0.5668754154186457, 0.5348443245594843, 0.4814090584518298, 0.40937163708662716, 0.3228719986684552, 0.22715895014506016, 0.12825087373623445, 0.032526593684127025, -0.05374097436609748, -0.12484321294159217, -0.1760735804805158, -0.20406891658475246, -0.2070615770720221, -0.18497175889012007, -0.13938591938630784, -0.07336418988511717, 0.008830746081907481, 0.10213255857779169, 0.20106601723164452, 0.3001969680776222, 0.3944846681614056, 0.47962592721005315, 0.5522381379323829, 0.6100087943762578, 0.6516739535758482, 0.6769785561428652, 0.6865060947666368, 0.6815226525285123, 0.6637593985560319, 0.6352256284171443, 0.5980361125660623, 0.5542450861913233, 0.5057687587496571, 0.4542462490666623, 0.40106753296467745, 0.34723860183413513, 0.29350665681928145, 0.24020416777051334, 0.18746411432580512, 0.135030596266434, 0.08225672734908152, 0.021628657789946715, -0.07619023765296085, -0.16095559805334858, -0.15212473690262307, -0.13033023591818527, -0.11253177443999007, -0.09836466393878318, -0.08828625619714803, -0.08280342217374326, -0.08174439211641449, -0.08462657305133092, -0.09034310996533712, -0.09754526812184583, -0.10447561830305663, -0.10931707338269181, -0.11017822105767427, -0.10436561151757062, -0.03998644912838745, 0.24765887742212167, 0.6062982772243264, 0.737992293272852, 0.7391042532951171, 0.7290174599949664, 0.7126373744653698, 0.6837940680822667, 0.6418693334665688, 0.5869348281092117, 0.519269557425261, 0.4401198708944758, 0.351126485775036, 0.2550330957699014, 0.1549847504994979, 0.055087160182875294, -0.04043424854897992, -0.12682057594542773, -0.19269508086714282, -0.23501943632997246, -0.26565672288137465, -0.2699426934731184, -0.23395381840049811, -0.1753302125492351, -0.10973567342419344, -0.040816847018737556, 0.02539956540286714, 0.06966419576386862, 0.13906602726314654, 0.22640835483249244, 0.3025327451192319, 0.3622506458429826, 0.40123576270599104, 0.41652724694583165, 0.4064616824051832, 0.37096686847842264, 0.3113225364821526, 0.23024316649617482, 0.1314905237172299, 0.019793707902115543, -0.09961967939206495, -0.22118765174803912, -0.3394779693951051, -0.4493530154580636, -0.5463501334974747, -0.6267825732320436, -0.687983583405023, -0.7283113298791051, -0.7472381730247886, -0.7452606932321402, -0.7238441168286744, -0.6852621799631198, -0.6324237314512366, -0.5686792053230363, -0.4975651469704534, -0.4226204433680998, -0.34573857373912453, -0.26262736340133763, -0.1950203875351768, -0.21653320115758135, -0.29581174318396464, -0.3630208492931759, -0.3987395398933451, -0.4259997452909223, -0.4502400855456994, -0.46828009988207864, -0.4771403519159776, -0.47452387365872273, -0.45888856201384787, -0.42979739443015097, -0.3878406679705706, -0.3347664884093615, -0.27322367424053096, -0.20666621366561955, -0.13897192393630653, -0.0741968932154129, -0.016188172108495547, 0.03169221295868496, 0.06682947536646289, 0.08755540716240962, 0.09319467407939985, 0.08413791809446636, 0.06165231740757804, 0.027851154566388203, -0.014681874080336499, -0.06294885416277474, -0.11400871586746675, -0.16496331817243437, -0.21342989260554468, -0.25738235880510985, -0.2955624855084995, -0.3271606867265042, -0.35094931449052247, -0.2310451012700554, 0.04071198384515462, 0.16232924553100325, 0.17446171674769673, 0.17427593288655885, 0.1631820662512382, 0.14216096350623264, 0.11258448430653578, 0.07643622152716256, 0.035863919515461085, -0.006726497099357243, -0.04908811140129643, -0.08910517150050024, -0.12510637721124263, -0.15584138907852307, -0.18064105945445608, -0.19935997922617976, -0.21237806512571522, -0.2205059883158611, -0.224864680117294, -0.2267789530581238, -0.22759527421889325, -0.22859891579847524, -0.23083001559855987, -0.23505139841575595, -0.24160521213824615, -0.26042482657182564, -0.2707361911742229, -0.282121158110879, -0.29331394858732995, -0.30269936641843787, -0.3084753834166982, -0.30870420997434245, -0.3015027718950516, -0.28513553745723774, -0.2582124572201474, -0.21979548190524367, -0.16957093620660357, -0.10792785099415525, -0.03606103080140555, 0.04402684641008747, 0.1295339610170756, 0.21697100246972578, 0.30230378735318775, 0.3811854638022143, 0.4492162043000376, 0.5022575250883929, 0.5367452461172104, 0.5500025626505938, 0.5405055936472278, 0.5080874450515589, 0.45404915995049944, 0.381161064863778, 0.29354882674649874, 0.1964564392466217, 0.09591337253038201, -0.0016892452534333913, -0.09005438477129335, -0.16345661496900732, -0.21716144358811906, -0.2477886020845088, -0.25353511769758175, -0.23429355847859945, -0.19159044339247489, -0.12842769616441618, -0.04896267682331423, 0.041843024330498135, 0.13867306905878785, 0.23624143865323077, 0.329703355285516, 0.414918895015135, 0.4886974464234397, 0.5488591048317808, 0.594275245930648, 0.624746722670583, 0.6408896788874374, 0.643920732461571, 0.6354761617504696, 0.6174087165063264, 0.5916120863835097, 0.5599018015863297, 0.523871216862053, 0.4848830933917604, 0.4439431462186541, 0.40179816268168145, 0.3587981754588154, 0.3150893051979655, 0.2704431117811983, 0.2245370024492943, 0.17484863551868557, 0.1004427660491638, -0.04422398260883931, -0.10960864461186759, -0.0938204269560785, -0.07638835802748112, -0.06264347991367814, -0.05247823666343798, -0.04649222433164635, -0.04475824528173433, -0.047067149212280945, -0.052559165976690636, -0.060111867273151987, -0.0681061730807011, -0.07479864954609106, -0.07823589718742863, -0.06822489068934168, 0.0002914304326711026, 0.2878204616383273, 0.6435353036180758, 0.8002073607860845, 0.8250578337567347, 0.8336488174834957, 0.8404018825006547, 0.8342032615526325, 0.814064048214866, 0.7794963236370442, 0.7301425460631501, 0.6665365994699304, 0.5895757516985203, 0.5012820552150874, 0.40415900990831677, 0.3018815055016786, 0.19867419527699504, 0.11699023826742838, 0.03588434916290684, -0.02573384729809014, -0.04539209928627885, -0.04870066835143971, -0.05447248488491496, -0.03812751400871228, 0.010587015569932134, 0.0686576757221311, 0.1217897749125827, 0.18609182555005566, 0.2190992799277658, 0.22561939355602356, 0.28877046184320143, 0.36129992347613493, 0.4182687553614257, 0.4556385973537864, 0.47046676631599604, 0.46128685612292797, 0.4279341110963033, 0.3717147329160113, 0.29507854290057445, 0.20161172047036757, 0.09561045591435224, -0.018034300142778292, -0.13428492027474626, -0.24810248521893818, -0.3548409062836342, -0.450357549982904, -0.5312983152683906, -0.5951353640949719, -0.6403170520122465, -0.6662239671703531, -0.6731838683475981, -0.6623596673098362, -0.63564641511425, -0.595517108710844, -0.5448272999879276, -0.4866507335755994, -0.42402419745671516, -0.3594752072472325, -0.287371243585687, -0.22465889131201422, -0.23202858152010464, -0.30174271056614366, -0.37514866577150663, -0.4165031958912886, -0.44722754802182507, -0.47384634746035736, -0.49335201848511456, -0.5031243209922458, -0.5010403062272619, -0.48587597431099194, -0.4573143646225848, -0.4161715828851382, -0.364239294433057, -0.3042851161830007, -0.2397397733395823, -0.17450630937709222, -0.11257911560484446, -0.05776220342507199, -0.013348193390646745, 0.018137133643126635, 0.03508071110431743, 0.03693006719087144, 0.024106063440202163, -0.001970487946604038, -0.039184241639498296, -0.08476706507006249, -0.13574876488098475, -0.18897605071439827, -0.24161231408033323, -0.29104443348602693, -0.3353488878148596, -0.37303538078709586, -0.4034403867501677, -0.42506498360442535, -0.3454614953851163, -0.050773093731413255, 0.08279690904439185, 0.09952879560984762, 0.1042135312072201, 0.09819572307592228, 0.08219181021796373, 0.057652320713333705, 0.026328470470615706, -0.009572489108378157, -0.047823975496438687, -0.08612804255558304, -0.12248052661729947, -0.15516000455642343, -0.1829579550732512, -0.20515585525981428, -0.22159274909669135, -0.2326076817451368, -0.23896141281394834, -0.24175417572142033, -0.24225217462220394, -0.24181055230410586, -0.24166705757835272, -0.2429011418993543, -0.24624747586139972, -0.2521095110812388, -0.2695236570798495, -0.2796406331058696, -0.2911641252227217, -0.302802016226289, -0.31298051226220913, -0.3198508609219204, -0.32148125404846706, -0.31591872056198644, -0.30140108588594394, -0.2764525033251033, -0.24008833507213634, -0.19190788776480572, -0.13225162038679983, -0.062243001494272754, 0.016148623822229258, 0.10016376469152322, 0.18632019868418048, 0.2705917363434889, 0.3486107193362318, 0.4159551177614751, 0.46844513907630914, 0.5024756922119549, 0.5153208552575612, 0.5054109649793861, 0.47253447050738817, 0.4179521682297307, 0.3444009556394567, 0.255975123222667, 0.15789616720602906, 0.05616819838095166, -0.0428331644502169, -0.1328337098546868, -0.20811713679276256, -0.26396607277683426, -0.2969940687586603, -0.30539594325923636, -0.2890239960107337, -0.24936282242895746, -0.18931931759371246, -0.11295314255707156, -0.025066792836458074, 0.06917572186747112, 0.16469830267011876, 0.2568381750268074, 0.3416786561262217, 0.416196951082517, 0.4783978665201163, 0.5272584362107153, 0.5626761483319465, 0.5852756253632982, 0.5962495987760859, 0.5971345655180196, 0.5896301875245769, 0.5754363646170675, 0.5560996805984217, 0.5329595647770264, 0.5070234364792225, 0.4790286159514119, 0.44931987000991364, 0.4180149107900666, 0.38485627909006026, 0.34946839424159926, 0.31113907187000933, 0.26321394499171724, 0.15591145324172295, -0.022132222189437556, -0.051975753416313886, -0.03587454927034006, -0.022756986792734857, -0.013359801911241753, -0.007927751064150002, -0.006703218598057781, -0.009699052096510563, -0.016266584052135435, -0.02548575408136422, -0.035875538387963424, -0.04578272004078787, -0.05290790179561622, -0.03157972008811338, 0.06406040712751793, 0.3404235017718711, 0.6665193634327884, 0.81520514625516, 0.8573288485656164, 0.886091950631279, 0.916199723520561, 0.9342607011867403, 0.938267535647308, 0.9272171537431708, 0.9001609749436978, 0.8569357836785301, 0.797679681161112, 0.7236164680854946, 0.6365405588585729, 0.5427060753344861, 0.4655842406465709, 0.3687226073509935, 0.311756883725244, 0.2779349662360566, 0.23053302900232486, 0.1921820722669998, 0.18666319831168998, 0.19347433487942833, 0.2042281011062601, 0.22177895355560695, 0.2530088859052645, 0.28237388529086216, 0.297297066730305, 0.3360164642542678, 0.3301212482454374, 0.35761970001229826, 0.42185677660432197, 0.4770991818799659, 0.5137265774261643, 0.5290263284695258, 0.5214812996394929, 0.49102434495882186, 0.4387726306397024, 0.36709331536811174, 0.27922309582890126, 0.1792044381140947, 0.07146000284857212, -0.03932661216946087, -0.14860826031804564, -0.2520834888983039, -0.34600877478519365, -0.42725529377625193, -0.4935048899855854, -0.5432387504446581, -0.5758106671333518, -0.5913734559632182, -0.5908396020522328, -0.5757633079558566, -0.5482065909311515, -0.51060010531533, -0.4655378946429334, -0.41564529378401716, -0.363313180212284, -0.30428823827620377, -0.24869784137544393, -0.24418696348584135, -0.3076004921044486, -0.3859965072507485, -0.4325834198457379, -0.46718962943421616, -0.49654070310101783, -0.5180100668715868, -0.5291488494386414, -0.5281591737850002, -0.5139628232906563, -0.48649819851371756, -0.44665716696575597, -0.39638121756612765, -0.33843606086612965, -0.27629792874102366, -0.2138134302113488, -0.15494390641048206, -0.10341947648569827, -0.06245249986939849, -0.03451046823142567, -0.02110054170691056, -0.022750888838209526, -0.038915212762516305, -0.06818545755284422, -0.10829592152822265, -0.1565226293018256, -0.2097122718816422, -0.26478123068195103, -0.3186756168162539, -0.3688774327006108, -0.41322186225036894, -0.4503457936953126, -0.4793310427207018, -0.49914129683823116, -0.47312126077916083, -0.17478744867663032, 0.005960149118364733, 0.019191882052385978, 0.02861483024798339, 0.027585646994682023, 0.0167955038622436, -0.0025663420621935273, -0.028694552650218252, -0.05960449827789316, -0.09303673417394864, -0.12685354681347394, -0.15902316888551926, -0.1879082530686249, -0.21226955924215352, -0.23140032005650468, -0.24510901123138695, -0.2536944937640562, -0.25789931237879804, -0.2587604602196758, -0.25755171515800246, -0.25556818337377085, -0.25408732145961443, -0.25414643073039245, -0.25654671714685773, -0.2616674047604184, -0.2763618140878277, -0.2864186612167696, -0.29822766106566556, -0.3105586250148076, -0.3217893089946191, -0.33009601359821206, -0.3334741313801821, -0.3299589120572737, -0.3176966330086404, -0.2951739552043642, -0.261309585312397, -0.21565654642317922, -0.15846944042226152, -0.09083290229899266, -0.014653570364696833, 0.06732999502762826, 0.15166992770851317, 0.23434046570931377, 0.3109821852112975, 0.3771568938419825, 0.4286737887405163, 0.46190165235253255, 0.4740914752728975, 0.4636425318573334, 0.43031185554883056, 0.37532515609299644, 0.3013789794791917, 0.21252624125004527, 0.11393696818229682, 0.011566573129156765, -0.08827022463625323, -0.17934929267997202, -0.2560140073086501, -0.3135820453863758, -0.3487047488197428, -0.35957213670469157, -0.34602702872854696, -0.30948463683907645, -0.2527756937097734, -0.17981340173619342, -0.09525556484359443, -0.004052527731545297, 0.0889108737285822, 0.1792183097206932, 0.2631487727138566, 0.3379077911287638, 0.40165083475153196, 0.4535128710611458, 0.49345670808451647, 0.5221557120934852, 0.5407633172199375, 0.5507382079890126, 0.5536409111601204, 0.5509705319656759, 0.544058826080795, 0.5339406381115936, 0.521369064907937, 0.5067027022999429, 0.4900350344856361, 0.47106819203561867, 0.4493416966717654, 0.42406925173437826, 0.3932257763852518, 0.33446596604061396, 0.1518344703637622, 0.0048168390738876354, 0.006861710939361387, 0.020204400012351797, 0.028799179169302747, 0.033294170743126905, 0.033406053956156256, 0.02892564768187711, 0.020310926699301568, 0.008301036825667296, -0.006049428027994352, -0.022054237530976906, -0.02759756814444625, -0.0008683652105432316, 0.14502332296581155, 0.4011148138096452, 0.6425635936674694, 0.7678940894344204, 0.8297396218473221, 0.8804425955918043, 0.9334116845492015, 0.9758581263804968, 1.0049042583086085, 1.0190748281065063, 1.0168861591785712, 0.9975204206324282, 0.960386093086024, 0.9059191137439582, 0.8347882357404002, 0.7789694022972409, 0.7064726844972924, 0.681137796181968, 0.6515249807511978, 0.571259871254286, 0.5222087195885838, 0.487780883172789, 0.4478501326012485, 0.41093838070684985, 0.3926939380257817, 0.39787143508258627, 0.41180595362743955, 0.4146847822560846, 0.43308544500064006, 0.43004358262885756, 0.418943433474968, 0.4087064129722986, 0.42037130574702664, 0.47800760076534554, 0.532572566147385, 0.5696034273466024, 0.5863587232175536, 0.5814675511577212, 0.5547287908576228, 0.5072522406990325, 0.44112916701476124, 0.35942333750122657, 0.26577392949387857, 0.16430678271857602, 0.05924122775072416, -0.045211238291464895, -0.14517664755567594, -0.23718534159537796, -0.31840246459486465, -0.38663881904238906, -0.44047075317059203, -0.47919528580743886, -0.5028449446322938, -0.5120997411390142, -0.508210356383449, -0.49288409506934094, -0.46813304563775837, -0.43615405367341253, -0.3991243321575588, -0.35910226601772166, -0.3142483632758424, -0.2664474454013046, -0.25258488150934255, -0.3134431419265393, -0.39464962642371937, -0.4459931052220405, -0.4846228836465549, -0.5169245592168146, -0.5405756011106551, -0.5534350144309332, -0.5538614189815272, -0.5410488951357273, -0.515041471781224, -0.47691116450194393, -0.42862538074047585, -0.3730202786761305, -0.31352780585536255, -0.2539733582995112, -0.19824026519544513, -0.1499819372946678, -0.11234186725695283, -0.08768837207907088, -0.07749946490217052, -0.08219714874556816, -0.10125538394554834, -0.1331486244938791, -0.1756727101654887, -0.22595900909885547, -0.2809415844888026, -0.3373505441756439, -0.39223383198528694, -0.4428436342326796, -0.48713137549244223, -0.523475543598753, -0.551098212818057, -0.5693345055530195, -0.5712564937716378, -0.35265861482899297, -0.09554453040412891, -0.0629739209800837, -0.04891032591771172, -0.04500206019426045, -0.0506949633676701, -0.06474174904848562, -0.08558979155004187, -0.11123229563392845, -0.1396143855588894, -0.1685932360747988, -0.1962673027141788, -0.22099258172306446, -0.24157712685499977, -0.2573008255514264, -0.26794959240695726, -0.2738114360741615, -0.2755654127834324, -0.27425645380847996, -0.2710862395104292, -0.267389163884743, -0.2643849060190593, -0.26318185651731096, -0.26454423045329234, -0.2689408363607426, -0.27948116735164175, -0.2895492635168748, -0.301822907539548, -0.31502405859792915, -0.3275801807098355, -0.337593771993963, -0.34306789520813785, -0.34194082212643817, -0.3323334907849942, -0.3126255006952601, -0.281694226644587, -0.23899224040492673, -0.1847339307005038, -0.11992317689408782, -0.046438413786277, 0.03303766659632679, 0.11507090770864181, 0.19566899176444652, 0.27047527884397304, 0.33506857567212656, 0.38525433967796374, 0.417405813055026, 0.4287639078749792, 0.41771786540385314, 0.38400250624509935, 0.328811807461471, 0.25479937885722004, 0.16595767214243073, 0.06738880439812345, -0.035040039455090266, -0.135099504720813, -0.22666669149795382, -0.30416539603559833, -0.36299932186797257, -0.3998621882561366, -0.41298095465953333, -0.4021698762329291, -0.3688051643295567, -0.315598840932962, -0.24634164414539317, -0.16548731273357742, -0.07779831293614858, 0.012098908446174228, 0.10000096087981625, 0.18244970269377347, 0.25683810974787136, 0.32153459937661477, 0.3757912747857741, 0.4196898587809095, 0.4539241465460959, 0.4796476271620458, 0.49823916173772265, 0.5111356037806978, 0.5196715672997705, 0.5249415472811756, 0.5277587010624472, 0.5285451473599605, 0.5274143164219727, 0.5240624702948353, 0.517960840215395, 0.5082207705433671, 0.49380166092908384, 0.4663626033185748, 0.35571012013504566, 0.11262209931231837, 0.051273554623335826, 0.06387535193963334, 0.07254109289473032, 0.0765081780261232, 0.0756784071569232, 0.06965257295157201, 0.05868211986472893, 0.04209235554585078, 0.01932880740822185, -0.0026346225672870816, -0.012913835247893246, 0.03736351068225652, 0.19435790755184446, 0.40291499763812944, 0.5642613288219369, 0.6635402743306607, 0.7418811456956544, 0.8145084477179849, 0.8893498030170475, 0.9547131208223978, 1.00811323630959, 1.0476388998656634, 1.0713251794966236, 1.0777532627344484, 1.0656552558527284, 1.0347931557580377, 1.0007192750741831, 0.9614433923269914, 0.9767785943292528, 0.9847928430623822, 0.9342871796063461, 0.901588785584984, 0.8240054557079963, 0.7237069037935355, 0.6360879106143775, 0.5713291313645592, 0.522690979632098, 0.49205907041200714, 0.48543964944183915, 0.5142097726392167, 0.5467383756654205, 0.5450152328075311, 0.5302319052303212, 0.4922375301558817, 0.46607071778789333, 0.4700329492274624, 0.5240944065137463, 0.5792597268204327, 0.6178306088115284, 0.6372445127278805, 0.6360346506715358, 0.6140503443629646, 0.5721853785079087, 0.5124292053351427, 0.43750576218999626, 0.35082015054790894, 0.25607666588500777, 0.15718997299230875, 0.05794509664431846, -0.038074059856358033, -0.12774152425915197, -0.20841560061185582, -0.2780959917536947, -0.3354000212320951, -0.37962214317844634, -0.41066897431817573, -0.42903210254133484, -0.43569564692624674, -0.43203541496736264, -0.4197136885304218, -0.4005203135658064, -0.37627347379005194, -0.3486269156729449, -0.31698000494137624, -0.28112202408493303, -0.2611816550554362, -0.31639711216504907, -0.39845377926866554, -0.4553978417701714, -0.49826471474415257, -0.5334234064776346, -0.5593273130345047, -0.5739838278948373, -0.5760225305657425, -0.5647641506731649, -0.5404567128963453, -0.504228598149381, -0.458145698111073, -0.4050203290971526, -0.34828007754292223, -0.29167367476159445, -0.23901082660467132, -0.19386270568719288, -0.15927213779616034, -0.13756319114810833, -0.13011493947782515, -0.13736536903089158, -0.15869523684062603, -0.19265169288003214, -0.23692542400488836, -0.28875623493903646, -0.3449353442914349, -0.40231343168319, -0.45774059650060206, -0.5085891065491088, -0.5525606351367838, -0.5881580787905651, -0.614332858762678, -0.6308506969645231, -0.6365225001588826, -0.5227905649550415, -0.20048067449439877, -0.1411003032803806, -0.12407114840235423, -0.11564571066195484, -0.11636554983102432, -0.12528307925000481, -0.14082180249899978, -0.16121240110094082, -0.18441153645523956, -0.2084509484161028, -0.23144820911812625, -0.2518479225468522, -0.2684682936081788, -0.28059293622031967, -0.28801071483393925, -0.29095265481730603, -0.2901094148229255, -0.2864440547259346, -0.28119669289396176, -0.27562668342712415, -0.27102717569709167, -0.26845388861667097, -0.2687716079968788, -0.27241518412210697, -0.27731486132848393, -0.28750937260117726, -0.3003388525759889, -0.3146058995836434, -0.32866682214253995, -0.34065817180126956, -0.34848342077360694, -0.3500730797593028, -0.3434313421851658, -0.3269048786558679, -0.29925531473037914, -0.25989648287561273, -0.20894387214775012, -0.14737018811949643, -0.07697883147858553, -0.000432259032419946, 0.07888919262155847, 0.15700695419365474, 0.22960441671085174, 0.2922731655065225, 0.34084941021201276, 0.3717174444321185, 0.3821353408954926, 0.3704913504649441, 0.33651068908663495, 0.2813581239043468, 0.2076359386568125, 0.11926696641018619, 0.021254776801710396, -0.08064054958243894, -0.18032228556095653, -0.2717883764587601, -0.34959651352578813, -0.4092446407642343, -0.4475183704463168, -0.4626687789050745, -0.45452219876778255, -0.4243789894404264, -0.37486645102962823, -0.309596035420622, -0.23285171819628214, -0.1491393383824926, -0.06286818812380268, 0.022043989077121573, 0.10235224976022739, 0.17570810351362454, 0.2406404462465499, 0.2965841517667016, 0.3436960869122272, 0.38274587583943376, 0.4148660602580261, 0.44139239624688553, 0.4636529950966084, 0.48282298544659685, 0.49982035740342123, 0.5151937022037414, 0.5291463872426379, 0.5414397799513746, 0.5515380995929526, 0.5584984570018998, 0.561194923067377, 0.5558633507842554, 0.5070365214996495, 0.27878512345340756, 0.10376655647607702, 0.1049690975753732, 0.11528917244311732, 0.1198375428623688, 0.11901905315520622, 0.11223378406167672, 0.0964729388554817, 0.06977273030655873, 0.03182065844884008, -0.01573159870728702, -0.026679776393237375, 0.04303618697100653, 0.17272875925499953, 0.3026097406483581, 0.40993661842915685, 0.5100042959989128, 0.6015946508957217, 0.6932518581631113, 0.7856849087900644, 0.8708737726595359, 0.9463213288157182, 1.0097142474078016, 1.058653336439832, 1.0911715462003175, 1.1053899983441888, 1.1002954373391716, 1.1010257964943735, 1.132324996577478, 1.207297427907072, 1.2269365652145536, 1.2225154100600792, 1.1427381922224975, 1.030079118804692, 0.9223289853017427, 0.8077128948190766, 0.7025255045185999, 0.6177918926807964, 0.5589669608829781, 0.524950261261037, 0.514105853230197, 0.5284999170247606, 0.5818123188557611, 0.6137685780081744, 0.5930578295752356, 0.5331164140983378, 0.4959147994030184, 0.501486395969013, 0.5556569426224014, 0.6126283812874225, 0.6540368012656343, 0.6772511083932868, 0.6808996724351397, 0.6646633853815858, 0.6293939127186068, 0.5767976561058177, 0.5094247730868853, 0.4303067806777223, 0.34288533691975154, 0.2506686616744247, 0.15715901796796228, 0.06557563615956674, -0.021183534851807018, -0.10072953269013052, -0.17117515271655392, -0.23123136278213607, -0.28016002858658595, -0.31778836043726955, -0.3444335166407093, -0.3608469240184977, -0.36812288718737207, -0.3675846707105812, -0.3606902382261108, -0.34887654845235794, -0.3334822705268117, -0.3145381180947133, -0.2905701603662312, -0.2728613637526216, -0.3178741882062006, -0.39618243624516936, -0.45964085643397823, -0.5068084230770769, -0.5445551974596583, -0.5724860749977037, -0.5888578615166065, -0.5924342505238318, -0.582751787284618, -0.5601424935818944, -0.5258603802292097, -0.48197461472819736, -0.43131573732082185, -0.37724490573356473, -0.32344445352250073, -0.27363150744955433, -0.2312714864101797, -0.19934146682952747, -0.18006237941730352, -0.17481210398162306, -0.1839462440187436, -0.20691722752925146, -0.24219900870049704, -0.28760735603229204, -0.3402866014707273, -0.3971735943474295, -0.45496895910211776, -0.5106613843656254, -0.5614041737340107, -0.6050223687384326, -0.6397451462712107, -0.6646479417477558, -0.6792366258325755, -0.6831100298345154, -0.6472325491692823, -0.3596814490577831, -0.20003506671550397, -0.1925170839430912, -0.18002174954882255, -0.17623465864515508, -0.18026116575264317, -0.1907799653971698, -0.2060381897388608, -0.22420275801114098, -0.24334659064722253, -0.26171823968862973, -0.27779941143359643, -0.29044575753750257, -0.29896428198770986, -0.3031018066941755, -0.3031098182611245, -0.2995922119110874, -0.29355068953526575, -0.28613282103608073, -0.27867120205158624, -0.272386957068929, -0.2684440057089734, -0.2676605260983205, -0.2705969967614017, -0.26840444817205467, -0.27874113288864333, -0.29224929691397383, -0.30766687052914143, -0.3234185867311252, -0.33754378440533905, -0.3479637716277959, -0.3524860011251487, -0.3490958726161759, -0.3360095866071089, -0.3119547772618305, -0.27622711323635585, -0.22891059626845855, -0.17088339335497027, -0.10392655144868002, -0.03063078861241353, 0.0456411272880235, 0.12096857166047537, 0.19105591619029783, 0.25154677161711403, 0.2983038087057164, 0.32775497929449626, 0.33717956851629793, 0.3249853256598756, 0.2908916175939482, 0.23603586631534412, 0.16296545381141714, 0.07551333558674145, -0.021427873068277314, -0.12224515752871312, -0.22099007679080618, -0.31183305209291223, -0.3894740983089471, -0.4495587931778049, -0.4889553863920031, -0.5059874985419088, -0.5004610289433904, -0.4736435877461518, -0.4280232834644919, -0.3670753443001109, -0.2948440030498891, -0.21562823010351373, -0.13354249106328986, -0.0522784255472688, 0.025211465198660576, 0.09677160915686045, 0.16116817509762793, 0.21795747097126483, 0.26744175662108205, 0.3104235895279279, 0.3480711518666624, 0.38166695085255586, 0.41246153118256323, 0.441504753457699, 0.4695282635860014, 0.496902141131077, 0.5235434986456973, 0.5490031734389147, 0.5723704415353574, 0.5924627907014293, 0.6069275364898645, 0.5965839807773882, 0.41758108901776836, 0.17328592125125564, 0.1401710826416398, 0.15371158550625363, 0.16036512596618824, 0.16110403098050075, 0.15222308139712126, 0.12745970788799887, 0.0664690142112292, -0.026106356798983654, -0.09110508192518196, -0.09722080979191361, -0.04893038769447955, 0.028935527614530443, 0.11980399618024506, 0.22016135254643032, 0.3188474001496253, 0.4191678040567419, 0.5241262765349619, 0.6285247580788891, 0.7289016719600898, 0.8225124368397307, 0.9066877317159345, 0.9786402260968634, 1.0359033304493765, 1.0760497585483537, 1.097420469520038, 1.1257944470581118, 1.2298210738276998, 1.3590385190069378, 1.4315148667045525, 1.3982455820944093, 1.3021966135372294, 1.182748376778214, 1.0478476698852366, 0.9215092694477427, 0.8098305514558874, 0.713156849389851, 0.6343269027168552, 0.5767837910019393, 0.5421195666435841, 0.5301495031991164, 0.5398096008399502, 0.5834304641602299, 0.6318913060520599, 0.6181263222710485, 0.5366898162278904, 0.49303386707248276, 0.5112161677517295, 0.5694768427494337, 0.6295608878883003, 0.6749702925004906, 0.7032065146736408, 0.7127692062032396, 0.7033479191179968, 0.6755611367355838, 0.6309963675230401, 0.5718777008452189, 0.5010193260394926, 0.42148651730876185, 0.33652628940842355, 0.24927577179324967, 0.16271421489926485, 0.07944944420256217, 0.0017104044271496477, -0.06878074746909935, -0.13077622558400392, -0.18355201545269662, -0.22684590018980444, -0.2608401117259156, -0.28608123740112035, -0.30340702366732053, -0.3138585539580738, -0.318563050410555, -0.318651916957009, -0.31511874196219836, -0.30830290983002406, -0.2962138964488812, -0.2851773993611353, -0.3189064794436174, -0.393367329836936, -0.4592501908549629, -0.5091374897784515, -0.5489126363106109, -0.5784731281875182, -0.5962026072959503, -0.6010771412538336, -0.5927370974856085, -0.5716614925016632, -0.5391374720625777, -0.49727879336392533, -0.4488693405895514, -0.39721806764542755, -0.3459125129460672, -0.2985609453058542, -0.2585411637601096, -0.2287154994377567, -0.2112762542156812, -0.2075151785967715, -0.21784339532957864, -0.2416578271583556, -0.2775623712828863, -0.3233189971863366, -0.376240908058155, -0.4331701454475887, -0.4909741586408156, -0.5464728086344977, -0.5969587414505471, -0.6400097266289748, -0.673969035988744, -0.6976162726953881, -0.7105725625379042, -0.7126653827173985, -0.6998949635465053, -0.5582490825864928, -0.28607099391299595, -0.24657299719018955, -0.23393030540835835, -0.2261991033066706, -0.2258962891670102, -0.23177522250446003, -0.24231474252089935, -0.255735309635871, -0.2702780482650018, -0.28425430910489213, -0.29622094835145263, -0.30508233198053847, -0.3101268923379781, -0.31113699319307586, -0.30827982664093656, -0.3022012270557679, -0.2937951674161028, -0.2842805044487666, -0.2748954889324138, -0.2669722789638367, -0.26161019717427214, -0.25976817728719803, -0.2619644866640791, -0.2513396601113409, -0.26188796841289363, -0.27607610459700904, -0.29275164821478405, -0.3102502014194517, -0.3266640580936673, -0.33979116515240637, -0.34744286386332046, -0.3474626730885304, -0.33804290671594206, -0.3177735942234876, -0.2859211768172871, -0.242453733574874, -0.18822724223271692, -0.12493254127347608, -0.055143643911090834, 0.017849660750304253, 0.09014806187747038, 0.15752348563864071, 0.21565254169286385, 0.26046289389656496, 0.28842044183214455, 0.29685319270316013, 0.28418864947137035, 0.2501514475730695, 0.19585025750767926, 0.12376785176844107, 0.037640209262046476, -0.057781665037822894, -0.1570424118803735, -0.25438816688668675, -0.3441679723851556, -0.42127753451816163, -0.48150178305795643, -0.5218446455196015, -0.5406723763136241, -0.5378207698604358, -0.5144718760579203, -0.4730256546035383, -0.41674984464258547, -0.34950702543082324, -0.2753067577264705, -0.19803815820385706, -0.12107945414835797, -0.04716987456083643, 0.02181558909964476, 0.08480034596966579, 0.1415464896576868, 0.19243470623209014, 0.2383757135397655, 0.2805348034447599, 0.32019711641366566, 0.35853899093494856, 0.3965069241597545, 0.4347011291669336, 0.47328452901540974, 0.511996997330888, 0.5500893857576887, 0.5863265429597146, 0.6179473504408441, 0.6276672637212835, 0.48172202709993484, 0.2415801972929933, 0.16732031958606375, 0.18428633748732848, 0.19458743239308696, 0.19799646369581758, 0.18490429918296858, 0.11953874735659475, -0.021396543729872874, -0.1583207214670912, -0.23861446719423007, -0.2571578101324885, -0.22164644462034033, -0.15699540207721085, -0.0745573969459663, 0.013495064342833984, 0.10831383737196987, 0.21078639936638766, 0.3182610801544534, 0.42808911936076033, 0.5376780309956182, 0.6441403072823064, 0.7445291201781661, 0.8357300860260879, 0.9148298222852582, 0.9789093765670205, 1.0257284676386784, 1.0741400470659808, 1.2279241527884746, 1.410080056732876, 1.5091135166146805, 1.4740740778663826, 1.374992483019538, 1.2514079507158615, 1.1278526466851186, 1.0061049162055697, 0.8885481857583781, 0.7801475789204244, 0.6856834893265487, 0.6089303680548648, 0.553037200874178, 0.5195530644828743, 0.5087677121831145, 0.5192998248633587, 0.558563442847992, 0.6094541367524462, 0.6060135109414029, 0.5109881388284083, 0.45921942799299753, 0.4981534603508786, 0.5639826746597629, 0.6282799295929866, 0.6788632771786256, 0.7131421254427366, 0.7296709637233505, 0.7279520256796843, 0.7085354363674199, 0.6727283868120111, 0.6225826513217072, 0.5605704664337292, 0.4895246105357991, 0.41233930158588983, 0.33191512651981636, 0.2509240359475715, 0.17178773752732646, 0.09652191349792627, 0.026754226210620402, -0.03635540940005555, -0.09206470498452912, -0.14006398761059202, -0.18040523525126329, -0.21346381772699985, -0.23985656687811385, -0.26036045904525373, -0.27582983685242723, -0.2870855848899634, -0.2948473635111153, -0.29945122591218976, -0.2991011464366089, -0.29629309341065735, -0.3223722191128786, -0.3913052742374443, -0.45358499695720944, -0.5042965312715832, -0.5453804658993491, -0.5759178368927405, -0.5944862700215037, -0.600174931024025, -0.5927828593232807, -0.5728501401874979, -0.5417349311733091, -0.5015315499010171, -0.45499305198277185, -0.4053423323185186, -0.3560616024138312, -0.3106556061170549, -0.2723743997628727, -0.24401969030830006, -0.22768223761700712, -0.2246790777616261, -0.2353661694774889, -0.25925858903081034, -0.29493389549447224, -0.34033574008847634, -0.39273479664169475, -0.449169712691353, -0.5064006964556076, -0.5614163000845909, -0.6113110527533427, -0.6537872386159358, -0.6869111425466148, -0.7095599384893791, -0.7210498381073123, -0.7214864305301902, -0.7104414314275389, -0.6637028554814828, -0.43778359483328777, -0.2712717194103933, -0.27375198312759896, -0.26258594246192923, -0.2585673255378007, -0.26046923265702904, -0.26682055392233117, -0.2760356446901424, -0.2864371881272032, -0.2964481801153329, -0.30470070946998784, -0.3101106208797888, -0.312022619256652, -0.31014601622145754, -0.30469807695443474, -0.2962071109382127, -0.28563661916263805, -0.2740880818432654, -0.26290884009715065, -0.2533429273019361, -0.24663887942636675, -0.24369998133481374, -0.24521255544447662, -0.2250223321022511, -0.23572584715086142, -0.2506437690821124, -0.2685469320197531, -0.2878678643819299, -0.30658258386755666, -0.3225261657786609, -0.33336307005102217, -0.33693134223330157, -0.3312687609742513, -0.3149426766545771, -0.28708077502295515, -0.24763064404899282, -0.19733685229027964, -0.13787640622344366, -0.07173484488294601, -0.0021856521464953538, 0.06695120577339075, 0.1314782631970055, 0.18715186489198476, 0.2299449507648501, 0.2563962768899848, 0.2638744564471076, 0.25084640372343436, 0.21703833768738345, 0.16353049339799552, 0.0927363456304513, 0.008274280498512532, -0.08525259728637113, -0.1825852292022625, -0.27816714313734225, -0.36657603755829093, -0.44289414228229385, -0.5031001005883287, -0.5443046070929496, -0.5649716183432756, -0.5649148642810902, -0.5452883163238762, -0.5083310568616337, -0.4571687651791434, -0.3953949141278734, -0.32680820971060065, -0.25497684155290035, -0.18305762144204074, -0.1134777505271698, -0.04793020176222296, 0.012763983916317834, 0.0684807129400502, 0.11977218679954937, 0.16758802802607775, 0.21316989622416394, 0.2577743327509845, 0.30255565539936313, 0.348375416162793, 0.39571083566605036, 0.4445985135617896, 0.49447016040759273, 0.5439514848920015, 0.5895478234146929, 0.5952585969870157, 0.456310294997192, 0.25929898843153154, 0.18372369044119946, 0.20411009551058856, 0.21904131932956727, 0.22616237485160928, 0.19890293460816277, 0.04983421505496466, -0.17084476038296526, -0.3386525613025091, -0.4156322427303749, -0.41542334403667525, -0.379077799216331, -0.32444563479089084, -0.2618287511631401, -0.1886722298836485, -0.10489458018869158, -0.011605406362479087, 0.09001506103686197, 0.19797578951481043, 0.309814910774989, 0.42266363499624227, 0.5334270795861817, 0.6387604066373278, 0.7353776694594583, 0.8199284004448337, 0.8894711241424007, 0.9464054694629045, 1.1181089389210217, 1.3559308002992672, 1.4697364394188956, 1.442782127846145, 1.3599569388853041, 1.2598050586500014, 1.1515247368469281, 1.037164942526832, 0.9207236033917723, 0.8074009551822292, 0.7027173151074209, 0.611541546363918, 0.5381261292570132, 0.4853773733622284, 0.4550743185455941, 0.4473427116999189, 0.4610440875027746, 0.50306017614971, 0.5542395563473073, 0.5492261246640648, 0.46236701432838734, 0.4048964323197648, 0.46277379902094085, 0.539040969876798, 0.608594166006013, 0.6652479635140347, 0.7065118931623644, 0.7307987630711446, 0.7375917275575539, 0.7272063456238844, 0.700822288174491, 0.6601862691973102, 0.6075701710678869, 0.5454738410554691, 0.4765675832032832, 0.40344130128492406, 0.32856964994523175, 0.2541315026439701, 0.18201266487403966, 0.1136986949303056, 0.05031260475767674, -0.007428229644157902, -0.05914961197830948, -0.10481174347873345, -0.14463238813329493, -0.17903679374278703, -0.2085755417092523, -0.2338439734869553, -0.2554063712688688, -0.27370126526757055, -0.2889524406450992, -0.29979004340176374, -0.30619017744033883, -0.3280482494781367, -0.38876024961794187, -0.4417910502513607, -0.4916583154451146, -0.53312283241298, -0.5638494663935063, -0.5825280019881927, -0.588406771552684, -0.5813682247880649, -0.5620459989836277, -0.5318096976779163, -0.49274923103722124, -0.4475512547327263, -0.39934588498333135, -0.3515066657906907, -0.30740230214513975, -0.270192746251249, -0.24255699461949742, -0.2265716212966975, -0.22348283568576033, -0.2337354508640983, -0.25682623864913756, -0.2915100466389111, -0.3357271591105544, -0.38696659343274176, -0.442221937991492, -0.4984569545691828, -0.5525268758361248, -0.6016780857731723, -0.6433798392818315, -0.6757978244942842, -0.6975092955936879, -0.7079119626337, -0.706829670072334, -0.6947176697610262, -0.6694234872414526, -0.5731431927036377, -0.3622201863028416, -0.27628816712396675, -0.28211711335839884, -0.2752811997721787, -0.27393649435263345, -0.27685107058860736, -0.28252747146181867, -0.28942941834714797, -0.29607787440776856, -0.3011492087520691, -0.30363950812501406, -0.30284011956109613, -0.2985240238182556, -0.2907891462980148, -0.28023400863085857, -0.2676843165177134, -0.25434541660739374, -0.2414490814438841, -0.23038926832884332, -0.2223378288891582, -0.21838235442997433, -0.2191603934363271, -0.18856168905885307, -0.19944489681190136, -0.215002851672363, -0.23415285938409847, -0.2552248864936879, -0.27627584393543314, -0.2949974773347783, -0.30907801189805095, -0.3161900174864183, -0.3143623648790661, -0.3020018129498987, -0.27821992470696655, -0.24282867330687363, -0.196562115442815, -0.1409899305251643, -0.07858847751055098, -0.012540253940228396, 0.0533565131179774, 0.11499382483046316, 0.16817047673697982, 0.20894901343422712, 0.2339200882715633, 0.24052144348259152, 0.22724867284351058, 0.1938394819234719, 0.14133935616497428, 0.07208186904309821, -0.010436603214272644, -0.10179068671650482, -0.19691770197493197, -0.2905028913295902, -0.37734186778195467, -0.4527561407348135, -0.5128891551770045, -0.5550155270188424, -0.5776452538269612, -0.5806319416450005, -0.5650273167979694, -0.5329808492055443, -0.48738398790298243, -0.4316472428222784, -0.36925453043875356, -0.3035562786008019, -0.23737762193374756, -0.17294935038283388, -0.1116698037119841, -0.05422085074046823, -0.0005020137271367631, 0.050109525319682824, 0.09870404172219072, 0.14653155624054115, 0.1948996522509976, 0.24492098357242575, 0.2974014627170334, 0.3526195180620979, 0.4104247143634199, 0.46887385761224376, 0.5081950029835332, 0.46854563198250876, 0.35452521976300977, 0.2229962251675519, 0.1871727159938148, 0.21103361708968282, 0.2309718408402453, 0.24332872214814172, 0.1994448482845237, -0.047049960556885484, -0.3248748601200777, -0.4887692067000726, -0.5277356534694437, -0.5186265528061611, -0.4968144526986151, -0.466989682496882, -0.42681558314976087, -0.37448252162629814, -0.30996665122808764, -0.2330350984099212, -0.14453857902129386, -0.045928836184135235, 0.06070245813637776, 0.17272154509314497, 0.2870746310212615, 0.4003357785481887, 0.5089627794901839, 0.6092639258033854, 0.6976888139162769, 0.7654473850685553, 0.8987930771009487, 1.1814966501069604, 1.3299239078401657, 1.32868507992593, 1.271591091426353, 1.1970373359033148, 1.1089313077709817, 1.0078390337545642, 0.8988515671199537, 0.7871875483630597, 0.6786752592813903, 0.5787222784525881, 0.4924306300234731, 0.42382092542939054, 0.37598544855238947, 0.3504866355549656, 0.3476463176843496, 0.36618511632059625, 0.4114246879000514, 0.4662819166738954, 0.44878343830981215, 0.3830486893571847, 0.34769016061760594, 0.41192858655809106, 0.49608455535749574, 0.5715906651803713, 0.6350647253105186, 0.6839226338901412, 0.7166091184287957, 0.7324214652693812, 0.7315944861408603, 0.7150431560455832, 0.6843489288344244, 0.6414760475952574, 0.588718733009336, 0.5284423544967058, 0.46303804005829274, 0.39472150062683475, 0.3255197242747059, 0.25713853072598347, 0.19098592731097952, 0.12810345430661663, 0.06921890256514551, 0.01472969080204578, -0.03522558551368249, -0.08074343662732897, -0.12207457167656166, -0.15957022782614505, -0.19360168016355228, -0.22448928936597223, -0.2524366122480437, -0.27745828902342673, -0.2987466283018261, -0.3145182157374311, -0.3337327257769793, -0.3824912583486828, -0.4230505618673881, -0.4708914223669076, -0.5117207216522193, -0.5416954455880614, -0.5596551627235602, -0.5649468190652769, -0.5575623978210711, -0.5381776073622913, -0.5081857603325695, -0.46963855549426725, -0.4251511979853966, -0.3777528766198408, -0.3306819201124682, -0.28719640395995505, -0.25031370514347095, -0.22265720113216503, -0.20620623106951097, -0.20225257251915885, -0.21121078494870238, -0.2327303856442251, -0.26558154918882293, -0.30792806782041104, -0.3572651988897899, -0.4108202683105633, -0.465493320199287, -0.5183285607639991, -0.5664029324690958, -0.6073067625360862, -0.638940217351994, -0.6599523479416303, -0.6694334847091068, -0.6672810195980885, -0.6537983120943975, -0.6295947631024448, -0.5868925075452807, -0.47731651954958676, -0.3217661260820517, -0.2744826565280021, -0.2737186218606218, -0.270029587880366, -0.2703266117596441, -0.273272200173577, -0.2774418037899018, -0.28143125779160894, -0.2840204815469842, -0.2841781525473013, -0.28127737829695953, -0.2749792716017718, -0.2654568140131066, -0.25315645036980183, -0.23900170077424354, -0.22405421040125884, -0.2096893913100364, -0.19719658982499721, -0.18793794848485668, -0.18293695241270447, -0.18304386427637231, -0.14158394020846465, -0.15253280819031145, -0.16872631252565817, -0.1889965029680809, -0.2118057844054917, -0.23507995380140922, -0.25657531757035557, -0.2738126085951267, -0.2844794279298748, -0.2864269149042631, -0.2780554448675048, -0.2583157216866896, -0.22701331412701453, -0.18475159705209965, -0.13309785506064697, -0.07442237137761554, -0.011897589919652063, 0.05077609042969544, 0.10952226969745116, 0.1602396064897078, 0.1990426203808653, 0.22261307845594636, 0.22843556163704437, 0.2150542249229701, 0.1822058265196269, 0.13090042588471684, 0.06338557758191743, -0.016984937567682268, -0.10596288551184285, -0.1987191249289335, -0.29016893909591435, -0.3753747253746442, -0.44986825640423955, -0.510014541850051, -0.553200726484842, -0.5780471154940572, -0.5843720400197285, -0.5732003279434705, -0.5464956755474764, -0.5070072445237024, -0.4578507593948209, -0.40230747465882355, -0.34338818981328734, -0.28371653475140635, -0.2251995115223, -0.16907949599796623, -0.11577054875696557, -0.06507873240692241, -0.01618870535850281, 0.032027737175316595, 0.08093748165350156, 0.13183952249862507, 0.18584358934992373, 0.24333544523517148, 0.29955820708770897, 0.3324290446164282, 0.3341952714982108, 0.29092088685939554, 0.22125989846481087, 0.16652002838214264, 0.17805755965382852, 0.20416968500208377, 0.22887491136942306, 0.2482646815641844, 0.201538811477589, -0.10850720213859488, -0.42463727224747894, -0.5533151312487123, -0.5722158088068676, -0.5794303859485552, -0.5821922373962884, -0.5769951482468327, -0.5614181911583014, -0.533823885287326, -0.49290088813013355, -0.4379520616480086, -0.3690143708248428, -0.2867811208350055, -0.19272300659809005, -0.08898734983888801, 0.02165499117160863, 0.13590503093947515, 0.25013799683419347, 0.36045124176472587, 0.4629880396641761, 0.5524208912547541, 0.6322423591401081, 0.9011544186755551, 1.096503093392922, 1.1354460925826597, 1.111118114218284, 1.0644753527719244, 0.9992707458240071, 0.916684217080145, 0.820913058804706, 0.7170539856610141, 0.6108357609785235, 0.507894923358406, 0.4138531871436113, 0.3335585004274648, 0.2711765950988667, 0.22954386163110785, 0.21036281743538243, 0.21376144513364626, 0.23979560427803026, 0.28785845369177343, 0.33842047864063174, 0.31100253670335, 0.26840984810428914, 0.2755559033086916, 0.3478612364754725, 0.43769262649128393, 0.5196418698810183, 0.5902894236664382, 0.6471369800921809, 0.6884973168822643, 0.7136381656683701, 0.7225758551504757, 0.7160997607283086, 0.6955150008359254, 0.662603425483991, 0.6193671721825025, 0.5679779058682142, 0.5105611973119455, 0.4491679773469448, 0.38561965282241495, 0.32151508392500006, 0.25813800172062873, 0.19649740113227843, 0.13728800163252153, 0.08095483148557481, 0.027694522061471716, -0.022466035538109885, -0.06963879251538252, -0.11399144866463473, -0.15569825819622096, -0.1948641984114099, -0.2314722868691561, -0.2653312320478065, -0.295953239941241, -0.32102031472330417, -0.33978080311215386, -0.37219363564342167, -0.39729245165953486, -0.44202971268521196, -0.4811441619786674, -0.5093811783336211, -0.5257037097148238, -0.5295769789590725, -0.5210625868257228, -0.5008865776767202, -0.4704372231726097, -0.4317226644350587, -0.3872771602986873, -0.3400064536859855, -0.2930308782946085, -0.24945356225515702, -0.2122005213819893, -0.1837682491080157, -0.16613131221924782, -0.16052341821146854, -0.16746900580531632, -0.18662847801538085, -0.2169790424829774, -0.2567218180120068, -0.30360131953714387, -0.35484319168193945, -0.40757301852354466, -0.4587384622111186, -0.5055731029398882, -0.5454590664659285, -0.5763808950592426, -0.5967015417739061, -0.6055613594400362, -0.6025654878497293, -0.5880983740035575, -0.5629101665790861, -0.5276382827889279, -0.47468676874624904, -0.3730533756934775, -0.28252022374022645, -0.2565812694365095, -0.24747588876142812, -0.2460384523601451, -0.24711889201624881, -0.24937377977844455, -0.2515205189033224, -0.25234016624872957, -0.2509032316371005, -0.24648729437394534, -0.23883804657951502, -0.22797103547342878, -0.2144262254744822, -0.1989587091838496, -0.18276279948300767, -0.16707723184049028, -0.15337708890105795, -0.14293583535181886, -0.13700304670128993, -0.13637422600331117, -0.08407533358309482, -0.09509686837989317, -0.11177791964225747, -0.13313702473662392, -0.15752403230880052, -0.18297970738844516, -0.2071009244393518, -0.22745910108583134, -0.2415553253745779, -0.24725267561745712, -0.2427680726377801, -0.22705292259909182, -0.19975549977764917, -0.16148259373816787, -0.11367477179996888, -0.05870344085935608, 0.0003679272282450796, 0.059855511651786486, 0.11578992404019894, 0.16411214870334345, 0.20104199673202372, 0.22331455971499337, 0.22849283462425807, 0.2151466177365171, 0.183021519066634, 0.13308025348485764, 0.06747329936425128, -0.01059002407390075, -0.09706781527545072, -0.18735372162935215, -0.27663645588690455, -0.36021696832132033, -0.4338915701154895, -0.49419633550247966, -0.5386954431906843, -0.5660443304743423, -0.5761036435523672, -0.569772528150321, -0.5489248007077951, -0.5160489410263698, -0.4740846229984581, -0.42597768508489464, -0.37454097681515064, -0.32205448054111363, -0.2702590871168171, -0.22009383491475143, -0.1718661296044992, -0.12513718915900718, -0.07897786325906786, -0.03191860550432146, 0.01883354875566301, 0.07631755138744989, 0.1266889274592904, 0.16315712766010293, 0.1781737412971438, 0.1709550526056649, 0.14674394292708026, 0.12089478834576628, 0.13327115971286485, 0.15713780900363705, 0.18430623979996597, 0.21281515844517473, 0.2393145167563242, 0.21941579199290429, -0.10258765949392801, -0.4510540879850393, -0.5497079951503974, -0.5774265705196533, -0.6058353799383891, -0.6304387388596746, -0.6485475255435214, -0.6578797733767647, -0.6561730050049412, -0.641560469614852, -0.6124983166685478, -0.5681178940935627, -0.50819482063166, -0.43335778128599856, -0.34501523505236875, -0.24538454826359768, -0.13738135514298122, -0.024479445051850846, 0.0893981143591045, 0.20014944900628961, 0.30361787257312844, 0.37971340794956454, 0.5570171168349383, 0.8051981111849478, 0.8758435425249651, 0.8845104245596929, 0.8675674713192327, 0.8282829880066043, 0.7679283878951662, 0.6900727458100162, 0.5992332297694087, 0.5007947508088986, 0.4003319956164333, 0.3036795236678458, 0.21621402902462705, 0.14289682366754786, 0.08761325344592485, 0.05328461459831679, 0.04136996684295191, 0.05212013366694768, 0.08664575075312264, 0.14105567519009643, 0.18830883408173538, 0.15894015678637707, 0.1318604949400397, 0.18478233238706743, 0.2718282322472012, 0.36751126761117536, 0.4559474041760181, 0.5338580819867631, 0.5986724662167546, 0.6487304693959111, 0.6831354843272717, 0.7018245975195017, 0.705350214124489, 0.6948645382830021, 0.6718776976496699, 0.6382090277729686, 0.595765723063757, 0.5465021321473644, 0.4922470382986992, 0.4346933694230932, 0.37528358446951415, 0.31523479682264366, 0.2554777490489357, 0.19671148221710766, 0.13938477771053215, 0.08377051307781347, 0.02997748187462701, -0.021965789530045576, -0.07208038099822378, -0.12035465287900227, -0.16670751942220008, -0.2109213525434015, -0.25261502196842933, -0.2913028441359238, -0.32519830771923, -0.34638331887896, -0.3588130065053523, -0.36525956505103885, -0.40551082922148574, -0.4418003629522467, -0.467299001842143, -0.4810722140157129, -0.4826780766089236, -0.4722516009672706, -0.4505485122636941, -0.4189449530072622, -0.3793977458565223, -0.3343397657479876, -0.2865658824929813, -0.23904049534519345, -0.19475139713223122, -0.1564724056567428, -0.12664621474201, -0.10715304921896696, -0.0992813926500693, -0.10354157041457235, -0.1197627938049588, -0.14696565154636598, -0.18359433035199535, -0.22743516587640578, -0.2759643595953474, -0.32628045295773145, -0.3755272558487581, -0.4208010927173875, -0.4595983822607197, -0.48966383812527514, -0.5094116330439413, -0.517695924134129, -0.5141625076873382, -0.4989447737546504, -0.47291707847015596, -0.4373086903905943, -0.3931870640853017, -0.33436760183578085, -0.25931575377274596, -0.22740683677922036, -0.22300711711283072, -0.2037746661724127, -0.2038276512250109, -0.20502790516965808, -0.20610621985054633, -0.20596397548119372, -0.20359929553459266, -0.19838761062953036, -0.18992210661595843, -0.17831122305851066, -0.163909164691717, -0.14759116715965792, -0.13038291268183722, -0.1136955821229475, -0.09888370613945519, -0.08744670615732453, -0.08056138920340938, -0.0792768321173778, -0.01672995508046693, -0.027686933471363417, -0.04483872718857107, -0.06711189601291512, -0.09302657265215775, -0.12048093164723772, -0.14716895831599786, -0.17047740786588195, -0.18794852960680197, -0.19724623099082716, -0.1966014875334121, -0.18478193914135765, -0.16144557665257508, -0.12704659941123264, -0.08303566401823281, -0.03165824473903678, 0.024023602572281755, 0.08044153778705554, 0.13365282383282495, 0.17971285098561374, 0.21489008928847464, 0.2360194092222323, 0.24070494093522155, 0.22756407979556692, 0.1963295038301367, 0.14791580696735895, 0.08436841931274408, 0.008731595717164975, -0.07515201334639787, -0.16293566297670825, -0.2500558378302302, -0.33210216546478843, -0.40508716763237507, -0.46578079409722273, -0.5118504728871591, -0.5420647422314318, -0.5562270676348122, -0.5552089258978978, -0.5406714721904795, -0.514965595371863, -0.48071311718299037, -0.4406745200987885, -0.39730880276035996, -0.3527250376511919, -0.3083337235955037, -0.2649531322943637, -0.22165435083183826, -0.1706278958120322, -0.09921078205846712, -0.028372852302343432, 0.03792426452652364, 0.08237372066598425, 0.09776418814519783, 0.09465834959154229, 0.08209445724755327, 0.08161628477957983, 0.0898121980424964, 0.10493630505791884, 0.12676757031064856, 0.15394563157838181, 0.1844679125448474, 0.2159332712252282, 0.23009614087484653, -0.024701237553858668, -0.4055059152857441, -0.5112737679679283, -0.5520214560819738, -0.5965158505261274, -0.6394406792885858, -0.6783596909815479, -0.7109262261964151, -0.7345787851115748, -0.7468925111484026, -0.7455751804847797, -0.7288679462402463, -0.6955626359456364, -0.6452957877519054, -0.578525052313541, -0.49665223664426605, -0.4019317081858542, -0.2974072970058632, -0.18677328242177538, -0.07415651357470932, 0.036048092106884866, 0.1357784332393015, 0.2044978837341258, 0.4519123267489422, 0.5671967406712426, 0.6080694422836985, 0.6181752510236889, 0.6062435593400286, 0.5707170438104479, 0.5142096336798483, 0.44051286252183974, 0.35444805310676397, 0.2612880733550176, 0.16680800624498726, 0.07663130799656237, -0.0037685553614021927, -0.06971231212945295, -0.11727532149010766, -0.14381656057192238, -0.1478209222107587, -0.12924012284781483, -0.08591176538445389, -0.02374065370290257, 0.014265111082894855, 0.01509109788399865, 0.007182160780605518, 0.08793695909626642, 0.18849396493369763, 0.28973023338403614, 0.38439824247686083, 0.46920955600665337, 0.5416813732113308, 0.6000518198829932, 0.6433992614967465, 0.6714733000510096, 0.6847111601926112, 0.6840230973119112, 0.6707543443119413, 0.6464689359620799, 0.6129022661910675, 0.5717775193550283, 0.5247792397548281, 0.4734199467294409, 0.41904780137671516, 0.36276541235810544, 0.30547109394618577, 0.2478219002616493, 0.1903005446004915, 0.13321078023815147, 0.07675951082489885, 0.021072211679509678, -0.0337210171126916, -0.08746241561569512, -0.13988923702991585, -0.19061676780303305, -0.2390842844146217, -0.2847117469524463, -0.32630131516013705, -0.3503505729278924, -0.3400079789207169, -0.3270792064479888, -0.3620482984506488, -0.3944840868234323, -0.4163129786454327, -0.42667831785794874, -0.425230343965481, -0.41216745927903276, -0.3882654251397941, -0.35488494747848165, -0.3139115390713183, -0.2676876159495567, -0.21886368669837353, -0.1702799501467922, -0.12475682003858246, -0.08497420220267493, -0.053244213269453056, -0.03144306545322273, -0.020806382087122266, -0.02195814219115544, -0.03475273989114758, -0.058423808469903804, -0.09147549812388034, -0.13194946318408585, -0.17734886450057985, -0.22500039770723124, -0.2719827733937512, -0.31554480665394546, -0.3530065486484193, -0.38218470678301664, -0.40123893181452, -0.4090534249259905, -0.405013364266571, -0.3892987602807092, -0.3625964504027275, -0.326279988633988, -0.28206627042302257, -0.23148813756178344, -0.173625502456906, -0.12981331230106385, -0.1545789760069305, -0.17291346219561743, -0.14424019198413796, -0.1451165522599469, -0.14592786437105376, -0.14550472162639405, -0.14295781377995365, -0.13752496199377884, -0.12889600168985726, -0.11698666553581205, -0.10226030091315685, -0.08539647094308833, -0.06757458104312253, -0.05005005950826913, -0.03439072393984688, -0.021995450392604532, -0.014301053141091202, -0.012295066796234266, 0.05927238461864981, 0.04835826764867335, 0.030898800771231194, 0.007743581483995676, -0.019506959367859622, -0.04890151647165819, -0.07796185944466005, -0.10415619598937775, -0.12482212751220434, -0.13766015361150385, -0.14069570282883515, -0.13271592705127677, -0.11319795000915267, -0.08261333197963627, -0.04226330829148761, 0.0055954924135290796, 0.05803007171400065, 0.11148146476371301, 0.16212970780849767, 0.20606616649560527, 0.2396736953521328, 0.25983200097564885, 0.2642234660942211, 0.2514777915096438, 0.22132592792775174, 0.17461661562612196, 0.11327918451221919, 0.0401930459901223, -0.0410277349640884, -0.12627538406079353, -0.21127881591473496, -0.2918720208807155, -0.36434311682592657, -0.4256252935901568, -0.4735656956599077, -0.5069479753490769, -0.5256166768830952, -0.530291245014737, -0.522545501149446, -0.5044448267472437, -0.4784487280615368, -0.4469650276008237, -0.4122824786667645, -0.37613649197134613, -0.33841123698826703, -0.2852492049047477, -0.18759935300612796, -0.07061979667899632, 0.02677049201804138, 0.07875013512962781, 0.09605447389968713, 0.0871560424023432, 0.07408498727377477, 0.06400235163911283, 0.05978200160980496, 0.06270947493194612, 0.07335474086641458, 0.09154366215981469, 0.11653457375505205, 0.14689718923185335, 0.18067223896765938, 0.2122833693475581, 0.1008741613543962, -0.2974283394762316, -0.44531677431407046, -0.4959670155380682, -0.552648672860577, -0.6100324608941199, -0.6661684010011117, -0.7188871292687184, -0.7655332110098216, -0.8033596957287905, -0.8295195145692746, -0.8414897561168706, -0.8371238521388431, -0.8150185400827183, -0.7745486479836803, -0.7160894775924316, -0.6409733308861103, -0.5515200654530759, -0.4509043135753821, -0.343004126368573, -0.2322176468753705, -0.12217020189076155, -0.041297043888206986, 0.0644081094022626, 0.22469313799352975, 0.2918477248670137, 0.3312777539055807, 0.347325543925888, 0.33795462258228604, 0.30505281339101753, 0.2515300653894643, 0.18147068350433315, 0.09964621610160407, 0.011540903655805401, -0.07722436559500778, -0.1609284184239268, -0.23435383486022676, -0.29281058631719503, -0.3326692299908842, -0.35129169045762954, -0.34741129104900326, -0.3209208968373458, -0.26937120413517723, -0.19884017899082362, -0.16963404550769923, -0.13547597233009823, -0.0955996588576058, -0.004960493459631898, 0.10272952322098483, 0.20890457847924626, 0.30908455329770934, 0.40013022877748394, 0.47952611343263474, 0.5455465158344692, 0.5971427229154527, 0.6339965243102901, 0.656344534364897, 0.6649590415113895, 0.6609490940547964, 0.6457133722097637, 0.6207550817760596, 0.5876427887003142, 0.547863618915776, 0.502812933326588, 0.453695186190862, 0.4015486679522935, 0.34719114644998594, 0.29127557487089906, 0.23427058563139447, 0.1765376586599583, 0.11833391783572544, 0.059899089580533804, 0.0014676232691810398, -0.05664730777941873, -0.11404541382307709, -0.17017185736693463, -0.22432544524246456, -0.275805148169475, -0.323713092136348, -0.34913774705096756, -0.31406270577536155, -0.28312777791937727, -0.31263229861749764, -0.3403468194987518, -0.35769644727692373, -0.36391535495361715, -0.35874820647131855, -0.3424442513880699, -0.3158026630017492, -0.2801480281820119, -0.2373063288234718, -0.18949868560863337, -0.13925813480428317, -0.08925553548558618, -0.04219141592311004, -0.0005862993751630796, 0.03330550799921639, 0.05770426013757657, 0.07132454712511649, 0.07355388564225152, 0.06437543605405871, 0.04450392995188013, 0.015199420944705722, -0.02163671623398633, -0.06375041878912446, -0.1084640481375132, -0.15304401171821702, -0.19463191854702533, -0.2306524472568654, -0.25871893089199727, -0.27703064751309414, -0.2842267073084215, -0.27971826814400336, -0.26347610927820675, -0.23625335281415305, -0.19931490050672807, -0.15453017131666047, -0.10406758420652151, -0.05012986340131853, 0.001566146652220879, 0.010571375255405413, -0.06790311401285187, -0.10459771972670695, -0.07153626781924993, -0.0726055561009904, -0.07259893937579553, -0.07041913892968932, -0.06540741202575528, -0.05706576666673646, -0.04541188432064569, -0.030695641799796114, -0.01373008809533971, 0.004494486347805804, 0.022531490322746706, 0.03894788735352783, 0.05209404296090092, 0.06061517462443966, 0.06323931474406841, 0.14190591605871816, 0.13116977034728272, 0.113399517578336, 0.08954308353464047, 0.0609960986747744, 0.02986155296723414, -0.0015125206737618413, -0.030395788697342052, -0.05419543720563169, -0.07039362155509732, -0.07705189628760678, -0.07275042916977181, -0.05699175555212421, -0.030070016605269867, 0.006692959843940027, 0.05119000592358469, 0.10048219280752435, 0.15114516843892356, 0.19937864477563294, 0.24139997598828788, 0.2736309353026074, 0.2930524840117159, 0.29737336930960057, 0.2852616428344308, 0.25641575439801834, 0.21161881863871512, 0.15267423279279635, 0.0822758582858314, 0.003822023694411314, -0.07885649151053808, -0.16174296286250467, -0.24097016679012917, -0.3130363124119224, -0.3751109233494807, -0.42512667123624315, -0.4619788274741108, -0.48543009389875635, -0.4961733140029514, -0.49554460341805706, -0.48548218277323363, -0.468108186965696, -0.4456686300741195, -0.42003794732330424, -0.3838806312991607, -0.29539543408381164, -0.14194613616536333, 0.008829853349823225, 0.09113135949530804, 0.10813434185162762, 0.09854193609067252, 0.08059436410353982, 0.06352392714919386, 0.04953708739010487, 0.0403172905372724, 0.03756783260543095, 0.042392690176357384, 0.05529962112768505, 0.07615553032866629, 0.10410872738249388, 0.13768448471846106, 0.17443525074724775, 0.18385962433270375, -0.13059335203667288, -0.3561612814968127, -0.41317210247212355, -0.4777228445797075, -0.545246588958599, -0.6142632756833182, -0.6829318078276041, -0.748757664279526, -0.8089428640572232, -0.8603442418747012, -0.8998945129115965, -0.9246637620105558, -0.9322781864056235, -0.9210058144022284, -0.8900740966107143, -0.8396918347045705, -0.7711866892179309, -0.6869135782720335, -0.590189516405422, -0.48510014716244143, -0.37622941714002334, -0.2672444047138516, -0.21587954301538037, -0.08355140964761798, -0.03283136814673826, 0.02635757204503486, 0.06809521781616912, 0.08495407062738458, 0.07688033056173094, 0.04559416034699737, -0.0057143200791953674, -0.07294983641078456, -0.15111770306330197, -0.2348154401376492, -0.31830858389771066, -0.39607872813973266, -0.46290514010906936, -0.5143797029374984, -0.5469184052301195, -0.5581588466726717, -0.5468441482088244, -0.5129158224499499, -0.45509254722521764, -0.3837248587462456, -0.3267347798094651, -0.2740307710407235, -0.1937313805616876, -0.09243299942516803, 0.019403747722980036, 0.12944958764188552, 0.23412221011327716, 0.3303210403283323, 0.4156316188546505, 0.48827119386454765, 0.5471799268630537, 0.591893103905611, 0.622546992323139, 0.6397090484892125, 0.6443385131906245, 0.6376107085893117, 0.6208704251686403, 0.5954793421887263, 0.5627892681733826, 0.5240289770802407, 0.48031058679222083, 0.43255926911405895, 0.3815540567817477, 0.3278943411957056, 0.27206823308869676, 0.2144443993777525, 0.15535664021120077, 0.09510759031240568, 0.034056223866664403, -0.027380100927728357, -0.08864895163319186, -0.149074792974484, -0.2078058432563914, -0.2640746316764293, -0.3168785801823635, -0.33953457576666857, -0.2761443732316611, -0.23372257578051148, -0.2584983155934868, -0.2808314037412618, -0.2930603327082224, -0.29457075497187546, -0.2851861325606606, -0.2652181084419958, -0.23546721085040545, -0.19723652395804692, -0.15226286660342048, -0.10267049055679323, -0.05083479157033999, 0.0007028343569555062, 0.04941771850909937, 0.09288913639515783, 0.12899915268486772, 0.15598157531835266, 0.1726088859236672, 0.17816990647065278, 0.17262654837808888, 0.15649999845177254, 0.13099023024279433, 0.09776424592777389, 0.05904071538928335, 0.017287811527018526, -0.024716136050979998, -0.0642513863382197, -0.0985998601803284, -0.12543823302735424, -0.14275629383044164, -0.14921747719137723, -0.14402385017699082, -0.12718563568510444, -0.09931860879733079, -0.061781681529246235, -0.016421173569394876, 0.03443187660592795, 0.0882117698685736, 0.14172547126378154, 0.1822509764297624, 0.14497188456149268, 0.02372066655809979, -0.016879901857508095, 0.010964339516536636, 0.010284119235102196, 0.011534032826362672, 0.0157285171489967, 0.02326775310227358, 0.03435302508173077, 0.04861909006435283, 0.0654682612707127, 0.0837463011891133, 0.10217702996445599, 0.11909908933134261, 0.1329742537555214, 0.14216690773442764, 0.14547455935774511, 0.22861306017064287, 0.21801385801295314, 0.20009379717558673, 0.17554803793126794, 0.14589963422888985, 0.11306936728863004, 0.07958728548466798, 0.0480719872959714, 0.02133573639117481, 0.00183458210342069, -0.00826705172214881, -0.007586988125079408, 0.004577905786375069, 0.02790487987779655, 0.061247726554816584, 0.10248157999680207, 0.14881998344870873, 0.19684241964585414, 0.24288741387699941, 0.28319961614345923, 0.314320179554306, 0.3332602196265191, 0.3377996279688513, 0.3265982588350762, 0.2993362871389791, 0.2567084781119835, 0.20038195224155464, 0.1328673574983963, 0.05731718987944223, -0.022685331083906135, -0.10342588891900117, -0.18127775908550436, -0.2530171543256534, -0.3159617290525194, -0.36822229755551916, -0.40868713347689756, -0.4371603158019326, -0.4541590954629422, -0.46094041627049887, -0.4591370342582781, -0.45072872043226364, -0.437544212615695, -0.40371255213579604, -0.2826734581424766, -0.09815007825059463, 0.05538230159720392, 0.107377875957551, 0.10621806723371119, 0.09103405637381723, 0.07363557056439962, 0.05547172574045245, 0.038468686091533755, 0.02481034994798037, 0.016484756263098532, 0.015091768624420965, 0.02174683377355624, 0.036941844152150516, 0.060477302667269583, 0.09147830104818411, 0.12831981024394068, 0.16678543375013444, 0.05692305913139872, -0.2389193717121465, -0.3078581786760868, -0.37616170629965895, -0.44948160520581526, -0.5267043786269217, -0.606485299409904, -0.6867097377306801, -0.7647931639317118, -0.8375800754631832, -0.9017386602168704, -0.9537988273311448, -0.9905962845015539, -1.0093864373104022, -1.0082426212158264, -0.9861444766926493, -0.9432277106465818, -0.8807598524619937, -0.8011813573291633, -0.7079404865054517, -0.6053345564343946, -0.49711131660748276, -0.3976866868215039, -0.3741979709528094, -0.29097930786966497, -0.26571018297789717, -0.21384309665031775, -0.172090409906823, -0.15500942113764804, -0.1628020608160785, -0.19334491346048743, -0.24338950503395473, -0.3086148886297684, -0.38403202206817877, -0.4641015837377642, -0.543217631920137, -0.6158458540105238, -0.677004512164487, -0.7223512065616235, -0.7485786335535103, -0.7533893264762028, -0.7357489217122293, -0.6948182632693132, -0.6331500100212235, -0.5655555630563072, -0.4544611264427201, -0.37939847712414654, -0.279537345857122, -0.17102284015840485, -0.05711179018911228, 0.05546517193993061, 0.16323170201181458, 0.26325103161439234, 0.3531275277725925, 0.4311306877839618, 0.4961203838384778, 0.5475801538606078, 0.5854866355796124, 0.6102840884714089, 0.6227294825967737, 0.6238446430375157, 0.614767397586756, 0.5967119161708965, 0.57084753165908, 0.5382867229883375, 0.5000016054094156, 0.45684700858150507, 0.40951389668573324, 0.3585849127164882, 0.3045161249708124, 0.24771540623314614, 0.18853947442279484, 0.1273816299175614, 0.0646697858171148, 0.000949023967986129, -0.06313237889348855, -0.1267587600603104, -0.18898799433591407, -0.24891501167512242, -0.30497120733693883, -0.31987401616850697, -0.22577098599025547, -0.18080972327052436, -0.2011469674639006, -0.21758655720855025, -0.22427205288207475, -0.22071369566404897, -0.20683397541913706, -0.18298339216921278, -0.14998482968385218, -0.10907153439167772, -0.06192462650098918, -0.010577371059744323, 0.04275612531894346, 0.0957244604854619, 0.14591491185095506, 0.19107288829585478, 0.22914882251116886, 0.25848130454710105, 0.27781174950853593, 0.2864520159104398, 0.2842291793623817, 0.271625261793182, 0.24963740908570342, 0.2198829802475024, 0.18436964662042277, 0.14556470662997567, 0.10608276443100317, 0.06872771094042296, 0.03612555437382481, 0.01076152383192408, -0.005391549367379511, -0.010806976729252238, -0.004715403843003063, 0.013022691879554404, 0.04172545137957773, 0.08008862566417929, 0.1261442787663214, 0.17750514361819514, 0.2314609285729714, 0.28512776718024857, 0.3340674405472921, 0.353835855574014, 0.24955273240479237, 0.10871718319250023, 0.0883398889228757, 0.09950516283365429, 0.09965315962693833, 0.10261358313685953, 0.10911143845863958, 0.1192470643329262, 0.13288531060926534, 0.14929218817757395, 0.16751513127009865, 0.1860808681197108, 0.20347318197505526, 0.2178928733722021, 0.2277952198642872, 0.23167712856589873, 0.3159818142249806, 0.30566527671800436, 0.28758415307167606, 0.2625380392660981, 0.23181926512564655, 0.19750705858402817, 0.16197241275197083, 0.12804247678924785, 0.09843296915527944, 0.07583387531195829, 0.06235256673349898, 0.05960009045869996, 0.06824118104442878, 0.08815694881232894, 0.1181744431839854, 0.15634502889186608, 0.19987310909870815, 0.24549407882401553, 0.2895605676087849, 0.3284536076710338, 0.35874102323755475, 0.3775320648554459, 0.3826132077975224, 0.37266796566962057, 0.3473203253722077, 0.3071792590478295, 0.25376506336721416, 0.18938470460349954, 0.11696337029696213, 0.039796482781659925, -0.03865503607867371, -0.11506599390407057, -0.1864103939624444, -0.25024057659730836, -0.3047336502619258, -0.3488893577246337, -0.38240904017376653, -0.40579026921555794, -0.4200339517257081, -0.4266631817651909, -0.4272787196347796, -0.4049251126610889, -0.285572527933031, -0.08879757368358265, 0.05368097464050492, 0.10236654797410605, 0.09689365573075648, 0.08256553374542941, 0.06738890703527245, 0.04950307015871935, 0.03104388543533254, 0.014142933688972903, 0.0010589306794477338, -0.006239131939043574, -0.006111896958048035, 0.0025283104578104343, 0.020151635398381273, 0.04654658435964798, 0.08073828015365692, 0.12101848908367074, 0.1543961017760518, -0.07372770088294978, -0.18516208141652513, -0.2530121742480915, -0.32796923386605625, -0.4087497011086896, -0.49460689296356297, -0.5839629796368399, -0.6746689308210458, -0.7638246803955959, -0.8481323386332926, -0.9238771046909133, -0.987370064137469, -1.0350562629713753, -1.0639704769665412, -1.0718756757266767, -1.057619541040089, -1.0211889626180266, -0.9638723312264563, -0.8881570338249674, -0.7976668574587027, -0.6969048733055381, -0.585711412980273, -0.5022787935067621, -0.510186257302264, -0.5151549481368951, -0.47058811128855726, -0.41651980949030776, -0.375818658320469, -0.35954589504016665, -0.3678898274027498, -0.3986299717955948, -0.44830813498982813, -0.5125427395935542, -0.5861878983146322, -0.6637490218096245, -0.7395780361114666, -0.8083116779387405, -0.8650311802749915, -0.90564245729046, -0.9269376449377416, -0.9268557058867555, -0.9044115939427058, -0.8588870277458591, -0.791056556145072, -0.6990222721409918, -0.5551525362057936, -0.45269412779697316, -0.34868788701043485, -0.23748980322717284, -0.12310406181145161, -0.009652249864060991, 0.0996064337631326, 0.20182984486572852, 0.2947396117490291, 0.37660023338988147, 0.44627759163876934, 0.5031546458528826, 0.5471233734782937, 0.5784610615288495, 0.5977870016720548, 0.6059278144294247, 0.6038697405671982, 0.5926373917301655, 0.5732652501873865, 0.5467054198974624, 0.5138316363177338, 0.475381299678757, 0.43199469177790295, 0.3841871704753741, 0.33241724634047154, 0.27707788305845105, 0.21858083647086346, 0.15735252613340478, 0.09391931347213145, 0.02889371934111118, -0.036953770510451456, -0.10272871618323443, -0.16737500266063954, -0.22985963653404973, -0.2877498802902867, -0.29092935227207484, -0.16839423129563258, -0.12669846367603554, -0.14214272581661724, -0.15242967624130088, -0.15341367837530484, -0.1447301997921393, -0.1263568974024576, -0.09872755614585138, -0.06250620532381745, -0.018717427762780403, 0.03111961062584001, 0.08483986766585261, 0.1399422671520334, 0.19474726097647554, 0.24661195939344616, 0.29294443120079094, 0.33139233361063436, 0.36017714005550694, 0.38145890587670195, 0.39260415983487906, 0.39320120241817147, 0.383579020437641, 0.3646950132440181, 0.337975827007035, 0.30540504001619473, 0.26927747890474407, 0.2322452835328681, 0.19699608961263593, 0.1662681781639348, 0.14248898328055715, 0.12778959943102786, 0.12366554335515367, 0.13103247643401428, 0.14998024475487415, 0.17990234846672037, 0.21939648415861646, 0.26646781510737816, 0.3185884525139083, 0.37293159422635846, 0.42654880155162145, 0.47634174940628937, 0.5157703961633511, 0.4999916526729158, 0.31749593860415093, 0.1775179512635061, 0.19133187072991653, 0.18969899505724364, 0.19130409323364894, 0.19648703035892723, 0.20558069192274697, 0.21833767403194848, 0.23424718184331628, 0.2521942757414468, 0.2708831362110047, 0.28856865771426676, 0.30357063937428563, 0.31405877987107456, 0.3186072230910142, 0.4001898509711399, 0.39013835973407573, 0.37208844407553343, 0.34657083217290285, 0.3150103304878744, 0.27928061347678756, 0.24194047254438722, 0.20567932734255834, 0.17344198765101781, 0.14783362416948886, 0.1312037946391702, 0.12511021454657256, 0.13044652000474832, 0.14705804178728454, 0.1739748024102734, 0.20922898820135438, 0.25020296296342515, 0.29363438190631863, 0.33603127098625896, 0.37379429882269655, 0.40361346579312896, 0.4226116259507915, 0.42863548237937454, 0.4203373289185155, 0.39730373063845636, 0.36003259843901336, 0.30988885806157285, 0.24898149167747707, 0.17997758675520625, 0.10592265188719274, 0.029971659827423558, -0.04478127137074228, -0.11558637137810646, -0.18012757336206864, -0.2367593488005717, -0.2844565005876172, -0.3229678442215276, -0.3526000655119015, -0.3742910592248707, -0.38924168320456687, -0.3877208021979883, -0.3097052995596039, -0.11672365692246545, 0.034178575619797646, 0.08697681439013016, 0.08509904895108711, 0.07396410444386592, 0.061538029166080754, 0.045387296961682644, 0.02699893765977235, 0.008401612256912827, -0.008106264798119156, -0.020353499711385226, -0.02631052879600837, -0.02438405814075928, -0.01347640548240392, 0.006870174263164941, 0.03638520151820046, 0.0740954009728565, 0.1196419135887643, 0.10150800743470345, -0.0573051420692785, -0.11385487708219166, -0.18647011554607307, -0.2664303448666967, -0.353462285913281, -0.4466084045850214, -0.5443112423281176, -0.6441447655480612, -0.7431217231213216, -0.8375887576177825, -0.92364638258621, -0.9972121613391662, -1.054506546669879, -1.092210064412094, -1.1079101592690277, -1.100227747388498, -1.069105966617581, -1.015792721524738, -0.9428977934219835, -0.8541863417264288, -0.754370136507621, -0.6401237773276733, -0.5761854325367484, -0.5992751310561584, -0.678728444514805, -0.6317317999552712, -0.5721097658962537, -0.5322927460962981, -0.5175221076644729, -0.5272231531838107, -0.5590053092911313, -0.6093051213041685, -0.6735783426273958, -0.7466445623078917, -0.8229376036996996, -0.8968976617618223, -0.9632033503138704, -1.0171289515768533, -1.0546909146072423, -1.0729051405676966, -1.0698071820611679, -1.0444899665485674, -0.9972531189501148, -0.9200643483478337, -0.7438339062670063, -0.6111218290839684, -0.5027578231013576, -0.3990383393681345, -0.28888287209720076, -0.17585038566428324, -0.063312627198572, 0.0456341321958007, 0.1483246405679619, 0.24255447873874925, 0.32665684984446397, 0.399467708707987, 0.46033480459668574, 0.5090332359056662, 0.5457306640117636, 0.5708769321276299, 0.5851534065725574, 0.5893608762441733, 0.5843780610232496, 0.5710669658352625, 0.5502582907065969, 0.5226851430704547, 0.48900354466334894, 0.44975591178005914, 0.4054249022407026, 0.35641927973817467, 0.30315086964418914, 0.2460293304617669, 0.18554686842830037, 0.1222666441120035, 0.056899321829027016, -0.009727261318702496, -0.0766118539685916, -0.14264512803161633, -0.20664616813628012, -0.2653616651965214, -0.2518463576773371, -0.10531514442174128, -0.07270309881422321, -0.08320259381373063, -0.08752749757098677, -0.08316799725348822, -0.06982227051736167, -0.047681301783031316, -0.01685919139637093, 0.022289107659414498, 0.06814725997394966, 0.11957751389517135, 0.1759860809629057, 0.23391470745310983, 0.28955028488263324, 0.3439625653738343, 0.39367037934430016, 0.436299687408904, 0.4677284719476855, 0.4860055222420989, 0.4945655970155922, 0.49363556791327223, 0.4863048839216564, 0.46982317440134835, 0.4455922370856462, 0.41543346122309677, 0.38165067957020327, 0.3467674734298618, 0.313541191482543, 0.2846327342318147, 0.26259095513454733, 0.24950506653231352, 0.24700134704054255, 0.25595167411433706, 0.2765304887400566, 0.3080507051810788, 0.3491074366030089, 0.39757966896181596, 0.45084368746787384, 0.5059282016877609, 0.5597347841841931, 0.6092714575165386, 0.6513536237420321, 0.6758665538498216, 0.5680342403129508, 0.35084796985214695, 0.26308894939200744, 0.2767573686476563, 0.2769789584611697, 0.2808706544909194, 0.2887798396465522, 0.3006906624058532, 0.3159629436213365, 0.33368418604303773, 0.3523684594266818, 0.37041910792637545, 0.3859004507258623, 0.3970790675787734, 0.4022293427761632, 0.47678119308219635, 0.4672069988391101, 0.4492334474526185, 0.4235000264323787, 0.3911870400030937, 0.35432933171081693, 0.3153053241267907, 0.2770167026329067, 0.2422886458671254, 0.21396889769431082, 0.19433146158054337, 0.18517939242941606, 0.18735806433599067, 0.2009405570880114, 0.22492853767346888, 0.25755703382064354, 0.2962009659336544, 0.3377755891415144, 0.3788009779615189, 0.41582382807036633, 0.44554987449327554, 0.4651950377416143, 0.472592958818713, 0.4664034515773485, 0.44613436875231827, 0.41217882154790075, 0.36573783880696986, 0.3087030588737658, 0.24350873848336096, 0.17290797464539231, 0.09980903390805729, 0.027006477402004236, -0.04293333524728826, -0.1079270800445391, -0.16637995052980425, -0.21738309517034615, -0.2605705776635068, -0.2962447279076139, -0.3250800263484015, -0.34549204321624494, -0.32042302677966195, -0.1595537883661149, 0.007046109966804437, 0.06971938214715712, 0.07310438237071737, 0.06520602529139219, 0.056052645874962614, 0.042596779628095716, 0.025691532471511014, 0.007009692504386322, -0.011306955902699478, -0.0270785422410853, -0.03805982391814666, -0.04229387290819009, -0.03815587546567034, -0.024573386662934738, -0.0011173711482674875, 0.031947465815777676, 0.07376396378082628, 0.14339842483281195, 0.07160127335890998, 0.03481833022202352, -0.031191664063562996, -0.106313303033998, -0.18996504427366379, -0.2817854646376574, -0.3808899329267854, -0.4854758320924102, -0.5930901837914828, -0.7004194567441925, -0.8036741309588171, -0.8985696062654531, -0.9808155111272963, -1.0462505364375057, -1.0913547855491483, -1.113423894371146, -1.110977535061985, -1.0838324321693014, -1.0332957309015676, -0.9620414713068834, -0.8740510192244457, -0.7732205629616367, -0.6548332334040152, -0.6281406011995125, -0.6806385634641261, -0.763597843961342, -0.7302859678167941, -0.6714500757024497, -0.6332564408159622, -0.620576950154951, -0.632324236892293, -0.6659864928134214, -0.7178538937709487, -0.7832862860963763, -0.8570106740789685, -0.9334652486840209, -1.0071019350967196, -1.0727186021382895, -1.125690337790786, -1.1622185555643973, -1.179441805513671, -1.175562410481617, -1.1498786752441696, -1.0995800540704548, -0.9612797594918048, -0.746446564585153, -0.6276799352791484, -0.5303576758826463, -0.4302035722373665, -0.3234828620433303, -0.2136769464226882, -0.10394142013411489, 0.002850607023319185, 0.1041831774059192, 0.19798180164665968, 0.282627305517285, 0.35697747493483334, 0.42032657992059796, 0.4723800819903534, 0.5131769709314682, 0.5430402232985241, 0.5624832610031705, 0.5721597353339716, 0.5727742883372482, 0.5650515476215663, 0.5496662494044324, 0.5272442422938499, 0.4983190165519651, 0.46336814939864546, 0.42279388900085957, 0.37698865179851104, 0.3263289312649973, 0.27125581561591083, 0.21226689917096664, 0.14999480918483954, 0.08518275913356455, 0.018746674071921987, -0.048273892849239, -0.11468453481525387, -0.17924267813704375, -0.23837376655598064, -0.19216410531094752, -0.0367364964690271, -0.020538785480919586, -0.02440022025512434, -0.02081244304523011, -0.009326048254367336, 0.009375505501097336, 0.03501166853455473, 0.06831874564673512, 0.10457468301333073, 0.14075108890567023, 0.1800729445663407, 0.2275257964905144, 0.2857559698493439, 0.3430948669722671, 0.3946623544170915, 0.44811661270039593, 0.5018544390962134, 0.5541735801701284, 0.5803987175124083, 0.5928049083933926, 0.5910862508625305, 0.5771185933418392, 0.5593874193070199, 0.5368601958559065, 0.5085092331794963, 0.4765127473908275, 0.4434346018630664, 0.4119426847456591, 0.3847851390637924, 0.3644564746644443, 0.3531545913322609, 0.3524606331814226, 0.3633305052965572, 0.38586927064082444, 0.41940534755293524, 0.46242187897333453, 0.5127258012320962, 0.567551055663492, 0.6237829571953819, 0.6781929679676348, 0.7276371880751487, 0.7693131899133592, 0.7994075350059946, 0.7804975675374584, 0.5559943862418306, 0.3547257451844281, 0.3556166146181372, 0.35444857728263734, 0.3570396274035845, 0.3639087273969084, 0.37494362771047207, 0.38971932020841926, 0.4071726891158569, 0.4259910733129306, 0.44436215249497124, 0.46047040938632033, 0.4723086712325397, 0.47823359127902254, 0.5412647701718427, 0.5322503149099207, 0.514649175365145, 0.4888309363596921, 0.4561092743874431, 0.4183008700530264, 0.3779707215086958, 0.33786287063777865, 0.3010320683800529, 0.27022111595463416, 0.24795316505464005, 0.23596432104699716, 0.23534491984339723, 0.24612810801295226, 0.26754169365073577, 0.297804278870456, 0.33449234386749005, 0.37452626878328177, 0.414597110142231, 0.451267169033043, 0.481366328221986, 0.5021105005346778, 0.5113826281870573, 0.5077918031791997, 0.49079147588795813, 0.46064634232613155, 0.4183879663987069, 0.36570230454743147, 0.304759993040987, 0.23806867659450148, 0.16823296248998965, 0.097829309464732, 0.029151607129051627, -0.03583403628314308, -0.09571280843585495, -0.14954122562564542, -0.19701475111450684, -0.23824165602639447, -0.2738499216054082, -0.2870711826001271, -0.20239292767012707, -0.03743765041715186, 0.04472041696671214, 0.06224759866588192, 0.0578735378310824, 0.05112310381232832, 0.04082425182768401, 0.026402973123770712, 0.009029195134993673, -0.009486745832970378, -0.027147401800051263, -0.0416852618572241, -0.05095732484019955, -0.0529603533819607, -0.046117561378234306, -0.029364475986771055, -0.0022742639409116805, 0.034810537221743765, 0.08583157121123541, 0.17526811339262593, 0.16139463875000537, 0.13107195534363392, 0.06456859573604934, -0.011594994709760442, -0.09738559172201544, -0.19259719868140035, -0.2961251067796056, -0.40620304361413506, -0.520079338073685, -0.634363990527401, -0.74489745539526, -0.8472224932337789, -0.9366527918471665, -1.0088220291333152, -1.0598669427012641, -1.0869373147561099, -1.0883457982066895, -1.0639027678892594, -1.0148944189547517, -0.9441566213067345, -0.8558213761700557, -0.7518855380337612, -0.6280425108168934, -0.6236505717391507, -0.7392269798386462, -0.8052934599785919, -0.7669280458638612, -0.7095802796087991, -0.6737410212952928, -0.6636331457983369, -0.6780419176209138, -0.7143500847952993, -0.7687176827992177, -0.8364091272638543, -0.912084782266918, -0.9901669040480403, -1.0651468686764805, -1.1319003266755887, -1.1859285000269235, -1.223560668155394, -1.2420808232344518, -1.2398095944215188, -1.2152250308453052, -1.1201220578481728, -0.8832311730678502, -0.7221403407371603, -0.6255877100101093, -0.537358096481193, -0.4422409137341061, -0.3407999352929867, -0.2360761834603009, -0.13097663224248013, -0.028161385219305224, 0.07003549174759272, 0.16166474803870123, 0.2451880674078506, 0.31948255376225276, 0.38382231480671436, 0.43783909883884586, 0.48147572240748815, 0.5149193941142314, 0.5385467161255333, 0.552848260455399, 0.5583845206072313, 0.5557187009227249, 0.5453991615992311, 0.5279121288773441, 0.5036988657770514, 0.4731315724156451, 0.4365637305890395, 0.39432283460863937, 0.3467827804412682, 0.29435965950008836, 0.2375892238788544, 0.17711002935153175, 0.11372934618683672, 0.048382496734167724, -0.017823209818969232, -0.08367794124006789, -0.1480374113091356, -0.19981804818516746, -0.09077611379064177, 0.030112223133627936, 0.04379690443220774, 0.07947542036693633, 0.10898049943889454, 0.1322659878170569, 0.15143680315486563, 0.17379167896747028, 0.19032941509414236, 0.1906219377003353, 0.18454203172841943, 0.18035834051453037, 0.18460938087243584, 0.20895588384875197, 0.25565456132284403, 0.3076116213135336, 0.3656696224809153, 0.43723669824644773, 0.5312956852106225, 0.5989145523831336, 0.6412501370875248, 0.6651113857988782, 0.6566016296359534, 0.6349399434351386, 0.6070326608936094, 0.5796944537798905, 0.5488824318528365, 0.5170699534225083, 0.4869860908742032, 0.46131590652733756, 0.4426397112791802, 0.4331059290144279, 0.43437249381134135, 0.4473321844781497, 0.4721172816229371, 0.5079572118877657, 0.5532861002745605, 0.6057761762578311, 0.662538274541761, 0.7203161908024256, 0.7757160720346246, 0.8254949511149974, 0.8667206564074252, 0.8968375492346077, 0.9086379640807873, 0.7371932916457418, 0.49688797654150907, 0.4210981434326033, 0.4181455311290083, 0.4196707818547516, 0.42558644273622814, 0.435986315864497, 0.4503297486125444, 0.46774155340505175, 0.4867365821443723, 0.5056439715430692, 0.5224127782542078, 0.5351329248816894, 0.5418793079531943, 0.5890278858474067, 0.5809186029273459, 0.5638752384634147, 0.5383760331368315, 0.5054897980109327, 0.46718977116565075, 0.4258477898128854, 0.38441327136994996, 0.3458022358718327, 0.31299626048119933, 0.28842584212087075, 0.27407704851514514, 0.2709832540473991, 0.27941999576861476, 0.29858749592385514, 0.3269278253225951, 0.36201543803202596, 0.4009667630545304, 0.440487334416642, 0.47729392815263916, 0.5082262267302484, 0.5305889513220947, 0.5422383430791906, 0.541778249737082, 0.5285685394850193, 0.5027562821272724, 0.4652011377137635, 0.41736605617600553, 0.3611921141600938, 0.29889742701447286, 0.23285238177348067, 0.16534004597958685, 0.098485515359096, 0.034023054107708894, -0.026674063030412754, -0.08278975394836507, -0.13390448407273947, -0.18014632684740572, -0.21814312056881757, -0.21173336647071928, -0.09094526534825231, 0.016143103130191072, 0.053280149144644184, 0.053035457086770155, 0.047516168241104495, 0.040146663644591296, 0.02862823424151517, 0.01349611273928919, -0.0038949607113343276, -0.021890066321058832, -0.0383845872768962, -0.05123884626099828, -0.05824994855386301, -0.057490414536124135, -0.04737685278611181, -0.02686534829037779, 0.004411144598947203, 0.04652486347141238, 0.14609381680121025, 0.24316396343258617, 0.2891147241189209, 0.23849409050920478, 0.17365938530805103, 0.09809595700811258, 0.011602684459876222, -0.08541961307831869, -0.19196803768944104, -0.30600287447431906, -0.4247646995228278, -0.5445126090013721, -0.66096654799975, -0.7692700208971994, -0.8645481513534556, -0.9420531347039924, -0.99774871709148, -1.0285055494449225, -1.0325694600657451, -1.0096413343914001, -0.9611024338296934, -0.8898632306354592, -0.8003031284341517, -0.6925452706830288, -0.5592549471216675, -0.5627882707947283, -0.7176951099670061, -0.7857604063124031, -0.742162292132353, -0.6856021822622296, -0.6524101142208663, -0.6452490391447463, -0.6628602024793522, -0.7024921037708625, -0.7602295483958637, -0.8312230882216385, -0.9101025767559303, -0.9912577075308171, -1.0692318734348758, -1.1389586801732188, -1.1960569429109187, -1.236960820128779, -1.259078334179987, -1.2594702051540398, -1.1979964935636258, -0.9838173819094513, -0.7696722204046695, -0.6769539302235654, -0.6035255903723278, -0.5242130054627783, -0.43603177572266194, -0.3415772592643078, -0.24364235693675962, -0.1448761587665519, -0.04772200782174352, 0.045680913879447615, 0.13351793371067444, 0.21434606862408145, 0.28707650159525855, 0.3509756342476136, 0.40562034875198716, 0.4508641758293743, 0.4867799789126268, 0.5136061843425281, 0.5316933578872032, 0.541446830770246, 0.543293014748162, 0.5376328924118425, 0.5248396881774822, 0.5052316647111397, 0.47910456894934006, 0.44672281155767823, 0.40837981842173354, 0.36439719173604823, 0.31519763909862064, 0.26129645455791284, 0.20336898554888094, 0.14222058672845428, 0.07883502803089648, 0.014320002412380184, -0.0490476506646349, -0.11156852431743403, -0.12435178043425221, 0.07829504559803357, 0.18711487550429773, 0.2545119541528207, 0.3101991817488905, 0.33023021730795676, 0.3355463586937226, 0.32724995530610634, 0.3080953436421652, 0.2802751787354971, 0.2473582006325401, 0.21339173193034, 0.18103717283034193, 0.15283007825249584, 0.1334793601558335, 0.13161566555340265, 0.15053937185067845, 0.18615785775608718, 0.2406108694094593, 0.3373380347936221, 0.45961495417797327, 0.5638340985005428, 0.6504879160781374, 0.6877517857750877, 0.6854369075655207, 0.6593080191564402, 0.6255129895424263, 0.5951319063563356, 0.5640198626675308, 0.534841047561617, 0.5103469765276794, 0.4930650100852221, 0.4852099398416563, 0.4883798888137445, 0.5035009422752235, 0.5306177030728203, 0.5689312813572736, 0.6167527400369426, 0.6716559264679621, 0.7306094564645516, 0.7902071798774837, 0.8469323505628528, 0.8973796714503672, 0.9385654733346245, 0.9680425468728502, 0.9820470333762952, 0.8911233622341044, 0.6386950838094041, 0.4593598533706338, 0.4627034094061955, 0.4633738488473158, 0.46866156093442957, 0.478594944310748, 0.4928215536586844, 0.510333978303608, 0.5298021544081841, 0.5493640848032548, 0.5670811299091802, 0.5807966240135993, 0.588667608057678, 0.6160594789518488, 0.6090983329518531, 0.5930716452241658, 0.5682020092353941, 0.5356852427010255, 0.497274696480952, 0.45551641589061775, 0.4131879108238896, 0.3734207551077311, 0.3390729656974981, 0.312815423337345, 0.2965533013703947, 0.2915666435176545, 0.29808698156751645, 0.31555273355648183, 0.3423940628812405, 0.376403377292847, 0.414708846097664, 0.45419918072266974, 0.49160843128970333, 0.5239026758294765, 0.5483807810810672, 0.5629413166938075, 0.5661278239455112, 0.5572361396508265, 0.5362790547100165, 0.5039422287852044, 0.46148659692943284, 0.4105936171476996, 0.3532490649995035, 0.2915287259345636, 0.22751386868660184, 0.16306273613438016, 0.09980323895274079, 0.03892240537809677, -0.018729341633661356, -0.07281535749270596, -0.12327870620968273, -0.1594701255435833, -0.12632257022220816, -0.015886390610973855, 0.04105105349873828, 0.051027612425380564, 0.04685048313320994, 0.04109413979209453, 0.032262622877618385, 0.019705816850443147, 0.004264652043764583, -0.012854732337963415, -0.029860772069753683, -0.04479124581193439, -0.05542810645248464, -0.05967012002608563, -0.05556966270284658, -0.04158842520801809, -0.016728884127439336, 0.019384019437624467, 0.07546382432353926, 0.2556102136969258, 0.3942737508858549, 0.40762057588723266, 0.3572734896374534, 0.2956347286687375, 0.22211971126631447, 0.1365249744348187, 0.039082722191890795, -0.068954446838287, -0.18561499839261586, -0.30781082440962004, -0.43174781456132827, -0.5527528542910578, -0.6658186281406786, -0.7656642570180336, -0.8473629958689797, -0.9065388096840148, -0.9399474056967643, -0.9456385094072197, -0.9233375327738607, -0.8744122470409552, -0.8019591789504661, -0.7105029465407879, -0.5990900195997959, -0.45601745024870066, -0.44550588341130215, -0.6211943159017101, -0.7004961929030662, -0.6569832411731831, -0.6019727443459502, -0.5715996007422457, -0.5677116334731696, -0.5889379621916353, -0.6324937126732642, -0.6943315436246902, -0.769576695907384, -0.8527739512460957, -0.9383471807568347, -1.0208329982687747, -1.0952657715459608, -1.157316811244601, -1.203531061973373, -1.2260398514755342, -1.182757403494934, -0.9970943520378319, -0.7670827303754129, -0.6779403808661346, -0.6255330523460834, -0.5644527550057536, -0.4934397082857429, -0.4136504577975071, -0.32765576000567176, -0.23796922494052275, -0.14701152975566156, -0.05697723250329645, 0.030169687933834233, 0.11278142493167032, 0.18950151581608043, 0.2593050830807293, 0.32145173833273866, 0.37548741154752463, 0.42118480974282635, 0.45851733534811645, 0.48759918270465175, 0.5086448892057098, 0.5219227798127859, 0.5277149613960339, 0.5262969280041356, 0.5179101268312807, 0.5027752073117231, 0.48108179966325526, 0.4530334719604201, 0.41884919799414, 0.37882797737482177, 0.3333482586663141, 0.2829342448740437, 0.22823779546054723, 0.17013696621502294, 0.11122674903029761, 0.05036008812452586, 0.020835456851385104, 0.010032004242381376, 0.09794098587133782, 0.3191412405098628, 0.3953012129690343, 0.42595829953936803, 0.4215038984486297, 0.4122965670940495, 0.3981803976152385, 0.37876444014462507, 0.3540958902111804, 0.3248579693533351, 0.2926212423163381, 0.2591283155627817, 0.226094930245603, 0.1953208298923137, 0.16869775481031546, 0.1492052150520955, 0.13989547594501328, 0.1411107895363175, 0.15354162491699697, 0.18394481047462197, 0.26232639103922484, 0.36885201586890304, 0.49779403804711997, 0.6164260303932303, 0.6724382534338966, 0.6784642622088528, 0.6485281466444395, 0.6133203800508746, 0.5822192346702364, 0.5534200807057044, 0.5296213428787491, 0.5134060119389581, 0.5069314139725238, 0.5118305702460493, 0.5289513599568061, 0.5583270099808222, 0.5990493511013001, 0.6493575988670022, 0.7066916219444843, 0.7678943411010021, 0.829427551536807, 0.8876226522369466, 0.9389843865052152, 0.9803899646354757, 1.0093750189654003, 1.0227314227610673, 0.9849989977028502, 0.7349536430731183, 0.4931666681209519, 0.48307939322838855, 0.48340675360069163, 0.48831310243075077, 0.49816354561007437, 0.5125064485762945, 0.5304907236748626, 0.5506386375133587, 0.5712106318460926, 0.5900650061499668, 0.6051349362730818, 0.614329776190182, 0.6189709558038672, 0.6136535841671034, 0.5990055309220663, 0.5753512370690519, 0.543654196749185, 0.5058090109241782, 0.46416347166832317, 0.4216784423312121, 0.38133019477691876, 0.3461936029363374, 0.3188288953958368, 0.30137734843523334, 0.29505149956570165, 0.3003237120809632, 0.31660492434555376, 0.3425572826303265, 0.3759783891713555, 0.4142037465693411, 0.45414384690785337, 0.492693726532234, 0.5268315133117203, 0.5539438420539335, 0.5719002882531692, 0.5792341456023338, 0.5751464125108114, 0.5595302484086231, 0.5329054019389652, 0.4963156471798058, 0.4512279036724447, 0.3993507276990016, 0.3425449886001841, 0.28260974789206106, 0.22124910791540664, 0.15985957266593154, 0.0995887634848387, 0.04114341180594039, -0.015037205280481913, -0.06788597183094947, -0.0975210069745227, -0.04278282589793392, 0.028623006475977597, 0.05217097736822396, 0.05013908773213416, 0.04461463146825739, 0.03764250538725067, 0.027382416608129567, 0.014114258068251173, -0.0014446439146278411, -0.017911043198162835, -0.033634498893286846, -0.04654620576128887, -0.05454681893366242, -0.055496643919483724, -0.04751774800449482, -0.02910482068020137, 0.0007270078906049804, 0.042731281242772035, 0.17499727648788443, 0.41929998304694216, 0.5522562310027492, 0.5301007988127733, 0.48577451660405657, 0.4288684907630351, 0.35898724853696784, 0.2756407880589258, 0.179287456344273, 0.07103091730147426, -0.046853836348477174, -0.17130573010348105, -0.2981527364449361, -0.4226294564628441, -0.5393121896016253, -0.6427591529334571, -0.7276576897904232, -0.7894877622920857, -0.8247300304929599, -0.8313938105286436, -0.8090975649895364, -0.7593210520479863, -0.6852259273872585, -0.5915876927265078, -0.4776231953642971, -0.3255011308367681, -0.27837682490610893, -0.45404805455658526, -0.5545598659582964, -0.5171653817035604, -0.46457068027312, -0.4371852191486352, -0.4367605129976506, -0.46194842823378224, -0.509840929969192, -0.5763911844150278, -0.6566131355070426, -0.7450835793732011, -0.8361659660792382, -0.9244870036239674, -1.0049437483993109, -1.0724875977577777, -1.0968859015848502, -1.0688660620558834, -0.8933842432657424, -0.6891434548414574, -0.6155963766152213, -0.5980586329906612, -0.5612131510052984, -0.5101746093190775, -0.44839439314092777, -0.3781556337867169, -0.3017524959869453, -0.22148442071520114, -0.13949088557465217, -0.057770342634865024, 0.02193925923657858, 0.0981198795245577, 0.16954917998287922, 0.2352446199672178, 0.29450042757550854, 0.3468232158734015, 0.3919368303674369, 0.42971711554139747, 0.4601742136497462, 0.48339629171799103, 0.4995221149056226, 0.5087052849289169, 0.5110906713843146, 0.5068088666170514, 0.49596571770515085, 0.47866967676746386, 0.4550345280355881, 0.4252320627878179, 0.3894980631085212, 0.3481951305022739, 0.3021190054579508, 0.2530465451341968, 0.19977977137892466, 0.17514159391642625, 0.15623245203978797, 0.15236957029775589, 0.17300962637436612, 0.3037442146700453, 0.4013760694948161, 0.4136150197346362, 0.4199658139968001, 0.4209027041714064, 0.41696515526070144, 0.40776397953810406, 0.3932227878945751, 0.37365344802114997, 0.3497499794853276, 0.3225949537237085, 0.29358914598935293, 0.26439185635763707, 0.23678955250824263, 0.21259195912239104, 0.19346903901524826, 0.1808473233516894, 0.17576127907734307, 0.17880175644865126, 0.19002565083776624, 0.21808882192161638, 0.26139196322696456, 0.333893851006573, 0.45443254241441244, 0.5676120703511311, 0.6353822804887308, 0.636853339768928, 0.6045108254232239, 0.5713910038318839, 0.5423382147141966, 0.5187251094761385, 0.503079983937009, 0.49759329878978087, 0.5038274466057842, 0.5226309095600137, 0.5539413417476359, 0.5968037684829813, 0.6493376505758202, 0.7088870319759977, 0.7721668180266092, 0.8355096939140289, 0.8951406816277738, 0.9474315420078523, 0.9892093596855542, 1.0179025635205345, 1.031079896812476, 1.0148595829318325, 0.7808786940675292, 0.515452297140893, 0.4758444171461953, 0.4758558253482432, 0.48079370048164627, 0.490855960370582, 0.5057366092521498, 0.5244733866160001, 0.5457110468659252, 0.5675518637526453, 0.5879491330293103, 0.6046301695717125, 0.615580475455026, 0.5957299349969869, 0.5924403776202709, 0.5797689019887651, 0.5578129415387005, 0.5276473944525959, 0.49095512965190724, 0.45023157027024996, 0.40825578597912826, 0.3681869850553382, 0.33295762067059287, 0.3053387463822943, 0.2873741068419642, 0.28050450224592094, 0.28515155840369566, 0.30095962304128543, 0.32658287341002534, 0.3600415176957892, 0.39869230099909014, 0.43963549364610666, 0.479792187039485, 0.5162700281361925, 0.5464553287894272, 0.568259819429827, 0.580161612485294, 0.581299165050865, 0.5714415192141331, 0.5509427857778206, 0.5206629566902752, 0.4818250835709339, 0.43592876593069363, 0.38455739113815923, 0.3293283778073999, 0.271687509822657, 0.21293240064402408, 0.1540159808167223, 0.09566910433403741, 0.038220975672787816, -0.01418849266320965, -0.0326182104362589, 0.01939829673933957, 0.05272386019467756, 0.05741880935450627, 0.05205019543179379, 0.04543699950215707, 0.036695453098575914, 0.025249451645934062, 0.011349746674526706, -0.004060981834330901, -0.019722509606395766, -0.0338380165575386, -0.04446016016146359, -0.049423085490901464, -0.04667472165116893, -0.03435137318026893, -0.010982594053640327, 0.024317752711073837, 0.09167371222595921, 0.3632487907987132, 0.6331731175254713, 0.6839739834738943, 0.658663189039963, 0.6214743066422432, 0.5708649201161666, 0.5058818137557477, 0.42623663209789164, 0.3321567743116276, 0.2250212781821368, 0.1069885621764195, -0.01852584986973227, -0.14733490159435014, -0.2742609420580786, -0.3937626281701294, -0.49998351955541165, -0.5874625464000296, -0.6513393210242651, -0.6880042048267567, -0.6952688072492101, -0.6727876703802802, -0.6220132162039969, -0.5462862184690302, -0.4504953657368431, -0.33614667448791646, -0.1770303834332445, -0.063512455870403, -0.20633888294314584, -0.35369022165956876, -0.331238253460054, -0.28234255530571417, -0.25801760325671097, -0.26120869053296913, -0.2904983817443323, -0.3430202367974067, -0.4146163090776538, -0.5003178615161739, -0.5942971946396565, -0.6910509306480117, -0.7812722659365954, -0.8367325628120046, -0.8678826168836644, -0.8242730161779601, -0.6695368921001092, -0.5276357387668149, -0.5038469095972831, -0.5267663802804532, -0.515833625311664, -0.48647889103514674, -0.44494356246932965, -0.39319095463603526, -0.33325052782369413, -0.26724050326946847, -0.1971703273438763, -0.12498589750188582, -0.05241920783321241, 0.018948905864959897, 0.08779563850619088, 0.1529844228571724, 0.21363380991155445, 0.269043365386354, 0.31872945457505697, 0.36235351838486274, 0.39973059464506333, 0.4307653828551823, 0.45544275711719706, 0.4737798454794633, 0.48581113347887683, 0.49156610485935204, 0.49106087451853364, 0.4843073233780353, 0.47131664472191526, 0.4521372079385606, 0.426867585154445, 0.3966446940424788, 0.3610116975537454, 0.32184387058853314, 0.29992777117833835, 0.26513478703699533, 0.24121972787389723, 0.24762197115442675, 0.22759483579398143, 0.226084793153575, 0.3325572805611783, 0.3728767349225306, 0.387335285549808, 0.3977738720996342, 0.4043600622838692, 0.40626026464447396, 0.40289388576885976, 0.39403299409832115, 0.3798331066894107, 0.360875811755502, 0.3381404081427082, 0.31297502836561897, 0.28699666453464534, 0.26199855185033805, 0.23979643653199112, 0.22210832689061544, 0.21038965362787643, 0.205738917718282, 0.2087729021285849, 0.2196082216049442, 0.23781359722562811, 0.26249184363007494, 0.29708897513712706, 0.34948413963997704, 0.4362868249466161, 0.5252850433008827, 0.5754320247132516, 0.5628870787051321, 0.5308598716165873, 0.5029784916374096, 0.47894422537008663, 0.4633356669641153, 0.45827842885355774, 0.4653418224044208, 0.4852903179311058, 0.5180349436577101, 0.5625171811725941, 0.6167913575436011, 0.6780870596038693, 0.7430216488589529, 0.8078216147534361, 0.868600052182979, 0.9216574196846539, 0.9637194960884841, 0.9922268568081067, 1.0056097201945282, 1.0026268529431217, 0.7899571646957178, 0.5217014144306429, 0.4650508252803709, 0.46854768360585997, 0.4739207901554261, 0.481225286870651, 0.49008211962396153, 0.5023325060927393, 0.5179953909225965, 0.5375426792061955, 0.5585680605213552, 0.5771529047499033, 0.5901771172706516, 0.5466191275664141, 0.5449740610469105, 0.5347439010821375, 0.515171849297634, 0.4871249205257582, 0.45240012331062407, 0.41329631986448956, 0.3727368725484348, 0.3337107353956842, 0.2993245097431958, 0.2722185448272685, 0.2546368981008351, 0.24793888869575342, 0.2527652098268107, 0.26873038736755994, 0.29471310879700097, 0.32874652073096566, 0.3683960647244273, 0.4107960095158125, 0.45303212442831287, 0.4922362521133681, 0.5258856691532863, 0.5518751116296783, 0.5686773781820014, 0.5753516348545604, 0.5715583990535738, 0.5575083479719876, 0.5338633737966969, 0.5016601676394901, 0.46214396408117064, 0.4167099794587381, 0.36671068413148156, 0.31345285226975594, 0.25800424069758954, 0.2012740912137989, 0.1438302606888655, 0.08608089786274409, 0.03464823887904167, 0.024752096378803046, 0.0541809009491665, 0.06674751532080592, 0.06377589787883586, 0.0565559899654513, 0.04812816843113055, 0.03772694304237856, 0.025068046773185415, 0.010678962284141225, -0.004589155403037282, -0.01928061953036253, -0.031706496736844225, -0.03981278724212167, -0.04152679417442351, -0.034781757492399645, -0.017766346598499627, 0.010910656529139473, 0.05804921337576996, 0.25881618869724843, 0.6151307124491598, 0.7940841927084268, 0.8051841035313672, 0.7896221071435487, 0.761017751235352, 0.7178188015109015, 0.6590758758800952, 0.5841910194538382, 0.4936367031145039, 0.38858193637186567, 0.2715092090134785, 0.14575750213663863, 0.015908148413881662, -0.11281073552751408, -0.23443359810784026, -0.34297922625179167, -0.4325999381653769, -0.4983185872717286, -0.5362484338574744, -0.5441711557727285, -0.5216189290583655, -0.47014258991324986, -0.3931111472484914, -0.29562712599307206, -0.18374065000674467, -0.03456500321422551, 0.15824653716266956, 0.14978060683769256, -0.047815712251233045, -0.09942371923741655, -0.06524716762522287, -0.04404983716324362, -0.050813761744786134, -0.08415045825188505, -0.14108635746262221, -0.21324283847469916, -0.28857323429631787, -0.3629556471999802, -0.4365326562455829, -0.5044800050179967, -0.508880351917679, -0.4416500484222792, -0.3596300645746884, -0.30819758636280215, -0.3636619880501146, -0.41897713351937327, -0.4323364040920672, -0.4253630082374973, -0.4052548643928051, -0.3736381716184676, -0.33225815206780984, -0.2830240380744975, -0.22777662336938276, -0.16835721506866497, -0.10642678451952925, -0.04355307532739339, 0.018923802890970176, 0.07979813780076572, 0.13809479731612662, 0.19297954764174285, 0.24382286145072918, 0.29011833737864645, 0.3315179058356241, 0.3677604382238373, 0.39868373903184295, 0.4241672335490829, 0.4441303797879632, 0.45849652024964094, 0.4671899335902445, 0.4701278964513773, 0.4672270105061207, 0.4589896271606251, 0.4458526202776505, 0.42463949924454036, 0.4052167063125429, 0.387143573023363, 0.3434037302628443, 0.3095058625083391, 0.30717436782047525, 0.278188492512216, 0.24717978378004357, 0.21649162497911956, 0.24508833954619824, 0.3112021943242178, 0.33514843495820923, 0.3528261547603355, 0.36767978397377554, 0.37902783569503207, 0.38586513284639157, 0.38746142513000503, 0.38342860465913287, 0.37379517144855434, 0.3590214174286661, 0.3400073042000411, 0.3180332345720345, 0.2946920535227715, 0.2717588527044503, 0.25107036556006346, 0.234357598692422, 0.22312185633241732, 0.21848286785724458, 0.22110845627214282, 0.23112746938385742, 0.24815374062459572, 0.2712868515763691, 0.29923606389386825, 0.3303936019627727, 0.3723951769663252, 0.4269200389114489, 0.4822168501466493, 0.4896636319162011, 0.45983329859328737, 0.4325080528428724, 0.41320764095231755, 0.397018435081109, 0.3917950569283877, 0.39903089490065213, 0.4194765653761201, 0.4529537715572052, 0.4983650951287433, 0.553668024026368, 0.6160291146052541, 0.6819722664674706, 0.7476444050734228, 0.8090846968102297, 0.8625546630398183, 0.9057325048516685, 0.9433775410532639, 0.9849363655275449, 1.0091512515435443, 0.8252475465663132, 0.5420555590290661, 0.4706722397806109, 0.4726529815849059, 0.4820474409470892, 0.4989342923037432, 0.5227970996415028, 0.5457269177993673, 0.5605978073609101, 0.5606980303553675, 0.5489895481508711, 0.5433315497246722, 0.5436530868378897, 0.5044636427711247, 0.4806459349147514, 0.46617688985514105, 0.4484859337375857, 0.42329429357993575, 0.391186926670678, 0.35457011076916456, 0.31617989177961103, 0.27913714087208485, 0.24638724243090637, 0.22073066323530766, 0.20429476851026074, 0.19862747174201312, 0.2043090294823462, 0.22116388452491353, 0.24806545001520863, 0.28326034844308, 0.3243471583811557, 0.36864944593041304, 0.41329511519636597, 0.45554902261784314, 0.492905964708223, 0.523309790535774, 0.5451991897770299, 0.5575840206712428, 0.5600278130630159, 0.5525973085032181, 0.5358037728571077, 0.51046776600149, 0.47765921260026456, 0.4385215013454262, 0.3942496378251086, 0.34590478763953936, 0.29446064124546023, 0.24062334539636687, 0.184965971302109, 0.1282212111659744, 0.07969020722345554, 0.07276599535898676, 0.08096322243932441, 0.07947348896122985, 0.07144448148318805, 0.062251454490112046, 0.05190726280486402, 0.03973022453478414, 0.025887931580641954, 0.010854098133833645, -0.004272707054955749, -0.01811705329387303, -0.02883266707810761, -0.03444897076875508, -0.03283689333972439, -0.02198910114963315, -0.00014283726776920247, 0.03434614961159976, 0.15427462875562092, 0.5362551473882888, 0.8555565295890801, 0.9172018606479044, 0.9232873939072261, 0.9187676806390712, 0.8997987460795773, 0.8651629446797582, 0.8135309861350812, 0.7445184569317167, 0.6582971484554019, 0.5563252373524072, 0.4409096705040678, 0.3157542365126478, 0.18540427119381953, 0.055502714982648804, -0.06791175430652041, -0.1784476601767535, -0.27014329657305747, -0.3376842910950786, -0.3771088079898459, -0.3859895017675652, -0.36388078919377587, -0.3122695391782715, -0.23465820328607512, -0.136200160507447, -0.02344999961168681, 0.10082986372777647, 0.28294646983403826, 0.4679249958809676, 0.42954222735130154, 0.29834091105985205, 0.2540853742556657, 0.2545917703953733, 0.24919201763237986, 0.22111543764456076, 0.16798778418039495, 0.09738847583225185, 0.03860154302428587, 0.003863746264678447, -0.013777880556123279, -0.01626192222398748, -0.03486193419918715, -0.045951869683523494, -0.10508977369942851, -0.21338660220663108, -0.28290911654327155, -0.3168441239950377, -0.33204643466243544, -0.33360778059460117, -0.3227936888222549, -0.30105141425670046, -0.2700695433801217, -0.23150767186095011, -0.18708183532089473, -0.13835104278798793, -0.08682565766983519, -0.03380672976836152, 0.019497406127808148, 0.0720903438696463, 0.12307741009855144, 0.1717527276460551, 0.21750310600679068, 0.2598673819486228, 0.29845571087609724, 0.33298391621094536, 0.36320823437584204, 0.3889404435824222, 0.41000115986376784, 0.42622754642701244, 0.438811872402054, 0.44681586152384734, 0.4480779870021152, 0.44506834179145205, 0.44667857888534535, 0.4284648427918434, 0.38926986889565107, 0.3654478781427217, 0.3523752619288407, 0.3213223107136711, 0.29225264920223815, 0.26054020988704885, 0.22826827559981933, 0.20779436099488002, 0.24089687978325447, 0.27049206968191086, 0.2924026950466576, 0.31263995878606643, 0.33100072305398953, 0.34618781453704717, 0.35705618245367, 0.3627244103585152, 0.3626739544737312, 0.35680477902741004, 0.3454807633438346, 0.32951616390966265, 0.3101417206299164, 0.2889101141161623, 0.2675904202532573, 0.24801318698673924, 0.23193262639792955, 0.22085941651213936, 0.21594866951818448, 0.21787690010795213, 0.22680872985702294, 0.24235761383193388, 0.2636557487010749, 0.2894024271952149, 0.31802177763898287, 0.3477640999891589, 0.37958125991951475, 0.4126232404381649, 0.4265010810615282, 0.38576064882321615, 0.33519207665344264, 0.3152804351024634, 0.3082885889883644, 0.30236585552268513, 0.3090976978568707, 0.32927609434745797, 0.3627013281747391, 0.408195120883182, 0.4636825411848282, 0.5262554156634272, 0.5923952514448723, 0.6581874755921298, 0.7197423732865516, 0.7759567795094733, 0.8416262161559278, 0.9238663949002122, 0.9582004912960773, 0.9174981247653462, 0.6522280285969688, 0.29944598511798937, 0.22705379263117287, 0.22126538434272547, 0.23125605735424593, 0.2575240848419229, 0.29915628211974, 0.35317181420164356, 0.4214618497441549, 0.4975562671027527, 0.5605363180018132, 0.5737093890228993, 0.5455293560003689, 0.5172905327114634, 0.44868604656596967, 0.39641747708206854, 0.36411421295104307, 0.3388741839594809, 0.3101118250750323, 0.27662862485194073, 0.24125187381779667, 0.20692049006419388, 0.1766934974572254, 0.15322063033850686, 0.13877421625513264, 0.13480502681178574, 0.14207163993689687, 0.16036476565513258, 0.18875885509067025, 0.22552174473388042, 0.26845129271033397, 0.3149216940357107, 0.3622252328115785, 0.40767232515224716, 0.4488549905745316, 0.483725576702037, 0.5107311429562529, 0.5288335467203451, 0.5375107297646773, 0.5367236130554272, 0.5268164111614064, 0.5084633236612301, 0.4825126083283582, 0.4499529099529118, 0.41173802690791916, 0.36880602273050656, 0.3219051911648334, 0.2716886614296108, 0.21854701870619664, 0.16423644590287623, 0.1206462402910633, 0.1039507254197618, 0.0981390539010949, 0.08990813717344537, 0.07946536971059892, 0.06820534536478462, 0.05564699391879557, 0.04163676970740138, 0.02633430916655133, 0.010506342990137973, -0.004793469768161085, -0.017976963612811758, -0.02725751266091958, -0.030554777366059716, -0.02579231291486017, -0.01096701012597845, 0.015660587189075814, 0.09885893820296943, 0.4374936597860559, 0.8394251097159859, 0.985281657708887, 1.0158095148861408, 1.0345483846327435, 1.0411480744258252, 1.0326829534174475, 1.0072117774331488, 0.9635868675159251, 0.9010422457049714, 0.8200022940896279, 0.7216518524055342, 0.6086256615572694, 0.4844937091045898, 0.35419073064490014, 0.22335748037137915, 0.09844341349602459, -0.0140794557880759, -0.10787679952495477, -0.17754294081882982, -0.2188389226277554, -0.22930112411079362, -0.20833323830251338, -0.15747497413654443, -0.08019552004062103, 0.018216643185358983, 0.1311666869553536, 0.25113466997511935, 0.3785068905645361, 0.5577602946785052, 0.7350374253388078, 0.7777162612448298, 0.7318530068259492, 0.6907958384068031, 0.6744806795276195, 0.656215584782462, 0.6253656185365601, 0.5701164187902803, 0.4918610615231396, 0.41317642976149305, 0.3475398287224216, 0.2944021358922839, 0.19359460290183783, 0.0572562414116069, -0.05447564130361027, -0.1266478242454121, -0.17695246264008135, -0.21330072415617707, -0.23594724070775386, -0.24575093440597917, -0.24383331280995169, -0.23164631543105152, -0.21066373076816092, -0.18247342149138301, -0.14852814073276766, -0.1102671273866398, -0.06892785534279389, -0.025682886036312524, 0.018499956054279565, 0.06272492399212837, 0.10627362456669598, 0.14848999376899696, 0.18885896945360914, 0.22691303261643947, 0.2622868392472202, 0.2946441681453744, 0.32432668488969707, 0.3528868179885212, 0.37741329547154745, 0.3960115433686715, 0.41638633531592095, 0.43782844264433063, 0.4476440323614046, 0.4306062685694103, 0.41192464718449884, 0.4048806339701807, 0.38513141069754475, 0.3577013608816495, 0.33060619363940447, 0.2999734375210803, 0.26816951895945795, 0.23603311071672906, 0.2048472817306486, 0.19085037149152217, 0.2018918355391488, 0.22340308278073806, 0.2459325889037025, 0.2683148722041526, 0.2892801115128609, 0.30740630603238195, 0.32141375879429024, 0.3302966558525453, 0.33341100720636785, 0.3305534135862169, 0.32199338155622925, 0.30847809318207986, 0.29118191461887744, 0.27162854040607964, 0.25156268889864286, 0.23281489644725362, 0.21713346184420734, 0.2060447312987903, 0.20070272982809234, 0.20180480094845743, 0.20951110730051958, 0.2234566982832864, 0.2427639258815424, 0.2661548830029087, 0.2920396484479282, 0.3186943491897076, 0.3443754619660122, 0.3676892254286357, 0.38473187182675184, 0.35806203000271486, 0.2712884277733336, 0.19803029011711804, 0.18497246572346238, 0.19300414944418987, 0.20091949607637383, 0.22008652924994143, 0.2526158602952995, 0.29731761766077325, 0.3520597086467334, 0.4139255228440568, 0.47935531299352085, 0.5445126135606375, 0.6073438483632614, 0.6770068191203868, 0.7647901443151006, 0.7505261866267461, 0.6149509575775687, 0.5022146929157352, 0.16271463802432207, -0.1616797397059644, -0.2036136607818433, -0.21124583861741097, -0.20542109312317525, -0.18569540545147944, -0.15230522288937198, -0.09980724328841717, -0.02471813709931059, 0.07820675449536729, 0.21764745517017303, 0.3664163248602623, 0.49019078015498296, 0.26513481481097845, 0.4082539928424809, 0.34671045279972024, 0.2866361811119851, 0.24316503778242793, 0.21336559743918282, 0.18365473696978785, 0.15184965198778766, 0.1209577358690761, 0.09386168939902184, 0.07330539349948939, 0.06142661862445564, 0.05980861357980327, 0.06913979134000581, 0.08938157835366489, 0.11960601867418763, 0.15827252882574605, 0.20322623260502226, 0.25202242122203433, 0.30201746313943634, 0.3506568469519795, 0.3955779132683217, 0.4347936426661789, 0.46675100472458997, 0.4903845358826793, 0.5051159624713932, 0.5107943461437383, 0.5076582165081538, 0.4962030603440395, 0.4771434740469038, 0.4512495190536283, 0.41934495952247897, 0.38213998846398667, 0.340291933399933, 0.29424494800627876, 0.24436938843081624, 0.19280183334596845, 0.1531739406835797, 0.12392505159948719, 0.11092641242570611, 0.0994750375055995, 0.08684124904746504, 0.07315351117683555, 0.05825914313061986, 0.04205981686979765, 0.02503800974642001, 0.007949797844922557, -0.007887406661971852, -0.020912717256723834, -0.02916998307723162, -0.030611166248339927, -0.023106790789467757, -0.0046722740434768095, 0.06827522813905307, 0.36505708030554485, 0.7736768864892052, 0.9887595733268828, 1.0595188669513673, 1.1005546894338076, 1.1329258324790263, 1.1514165067248214, 1.153698957369059, 1.1379814516384243, 1.1026695376774693, 1.0472139987542572, 0.9716781984078153, 0.8775349050637455, 0.7671861460465017, 0.644555084089518, 0.5144838172784656, 0.38300434150953144, 0.2565860538522182, 0.14208272245309628, 0.04590392941855548, -0.026225274431565415, -0.06999904920759681, -0.082733842369906, -0.06382020347088746, -0.014683653178543032, 0.061152387958826715, 0.15843271173518092, 0.2704559739157877, 0.3896971521926895, 0.5082685409217109, 0.6220699706678805, 0.7471538422455182, 0.8726873811284281, 0.953664908496997, 0.9719219178594685, 0.9529801437660534, 0.9163000461288009, 0.8703238958815573, 0.8152994889922409, 0.7310860097986183, 0.6141016098866281, 0.4770474723838669, 0.33604897198672123, 0.22193929410824076, 0.12799510230763822, 0.047422122484702456, -0.0211720413628127, -0.07683220621872344, -0.11921922182126998, -0.1487123894969633, -0.16605321733395373, -0.17241909539453015, -0.16908145277853714, -0.15749569292315568, -0.1390147774497612, -0.11501284434909387, -0.08666646058585759, -0.05510349259291614, -0.02124251494533258, 0.014054689104067375, 0.050102911213689705, 0.08625740622393874, 0.12200621559192415, 0.15686017899586746, 0.1910149714481868, 0.22773856471967724, 0.2624441473696537, 0.29635156453768197, 0.33850517756533094, 0.37711792400860755, 0.40351850986344395, 0.4144576682143404, 0.42305359884490557, 0.43010864160771156, 0.4244335559986938, 0.40551891128403295, 0.38582136680879575, 0.3618371759580352, 0.3336664822442188, 0.30326413659266116, 0.27161776122220704, 0.2394597104360523, 0.20750989307298262, 0.17641831015422937, 0.1505168052221295, 0.15436948957028562, 0.1747159781634826, 0.1978381236480793, 0.2215270227743833, 0.24424508960291114, 0.2644542591063441, 0.2807644309799926, 0.2920557996169002, 0.2975828550591446, 0.2970484496374839, 0.2906465994407741, 0.27905988796927783, 0.26341762107807964, 0.24520564055643979, 0.22614868155453083, 0.20805660734482778, 0.1926731228869989, 0.18151066651168613, 0.17572594440671274, 0.1760027089107774, 0.18250758512982346, 0.19486068404421508, 0.21219471482133434, 0.23321589830728184, 0.2563491056273237, 0.27985312119306327, 0.30200285665143145, 0.3212009105395568, 0.33612097371363836, 0.3371563622147107, 0.2821944807580412, 0.1578909664186221, 0.05904277721424123, 0.0488311618237649, 0.07179172559952374, 0.09783045836171445, 0.12906912307916096, 0.1721220410200468, 0.22523913654518113, 0.2854822887756612, 0.3493312377115645, 0.41312976321380823, 0.4756711427922844, 0.5522982092097268, 0.5181701666482683, 0.31788180646717, 0.20695065866636542, 0.10756669266714303, -0.29642168412756753, -0.4985406728304631, -0.513475068503777, -0.517728542321048, -0.5142853361416622, -0.5030503965696784, -0.4844237350243148, -0.45655504227115973, -0.41975431031411947, -0.3723584060211538, -0.30138211570760465, -0.1754340817851885, 0.020140166665237658, -0.31006548304467474, 0.021376130998852716, 0.24393821538205085, 0.19990793207016733, 0.14844986519312608, 0.10964922187312354, 0.08096903930088795, 0.05319635968182812, 0.026121705885073787, 0.002671816243775993, -0.014574848186533096, -0.02340231374799906, -0.022336929997907262, -0.010565347434532413, 0.0118379174321106, 0.044110236345900944, 0.08474210412868821, 0.13175879580777927, 0.18278612866408572, 0.23533930450710905, 0.286936963569139, 0.3353199705033303, 0.37854446023942945, 0.41508407077731224, 0.4438673149490757, 0.4642605924653189, 0.47605488061441825, 0.47936069145425186, 0.4745748947341948, 0.4622303586345673, 0.4429801834649627, 0.417436605357536, 0.3862032686424559, 0.3497210925517411, 0.3083686802875736, 0.2623802987645174, 0.2133590698963852, 0.16910631365850115, 0.13816583546365457, 0.12157956956952809, 0.1074722523040812, 0.09235119088569732, 0.07606648198102128, 0.058447366365299125, 0.0397392419084488, 0.020438280046502832, 0.00160078251074669, -0.01545055070744894, -0.02892809787770112, -0.03687871586970903, -0.03713613331247423, -0.026263434991724566, 0.04033146845791036, 0.31501931135968775, 0.6987489351014924, 0.9460659054258085, 1.0516603803621378, 1.1120966529140377, 1.1687066958393073, 1.2135522458009298, 1.2437396008409127, 1.2569603522473756, 1.2509303645078367, 1.224238038034139, 1.1759030238831958, 1.1062380140663093, 1.0163937069845845, 0.9090846698232209, 0.7880472825984208, 0.6584815387653853, 0.5263603659274283, 0.39852080530763345, 0.28184626267639823, 0.18307949337005924, 0.10801010944955758, 0.061206627834441196, 0.04540502645646116, 0.061393077844539956, 0.1077596545072077, 0.18108627355984064, 0.2760905669563476, 0.3861293764814784, 0.5036185788395011, 0.6207100629052731, 0.729771729290575, 0.8240360311079469, 0.9007708049900165, 0.9592095943556815, 0.9931568852663437, 0.9941470560592354, 0.962689029296028, 0.9013221020744551, 0.8180348360501295, 0.7246479809301984, 0.6251449962200679, 0.5218633053052422, 0.4182356616321359, 0.318186962500274, 0.2250593049725147, 0.14149813726705762, 0.0691992206082066, 0.009175142676270731, -0.03838300571183462, -0.07375603876314285, -0.09777887149172493, -0.11147748804423308, -0.11615092273195415, -0.11305043726789721, -0.1034936596021756, -0.08861295743255715, -0.06950431938259072, -0.047043726208984005, -0.02205177365943589, 0.0048393152582146826, 0.03303023867190458, 0.062055643397147975, 0.09252677174933499, 0.1298658514741593, 0.17094735591939703, 0.227611305720969, 0.2807125152093226, 0.3274510911875055, 0.3651336168387864, 0.39455769551522746, 0.41821638669632577, 0.4260160108778761, 0.4233089214907251, 0.4163640475405401, 0.40377256707740283, 0.38446208138958404, 0.36067518946396326, 0.33337236764645706, 0.3033589110700623, 0.2715910132900623, 0.23905342144640684, 0.20657920006359642, 0.17424613544184275, 0.13530548115944274, 0.09695214207253322, 0.10642942145396184, 0.1266827990996271, 0.14982160082187512, 0.17404214017091224, 0.1977264356231414, 0.21923556789640042, 0.23708251786595902, 0.25005394291390903, 0.25731883709275305, 0.2585041258526597, 0.2537393119528524, 0.2436538932783101, 0.2293328501102394, 0.21222819253248204, 0.19403328194319558, 0.17653607962265783, 0.16145406472161117, 0.15028401948404801, 0.14415752420027772, 0.14374743987715366, 0.14919652404691575, 0.1601201433811622, 0.17562974502717266, 0.19443370718816022, 0.2149373015018552, 0.23540634667325033, 0.2540942177432226, 0.26941246119354667, 0.28002625658163915, 0.28493555306060037, 0.27281847462537745, 0.2084931456756729, 0.0684176641043841, -0.054954887785643614, -0.08415611353962671, -0.05557056102241065, -0.007553953235925448, 0.04036520662677878, 0.09131125309225618, 0.1482834239490165, 0.20976360445943243, 0.2717082817300076, 0.33381301435509325, 0.33981023539804145, 0.13700376039778162, -0.014329174632685016, -0.019987373182252632, -0.2849042792193077, -0.6500163605426632, -0.7242867362348195, -0.7326766093037747, -0.7348500286388737, -0.730459697868227, -0.7195509552548369, -0.7026230571651775, -0.6805533949559668, -0.6547298376180994, -0.6266919990700703, -0.5963792874840488, -0.5515427036045728, -0.4776574822602697, -0.6697782283135112, -0.5300218167029307, -0.1418324386121168, 0.09476490358859202, 0.05528848015491894, 0.00649287499178719, -0.02426557804094065, -0.04870795787539972, -0.07176646325328662, -0.09145592510091927, -0.1051744539589281, -0.1108511043036664, -0.1069430867662522, -0.0927120647923445, -0.06811006169261713, -0.033896423577242096, 0.008579793961360771, 0.05740746850177203, 0.11037799092662226, 0.16509588747292625, 0.2192132069038646, 0.2705492291400695, 0.3172325369568263, 0.3577776112395039, 0.391111045528425, 0.4165909786528541, 0.4339336436755241, 0.44319479820263386, 0.44463548369855843, 0.4387004765661917, 0.4258629541179646, 0.4066341726237521, 0.3814129719177828, 0.35055163673966305, 0.3142189030887472, 0.2729430904595116, 0.22911867532392716, 0.17278772993069502, 0.14622769757492282, 0.12941726913157225, 0.11288621178139202, 0.09509393967532453, 0.07582009450716765, 0.05514544313770564, 0.033340125880271465, 0.011213964441671997, -0.010147704154389814, -0.029151344844096982, -0.043981936689561074, -0.05250371869656956, -0.044226411205650074, 0.01990663797413772, 0.289926796693446, 0.6374801484151676, 0.8643724710001965, 0.9907352360967712, 1.0692139578459576, 1.1452938089369002, 1.2144471410806794, 1.2711765502752996, 1.3127793089102031, 1.3364302659037133, 1.3399958615923122, 1.3215854986129987, 1.2804331370079343, 1.2164585445427898, 1.131085719777344, 1.0267567627867038, 0.9075266909798101, 0.778453037645809, 0.6458414776116461, 0.5164958876205272, 0.39762081485648215, 0.29598833548833303, 0.21766387449942037, 0.16727471442577313, 0.14777209893776577, 0.16000158611824844, 0.20271161803057103, 0.27252527094706736, 0.3642804259270416, 0.47135331492109955, 0.5862550526221564, 0.7011285805792895, 0.808418837423085, 0.9013127230966176, 0.9742873000532444, 1.023308912325001, 1.046136152183343, 1.042203751688339, 1.0126678004199734, 0.960016621417612, 0.8879411004601847, 0.8007922407432826, 0.7034054942788774, 0.6005440900630763, 0.496797371065, 0.39611807948716216, 0.30186696487293396, 0.21649416638871521, 0.14174086072698788, 0.07845568490516897, 0.02691229046460819, -0.0132885685091777, -0.042853873383548624, -0.06287182156061277, -0.07446574797951211, -0.07888989656263301, -0.07724564394074196, -0.07061709451781772, -0.05986164065034372, -0.04577471999859517, -0.028942458068481836, -0.009909873528746171, 0.010932617629255459, 0.039786316797024934, 0.083485750155321, 0.15340108901216132, 0.22702666299577334, 0.29137285666196444, 0.33622955975648194, 0.37402994042320303, 0.393063091043369, 0.4054081309394473, 0.41283820524340964, 0.41368874156321844, 0.40726011654434036, 0.39537768003427587, 0.3783529333907447, 0.3564625828010337, 0.3302810641447511, 0.3007879703235101, 0.268977333861006, 0.23587756828109363, 0.20250811563109927, 0.16958713996453412, 0.13263490993176497, 0.07308352632631454, 0.05002144269507092, 0.06175038937874522, 0.08106639711787533, 0.1035521564625208, 0.12762247897129075, 0.1515734777540949, 0.17368619050466183, 0.19239105521052613, 0.20640246440626964, 0.21481851178379285, 0.21720858545659327, 0.21364835292645523, 0.2047241112499223, 0.1914805939579547, 0.1753342036896779, 0.15794482865481552, 0.14106568965694377, 0.12638320794378388, 0.11535816580937586, 0.1090941455539367, 0.1082294403095152, 0.11288565605772627, 0.12264879890943603, 0.13661855701612713, 0.15347949799036642, 0.171632675226427, 0.18932117381163804, 0.2047966310354421, 0.21644337046602402, 0.2229247231876621, 0.22325342655129532, 0.21687162355536227, 0.1960489176599105, 0.1352948011074857, 0.014741248111668881, -0.11115391861840651, -0.17525510511031683, -0.16778085002227794, -0.11677767887458224, -0.050647635481977815, 0.01813876575686102, 0.08714556269885243, 0.15101239803559086, 0.21058802083210937, 0.12049826503354577, -0.11777434643669649, -0.19526967324046396, -0.3873260596706367, -0.7383871317233885, -0.896094772741292, -0.9173561402778896, -0.9251346530779507, -0.9259492704360115, -0.919533468321716, -0.906012202988494, -0.8859239636595877, -0.8602998566267601, -0.8305982319919023, -0.7986608126327859, -0.7665709703743557, -0.7363459639537773, -0.7093457806275207, -0.8095135525327564, -0.7881023964347635, -0.6284800830007993, -0.21689252613409327, -0.05921833756375383, -0.08733268733562483, -0.12368142335163945, -0.14719690203783742, -0.1665228636856808, -0.1825778369001103, -0.19297625514248473, -0.19563619458102366, -0.18912801831507675, -0.17264548965130455, -0.14617313934761, -0.1103469012447782, -0.06647189502891049, -0.016305231153388, 0.038036803547203846, 0.09430626651163987, 0.15025824055617498, 0.20381866136899607, 0.25319714598621523, 0.2969526719986355, 0.33405144693358935, 0.3638280267261287, 0.3859914803637601, 0.4005112283786776, 0.40759956827912003, 0.4075630539370696, 0.4007967734266167, 0.3876348330715951, 0.3683863183046743, 0.343201933616478, 0.3121713932644621, 0.275823627112346, 0.2386233706298757, 0.17647428450063707, 0.1516304749426549, 0.13391158265865233, 0.11494575639991922, 0.09416668684311702, 0.07159863935347932, 0.047311144898989355, 0.0218741818956234, -0.0038654377311484467, -0.028529986950314168, -0.050476034583230245, -0.06731226173338989, -0.05435693649192519, 0.02500933051505605, 0.27053276500724177, 0.5754551161266193, 0.7508452402154198, 0.8785086874708579, 0.9714316937499634, 1.0632547386073692, 1.1532296128965753, 1.2336201375861884, 1.301440654313791, 1.3534687904978897, 1.3869981937451925, 1.3993921969138707, 1.3889430486947374, 1.3544449340185434, 1.2960572233280603, 1.2148670306721616, 1.1135798119054128, 0.9960533722570046, 0.8678178416781046, 0.7345820992087004, 0.6036513828240926, 0.4823950434655342, 0.3778724721643534, 0.2961332658670388, 0.24198713370532765, 0.21832301127905307, 0.22621977873572297, 0.2645571484014848, 0.33012037212129863, 0.4178358956222983, 0.5212301259729704, 0.6328852543751085, 0.7450730253326687, 0.8502665017836999, 0.9417461973624781, 1.0139521604427357, 1.0628977105021762, 1.086230040006309, 1.0833839595190131, 1.0553375307111388, 1.0045450655203174, 0.9344739983369177, 0.8494281656918465, 0.7540006323904382, 0.6529158764883691, 0.5505259896840364, 0.45077010286275243, 0.35679472142966073, 0.27107189241237606, 0.19516358916279497, 0.1299814188194075, 0.07566336587742306, 0.03191692274863378, -0.002050586551080258, -0.027176658628342842, -0.044616881903975614, -0.05543501639937176, -0.060713590984267096, -0.06131765631738606, -0.05804544121349209, -0.05146403654707732, -0.04207921754377486, -0.030207269737048348, -0.0031974853782119617, 0.05945654187605731, 0.16011356605574711, 0.24627343031802074, 0.30427635195296476, 0.33740110484157926, 0.359562880098828, 0.37779923336991006, 0.38770943007839254, 0.39346481646341047, 0.39500732830285656, 0.3917770519816708, 0.3830912099832622, 0.368796995253045, 0.34917559033891443, 0.32475553033591353, 0.2962605275421746, 0.2646669927171805, 0.23107728695541407, 0.19664612207871635, 0.16247818474547238, 0.1289450517020434, 0.08607229524155535, 0.015982343918780728, 0.00968686932704177, 0.021763595402592983, 0.03935518755183409, 0.060605979545156785, 0.08393821275083013, 0.10755594134557489, 0.12966900504193735, 0.1486510598106623, 0.1631528855882416, 0.17222631682358402, 0.17539102153617359, 0.17268697065969807, 0.16466065372590233, 0.15232419312369405, 0.13705608132093072, 0.12047914621750033, 0.10430569088307462, 0.09017891055312077, 0.07951740178778466, 0.07338021588750832, 0.07236864389992803, 0.07656554379264202, 0.08553073913151477, 0.09833424198108798, 0.11364524832339074, 0.12984060142639264, 0.14515296809148315, 0.1578074012715731, 0.1661764503245955, 0.16888991862836766, 0.1649487387692301, 0.15376643063802486, 0.13522118824934326, 0.10687965508142616, 0.054228327690111655, -0.027898513401616754, -0.11967318372090041, -0.18771451780759651, -0.20904214071020277, -0.17838801020036943, -0.11930516524401558, -0.05045309740882953, 0.029381249397319564, 0.059415211797964496, -0.16808033404485734, -0.46273390177978957, -0.632577335953167, -0.8727997780808114, -1.0273446826129455, -1.0655534403451905, -1.0791580828517846, -1.0856107764349971, -1.0844653592432394, -1.0755806106229242, -1.0591340749131648, -1.035769015272515, -1.0065417166324266, -0.972975691437294, -0.9369161656797313, -0.9004702998161251, -0.8657918849767823, -0.8349301041525967]
};
var sourceField = grid_field_1.center(scalar_grid_field_1.emptyField(targetField));
var visibleCellCount = 32;
var renderGrid = grid_field_1.center({
  cellSize: 1 / visibleCellCount,
  position: [0, 0],
  size: [visibleCellCount, visibleCellCount]
}); // document.body.insertAdjacentHTML("beforeend", `
// 	<div style="display: flex; width: 100%; height: 100%;">
// 		<canvas id="left-canvas" width="${window.innerWidth / 2}" height="${window.innerHeight}"></canvas>
// 		<canvas id="right-canvas" width="${window.innerWidth / 2}" height="${window.innerHeight}"></canvas>
// 	</div>
// `);
// const leftCanvas = document.querySelector("#left-canvas") as HTMLCanvasElement;
// const rightCanvas = document.querySelector("#right-canvas") as HTMLCanvasElement;

var leftScene = heightmap_scene_1.setupHeightMapScene({
  // canvas: leftCanvas,
  shape: "triangle",
  gridField: renderGrid,
  heightMap: scalar_grid_field_1.evaluateByWorldCoordinate(targetField)
}); // const rightScene = setupHeightMapScene({
// 	canvas: rightCanvas,
// 	shape: "triangle",
// 	gridField: renderGrid,
// 	heightMap: evaluateByWorldCoordinate(sourceField)
// });
// function stepJacobiAndUpdate(){
// 	// sourceField = stepJacobi(sourceField, targetField);
// 	stepJacobiAsync(sourceField, targetField).then((newField) => {
// 		sourceField = newField;
// 		leftScene.updateHeightMap(
// 			pipe(sourceField, scale(cellCount**2), evaluateByWorldCoordinate)
// 		);
// 		rightScene.updateHeightMap(
// 			pipe(sourceField, laplacian, evaluateByWorldCoordinate)
// 		);
// 	});
// }
// document.addEventListener("keydown", e => {
// 	if (e.code !== "Space") return;
// 	stepJacobiAndUpdate();
// });
// startLoop(
// 	({ t }) => {
// 		scene.updateHeightMap(
// 			createScalarField(Math.cos(t) * 0.4)
// 		)
// 	}
// );
},{"./grid-field":"grid-field.ts","./scalar-grid-field":"scalar-grid-field.ts","./heightmap-scene":"heightmap-scene.ts"}],"index.ts":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
}); // import './oscillating-field-test';

require("./laplacian-test");
},{"./laplacian-test":"laplacian-test.ts"}],"../../../../../../usr/local/lib/node_modules/parcel-bundler/src/builtins/hmr-runtime.js":[function(require,module,exports) {
var global = arguments[3];
var OVERLAY_ID = '__parcel__error__overlay__';
var OldModule = module.bundle.Module;

function Module(moduleName) {
  OldModule.call(this, moduleName);
  this.hot = {
    data: module.bundle.hotData,
    _acceptCallbacks: [],
    _disposeCallbacks: [],
    accept: function (fn) {
      this._acceptCallbacks.push(fn || function () {});
    },
    dispose: function (fn) {
      this._disposeCallbacks.push(fn);
    }
  };
  module.bundle.hotData = null;
}

module.bundle.Module = Module;
var checkedAssets, assetsToAccept;
var parent = module.bundle.parent;

if ((!parent || !parent.isParcelRequire) && typeof WebSocket !== 'undefined') {
  var hostname = "" || location.hostname;
  var protocol = location.protocol === 'https:' ? 'wss' : 'ws';
  var ws = new WebSocket(protocol + '://' + hostname + ':' + "34685" + '/');

  ws.onmessage = function (event) {
    checkedAssets = {};
    assetsToAccept = [];
    var data = JSON.parse(event.data);

    if (data.type === 'update') {
      var handled = false;
      data.assets.forEach(function (asset) {
        if (!asset.isNew) {
          var didAccept = hmrAcceptCheck(global.parcelRequire, asset.id);

          if (didAccept) {
            handled = true;
          }
        }
      }); // Enable HMR for CSS by default.

      handled = handled || data.assets.every(function (asset) {
        return asset.type === 'css' && asset.generated.js;
      });

      if (handled) {
        console.clear();
        data.assets.forEach(function (asset) {
          hmrApply(global.parcelRequire, asset);
        });
        assetsToAccept.forEach(function (v) {
          hmrAcceptRun(v[0], v[1]);
        });
      } else if (location.reload) {
        // `location` global exists in a web worker context but lacks `.reload()` function.
        location.reload();
      }
    }

    if (data.type === 'reload') {
      ws.close();

      ws.onclose = function () {
        location.reload();
      };
    }

    if (data.type === 'error-resolved') {
      console.log('[parcel] ✨ Error resolved');
      removeErrorOverlay();
    }

    if (data.type === 'error') {
      console.error('[parcel] 🚨  ' + data.error.message + '\n' + data.error.stack);
      removeErrorOverlay();
      var overlay = createErrorOverlay(data);
      document.body.appendChild(overlay);
    }
  };
}

function removeErrorOverlay() {
  var overlay = document.getElementById(OVERLAY_ID);

  if (overlay) {
    overlay.remove();
  }
}

function createErrorOverlay(data) {
  var overlay = document.createElement('div');
  overlay.id = OVERLAY_ID; // html encode message and stack trace

  var message = document.createElement('div');
  var stackTrace = document.createElement('pre');
  message.innerText = data.error.message;
  stackTrace.innerText = data.error.stack;
  overlay.innerHTML = '<div style="background: black; font-size: 16px; color: white; position: fixed; height: 100%; width: 100%; top: 0px; left: 0px; padding: 30px; opacity: 0.85; font-family: Menlo, Consolas, monospace; z-index: 9999;">' + '<span style="background: red; padding: 2px 4px; border-radius: 2px;">ERROR</span>' + '<span style="top: 2px; margin-left: 5px; position: relative;">🚨</span>' + '<div style="font-size: 18px; font-weight: bold; margin-top: 20px;">' + message.innerHTML + '</div>' + '<pre>' + stackTrace.innerHTML + '</pre>' + '</div>';
  return overlay;
}

function getParents(bundle, id) {
  var modules = bundle.modules;

  if (!modules) {
    return [];
  }

  var parents = [];
  var k, d, dep;

  for (k in modules) {
    for (d in modules[k][1]) {
      dep = modules[k][1][d];

      if (dep === id || Array.isArray(dep) && dep[dep.length - 1] === id) {
        parents.push(k);
      }
    }
  }

  if (bundle.parent) {
    parents = parents.concat(getParents(bundle.parent, id));
  }

  return parents;
}

function hmrApply(bundle, asset) {
  var modules = bundle.modules;

  if (!modules) {
    return;
  }

  if (modules[asset.id] || !bundle.parent) {
    var fn = new Function('require', 'module', 'exports', asset.generated.js);
    asset.isNew = !modules[asset.id];
    modules[asset.id] = [fn, asset.deps];
  } else if (bundle.parent) {
    hmrApply(bundle.parent, asset);
  }
}

function hmrAcceptCheck(bundle, id) {
  var modules = bundle.modules;

  if (!modules) {
    return;
  }

  if (!modules[id] && bundle.parent) {
    return hmrAcceptCheck(bundle.parent, id);
  }

  if (checkedAssets[id]) {
    return;
  }

  checkedAssets[id] = true;
  var cached = bundle.cache[id];
  assetsToAccept.push([bundle, id]);

  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {
    return true;
  }

  return getParents(global.parcelRequire, id).some(function (id) {
    return hmrAcceptCheck(global.parcelRequire, id);
  });
}

function hmrAcceptRun(bundle, id) {
  var cached = bundle.cache[id];
  bundle.hotData = {};

  if (cached) {
    cached.hot.data = bundle.hotData;
  }

  if (cached && cached.hot && cached.hot._disposeCallbacks.length) {
    cached.hot._disposeCallbacks.forEach(function (cb) {
      cb(bundle.hotData);
    });
  }

  delete bundle.cache[id];
  bundle(id);
  cached = bundle.cache[id];

  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {
    cached.hot._acceptCallbacks.forEach(function (cb) {
      cb();
    });

    return true;
  }
}
},{}]},{},["../../../../../../usr/local/lib/node_modules/parcel-bundler/src/builtins/hmr-runtime.js","index.ts"], null)
//# sourceMappingURL=/src.77de5100.js.map